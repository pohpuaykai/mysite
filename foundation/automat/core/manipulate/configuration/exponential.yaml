---
className: "Exponential"
type: "essential"
# https://en.wikipedia.org/wiki/Exponentiation#Integer_exponents
manipulations:
  - type: "regex"
    vor:
      scheme: '(^ $0 0)'
      return: '1'
    hin:
      scheme: '1'
      return: '(^ $0 0)'
    minArgs:
      $0: 0
  - type: "regex"
    vor:
      scheme: '(^ $0 1)'
      return: '$0'
    hin:
      scheme: '$0'
      return: '(^ $0 1)'
    minArgs:
      $0: 0
  - type: "regex"
    vor:
      scheme: '(^ $0 (+ $1 $2))'
      return: '(* (^ $0 $1) (^ $0 $2))'
    hin:
      scheme: '(* (^ $0 $1) (^ $0 $2))'
      return: '(^ $0 (+ $1 $2))'
    minArgs:
      $0: 0
      $1: 0
      $2: 0
  - type: "regex"
    vor:
      scheme: '(^ (^ $0 $1) $2)'
      return: '(^ $0 (* $1 $2))'
    hin:
      scheme: '(^ $0 (* $1 $2))'
      return: '(^ (^ $0 $1) $2)'
    minArgs:
      $0: 0
      $1: 0
      $2: 0
  - type: "regex"
    vor:
      scheme: '(* (^ $1 $0) (^ $2 $0))'
      return: '(^ (* $1 $2) $0)'
    hin:
      scheme: '(^ (* $1 $2) $0)'
      return: '(* (^ $1 $0) (^ $2 $0))'
    minArgs:
      $0: 0
      $1: 0
      $2: 0
  - type: "regex"
    vor:
      scheme: '(^ $0 (- "0" $1))'
      return: '(/ "1" (^ $0 $1))'
    hin:
      scheme: '(/ "1" (^ $0 $1))'
      return: '(^ $0 (- "0" $1))'
    minArgs:
      $0: 0
      $1: 0