className: 'Hyperbolictrigonometricintegration'
type: 'integration_hyperbolictrigonometric'
manipulations:
- type: 'regex'
  vor:
    scheme: '(int (* (cosh $0) (D $0 $1)) $1)'
    return: '(+ (sinh $0) $2)'
  minArgs:
    $0: 1
    $1: 1
    $2: 0
  maxArgs:
    $0: null
    $1: null
    $2: 0
  preCond:
    $0: null
    $1: null
    $2: null
- type: 'regex'
  vor:
    scheme: '(int (* (sinh $0) (D $0 $1)) $1)'
    return: '(+ (cosh $0) $2)'
  minArgs:
    $0: 1
    $1: 1
    $2: 0
  maxArgs:
    $0: null
    $1: null
    $2: 0
  preCond:
    $0: null
    $1: null
    $2: null
- type: 'regex'
  vor:
    scheme: '(int (* (/ 2 (+ (cosh (* 2 $0) 1))) (D $0 $1)) $1)'
    return: '(+ (tanh $0) $2)'
  minArgs:
    $0: 1
    $1: 1
    $2: 0
  maxArgs:
    $0: null
    $1: null
    $2: 0
  preCond:
    $0: null
    $1: null
    $2: null
- type: 'regex'
  vor:
    scheme: '(int (* (- 0 (* (tanh $0) (sech $0))) (D $0 $1)) $1)'
    return: '(+ (sech $0) $2)'
  minArgs:
    $0: 1
    $1: 1
    $2: 0
  maxArgs:
    $0: null
    $1: null
    $2: 0
  preCond:
    $0: null
    $1: null
    $2: null
- type: 'regex'
  vor:
    scheme: '(int (* (- 0 (* (coth $0) (cosech $0))) (D $0 $1)) $1)'
    return: '(+ (cosech $0) $2)'
  minArgs:
    $0: 1
    $1: 1
    $2: 0
  maxArgs:
    $0: null
    $1: null
    $2: 0
  preCond:
    $0: null
    $1: null
    $2: null
- type: 'regex'
  vor:
    scheme: '(int (* (/ 2 (- 1 (sinh (* 2 $0)))) (D $0 $1)) $1)'
    return: '(+ (coth $0) $2)'
  minArgs:
    $0: 1
    $1: 1
    $2: 0
  maxArgs:
    $0: null
    $1: null
    $2: 0
  preCond:
    $0: null
    $1: null
    $2: null
