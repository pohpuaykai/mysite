---
className: 'Hyperbolictrigonometricplusminus'
type: 'essential'
manipulations:

  #\sinh(x+y)=\sinh(x)\cosh(y)+\cosh(x)\sinh(y)
  - type: 'regex'
    vor:
      scheme: '(sinh (+ $0 $1))'
      return: '(+ (* (sinh $0) (cosh $1)) (* (cosh $0) (sinh $1)))'
    minArgs:
      $0: 0
      $1: 0
    maxArgs:
      $0: null
      $1: null
    preCond:
      $0: null
      $1: null

  #\cosh(x+y)=\cosh(x)\cosh(y)+\sinh(x)\sinh(y)
  - type: 'regex'
    vor:
      scheme: '(cosh (+ $0 $1))'
      return: '(+ (* (cosh $0) (cosh $1)) (* (sinh $0) (sinh $1)))'
    minArgs:
      $0: 0
      $1: 0
    maxArgs:
      $0: null
      $1: null
    preCond:
      $0: null
      $1: null

  #\tanh(x+y)=\frac{\tanh(x)+\tanh(y)}{1+\tanh(x)\tanh(y)}
  - type: 'regex'
    vor:
      scheme: '(tanh (+ $0 $1))'
      return: '(/ (+ (tanh $0) (tanh $1)) (+ 1 (* (tanh $0) (tanh $1))))'
    minArgs:
      $0: 0
      $1: 0
    maxArgs:
      $0: null
      $1: null
    preCond:
      $0: null
      $1: null

  #\sinh(x-y)=\sinh(x)\cosh(y)-\cosh(x)\sinh(y)
  - type: 'regex'
    vor:
      scheme: '(sinh (- $0 $1))'
      return: '(- (* (sinh $0) (cosh $1)) (* (cosh $0) (sinh $1)))'
    minArgs:
      $0: 0
      $1: 0
    maxArgs:
      $0: null
      $1: null
    preCond:
      $0: null
      $1: null

  #\cosh(x-y)=\cosh(x)\cosh(y)-\sinh(x)\sinh(y)
  - type: 'regex'
    vor:
      scheme: '(cosh (- $0 $1))'
      return: '(- (* (cosh $0) (cosh $1)) (* (sinh $0) (sinh $1)))'
    minArgs:
      $0: 0
      $1: 0
    maxArgs:
      $0: null
      $1: null
    preCond:
      $0: null
      $1: null

  #\tanh(x-y)=\frac{\tanh(x)-\tanh(y)}{1-\tanh(x)\tanh(y)}
  - type: 'regex'
    vor:
      scheme: '(tanh (- $0 $1))'
      return: '(/ (- (tanh $0) (tanh $1)) (- 1 (* (tanh $0) (tanh $1))))'
    minArgs:
      $0: 0
      $1: 0
    maxArgs:
      $0: null
      $1: null
    preCond:
      $0: null
      $1: null
