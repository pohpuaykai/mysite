FUNC_NAMES = {
    'divide': {   'className': 'Divide',
                  'funcName': '/',
                  'return_calculations': [   {   'code': ['num=v0/v1'],
                                                 'imports': [],
                                                 'variableCount': 2}],
                  'reversedAsts': [   {   'argumentIdx': 0,
                                          'equationSide': 'R',
                                          'function': {(0, 0): 'Multiply'},
                                          'permutation': {   (0, 0): (0, 1),
                                                             (0, 1): (1, 0),
                                                             (1, 0): (0, 0),
                                                             (1, 1): (1, 1)}},
                                      {   'argumentIdx': 1,
                                          'equationSide': 'R',
                                          'function': {(0, 0): 'Divide'},
                                          'permutation': {   (0, 0): (0, 1),
                                                             (0, 1): (1, 1),
                                                             (1, 0): (1, 0),
                                                             (1, 1): (0, 0)}},
                                      {   'argumentIdx': 0,
                                          'equationSide': 'L',
                                          'function': {(0, 1): 'Multiply'},
                                          'permutation': {   (0, 0): (1, 0),
                                                             (0, 1): (0, 0),
                                                             (1, 0): (0, 1),
                                                             (1, 1): (1, 1)}},
                                      {   'argumentIdx': 1,
                                          'equationSide': 'L',
                                          'function': {(0, 1): 'Divide'},
                                          'permutation': {   (0, 0): (1, 1),
                                                             (0, 1): (0, 0),
                                                             (1, 0): (1, 0),
                                                             (1, 1): (0, 1)}}]},
    'exponential': {   'className': 'Exponential',
                       'funcName': '^',
                       'return_calculations': [   {   'code': [   'num=pow(v0, '
                                                                  'v1)'],
                                                      'imports': [   'from '
                                                                     'math '
                                                                     'import '
                                                                     'pow'],
                                                      'variableCount': 2}],
                       'reversedAsts': [   {   'argumentIdx': 0,
                                               'equationSide': 'R',
                                               'function': {(0, 0): 'Nroot'},
                                               'permutation': {   (0, 0): (   0,
                                                                              1),
                                                                  (0, 1): (   1,
                                                                              0),
                                                                  (1, 0): (   1,
                                                                              1),
                                                                  (1, 1): (   0,
                                                                              0)}},
                                           {   'argumentIdx': 1,
                                               'equationSide': 'R',
                                               'function': {   (0, 0): 'Logarithm'},
                                               'permutation': {   (0, 0): (   0,
                                                                              1),
                                                                  (0, 1): (   1,
                                                                              1),
                                                                  (1, 0): (   1,
                                                                              0),
                                                                  (1, 1): (   0,
                                                                              0)}},
                                           {   'argumentIdx': 0,
                                               'equationSide': 'L',
                                               'function': {(0, 1): 'Nroot'},
                                               'permutation': {   (0, 0): (   1,
                                                                              0),
                                                                  (0, 1): (   0,
                                                                              0),
                                                                  (1, 0): (   1,
                                                                              1),
                                                                  (1, 1): (   0,
                                                                              1)}},
                                           {   'argumentIdx': 1,
                                               'equationSide': 'L',
                                               'function': {   (0, 1): 'Logarithm'},
                                               'permutation': {   (0, 0): (   1,
                                                                              1),
                                                                  (0, 1): (   0,
                                                                              0),
                                                                  (1, 0): (   1,
                                                                              0),
                                                                  (1, 1): (   0,
                                                                              1)}}]},
    'logarithm': {   'className': 'Logarithm',
                     'funcName': 'log',
                     'return_calculations': [   {   'code': ['num=log(v1, v0)'],
                                                    'imports': [   'from math '
                                                                   'import '
                                                                   'log'],
                                                    'variableCount': 2}],
                     'reversedAsts': [   {   'argumentIdx': 0,
                                             'equationSide': 'R',
                                             'function': {(0, 0): 'Nroot'},
                                             'permutation': {   (0, 0): (0, 1),
                                                                (0, 1): (1, 0),
                                                                (1, 0): (0, 0),
                                                                (1, 1): (   1,
                                                                            1)}},
                                         {   'argumentIdx': 1,
                                             'equationSide': 'R',
                                             'function': {   (0, 0): 'Exponential'},
                                             'permutation': {   (0, 0): (0, 1),
                                                                (0, 1): (1, 1),
                                                                (1, 0): (1, 0),
                                                                (1, 1): (   0,
                                                                            0)}},
                                         {   'argumentIdx': 0,
                                             'equationSide': 'L',
                                             'function': {(0, 1): 'Nroot'},
                                             'permutation': {   (0, 0): (1, 0),
                                                                (0, 1): (0, 0),
                                                                (1, 0): (0, 1),
                                                                (1, 1): (   1,
                                                                            1)}},
                                         {   'argumentIdx': 1,
                                             'equationSide': 'L',
                                             'function': {   (0, 1): 'Exponential'},
                                             'permutation': {   (0, 0): (1, 1),
                                                                (0, 1): (0, 0),
                                                                (1, 0): (1, 0),
                                                                (1, 1): (   0,
                                                                            1)}}]},
    'minus': {   'className': 'Minus',
                 'funcName': '-',
                 'return_calculations': [   {   'code': ['num=v0-v1'],
                                                'imports': [],
                                                'variableCount': 2}],
                 'reversedAsts': [   {   'argumentIdx': 0,
                                         'equationSide': 'R',
                                         'function': {(0, 0): 'Plus'},
                                         'permutation': {   (0, 0): (0, 1),
                                                            (0, 1): (1, 0),
                                                            (1, 0): (0, 0),
                                                            (1, 1): (1, 1)}},
                                     {   'argumentIdx': 1,
                                         'equationSide': 'R',
                                         'function': {(0, 0): 'Minus'},
                                         'permutation': {   (0, 0): (0, 1),
                                                            (0, 1): (1, 1),
                                                            (1, 0): (1, 0),
                                                            (1, 1): (0, 0)}},
                                     {   'argumentIdx': 0,
                                         'equationSide': 'L',
                                         'function': {(0, 1): 'Plus'},
                                         'permutation': {   (0, 0): (1, 0),
                                                            (0, 1): (0, 0),
                                                            (1, 0): (0, 1),
                                                            (1, 1): (1, 1)}},
                                     {   'argumentIdx': 1,
                                         'equationSide': 'L',
                                         'function': {(0, 1): 'Minus'},
                                         'permutation': {   (0, 0): (1, 1),
                                                            (0, 1): (0, 0),
                                                            (1, 0): (1, 0),
                                                            (1, 1): (0, 1)}}]},
    'multiply': {   'className': 'Multiply',
                    'funcName': '*',
                    'return_calculations': [   {   'code': ['num=v0*v1'],
                                                   'imports': [],
                                                   'variableCount': 2}],
                    'reversedAsts': [   {   'argumentIdx': 0,
                                            'equationSide': 'R',
                                            'function': {(0, 0): 'Divide'},
                                            'permutation': {   (0, 0): (0, 1),
                                                               (0, 1): (1, 0),
                                                               (1, 0): (0, 0),
                                                               (1, 1): (1, 1)}},
                                        {   'argumentIdx': 1,
                                            'equationSide': 'R',
                                            'function': {(0, 0): 'Divide'},
                                            'permutation': {   (0, 0): (0, 1),
                                                               (0, 1): (1, 1),
                                                               (1, 0): (0, 0),
                                                               (1, 1): (1, 0)}},
                                        {   'argumentIdx': 0,
                                            'equationSide': 'L',
                                            'function': {(0, 1): 'Divide'},
                                            'permutation': {   (0, 0): (1, 0),
                                                               (0, 1): (0, 0),
                                                               (1, 0): (0, 1),
                                                               (1, 1): (1, 1)}},
                                        {   'argumentIdx': 1,
                                            'equationSide': 'L',
                                            'function': {(0, 1): 'Divide'},
                                            'permutation': {   (0, 0): (1, 1),
                                                               (0, 1): (0, 0),
                                                               (1, 0): (0, 1),
                                                               (1, 1): (   1,
                                                                           0)}}]},
    'nroot': {   'className': 'Nroot',
                 'funcName': 'nroot',
                 'return_calculations': [   {   'code': ['num=pow(v1, (1/v0))'],
                                                'imports': [   'from math '
                                                               'import pow'],
                                                'variableCount': 2}],
                 'reversedAsts': [   {   'argumentIdx': 0,
                                         'equationSide': 'R',
                                         'function': {(0, 0): 'Logarithm'},
                                         'permutation': {   (0, 0): (0, 1),
                                                            (0, 1): (1, 0),
                                                            (1, 0): (0, 0),
                                                            (1, 1): (1, 1)}},
                                     {   'argumentIdx': 1,
                                         'equationSide': 'R',
                                         'function': {(0, 0): 'Exponential'},
                                         'permutation': {   (0, 0): (0, 1),
                                                            (0, 1): (1, 1),
                                                            (1, 0): (0, 0),
                                                            (1, 1): (1, 0)}},
                                     {   'argumentIdx': 0,
                                         'equationSide': 'L',
                                         'function': {(0, 1): 'Logarithm'},
                                         'permutation': {   (0, 0): (1, 0),
                                                            (0, 1): (0, 0),
                                                            (1, 0): (0, 1),
                                                            (1, 1): (1, 1)}},
                                     {   'argumentIdx': 1,
                                         'equationSide': 'L',
                                         'function': {(0, 1): 'Exponential'},
                                         'permutation': {   (0, 0): (1, 1),
                                                            (0, 1): (0, 0),
                                                            (1, 0): (0, 1),
                                                            (1, 1): (1, 0)}}]},
    'plus': {   'className': 'Plus',
                'funcName': '+',
                'return_calculations': [   {   'code': ['num=v0+v1'],
                                               'imports': [],
                                               'variableCount': 2}],
                'reversedAsts': [   {   'argumentIdx': 0,
                                        'equationSide': 'R',
                                        'function': {(0, 0): 'Minus'},
                                        'permutation': {   (0, 0): (0, 1),
                                                           (0, 1): (1, 0),
                                                           (1, 0): (0, 0),
                                                           (1, 1): (1, 1)}},
                                    {   'argumentIdx': 1,
                                        'equationSide': 'R',
                                        'function': {(0, 0): 'Minus'},
                                        'permutation': {   (0, 0): (0, 1),
                                                           (0, 1): (1, 1),
                                                           (1, 0): (0, 0),
                                                           (1, 1): (1, 0)}},
                                    {   'argumentIdx': 0,
                                        'equationSide': 'L',
                                        'function': {(0, 1): 'Minus'},
                                        'permutation': {   (0, 0): (1, 0),
                                                           (0, 1): (0, 0),
                                                           (1, 0): (0, 1),
                                                           (1, 1): (1, 1)}},
                                    {   'argumentIdx': 1,
                                        'equationSide': 'L',
                                        'function': {(0, 1): 'Minus'},
                                        'permutation': {   (0, 0): (1, 1),
                                                           (0, 1): (0, 0),
                                                           (1, 0): (0, 1),
                                                           (1, 1): (1, 0)}}]}}