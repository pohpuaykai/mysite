draw a Mesh:
0. Component~.js ~=Resistor
1. Component~.js ~=Battery
2. Component~.js ~=SignalGenerator (for pure sine)
3. Component~.js ~=Capacitor
4. Component~.js ~=Inductor
5. Component~.js ~=Diode
6. Component~.js ~=Transistor
7. Component~.js ~=OpAmp (IC Chip)
USE 1 or 2 facebook resistor meshes (EletricalEngineeringXYZ) as examples first, then use your textbookS
-Build this pipeline:
--Manual Draw components in 3D
--Extract Graph (Network) information=Gi
--Generate 2D Symbolic Circuit Diagram with SVG (OPTIONAL for now)
--Find symbolic_equations like KVL, KCL, hFE, Ohm_Law, multiple_ICR_addition, with graph_algos and Gi
--Use CAS to solve symbolic_equations, return solving_steps and solved_results to 3D, make pretty animation












--scene acceleration (for later: mechanical engineering), ChatGPT recommends: (frontend render speed with user interaction)
--
import { MeshBVH, acceleratedRaycast } from 'three-mesh-bvh';
THREE.Mesh.prototype.raycast = acceleratedRaycast; // override default raycast

// Then build the BVH
geometry.computeBoundsTree = MeshBVH;






https://threejs.org/manual/#en/loading-3d-models
https://threejs.org/docs/#examples/en/loaders/GLTFLoader
https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#concepts




remove Django?