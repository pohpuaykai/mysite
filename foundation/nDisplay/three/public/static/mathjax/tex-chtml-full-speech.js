/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 351:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssistiveMmlHandler = exports.AssistiveMmlMathDocumentMixin = exports.AssistiveMmlMathItemMixin = exports.LimitedMmlVisitor = void 0;
var MathItem_js_1 = __webpack_require__(4474);
var SerializedMmlVisitor_js_1 = __webpack_require__(9259);
var Options_js_1 = __webpack_require__(7233);
var LimitedMmlVisitor = (function (_super) {
    __extends(LimitedMmlVisitor, _super);
    function LimitedMmlVisitor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LimitedMmlVisitor.prototype.getAttributes = function (node) {
        return _super.prototype.getAttributes.call(this, node).replace(/ ?id=".*?"/, '');
    };
    return LimitedMmlVisitor;
}(SerializedMmlVisitor_js_1.SerializedMmlVisitor));
exports.LimitedMmlVisitor = LimitedMmlVisitor;
(0, MathItem_js_1.newState)('ASSISTIVEMML', 153);
function AssistiveMmlMathItemMixin(BaseMathItem) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.assistiveMml = function (document, force) {
            if (force === void 0) { force = false; }
            if (this.state() >= MathItem_js_1.STATE.ASSISTIVEMML)
                return;
            if (!this.isEscaped && (document.options.enableAssistiveMml || force)) {
                var adaptor = document.adaptor;
                var mml = document.toMML(this.root).replace(/\n */g, '').replace(/<!--.*?-->/g, '');
                var mmlNodes = adaptor.firstChild(adaptor.body(adaptor.parse(mml, 'text/html')));
                var node = adaptor.node('mjx-assistive-mml', {
                    unselectable: 'on', display: (this.display ? 'block' : 'inline')
                }, [mmlNodes]);
                adaptor.setAttribute(adaptor.firstChild(this.typesetRoot), 'aria-hidden', 'true');
                adaptor.setStyle(this.typesetRoot, 'position', 'relative');
                adaptor.append(this.typesetRoot, node);
            }
            this.state(MathItem_js_1.STATE.ASSISTIVEMML);
        };
        return class_1;
    }(BaseMathItem));
}
exports.AssistiveMmlMathItemMixin = AssistiveMmlMathItemMixin;
function AssistiveMmlMathDocumentMixin(BaseDocument) {
    var _a;
    return _a = (function (_super) {
            __extends(BaseClass, _super);
            function BaseClass() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
                var CLASS = _this.constructor;
                var ProcessBits = CLASS.ProcessBits;
                if (!ProcessBits.has('assistive-mml')) {
                    ProcessBits.allocate('assistive-mml');
                }
                _this.visitor = new LimitedMmlVisitor(_this.mmlFactory);
                _this.options.MathItem =
                    AssistiveMmlMathItemMixin(_this.options.MathItem);
                if ('addStyles' in _this) {
                    _this.addStyles(CLASS.assistiveStyles);
                }
                return _this;
            }
            BaseClass.prototype.toMML = function (node) {
                return this.visitor.visitTree(node);
            };
            BaseClass.prototype.assistiveMml = function () {
                var e_1, _a;
                if (!this.processed.isSet('assistive-mml')) {
                    try {
                        for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var math = _c.value;
                            math.assistiveMml(this);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    this.processed.set('assistive-mml');
                }
                return this;
            };
            BaseClass.prototype.state = function (state, restore) {
                if (restore === void 0) { restore = false; }
                _super.prototype.state.call(this, state, restore);
                if (state < MathItem_js_1.STATE.ASSISTIVEMML) {
                    this.processed.clear('assistive-mml');
                }
                return this;
            };
            return BaseClass;
        }(BaseDocument)),
        _a.OPTIONS = __assign(__assign({}, BaseDocument.OPTIONS), { enableAssistiveMml: true, renderActions: (0, Options_js_1.expandable)(__assign(__assign({}, BaseDocument.OPTIONS.renderActions), { assistiveMml: [MathItem_js_1.STATE.ASSISTIVEMML] })) }),
        _a.assistiveStyles = {
            'mjx-assistive-mml': {
                position: 'absolute !important',
                top: '0px', left: '0px',
                clip: 'rect(1px, 1px, 1px, 1px)',
                padding: '1px 0px 0px 0px !important',
                border: '0px !important',
                display: 'block !important',
                width: 'auto !important',
                overflow: 'hidden !important',
                '-webkit-touch-callout': 'none',
                '-webkit-user-select': 'none',
                '-khtml-user-select': 'none',
                '-moz-user-select': 'none',
                '-ms-user-select': 'none',
                'user-select': 'none'
            },
            'mjx-assistive-mml[display="block"]': {
                width: '100% !important'
            }
        },
        _a;
}
exports.AssistiveMmlMathDocumentMixin = AssistiveMmlMathDocumentMixin;
function AssistiveMmlHandler(handler) {
    handler.documentClass =
        AssistiveMmlMathDocumentMixin(handler.documentClass);
    return handler;
}
exports.AssistiveMmlHandler = AssistiveMmlHandler;
//# sourceMappingURL=assistive-mml.js.map

/***/ }),

/***/ 5282:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
var MathMaps = new Map();
exports["default"] = MathMaps;
//# sourceMappingURL=mathmaps.js.map

/***/ }),

/***/ 5445:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sreReady = exports.Sre = void 0;
var Api = __importStar(__webpack_require__(2998));
var WalkerFactory = __importStar(__webpack_require__(3362));
var SpeechGeneratorFactory = __importStar(__webpack_require__(9552));
var EngineConst = __importStar(__webpack_require__(4440));
var engine_js_1 = __importDefault(__webpack_require__(5897));
var clearspeak_preferences_js_1 = __webpack_require__(8504);
var HighlighterFactory = __importStar(__webpack_require__(3090));
var variables_js_1 = __webpack_require__(1377);
var mathmaps_js_1 = __importDefault(__webpack_require__(5282));
var Sre;
(function (Sre) {
    Sre.locales = variables_js_1.Variables.LOCALES;
    Sre.sreReady = Api.engineReady;
    Sre.setupEngine = Api.setupEngine;
    Sre.engineSetup = Api.engineSetup;
    Sre.toEnriched = Api.toEnriched;
    Sre.toSpeech = Api.toSpeech;
    Sre.clearspeakPreferences = clearspeak_preferences_js_1.ClearspeakPreferences;
    Sre.getHighlighter = HighlighterFactory.highlighter;
    Sre.getSpeechGenerator = SpeechGeneratorFactory.generator;
    Sre.getWalker = WalkerFactory.walker;
    Sre.clearspeakStyle = function () {
        return EngineConst.DOMAIN_TO_STYLES['clearspeak'];
    };
    Sre.preloadLocales = function (locale) {
        return __awaiter(this, void 0, void 0, function () {
            var json;
            return __generator(this, function (_a) {
                json = mathmaps_js_1.default.get(locale);
                return [2, json ? new Promise(function (res, _rej) { return res(JSON.stringify(json)); }) :
                        Api.localeLoader()(locale)];
            });
        });
    };
})(Sre = exports.Sre || (exports.Sre = {}));
exports.sreReady = Sre.sreReady;
engine_js_1.default.getInstance().delay = true;
exports["default"] = Sre;
//# sourceMappingURL=sre.js.map

/***/ }),

/***/ 444:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HTMLAdaptor = void 0;
var DOMAdaptor_js_1 = __webpack_require__(5009);
var HTMLAdaptor = (function (_super) {
    __extends(HTMLAdaptor, _super);
    function HTMLAdaptor(window) {
        var _this = _super.call(this, window.document) || this;
        _this.window = window;
        _this.parser = new window.DOMParser();
        return _this;
    }
    HTMLAdaptor.prototype.parse = function (text, format) {
        if (format === void 0) { format = 'text/html'; }
        return this.parser.parseFromString(text, format);
    };
    HTMLAdaptor.prototype.create = function (kind, ns) {
        return (ns ?
            this.document.createElementNS(ns, kind) :
            this.document.createElement(kind));
    };
    HTMLAdaptor.prototype.text = function (text) {
        return this.document.createTextNode(text);
    };
    HTMLAdaptor.prototype.head = function (doc) {
        return doc.head || doc;
    };
    HTMLAdaptor.prototype.body = function (doc) {
        return doc.body || doc;
    };
    HTMLAdaptor.prototype.root = function (doc) {
        return doc.documentElement || doc;
    };
    HTMLAdaptor.prototype.doctype = function (doc) {
        return (doc.doctype ? "<!DOCTYPE ".concat(doc.doctype.name, ">") : '');
    };
    HTMLAdaptor.prototype.tags = function (node, name, ns) {
        if (ns === void 0) { ns = null; }
        var nodes = (ns ? node.getElementsByTagNameNS(ns, name) : node.getElementsByTagName(name));
        return Array.from(nodes);
    };
    HTMLAdaptor.prototype.getElements = function (nodes, _document) {
        var e_1, _a;
        var containers = [];
        try {
            for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {
                var node = nodes_1_1.value;
                if (typeof (node) === 'string') {
                    containers = containers.concat(Array.from(this.document.querySelectorAll(node)));
                }
                else if (Array.isArray(node)) {
                    containers = containers.concat(Array.from(node));
                }
                else if (node instanceof this.window.NodeList || node instanceof this.window.HTMLCollection) {
                    containers = containers.concat(Array.from(node));
                }
                else {
                    containers.push(node);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return containers;
    };
    HTMLAdaptor.prototype.contains = function (container, node) {
        return container.contains(node);
    };
    HTMLAdaptor.prototype.parent = function (node) {
        return node.parentNode;
    };
    HTMLAdaptor.prototype.append = function (node, child) {
        return node.appendChild(child);
    };
    HTMLAdaptor.prototype.insert = function (nchild, ochild) {
        return this.parent(ochild).insertBefore(nchild, ochild);
    };
    HTMLAdaptor.prototype.remove = function (child) {
        return this.parent(child).removeChild(child);
    };
    HTMLAdaptor.prototype.replace = function (nnode, onode) {
        return this.parent(onode).replaceChild(nnode, onode);
    };
    HTMLAdaptor.prototype.clone = function (node) {
        return node.cloneNode(true);
    };
    HTMLAdaptor.prototype.split = function (node, n) {
        return node.splitText(n);
    };
    HTMLAdaptor.prototype.next = function (node) {
        return node.nextSibling;
    };
    HTMLAdaptor.prototype.previous = function (node) {
        return node.previousSibling;
    };
    HTMLAdaptor.prototype.firstChild = function (node) {
        return node.firstChild;
    };
    HTMLAdaptor.prototype.lastChild = function (node) {
        return node.lastChild;
    };
    HTMLAdaptor.prototype.childNodes = function (node) {
        return Array.from(node.childNodes);
    };
    HTMLAdaptor.prototype.childNode = function (node, i) {
        return node.childNodes[i];
    };
    HTMLAdaptor.prototype.kind = function (node) {
        var n = node.nodeType;
        return (n === 1 || n === 3 || n === 8 ? node.nodeName.toLowerCase() : '');
    };
    HTMLAdaptor.prototype.value = function (node) {
        return node.nodeValue || '';
    };
    HTMLAdaptor.prototype.textContent = function (node) {
        return node.textContent;
    };
    HTMLAdaptor.prototype.innerHTML = function (node) {
        return node.innerHTML;
    };
    HTMLAdaptor.prototype.outerHTML = function (node) {
        return node.outerHTML;
    };
    HTMLAdaptor.prototype.serializeXML = function (node) {
        var serializer = new this.window.XMLSerializer();
        return serializer.serializeToString(node);
    };
    HTMLAdaptor.prototype.setAttribute = function (node, name, value, ns) {
        if (ns === void 0) { ns = null; }
        if (!ns) {
            return node.setAttribute(name, value);
        }
        name = ns.replace(/.*\//, '') + ':' + name.replace(/^.*:/, '');
        return node.setAttributeNS(ns, name, value);
    };
    HTMLAdaptor.prototype.getAttribute = function (node, name) {
        return node.getAttribute(name);
    };
    HTMLAdaptor.prototype.removeAttribute = function (node, name) {
        return node.removeAttribute(name);
    };
    HTMLAdaptor.prototype.hasAttribute = function (node, name) {
        return node.hasAttribute(name);
    };
    HTMLAdaptor.prototype.allAttributes = function (node) {
        return Array.from(node.attributes).map(function (x) {
            return { name: x.name, value: x.value };
        });
    };
    HTMLAdaptor.prototype.addClass = function (node, name) {
        if (node.classList) {
            node.classList.add(name);
        }
        else {
            node.className = (node.className + ' ' + name).trim();
        }
    };
    HTMLAdaptor.prototype.removeClass = function (node, name) {
        if (node.classList) {
            node.classList.remove(name);
        }
        else {
            node.className = node.className.split(/ /).filter(function (c) { return c !== name; }).join(' ');
        }
    };
    HTMLAdaptor.prototype.hasClass = function (node, name) {
        if (node.classList) {
            return node.classList.contains(name);
        }
        return node.className.split(/ /).indexOf(name) >= 0;
    };
    HTMLAdaptor.prototype.setStyle = function (node, name, value) {
        node.style[name] = value;
    };
    HTMLAdaptor.prototype.getStyle = function (node, name) {
        return node.style[name];
    };
    HTMLAdaptor.prototype.allStyles = function (node) {
        return node.style.cssText;
    };
    HTMLAdaptor.prototype.insertRules = function (node, rules) {
        var e_2, _a;
        try {
            for (var _b = __values(rules.reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var rule = _c.value;
                try {
                    node.sheet.insertRule(rule, 0);
                }
                catch (e) {
                    console.warn("MathJax: can't insert css rule '".concat(rule, "': ").concat(e.message));
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    HTMLAdaptor.prototype.fontSize = function (node) {
        var style = this.window.getComputedStyle(node);
        return parseFloat(style.fontSize);
    };
    HTMLAdaptor.prototype.fontFamily = function (node) {
        var style = this.window.getComputedStyle(node);
        return style.fontFamily || '';
    };
    HTMLAdaptor.prototype.nodeSize = function (node, em, local) {
        if (em === void 0) { em = 1; }
        if (local === void 0) { local = false; }
        if (local && node.getBBox) {
            var _a = node.getBBox(), width = _a.width, height = _a.height;
            return [width / em, height / em];
        }
        return [node.offsetWidth / em, node.offsetHeight / em];
    };
    HTMLAdaptor.prototype.nodeBBox = function (node) {
        var _a = node.getBoundingClientRect(), left = _a.left, right = _a.right, top = _a.top, bottom = _a.bottom;
        return { left: left, right: right, top: top, bottom: bottom };
    };
    return HTMLAdaptor;
}(DOMAdaptor_js_1.AbstractDOMAdaptor));
exports.HTMLAdaptor = HTMLAdaptor;
//# sourceMappingURL=HTMLAdaptor.js.map

/***/ }),

/***/ 6191:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.browserAdaptor = void 0;
var HTMLAdaptor_js_1 = __webpack_require__(444);
function browserAdaptor() {
    return new HTMLAdaptor_js_1.HTMLAdaptor(window);
}
exports.browserAdaptor = browserAdaptor;
//# sourceMappingURL=browserAdaptor.js.map

/***/ }),

/***/ 9515:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathJax = exports.combineWithMathJax = exports.combineDefaults = exports.combineConfig = exports.isObject = void 0;
var version_js_1 = __webpack_require__(3282);
function isObject(x) {
    return typeof x === 'object' && x !== null;
}
exports.isObject = isObject;
function combineConfig(dst, src) {
    var e_1, _a;
    try {
        for (var _b = __values(Object.keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var id = _c.value;
            if (id === '__esModule')
                continue;
            if (isObject(dst[id]) && isObject(src[id]) &&
                !(src[id] instanceof Promise)) {
                combineConfig(dst[id], src[id]);
            }
            else if (src[id] !== null && src[id] !== undefined) {
                dst[id] = src[id];
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return dst;
}
exports.combineConfig = combineConfig;
function combineDefaults(dst, name, src) {
    var e_2, _a;
    if (!dst[name]) {
        dst[name] = {};
    }
    dst = dst[name];
    try {
        for (var _b = __values(Object.keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var id = _c.value;
            if (isObject(dst[id]) && isObject(src[id])) {
                combineDefaults(dst, id, src[id]);
            }
            else if (dst[id] == null && src[id] != null) {
                dst[id] = src[id];
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return dst;
}
exports.combineDefaults = combineDefaults;
function combineWithMathJax(config) {
    return combineConfig(exports.MathJax, config);
}
exports.combineWithMathJax = combineWithMathJax;
if (typeof __webpack_require__.g.MathJax === 'undefined') {
    __webpack_require__.g.MathJax = {};
}
if (!__webpack_require__.g.MathJax.version) {
    __webpack_require__.g.MathJax = {
        version: version_js_1.VERSION,
        _: {},
        config: __webpack_require__.g.MathJax
    };
}
exports.MathJax = __webpack_require__.g.MathJax;
//# sourceMappingURL=global.js.map

/***/ }),

/***/ 235:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var __dirname = "/";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var e_1, _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CONFIG = exports.MathJax = exports.Loader = exports.PathFilters = exports.PackageError = exports.Package = void 0;
var global_js_1 = __webpack_require__(9515);
var package_js_1 = __webpack_require__(265);
var package_js_2 = __webpack_require__(265);
Object.defineProperty(exports, "Package", ({ enumerable: true, get: function () { return package_js_2.Package; } }));
Object.defineProperty(exports, "PackageError", ({ enumerable: true, get: function () { return package_js_2.PackageError; } }));
var FunctionList_js_1 = __webpack_require__(7525);
exports.PathFilters = {
    source: function (data) {
        if (exports.CONFIG.source.hasOwnProperty(data.name)) {
            data.name = exports.CONFIG.source[data.name];
        }
        return true;
    },
    normalize: function (data) {
        var name = data.name;
        if (!name.match(/^(?:[a-z]+:\/)?\/|[a-z]:\\|\[/i)) {
            data.name = '[mathjax]/' + name.replace(/^\.\//, '');
        }
        if (data.addExtension && !name.match(/\.[^\/]+$/)) {
            data.name += '.js';
        }
        return true;
    },
    prefix: function (data) {
        var match;
        while ((match = data.name.match(/^\[([^\]]*)\]/))) {
            if (!exports.CONFIG.paths.hasOwnProperty(match[1]))
                break;
            data.name = exports.CONFIG.paths[match[1]] + data.name.substr(match[0].length);
        }
        return true;
    }
};
var Loader;
(function (Loader) {
    var VERSION = global_js_1.MathJax.version;
    Loader.versions = new Map();
    function ready() {
        var e_2, _a;
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        if (names.length === 0) {
            names = Array.from(package_js_1.Package.packages.keys());
        }
        var promises = [];
        try {
            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_1 = names_1_1.value;
                var extension = package_js_1.Package.packages.get(name_1) || new package_js_1.Package(name_1, true);
                promises.push(extension.promise);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return Promise.all(promises);
    }
    Loader.ready = ready;
    function load() {
        var e_3, _a;
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        if (names.length === 0) {
            return Promise.resolve();
        }
        var promises = [];
        var _loop_1 = function (name_2) {
            var extension = package_js_1.Package.packages.get(name_2);
            if (!extension) {
                extension = new package_js_1.Package(name_2);
                extension.provides(exports.CONFIG.provides[name_2]);
            }
            extension.checkNoLoad();
            promises.push(extension.promise.then(function () {
                if (!exports.CONFIG.versionWarnings)
                    return;
                if (extension.isLoaded && !Loader.versions.has(package_js_1.Package.resolvePath(name_2))) {
                    console.warn("No version information available for component ".concat(name_2));
                }
            }));
        };
        try {
            for (var names_2 = __values(names), names_2_1 = names_2.next(); !names_2_1.done; names_2_1 = names_2.next()) {
                var name_2 = names_2_1.value;
                _loop_1(name_2);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (names_2_1 && !names_2_1.done && (_a = names_2.return)) _a.call(names_2);
            }
            finally { if (e_3) throw e_3.error; }
        }
        package_js_1.Package.loadAll();
        return Promise.all(promises);
    }
    Loader.load = load;
    function preLoad() {
        var e_4, _a;
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        try {
            for (var names_3 = __values(names), names_3_1 = names_3.next(); !names_3_1.done; names_3_1 = names_3.next()) {
                var name_3 = names_3_1.value;
                var extension = package_js_1.Package.packages.get(name_3);
                if (!extension) {
                    extension = new package_js_1.Package(name_3, true);
                    extension.provides(exports.CONFIG.provides[name_3]);
                }
                extension.loaded();
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (names_3_1 && !names_3_1.done && (_a = names_3.return)) _a.call(names_3);
            }
            finally { if (e_4) throw e_4.error; }
        }
    }
    Loader.preLoad = preLoad;
    function defaultReady() {
        if (typeof exports.MathJax.startup !== 'undefined') {
            exports.MathJax.config.startup.ready();
        }
    }
    Loader.defaultReady = defaultReady;
    function getRoot() {
        var root = __dirname + '/../../es5';
        if (typeof document !== 'undefined') {
            var script = document.currentScript || document.getElementById('MathJax-script');
            if (script) {
                root = script.src.replace(/\/[^\/]*$/, '');
            }
        }
        return root;
    }
    Loader.getRoot = getRoot;
    function checkVersion(name, version, _type) {
        Loader.versions.set(package_js_1.Package.resolvePath(name), VERSION);
        if (exports.CONFIG.versionWarnings && version !== VERSION) {
            console.warn("Component ".concat(name, " uses ").concat(version, " of MathJax; version in use is ").concat(VERSION));
            return true;
        }
        return false;
    }
    Loader.checkVersion = checkVersion;
    Loader.pathFilters = new FunctionList_js_1.FunctionList();
    Loader.pathFilters.add(exports.PathFilters.source, 0);
    Loader.pathFilters.add(exports.PathFilters.normalize, 10);
    Loader.pathFilters.add(exports.PathFilters.prefix, 20);
})(Loader = exports.Loader || (exports.Loader = {}));
exports.MathJax = global_js_1.MathJax;
if (typeof exports.MathJax.loader === 'undefined') {
    (0, global_js_1.combineDefaults)(exports.MathJax.config, 'loader', {
        paths: {
            mathjax: Loader.getRoot()
        },
        source: {},
        dependencies: {},
        provides: {},
        load: [],
        ready: Loader.defaultReady.bind(Loader),
        failed: function (error) { return console.log("MathJax(".concat(error.package || '?', "): ").concat(error.message)); },
        require: null,
        pathFilters: [],
        versionWarnings: true
    });
    (0, global_js_1.combineWithMathJax)({
        loader: Loader
    });
    try {
        for (var _b = __values(exports.MathJax.config.loader.pathFilters), _c = _b.next(); !_c.done; _c = _b.next()) {
            var filter = _c.value;
            if (Array.isArray(filter)) {
                Loader.pathFilters.add(filter[0], filter[1]);
            }
            else {
                Loader.pathFilters.add(filter);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
exports.CONFIG = exports.MathJax.config.loader;
//# sourceMappingURL=loader.js.map

/***/ }),

/***/ 265:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Package = exports.PackageError = void 0;
var loader_js_1 = __webpack_require__(235);
var PackageError = (function (_super) {
    __extends(PackageError, _super);
    function PackageError(message, name) {
        var _this = _super.call(this, message) || this;
        _this.package = name;
        return _this;
    }
    return PackageError;
}(Error));
exports.PackageError = PackageError;
var Package = (function () {
    function Package(name, noLoad) {
        if (noLoad === void 0) { noLoad = false; }
        this.isLoaded = false;
        this.isLoading = false;
        this.hasFailed = false;
        this.dependents = [];
        this.dependencies = [];
        this.dependencyCount = 0;
        this.provided = [];
        this.name = name;
        this.noLoad = noLoad;
        Package.packages.set(name, this);
        this.promise = this.makePromise(this.makeDependencies());
    }
    Object.defineProperty(Package.prototype, "canLoad", {
        get: function () {
            return this.dependencyCount === 0 && !this.noLoad && !this.isLoading && !this.hasFailed;
        },
        enumerable: false,
        configurable: true
    });
    Package.resolvePath = function (name, addExtension) {
        if (addExtension === void 0) { addExtension = true; }
        var data = { name: name, original: name, addExtension: addExtension };
        loader_js_1.Loader.pathFilters.execute(data);
        return data.name;
    };
    Package.loadAll = function () {
        var e_1, _a;
        try {
            for (var _b = __values(this.packages.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var extension = _c.value;
                if (extension.canLoad) {
                    extension.load();
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Package.prototype.makeDependencies = function () {
        var e_2, _a;
        var promises = [];
        var map = Package.packages;
        var noLoad = this.noLoad;
        var name = this.name;
        var dependencies = [];
        if (loader_js_1.CONFIG.dependencies.hasOwnProperty(name)) {
            dependencies.push.apply(dependencies, __spreadArray([], __read(loader_js_1.CONFIG.dependencies[name]), false));
        }
        else if (name !== 'core') {
            dependencies.push('core');
        }
        try {
            for (var dependencies_1 = __values(dependencies), dependencies_1_1 = dependencies_1.next(); !dependencies_1_1.done; dependencies_1_1 = dependencies_1.next()) {
                var dependent = dependencies_1_1.value;
                var extension = map.get(dependent) || new Package(dependent, noLoad);
                if (this.dependencies.indexOf(extension) < 0) {
                    extension.addDependent(this, noLoad);
                    this.dependencies.push(extension);
                    if (!extension.isLoaded) {
                        this.dependencyCount++;
                        promises.push(extension.promise);
                    }
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (dependencies_1_1 && !dependencies_1_1.done && (_a = dependencies_1.return)) _a.call(dependencies_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return promises;
    };
    Package.prototype.makePromise = function (promises) {
        var _this = this;
        var promise = new Promise((function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        }));
        var config = (loader_js_1.CONFIG[this.name] || {});
        if (config.ready) {
            promise = promise.then(function (_name) { return config.ready(_this.name); });
        }
        if (promises.length) {
            promises.push(promise);
            promise = Promise.all(promises).then(function (names) { return names.join(', '); });
        }
        if (config.failed) {
            promise.catch(function (message) { return config.failed(new PackageError(message, _this.name)); });
        }
        return promise;
    };
    Package.prototype.load = function () {
        if (!this.isLoaded && !this.isLoading && !this.noLoad) {
            this.isLoading = true;
            var url = Package.resolvePath(this.name);
            if (loader_js_1.CONFIG.require) {
                this.loadCustom(url);
            }
            else {
                this.loadScript(url);
            }
        }
    };
    Package.prototype.loadCustom = function (url) {
        var _this = this;
        try {
            var result = loader_js_1.CONFIG.require(url);
            if (result instanceof Promise) {
                result.then(function () { return _this.checkLoad(); })
                    .catch(function (err) { return _this.failed('Can\'t load "' + url + '"\n' + err.message.trim()); });
            }
            else {
                this.checkLoad();
            }
        }
        catch (err) {
            this.failed(err.message);
        }
    };
    Package.prototype.loadScript = function (url) {
        var _this = this;
        var script = document.createElement('script');
        script.src = url;
        script.charset = 'UTF-8';
        script.onload = function (_event) { return _this.checkLoad(); };
        script.onerror = function (_event) { return _this.failed('Can\'t load "' + url + '"'); };
        document.head.appendChild(script);
    };
    Package.prototype.loaded = function () {
        var e_3, _a, e_4, _b;
        this.isLoaded = true;
        this.isLoading = false;
        try {
            for (var _c = __values(this.dependents), _d = _c.next(); !_d.done; _d = _c.next()) {
                var dependent = _d.value;
                dependent.requirementSatisfied();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            for (var _e = __values(this.provided), _f = _e.next(); !_f.done; _f = _e.next()) {
                var provided = _f.value;
                provided.loaded();
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_4) throw e_4.error; }
        }
        this.resolve(this.name);
    };
    Package.prototype.failed = function (message) {
        this.hasFailed = true;
        this.isLoading = false;
        this.reject(new PackageError(message, this.name));
    };
    Package.prototype.checkLoad = function () {
        var _this = this;
        var config = (loader_js_1.CONFIG[this.name] || {});
        var checkReady = config.checkReady || (function () { return Promise.resolve(); });
        checkReady().then(function () { return _this.loaded(); })
            .catch(function (message) { return _this.failed(message); });
    };
    Package.prototype.requirementSatisfied = function () {
        if (this.dependencyCount) {
            this.dependencyCount--;
            if (this.canLoad) {
                this.load();
            }
        }
    };
    Package.prototype.provides = function (names) {
        var e_5, _a;
        if (names === void 0) { names = []; }
        try {
            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_1 = names_1_1.value;
                var provided = Package.packages.get(name_1);
                if (!provided) {
                    if (!loader_js_1.CONFIG.dependencies[name_1]) {
                        loader_js_1.CONFIG.dependencies[name_1] = [];
                    }
                    loader_js_1.CONFIG.dependencies[name_1].push(name_1);
                    provided = new Package(name_1, true);
                    provided.isLoading = true;
                }
                this.provided.push(provided);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_5) throw e_5.error; }
        }
    };
    Package.prototype.addDependent = function (extension, noLoad) {
        this.dependents.push(extension);
        if (!noLoad) {
            this.checkNoLoad();
        }
    };
    Package.prototype.checkNoLoad = function () {
        var e_6, _a;
        if (this.noLoad) {
            this.noLoad = false;
            try {
                for (var _b = __values(this.dependencies), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var dependency = _c.value;
                    dependency.checkNoLoad();
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
    };
    Package.packages = new Map();
    return Package;
}());
exports.Package = Package;
//# sourceMappingURL=package.js.map

/***/ }),

/***/ 2388:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CONFIG = exports.MathJax = exports.Startup = void 0;
var global_js_1 = __webpack_require__(9515);
var PrioritizedList_js_1 = __webpack_require__(8666);
var Options_js_1 = __webpack_require__(7233);
var Startup;
(function (Startup) {
    var extensions = new PrioritizedList_js_1.PrioritizedList();
    var visitor;
    var mathjax;
    Startup.constructors = {};
    Startup.input = [];
    Startup.output = null;
    Startup.handler = null;
    Startup.adaptor = null;
    Startup.elements = null;
    Startup.document = null;
    Startup.promise = new Promise(function (resolve, reject) {
        Startup.promiseResolve = resolve;
        Startup.promiseReject = reject;
    });
    Startup.pagePromise = new Promise(function (resolve, _reject) {
        var doc = __webpack_require__.g.document;
        if (!doc || !doc.readyState || doc.readyState === 'complete' || doc.readyState === 'interactive') {
            resolve();
        }
        else {
            var listener = function () { return resolve(); };
            doc.defaultView.addEventListener('load', listener, true);
            doc.defaultView.addEventListener('DOMContentLoaded', listener, true);
        }
    });
    function toMML(node) {
        return visitor.visitTree(node, Startup.document);
    }
    Startup.toMML = toMML;
    function registerConstructor(name, constructor) {
        Startup.constructors[name] = constructor;
    }
    Startup.registerConstructor = registerConstructor;
    function useHandler(name, force) {
        if (force === void 0) { force = false; }
        if (!exports.CONFIG.handler || force) {
            exports.CONFIG.handler = name;
        }
    }
    Startup.useHandler = useHandler;
    function useAdaptor(name, force) {
        if (force === void 0) { force = false; }
        if (!exports.CONFIG.adaptor || force) {
            exports.CONFIG.adaptor = name;
        }
    }
    Startup.useAdaptor = useAdaptor;
    function useInput(name, force) {
        if (force === void 0) { force = false; }
        if (!inputSpecified || force) {
            exports.CONFIG.input.push(name);
        }
    }
    Startup.useInput = useInput;
    function useOutput(name, force) {
        if (force === void 0) { force = false; }
        if (!exports.CONFIG.output || force) {
            exports.CONFIG.output = name;
        }
    }
    Startup.useOutput = useOutput;
    function extendHandler(extend, priority) {
        if (priority === void 0) { priority = 10; }
        extensions.add(extend, priority);
    }
    Startup.extendHandler = extendHandler;
    function defaultReady() {
        getComponents();
        makeMethods();
        Startup.pagePromise
            .then(function () { return exports.CONFIG.pageReady(); })
            .then(function () { return Startup.promiseResolve(); })
            .catch(function (err) { return Startup.promiseReject(err); });
    }
    Startup.defaultReady = defaultReady;
    function defaultPageReady() {
        return (exports.CONFIG.typeset && exports.MathJax.typesetPromise ?
            exports.MathJax.typesetPromise(exports.CONFIG.elements) :
            Promise.resolve());
    }
    Startup.defaultPageReady = defaultPageReady;
    function getComponents() {
        visitor = new exports.MathJax._.core.MmlTree.SerializedMmlVisitor.SerializedMmlVisitor();
        mathjax = exports.MathJax._.mathjax.mathjax;
        Startup.input = getInputJax();
        Startup.output = getOutputJax();
        Startup.adaptor = getAdaptor();
        if (Startup.handler) {
            mathjax.handlers.unregister(Startup.handler);
        }
        Startup.handler = getHandler();
        if (Startup.handler) {
            mathjax.handlers.register(Startup.handler);
            Startup.document = getDocument();
        }
    }
    Startup.getComponents = getComponents;
    function makeMethods() {
        var e_1, _a;
        if (Startup.input && Startup.output) {
            makeTypesetMethods();
        }
        var oname = (Startup.output ? Startup.output.name.toLowerCase() : '');
        try {
            for (var input_1 = __values(Startup.input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {
                var jax = input_1_1.value;
                var iname = jax.name.toLowerCase();
                makeMmlMethods(iname, jax);
                makeResetMethod(iname, jax);
                if (Startup.output) {
                    makeOutputMethods(iname, oname, jax);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    Startup.makeMethods = makeMethods;
    function makeTypesetMethods() {
        exports.MathJax.typeset = function (elements) {
            if (elements === void 0) { elements = null; }
            Startup.document.options.elements = elements;
            Startup.document.reset();
            Startup.document.render();
        };
        exports.MathJax.typesetPromise = function (elements) {
            if (elements === void 0) { elements = null; }
            Startup.document.options.elements = elements;
            Startup.document.reset();
            return mathjax.handleRetriesFor(function () {
                Startup.document.render();
            });
        };
        exports.MathJax.typesetClear = function (elements) {
            if (elements === void 0) { elements = null; }
            if (elements) {
                Startup.document.clearMathItemsWithin(elements);
            }
            else {
                Startup.document.clear();
            }
        };
    }
    Startup.makeTypesetMethods = makeTypesetMethods;
    function makeOutputMethods(iname, oname, input) {
        var name = iname + '2' + oname;
        exports.MathJax[name] =
            function (math, options) {
                if (options === void 0) { options = {}; }
                options.format = input.name;
                return Startup.document.convert(math, options);
            };
        exports.MathJax[name + 'Promise'] =
            function (math, options) {
                if (options === void 0) { options = {}; }
                options.format = input.name;
                return mathjax.handleRetriesFor(function () { return Startup.document.convert(math, options); });
            };
        exports.MathJax[oname + 'Stylesheet'] = function () { return Startup.output.styleSheet(Startup.document); };
        if ('getMetricsFor' in Startup.output) {
            exports.MathJax.getMetricsFor = function (node, display) {
                return Startup.output.getMetricsFor(node, display);
            };
        }
    }
    Startup.makeOutputMethods = makeOutputMethods;
    function makeMmlMethods(name, input) {
        var STATE = exports.MathJax._.core.MathItem.STATE;
        exports.MathJax[name + '2mml'] =
            function (math, options) {
                if (options === void 0) { options = {}; }
                options.end = STATE.CONVERT;
                options.format = input.name;
                return toMML(Startup.document.convert(math, options));
            };
        exports.MathJax[name + '2mmlPromise'] =
            function (math, options) {
                if (options === void 0) { options = {}; }
                options.end = STATE.CONVERT;
                options.format = input.name;
                return mathjax.handleRetriesFor(function () { return toMML(Startup.document.convert(math, options)); });
            };
    }
    Startup.makeMmlMethods = makeMmlMethods;
    function makeResetMethod(name, input) {
        exports.MathJax[name + 'Reset'] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return input.reset.apply(input, __spreadArray([], __read(args), false));
        };
    }
    Startup.makeResetMethod = makeResetMethod;
    function getInputJax() {
        var e_2, _a;
        var jax = [];
        try {
            for (var _b = __values(exports.CONFIG.input), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_1 = _c.value;
                var inputClass = Startup.constructors[name_1];
                if (inputClass) {
                    jax.push(new inputClass(exports.MathJax.config[name_1]));
                }
                else {
                    throw Error('Input Jax "' + name_1 + '" is not defined (has it been loaded?)');
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return jax;
    }
    Startup.getInputJax = getInputJax;
    function getOutputJax() {
        var name = exports.CONFIG.output;
        if (!name)
            return null;
        var outputClass = Startup.constructors[name];
        if (!outputClass) {
            throw Error('Output Jax "' + name + '" is not defined (has it been loaded?)');
        }
        return new outputClass(exports.MathJax.config[name]);
    }
    Startup.getOutputJax = getOutputJax;
    function getAdaptor() {
        var name = exports.CONFIG.adaptor;
        if (!name || name === 'none')
            return null;
        var adaptor = Startup.constructors[name];
        if (!adaptor) {
            throw Error('DOMAdaptor "' + name + '" is not defined (has it been loaded?)');
        }
        return adaptor(exports.MathJax.config[name]);
    }
    Startup.getAdaptor = getAdaptor;
    function getHandler() {
        var e_3, _a;
        var name = exports.CONFIG.handler;
        if (!name || name === 'none' || !Startup.adaptor)
            return null;
        var handlerClass = Startup.constructors[name];
        if (!handlerClass) {
            throw Error('Handler "' + name + '" is not defined (has it been loaded?)');
        }
        var handler = new handlerClass(Startup.adaptor, 5);
        try {
            for (var extensions_1 = __values(extensions), extensions_1_1 = extensions_1.next(); !extensions_1_1.done; extensions_1_1 = extensions_1.next()) {
                var extend = extensions_1_1.value;
                handler = extend.item(handler);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (extensions_1_1 && !extensions_1_1.done && (_a = extensions_1.return)) _a.call(extensions_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return handler;
    }
    Startup.getHandler = getHandler;
    function getDocument(root) {
        if (root === void 0) { root = null; }
        return mathjax.document(root || exports.CONFIG.document, __assign(__assign({}, exports.MathJax.config.options), { InputJax: Startup.input, OutputJax: Startup.output }));
    }
    Startup.getDocument = getDocument;
})(Startup = exports.Startup || (exports.Startup = {}));
exports.MathJax = global_js_1.MathJax;
if (typeof exports.MathJax._.startup === 'undefined') {
    (0, global_js_1.combineDefaults)(exports.MathJax.config, 'startup', {
        input: [],
        output: '',
        handler: null,
        adaptor: null,
        document: (typeof document === 'undefined' ? '' : document),
        elements: null,
        typeset: true,
        ready: Startup.defaultReady.bind(Startup),
        pageReady: Startup.defaultPageReady.bind(Startup)
    });
    (0, global_js_1.combineWithMathJax)({
        startup: Startup,
        options: {}
    });
    if (exports.MathJax.config.startup.invalidOption) {
        Options_js_1.OPTIONS.invalidOption = exports.MathJax.config.startup.invalidOption;
    }
    if (exports.MathJax.config.startup.optionError) {
        Options_js_1.OPTIONS.optionError = exports.MathJax.config.startup.optionError;
    }
}
exports.CONFIG = exports.MathJax.config.startup;
var inputSpecified = exports.CONFIG.input.length !== 0;
//# sourceMappingURL=startup.js.map

/***/ }),

/***/ 3282:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VERSION = void 0;
exports.VERSION = '3.2.2';
//# sourceMappingURL=version.js.map

/***/ }),

/***/ 5009:
/***/ (function(__unused_webpack_module, exports) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractDOMAdaptor = void 0;
var AbstractDOMAdaptor = (function () {
    function AbstractDOMAdaptor(document) {
        if (document === void 0) { document = null; }
        this.document = document;
    }
    AbstractDOMAdaptor.prototype.node = function (kind, def, children, ns) {
        var e_1, _a;
        if (def === void 0) { def = {}; }
        if (children === void 0) { children = []; }
        var node = this.create(kind, ns);
        this.setAttributes(node, def);
        try {
            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
                var child = children_1_1.value;
                this.append(node, child);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return node;
    };
    AbstractDOMAdaptor.prototype.setAttributes = function (node, def) {
        var e_2, _a, e_3, _b, e_4, _c;
        if (def.style && typeof (def.style) !== 'string') {
            try {
                for (var _d = __values(Object.keys(def.style)), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var key = _e.value;
                    this.setStyle(node, key.replace(/-([a-z])/g, function (_m, c) { return c.toUpperCase(); }), def.style[key]);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (def.properties) {
            try {
                for (var _f = __values(Object.keys(def.properties)), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var key = _g.value;
                    node[key] = def.properties[key];
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        try {
            for (var _h = __values(Object.keys(def)), _j = _h.next(); !_j.done; _j = _h.next()) {
                var key = _j.value;
                if ((key !== 'style' || typeof (def.style) === 'string') && key !== 'properties') {
                    this.setAttribute(node, key, def[key]);
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_4) throw e_4.error; }
        }
    };
    AbstractDOMAdaptor.prototype.replace = function (nnode, onode) {
        this.insert(nnode, onode);
        this.remove(onode);
        return onode;
    };
    AbstractDOMAdaptor.prototype.childNode = function (node, i) {
        return this.childNodes(node)[i];
    };
    AbstractDOMAdaptor.prototype.allClasses = function (node) {
        var classes = this.getAttribute(node, 'class');
        return (!classes ? [] :
            classes.replace(/  +/g, ' ').replace(/^ /, '').replace(/ $/, '').split(/ /));
    };
    return AbstractDOMAdaptor;
}());
exports.AbstractDOMAdaptor = AbstractDOMAdaptor;
//# sourceMappingURL=DOMAdaptor.js.map

/***/ }),

/***/ 3494:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractFindMath = void 0;
var Options_js_1 = __webpack_require__(7233);
var AbstractFindMath = (function () {
    function AbstractFindMath(options) {
        var CLASS = this.constructor;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);
    }
    AbstractFindMath.OPTIONS = {};
    return AbstractFindMath;
}());
exports.AbstractFindMath = AbstractFindMath;
//# sourceMappingURL=FindMath.js.map

/***/ }),

/***/ 3670:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractHandler = void 0;
var MathDocument_js_1 = __webpack_require__(5722);
var DefaultMathDocument = (function (_super) {
    __extends(DefaultMathDocument, _super);
    function DefaultMathDocument() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DefaultMathDocument;
}(MathDocument_js_1.AbstractMathDocument));
var AbstractHandler = (function () {
    function AbstractHandler(adaptor, priority) {
        if (priority === void 0) { priority = 5; }
        this.documentClass = DefaultMathDocument;
        this.adaptor = adaptor;
        this.priority = priority;
    }
    Object.defineProperty(AbstractHandler.prototype, "name", {
        get: function () {
            return this.constructor.NAME;
        },
        enumerable: false,
        configurable: true
    });
    AbstractHandler.prototype.handlesDocument = function (_document) {
        return false;
    };
    AbstractHandler.prototype.create = function (document, options) {
        return new this.documentClass(document, this.adaptor, options);
    };
    AbstractHandler.NAME = 'generic';
    return AbstractHandler;
}());
exports.AbstractHandler = AbstractHandler;
//# sourceMappingURL=Handler.js.map

/***/ }),

/***/ 805:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HandlerList = void 0;
var PrioritizedList_js_1 = __webpack_require__(8666);
var HandlerList = (function (_super) {
    __extends(HandlerList, _super);
    function HandlerList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HandlerList.prototype.register = function (handler) {
        return this.add(handler, handler.priority);
    };
    HandlerList.prototype.unregister = function (handler) {
        this.remove(handler);
    };
    HandlerList.prototype.handlesDocument = function (document) {
        var e_1, _a;
        try {
            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                var handler = item.item;
                if (handler.handlesDocument(document)) {
                    return handler;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        throw new Error("Can't find handler for document");
    };
    HandlerList.prototype.document = function (document, options) {
        if (options === void 0) { options = null; }
        return this.handlesDocument(document).create(document, options);
    };
    return HandlerList;
}(PrioritizedList_js_1.PrioritizedList));
exports.HandlerList = HandlerList;
//# sourceMappingURL=HandlerList.js.map

/***/ }),

/***/ 9206:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractInputJax = void 0;
var Options_js_1 = __webpack_require__(7233);
var FunctionList_js_1 = __webpack_require__(7525);
var AbstractInputJax = (function () {
    function AbstractInputJax(options) {
        if (options === void 0) { options = {}; }
        this.adaptor = null;
        this.mmlFactory = null;
        var CLASS = this.constructor;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);
        this.preFilters = new FunctionList_js_1.FunctionList();
        this.postFilters = new FunctionList_js_1.FunctionList();
    }
    Object.defineProperty(AbstractInputJax.prototype, "name", {
        get: function () {
            return this.constructor.NAME;
        },
        enumerable: false,
        configurable: true
    });
    AbstractInputJax.prototype.setAdaptor = function (adaptor) {
        this.adaptor = adaptor;
    };
    AbstractInputJax.prototype.setMmlFactory = function (mmlFactory) {
        this.mmlFactory = mmlFactory;
    };
    AbstractInputJax.prototype.initialize = function () {
    };
    AbstractInputJax.prototype.reset = function () {
        var _args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            _args[_i] = arguments[_i];
        }
    };
    Object.defineProperty(AbstractInputJax.prototype, "processStrings", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    AbstractInputJax.prototype.findMath = function (_node, _options) {
        return [];
    };
    AbstractInputJax.prototype.executeFilters = function (filters, math, document, data) {
        var args = { math: math, document: document, data: data };
        filters.execute(args);
        return args.data;
    };
    AbstractInputJax.NAME = 'generic';
    AbstractInputJax.OPTIONS = {};
    return AbstractInputJax;
}());
exports.AbstractInputJax = AbstractInputJax;
//# sourceMappingURL=InputJax.js.map

/***/ }),

/***/ 5722:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractMathDocument = exports.resetAllOptions = exports.resetOptions = exports.RenderList = void 0;
var Options_js_1 = __webpack_require__(7233);
var InputJax_js_1 = __webpack_require__(9206);
var OutputJax_js_1 = __webpack_require__(2975);
var MathList_js_1 = __webpack_require__(9000);
var MathItem_js_1 = __webpack_require__(4474);
var MmlFactory_js_1 = __webpack_require__(3909);
var BitField_js_1 = __webpack_require__(6751);
var PrioritizedList_js_1 = __webpack_require__(8666);
var RenderList = (function (_super) {
    __extends(RenderList, _super);
    function RenderList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RenderList.create = function (actions) {
        var e_1, _a;
        var list = new this();
        try {
            for (var _b = __values(Object.keys(actions)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var id = _c.value;
                var _d = __read(this.action(id, actions[id]), 2), action = _d[0], priority = _d[1];
                if (priority) {
                    list.add(action, priority);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return list;
    };
    RenderList.action = function (id, action) {
        var _a, _b, _c, _d;
        var renderDoc, renderMath;
        var convert = true;
        var priority = action[0];
        if (action.length === 1 || typeof action[1] === 'boolean') {
            action.length === 2 && (convert = action[1]);
            _a = __read(this.methodActions(id), 2), renderDoc = _a[0], renderMath = _a[1];
        }
        else if (typeof action[1] === 'string') {
            if (typeof action[2] === 'string') {
                action.length === 4 && (convert = action[3]);
                var _e = __read(action.slice(1), 2), method1 = _e[0], method2 = _e[1];
                _b = __read(this.methodActions(method1, method2), 2), renderDoc = _b[0], renderMath = _b[1];
            }
            else {
                action.length === 3 && (convert = action[2]);
                _c = __read(this.methodActions(action[1]), 2), renderDoc = _c[0], renderMath = _c[1];
            }
        }
        else {
            action.length === 4 && (convert = action[3]);
            _d = __read(action.slice(1), 2), renderDoc = _d[0], renderMath = _d[1];
        }
        return [{ id: id, renderDoc: renderDoc, renderMath: renderMath, convert: convert }, priority];
    };
    RenderList.methodActions = function (method1, method2) {
        if (method2 === void 0) { method2 = method1; }
        return [
            function (document) { method1 && document[method1](); return false; },
            function (math, document) { method2 && math[method2](document); return false; }
        ];
    };
    RenderList.prototype.renderDoc = function (document, start) {
        var e_2, _a;
        if (start === void 0) { start = MathItem_js_1.STATE.UNPROCESSED; }
        try {
            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (item.priority >= start) {
                    if (item.item.renderDoc(document))
                        return;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    RenderList.prototype.renderMath = function (math, document, start) {
        var e_3, _a;
        if (start === void 0) { start = MathItem_js_1.STATE.UNPROCESSED; }
        try {
            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (item.priority >= start) {
                    if (item.item.renderMath(math, document))
                        return;
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    RenderList.prototype.renderConvert = function (math, document, end) {
        var e_4, _a;
        if (end === void 0) { end = MathItem_js_1.STATE.LAST; }
        try {
            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (item.priority > end)
                    return;
                if (item.item.convert) {
                    if (item.item.renderMath(math, document))
                        return;
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
    };
    RenderList.prototype.findID = function (id) {
        var e_5, _a;
        try {
            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (item.item.id === id) {
                    return item.item;
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
        return null;
    };
    return RenderList;
}(PrioritizedList_js_1.PrioritizedList));
exports.RenderList = RenderList;
exports.resetOptions = {
    all: false,
    processed: false,
    inputJax: null,
    outputJax: null
};
exports.resetAllOptions = {
    all: true,
    processed: true,
    inputJax: [],
    outputJax: []
};
var DefaultInputJax = (function (_super) {
    __extends(DefaultInputJax, _super);
    function DefaultInputJax() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultInputJax.prototype.compile = function (_math) {
        return null;
    };
    return DefaultInputJax;
}(InputJax_js_1.AbstractInputJax));
var DefaultOutputJax = (function (_super) {
    __extends(DefaultOutputJax, _super);
    function DefaultOutputJax() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultOutputJax.prototype.typeset = function (_math, _document) {
        if (_document === void 0) { _document = null; }
        return null;
    };
    DefaultOutputJax.prototype.escaped = function (_math, _document) {
        return null;
    };
    return DefaultOutputJax;
}(OutputJax_js_1.AbstractOutputJax));
var DefaultMathList = (function (_super) {
    __extends(DefaultMathList, _super);
    function DefaultMathList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DefaultMathList;
}(MathList_js_1.AbstractMathList));
var DefaultMathItem = (function (_super) {
    __extends(DefaultMathItem, _super);
    function DefaultMathItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DefaultMathItem;
}(MathItem_js_1.AbstractMathItem));
var AbstractMathDocument = (function () {
    function AbstractMathDocument(document, adaptor, options) {
        var _this = this;
        var CLASS = this.constructor;
        this.document = document;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);
        this.math = new (this.options['MathList'] || DefaultMathList)();
        this.renderActions = RenderList.create(this.options['renderActions']);
        this.processed = new AbstractMathDocument.ProcessBits();
        this.outputJax = this.options['OutputJax'] || new DefaultOutputJax();
        var inputJax = this.options['InputJax'] || [new DefaultInputJax()];
        if (!Array.isArray(inputJax)) {
            inputJax = [inputJax];
        }
        this.inputJax = inputJax;
        this.adaptor = adaptor;
        this.outputJax.setAdaptor(adaptor);
        this.inputJax.map(function (jax) { return jax.setAdaptor(adaptor); });
        this.mmlFactory = this.options['MmlFactory'] || new MmlFactory_js_1.MmlFactory();
        this.inputJax.map(function (jax) { return jax.setMmlFactory(_this.mmlFactory); });
        this.outputJax.initialize();
        this.inputJax.map(function (jax) { return jax.initialize(); });
    }
    Object.defineProperty(AbstractMathDocument.prototype, "kind", {
        get: function () {
            return this.constructor.KIND;
        },
        enumerable: false,
        configurable: true
    });
    AbstractMathDocument.prototype.addRenderAction = function (id) {
        var action = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            action[_i - 1] = arguments[_i];
        }
        var _a = __read(RenderList.action(id, action), 2), fn = _a[0], p = _a[1];
        this.renderActions.add(fn, p);
    };
    AbstractMathDocument.prototype.removeRenderAction = function (id) {
        var action = this.renderActions.findID(id);
        if (action) {
            this.renderActions.remove(action);
        }
    };
    AbstractMathDocument.prototype.render = function () {
        this.renderActions.renderDoc(this);
        return this;
    };
    AbstractMathDocument.prototype.rerender = function (start) {
        if (start === void 0) { start = MathItem_js_1.STATE.RERENDER; }
        this.state(start - 1);
        this.render();
        return this;
    };
    AbstractMathDocument.prototype.convert = function (math, options) {
        if (options === void 0) { options = {}; }
        var _a = (0, Options_js_1.userOptions)({
            format: this.inputJax[0].name, display: true, end: MathItem_js_1.STATE.LAST,
            em: 16, ex: 8, containerWidth: null, lineWidth: 1000000, scale: 1, family: ''
        }, options), format = _a.format, display = _a.display, end = _a.end, ex = _a.ex, em = _a.em, containerWidth = _a.containerWidth, lineWidth = _a.lineWidth, scale = _a.scale, family = _a.family;
        if (containerWidth === null) {
            containerWidth = 80 * ex;
        }
        var jax = this.inputJax.reduce(function (jax, ijax) { return (ijax.name === format ? ijax : jax); }, null);
        var mitem = new this.options.MathItem(math, jax, display);
        mitem.start.node = this.adaptor.body(this.document);
        mitem.setMetrics(em, ex, containerWidth, lineWidth, scale);
        if (this.outputJax.options.mtextInheritFont) {
            mitem.outputData.mtextFamily = family;
        }
        if (this.outputJax.options.merrorInheritFont) {
            mitem.outputData.merrorFamily = family;
        }
        mitem.convert(this, end);
        return (mitem.typesetRoot || mitem.root);
    };
    AbstractMathDocument.prototype.findMath = function (_options) {
        if (_options === void 0) { _options = null; }
        this.processed.set('findMath');
        return this;
    };
    AbstractMathDocument.prototype.compile = function () {
        var e_6, _a, e_7, _b;
        if (!this.processed.isSet('compile')) {
            var recompile = [];
            try {
                for (var _c = __values(this.math), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var math = _d.value;
                    this.compileMath(math);
                    if (math.inputData.recompile !== undefined) {
                        recompile.push(math);
                    }
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_6) throw e_6.error; }
            }
            try {
                for (var recompile_1 = __values(recompile), recompile_1_1 = recompile_1.next(); !recompile_1_1.done; recompile_1_1 = recompile_1.next()) {
                    var math = recompile_1_1.value;
                    var data = math.inputData.recompile;
                    math.state(data.state);
                    math.inputData.recompile = data;
                    this.compileMath(math);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (recompile_1_1 && !recompile_1_1.done && (_b = recompile_1.return)) _b.call(recompile_1);
                }
                finally { if (e_7) throw e_7.error; }
            }
            this.processed.set('compile');
        }
        return this;
    };
    AbstractMathDocument.prototype.compileMath = function (math) {
        try {
            math.compile(this);
        }
        catch (err) {
            if (err.retry || err.restart) {
                throw err;
            }
            this.options['compileError'](this, math, err);
            math.inputData['error'] = err;
        }
    };
    AbstractMathDocument.prototype.compileError = function (math, err) {
        math.root = this.mmlFactory.create('math', null, [
            this.mmlFactory.create('merror', { 'data-mjx-error': err.message, title: err.message }, [
                this.mmlFactory.create('mtext', null, [
                    this.mmlFactory.create('text').setText('Math input error')
                ])
            ])
        ]);
        if (math.display) {
            math.root.attributes.set('display', 'block');
        }
        math.inputData.error = err.message;
    };
    AbstractMathDocument.prototype.typeset = function () {
        var e_8, _a;
        if (!this.processed.isSet('typeset')) {
            try {
                for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var math = _c.value;
                    try {
                        math.typeset(this);
                    }
                    catch (err) {
                        if (err.retry || err.restart) {
                            throw err;
                        }
                        this.options['typesetError'](this, math, err);
                        math.outputData['error'] = err;
                    }
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
            this.processed.set('typeset');
        }
        return this;
    };
    AbstractMathDocument.prototype.typesetError = function (math, err) {
        math.typesetRoot = this.adaptor.node('mjx-container', {
            class: 'MathJax mjx-output-error',
            jax: this.outputJax.name,
        }, [
            this.adaptor.node('span', {
                'data-mjx-error': err.message,
                title: err.message,
                style: {
                    color: 'red',
                    'background-color': 'yellow',
                    'line-height': 'normal'
                }
            }, [
                this.adaptor.text('Math output error')
            ])
        ]);
        if (math.display) {
            this.adaptor.setAttributes(math.typesetRoot, {
                style: {
                    display: 'block',
                    margin: '1em 0',
                    'text-align': 'center'
                }
            });
        }
        math.outputData.error = err.message;
    };
    AbstractMathDocument.prototype.getMetrics = function () {
        if (!this.processed.isSet('getMetrics')) {
            this.outputJax.getMetrics(this);
            this.processed.set('getMetrics');
        }
        return this;
    };
    AbstractMathDocument.prototype.updateDocument = function () {
        var e_9, _a;
        if (!this.processed.isSet('updateDocument')) {
            try {
                for (var _b = __values(this.math.reversed()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var math = _c.value;
                    math.updateDocument(this);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
            this.processed.set('updateDocument');
        }
        return this;
    };
    AbstractMathDocument.prototype.removeFromDocument = function (_restore) {
        if (_restore === void 0) { _restore = false; }
        return this;
    };
    AbstractMathDocument.prototype.state = function (state, restore) {
        var e_10, _a;
        if (restore === void 0) { restore = false; }
        try {
            for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
                var math = _c.value;
                math.state(state, restore);
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_10) throw e_10.error; }
        }
        if (state < MathItem_js_1.STATE.INSERTED) {
            this.processed.clear('updateDocument');
        }
        if (state < MathItem_js_1.STATE.TYPESET) {
            this.processed.clear('typeset');
            this.processed.clear('getMetrics');
        }
        if (state < MathItem_js_1.STATE.COMPILED) {
            this.processed.clear('compile');
        }
        return this;
    };
    AbstractMathDocument.prototype.reset = function (options) {
        var _a;
        if (options === void 0) { options = { processed: true }; }
        options = (0, Options_js_1.userOptions)(Object.assign({}, exports.resetOptions), options);
        options.all && Object.assign(options, exports.resetAllOptions);
        options.processed && this.processed.reset();
        options.inputJax && this.inputJax.forEach(function (jax) { return jax.reset.apply(jax, __spreadArray([], __read(options.inputJax), false)); });
        options.outputJax && (_a = this.outputJax).reset.apply(_a, __spreadArray([], __read(options.outputJax), false));
        return this;
    };
    AbstractMathDocument.prototype.clear = function () {
        this.reset();
        this.math.clear();
        return this;
    };
    AbstractMathDocument.prototype.concat = function (list) {
        this.math.merge(list);
        return this;
    };
    AbstractMathDocument.prototype.clearMathItemsWithin = function (containers) {
        var _a;
        var items = this.getMathItemsWithin(containers);
        (_a = this.math).remove.apply(_a, __spreadArray([], __read(items), false));
        return items;
    };
    AbstractMathDocument.prototype.getMathItemsWithin = function (elements) {
        var e_11, _a, e_12, _b;
        if (!Array.isArray(elements)) {
            elements = [elements];
        }
        var adaptor = this.adaptor;
        var items = [];
        var containers = adaptor.getElements(elements, this.document);
        try {
            ITEMS: for (var _c = __values(this.math), _d = _c.next(); !_d.done; _d = _c.next()) {
                var item = _d.value;
                try {
                    for (var containers_1 = (e_12 = void 0, __values(containers)), containers_1_1 = containers_1.next(); !containers_1_1.done; containers_1_1 = containers_1.next()) {
                        var container = containers_1_1.value;
                        if (item.start.node && adaptor.contains(container, item.start.node)) {
                            items.push(item);
                            continue ITEMS;
                        }
                    }
                }
                catch (e_12_1) { e_12 = { error: e_12_1 }; }
                finally {
                    try {
                        if (containers_1_1 && !containers_1_1.done && (_b = containers_1.return)) _b.call(containers_1);
                    }
                    finally { if (e_12) throw e_12.error; }
                }
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_11) throw e_11.error; }
        }
        return items;
    };
    AbstractMathDocument.KIND = 'MathDocument';
    AbstractMathDocument.OPTIONS = {
        OutputJax: null,
        InputJax: null,
        MmlFactory: null,
        MathList: DefaultMathList,
        MathItem: DefaultMathItem,
        compileError: function (doc, math, err) {
            doc.compileError(math, err);
        },
        typesetError: function (doc, math, err) {
            doc.typesetError(math, err);
        },
        renderActions: (0, Options_js_1.expandable)({
            find: [MathItem_js_1.STATE.FINDMATH, 'findMath', '', false],
            compile: [MathItem_js_1.STATE.COMPILED],
            metrics: [MathItem_js_1.STATE.METRICS, 'getMetrics', '', false],
            typeset: [MathItem_js_1.STATE.TYPESET],
            update: [MathItem_js_1.STATE.INSERTED, 'updateDocument', false]
        })
    };
    AbstractMathDocument.ProcessBits = (0, BitField_js_1.BitFieldClass)('findMath', 'compile', 'getMetrics', 'typeset', 'updateDocument');
    return AbstractMathDocument;
}());
exports.AbstractMathDocument = AbstractMathDocument;
//# sourceMappingURL=MathDocument.js.map

/***/ }),

/***/ 4474:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.newState = exports.STATE = exports.AbstractMathItem = exports.protoItem = void 0;
function protoItem(open, math, close, n, start, end, display) {
    if (display === void 0) { display = null; }
    var item = { open: open, math: math, close: close,
        n: n, start: { n: start }, end: { n: end }, display: display };
    return item;
}
exports.protoItem = protoItem;
var AbstractMathItem = (function () {
    function AbstractMathItem(math, jax, display, start, end) {
        if (display === void 0) { display = true; }
        if (start === void 0) { start = { i: 0, n: 0, delim: '' }; }
        if (end === void 0) { end = { i: 0, n: 0, delim: '' }; }
        this.root = null;
        this.typesetRoot = null;
        this.metrics = {};
        this.inputData = {};
        this.outputData = {};
        this._state = exports.STATE.UNPROCESSED;
        this.math = math;
        this.inputJax = jax;
        this.display = display;
        this.start = start;
        this.end = end;
        this.root = null;
        this.typesetRoot = null;
        this.metrics = {};
        this.inputData = {};
        this.outputData = {};
    }
    Object.defineProperty(AbstractMathItem.prototype, "isEscaped", {
        get: function () {
            return this.display === null;
        },
        enumerable: false,
        configurable: true
    });
    AbstractMathItem.prototype.render = function (document) {
        document.renderActions.renderMath(this, document);
    };
    AbstractMathItem.prototype.rerender = function (document, start) {
        if (start === void 0) { start = exports.STATE.RERENDER; }
        if (this.state() >= start) {
            this.state(start - 1);
        }
        document.renderActions.renderMath(this, document, start);
    };
    AbstractMathItem.prototype.convert = function (document, end) {
        if (end === void 0) { end = exports.STATE.LAST; }
        document.renderActions.renderConvert(this, document, end);
    };
    AbstractMathItem.prototype.compile = function (document) {
        if (this.state() < exports.STATE.COMPILED) {
            this.root = this.inputJax.compile(this, document);
            this.state(exports.STATE.COMPILED);
        }
    };
    AbstractMathItem.prototype.typeset = function (document) {
        if (this.state() < exports.STATE.TYPESET) {
            this.typesetRoot = document.outputJax[this.isEscaped ? 'escaped' : 'typeset'](this, document);
            this.state(exports.STATE.TYPESET);
        }
    };
    AbstractMathItem.prototype.updateDocument = function (_document) { };
    AbstractMathItem.prototype.removeFromDocument = function (_restore) {
        if (_restore === void 0) { _restore = false; }
    };
    AbstractMathItem.prototype.setMetrics = function (em, ex, cwidth, lwidth, scale) {
        this.metrics = {
            em: em, ex: ex,
            containerWidth: cwidth,
            lineWidth: lwidth,
            scale: scale
        };
    };
    AbstractMathItem.prototype.state = function (state, restore) {
        if (state === void 0) { state = null; }
        if (restore === void 0) { restore = false; }
        if (state != null) {
            if (state < exports.STATE.INSERTED && this._state >= exports.STATE.INSERTED) {
                this.removeFromDocument(restore);
            }
            if (state < exports.STATE.TYPESET && this._state >= exports.STATE.TYPESET) {
                this.outputData = {};
            }
            if (state < exports.STATE.COMPILED && this._state >= exports.STATE.COMPILED) {
                this.inputData = {};
            }
            this._state = state;
        }
        return this._state;
    };
    AbstractMathItem.prototype.reset = function (restore) {
        if (restore === void 0) { restore = false; }
        this.state(exports.STATE.UNPROCESSED, restore);
    };
    return AbstractMathItem;
}());
exports.AbstractMathItem = AbstractMathItem;
exports.STATE = {
    UNPROCESSED: 0,
    FINDMATH: 10,
    COMPILED: 20,
    CONVERT: 100,
    METRICS: 110,
    RERENDER: 125,
    TYPESET: 150,
    INSERTED: 200,
    LAST: 10000
};
function newState(name, state) {
    if (name in exports.STATE) {
        throw Error('State ' + name + ' already exists');
    }
    exports.STATE[name] = state;
}
exports.newState = newState;
//# sourceMappingURL=MathItem.js.map

/***/ }),

/***/ 9000:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractMathList = void 0;
var LinkedList_js_1 = __webpack_require__(103);
var AbstractMathList = (function (_super) {
    __extends(AbstractMathList, _super);
    function AbstractMathList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractMathList.prototype.isBefore = function (a, b) {
        return (a.start.i < b.start.i || (a.start.i === b.start.i && a.start.n < b.start.n));
    };
    return AbstractMathList;
}(LinkedList_js_1.LinkedList));
exports.AbstractMathList = AbstractMathList;
//# sourceMappingURL=MathList.js.map

/***/ }),

/***/ 91:
/***/ (function(__unused_webpack_module, exports) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Attributes = exports.INHERIT = void 0;
exports.INHERIT = '_inherit_';
var Attributes = (function () {
    function Attributes(defaults, global) {
        this.global = global;
        this.defaults = Object.create(global);
        this.inherited = Object.create(this.defaults);
        this.attributes = Object.create(this.inherited);
        Object.assign(this.defaults, defaults);
    }
    Attributes.prototype.set = function (name, value) {
        this.attributes[name] = value;
    };
    Attributes.prototype.setList = function (list) {
        Object.assign(this.attributes, list);
    };
    Attributes.prototype.get = function (name) {
        var value = this.attributes[name];
        if (value === exports.INHERIT) {
            value = this.global[name];
        }
        return value;
    };
    Attributes.prototype.getExplicit = function (name) {
        if (!this.attributes.hasOwnProperty(name)) {
            return undefined;
        }
        return this.attributes[name];
    };
    Attributes.prototype.getList = function () {
        var e_1, _a;
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        var values = {};
        try {
            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_1 = names_1_1.value;
                values[name_1] = this.get(name_1);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return values;
    };
    Attributes.prototype.setInherited = function (name, value) {
        this.inherited[name] = value;
    };
    Attributes.prototype.getInherited = function (name) {
        return this.inherited[name];
    };
    Attributes.prototype.getDefault = function (name) {
        return this.defaults[name];
    };
    Attributes.prototype.isSet = function (name) {
        return this.attributes.hasOwnProperty(name) || this.inherited.hasOwnProperty(name);
    };
    Attributes.prototype.hasDefault = function (name) {
        return (name in this.defaults);
    };
    Attributes.prototype.getExplicitNames = function () {
        return Object.keys(this.attributes);
    };
    Attributes.prototype.getInheritedNames = function () {
        return Object.keys(this.inherited);
    };
    Attributes.prototype.getDefaultNames = function () {
        return Object.keys(this.defaults);
    };
    Attributes.prototype.getGlobalNames = function () {
        return Object.keys(this.global);
    };
    Attributes.prototype.getAllAttributes = function () {
        return this.attributes;
    };
    Attributes.prototype.getAllInherited = function () {
        return this.inherited;
    };
    Attributes.prototype.getAllDefaults = function () {
        return this.defaults;
    };
    Attributes.prototype.getAllGlobals = function () {
        return this.global;
    };
    return Attributes;
}());
exports.Attributes = Attributes;
//# sourceMappingURL=Attributes.js.map

/***/ }),

/***/ 6336:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MML = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var math_js_1 = __webpack_require__(3233);
var mi_js_1 = __webpack_require__(450);
var mn_js_1 = __webpack_require__(3050);
var mo_js_1 = __webpack_require__(2756);
var mtext_js_1 = __webpack_require__(4770);
var mspace_js_1 = __webpack_require__(6030);
var ms_js_1 = __webpack_require__(7265);
var mrow_js_1 = __webpack_require__(9878);
var mfrac_js_1 = __webpack_require__(6850);
var msqrt_js_1 = __webpack_require__(7131);
var mroot_js_1 = __webpack_require__(6145);
var mstyle_js_1 = __webpack_require__(1314);
var merror_js_1 = __webpack_require__(1581);
var mpadded_js_1 = __webpack_require__(7238);
var mphantom_js_1 = __webpack_require__(5741);
var mfenced_js_1 = __webpack_require__(5410);
var menclose_js_1 = __webpack_require__(6661);
var maction_js_1 = __webpack_require__(9145);
var msubsup_js_1 = __webpack_require__(4461);
var munderover_js_1 = __webpack_require__(5184);
var mmultiscripts_js_1 = __webpack_require__(6405);
var mtable_js_1 = __webpack_require__(1349);
var mtr_js_1 = __webpack_require__(5022);
var mtd_js_1 = __webpack_require__(4359);
var maligngroup_js_1 = __webpack_require__(142);
var malignmark_js_1 = __webpack_require__(7590);
var mglyph_js_1 = __webpack_require__(3985);
var semantics_js_1 = __webpack_require__(9102);
var TeXAtom_js_1 = __webpack_require__(3948);
var mathchoice_js_1 = __webpack_require__(1334);
exports.MML = (_a = {},
    _a[math_js_1.MmlMath.prototype.kind] = math_js_1.MmlMath,
    _a[mi_js_1.MmlMi.prototype.kind] = mi_js_1.MmlMi,
    _a[mn_js_1.MmlMn.prototype.kind] = mn_js_1.MmlMn,
    _a[mo_js_1.MmlMo.prototype.kind] = mo_js_1.MmlMo,
    _a[mtext_js_1.MmlMtext.prototype.kind] = mtext_js_1.MmlMtext,
    _a[mspace_js_1.MmlMspace.prototype.kind] = mspace_js_1.MmlMspace,
    _a[ms_js_1.MmlMs.prototype.kind] = ms_js_1.MmlMs,
    _a[mrow_js_1.MmlMrow.prototype.kind] = mrow_js_1.MmlMrow,
    _a[mrow_js_1.MmlInferredMrow.prototype.kind] = mrow_js_1.MmlInferredMrow,
    _a[mfrac_js_1.MmlMfrac.prototype.kind] = mfrac_js_1.MmlMfrac,
    _a[msqrt_js_1.MmlMsqrt.prototype.kind] = msqrt_js_1.MmlMsqrt,
    _a[mroot_js_1.MmlMroot.prototype.kind] = mroot_js_1.MmlMroot,
    _a[mstyle_js_1.MmlMstyle.prototype.kind] = mstyle_js_1.MmlMstyle,
    _a[merror_js_1.MmlMerror.prototype.kind] = merror_js_1.MmlMerror,
    _a[mpadded_js_1.MmlMpadded.prototype.kind] = mpadded_js_1.MmlMpadded,
    _a[mphantom_js_1.MmlMphantom.prototype.kind] = mphantom_js_1.MmlMphantom,
    _a[mfenced_js_1.MmlMfenced.prototype.kind] = mfenced_js_1.MmlMfenced,
    _a[menclose_js_1.MmlMenclose.prototype.kind] = menclose_js_1.MmlMenclose,
    _a[maction_js_1.MmlMaction.prototype.kind] = maction_js_1.MmlMaction,
    _a[msubsup_js_1.MmlMsub.prototype.kind] = msubsup_js_1.MmlMsub,
    _a[msubsup_js_1.MmlMsup.prototype.kind] = msubsup_js_1.MmlMsup,
    _a[msubsup_js_1.MmlMsubsup.prototype.kind] = msubsup_js_1.MmlMsubsup,
    _a[munderover_js_1.MmlMunder.prototype.kind] = munderover_js_1.MmlMunder,
    _a[munderover_js_1.MmlMover.prototype.kind] = munderover_js_1.MmlMover,
    _a[munderover_js_1.MmlMunderover.prototype.kind] = munderover_js_1.MmlMunderover,
    _a[mmultiscripts_js_1.MmlMmultiscripts.prototype.kind] = mmultiscripts_js_1.MmlMmultiscripts,
    _a[mmultiscripts_js_1.MmlMprescripts.prototype.kind] = mmultiscripts_js_1.MmlMprescripts,
    _a[mmultiscripts_js_1.MmlNone.prototype.kind] = mmultiscripts_js_1.MmlNone,
    _a[mtable_js_1.MmlMtable.prototype.kind] = mtable_js_1.MmlMtable,
    _a[mtr_js_1.MmlMlabeledtr.prototype.kind] = mtr_js_1.MmlMlabeledtr,
    _a[mtr_js_1.MmlMtr.prototype.kind] = mtr_js_1.MmlMtr,
    _a[mtd_js_1.MmlMtd.prototype.kind] = mtd_js_1.MmlMtd,
    _a[maligngroup_js_1.MmlMaligngroup.prototype.kind] = maligngroup_js_1.MmlMaligngroup,
    _a[malignmark_js_1.MmlMalignmark.prototype.kind] = malignmark_js_1.MmlMalignmark,
    _a[mglyph_js_1.MmlMglyph.prototype.kind] = mglyph_js_1.MmlMglyph,
    _a[semantics_js_1.MmlSemantics.prototype.kind] = semantics_js_1.MmlSemantics,
    _a[semantics_js_1.MmlAnnotation.prototype.kind] = semantics_js_1.MmlAnnotation,
    _a[semantics_js_1.MmlAnnotationXML.prototype.kind] = semantics_js_1.MmlAnnotationXML,
    _a[TeXAtom_js_1.TeXAtom.prototype.kind] = TeXAtom_js_1.TeXAtom,
    _a[mathchoice_js_1.MathChoice.prototype.kind] = mathchoice_js_1.MathChoice,
    _a[MmlNode_js_1.TextNode.prototype.kind] = MmlNode_js_1.TextNode,
    _a[MmlNode_js_1.XMLNode.prototype.kind] = MmlNode_js_1.XMLNode,
    _a);
//# sourceMappingURL=MML.js.map

/***/ }),

/***/ 1759:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathMLVisitor = void 0;
var MmlVisitor_js_1 = __webpack_require__(6325);
var MathMLVisitor = (function (_super) {
    __extends(MathMLVisitor, _super);
    function MathMLVisitor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.document = null;
        return _this;
    }
    MathMLVisitor.prototype.visitTree = function (node, document) {
        this.document = document;
        var root = document.createElement('top');
        this.visitNode(node, root);
        this.document = null;
        return root.firstChild;
    };
    MathMLVisitor.prototype.visitTextNode = function (node, parent) {
        parent.appendChild(this.document.createTextNode(node.getText()));
    };
    MathMLVisitor.prototype.visitXMLNode = function (node, parent) {
        parent.appendChild(node.getXML().cloneNode(true));
    };
    MathMLVisitor.prototype.visitInferredMrowNode = function (node, parent) {
        var e_1, _a;
        try {
            for (var _b = __values(node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                this.visitNode(child, parent);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    MathMLVisitor.prototype.visitDefault = function (node, parent) {
        var e_2, _a;
        var mml = this.document.createElement(node.kind);
        this.addAttributes(node, mml);
        try {
            for (var _b = __values(node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                this.visitNode(child, mml);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        parent.appendChild(mml);
    };
    MathMLVisitor.prototype.addAttributes = function (node, mml) {
        var e_3, _a;
        var attributes = node.attributes;
        var names = attributes.getExplicitNames();
        try {
            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_1 = names_1_1.value;
                mml.setAttribute(name_1, attributes.getExplicit(name_1).toString());
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    return MathMLVisitor;
}(MmlVisitor_js_1.MmlVisitor));
exports.MathMLVisitor = MathMLVisitor;
//# sourceMappingURL=MathMLVisitor.js.map

/***/ }),

/***/ 3909:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlFactory = void 0;
var NodeFactory_js_1 = __webpack_require__(7860);
var MML_js_1 = __webpack_require__(6336);
var MmlFactory = (function (_super) {
    __extends(MmlFactory, _super);
    function MmlFactory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlFactory.prototype, "MML", {
        get: function () {
            return this.node;
        },
        enumerable: false,
        configurable: true
    });
    MmlFactory.defaultNodes = MML_js_1.MML;
    return MmlFactory;
}(NodeFactory_js_1.AbstractNodeFactory));
exports.MmlFactory = MmlFactory;
//# sourceMappingURL=MmlFactory.js.map

/***/ }),

/***/ 9007:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.XMLNode = exports.TextNode = exports.AbstractMmlEmptyNode = exports.AbstractMmlBaseNode = exports.AbstractMmlLayoutNode = exports.AbstractMmlTokenNode = exports.AbstractMmlNode = exports.indentAttributes = exports.TEXCLASSNAMES = exports.TEXCLASS = void 0;
var Attributes_js_1 = __webpack_require__(91);
var Node_js_1 = __webpack_require__(4596);
exports.TEXCLASS = {
    ORD: 0,
    OP: 1,
    BIN: 2,
    REL: 3,
    OPEN: 4,
    CLOSE: 5,
    PUNCT: 6,
    INNER: 7,
    VCENTER: 8,
    NONE: -1
};
exports.TEXCLASSNAMES = ['ORD', 'OP', 'BIN', 'REL', 'OPEN', 'CLOSE', 'PUNCT', 'INNER', 'VCENTER'];
var TEXSPACELENGTH = ['', 'thinmathspace', 'mediummathspace', 'thickmathspace'];
var TEXSPACE = [
    [0, -1, 2, 3, 0, 0, 0, 1],
    [-1, -1, 0, 3, 0, 0, 0, 1],
    [2, 2, 0, 0, 2, 0, 0, 2],
    [3, 3, 0, 0, 3, 0, 0, 3],
    [0, 0, 0, 0, 0, 0, 0, 0],
    [0, -1, 2, 3, 0, 0, 0, 1],
    [1, 1, 0, 1, 1, 1, 1, 1],
    [1, -1, 2, 3, 1, 0, 1, 1]
];
exports.indentAttributes = [
    'indentalign', 'indentalignfirst',
    'indentshift', 'indentshiftfirst'
];
var AbstractMmlNode = (function (_super) {
    __extends(AbstractMmlNode, _super);
    function AbstractMmlNode(factory, attributes, children) {
        if (attributes === void 0) { attributes = {}; }
        if (children === void 0) { children = []; }
        var _this = _super.call(this, factory) || this;
        _this.prevClass = null;
        _this.prevLevel = null;
        _this.texclass = null;
        if (_this.arity < 0) {
            _this.childNodes = [factory.create('inferredMrow')];
            _this.childNodes[0].parent = _this;
        }
        _this.setChildren(children);
        _this.attributes = new Attributes_js_1.Attributes(factory.getNodeClass(_this.kind).defaults, factory.getNodeClass('math').defaults);
        _this.attributes.setList(attributes);
        return _this;
    }
    AbstractMmlNode.prototype.copy = function (keepIds) {
        var e_1, _a, e_2, _b;
        if (keepIds === void 0) { keepIds = false; }
        var node = this.factory.create(this.kind);
        node.properties = __assign({}, this.properties);
        if (this.attributes) {
            var attributes = this.attributes.getAllAttributes();
            try {
                for (var _c = __values(Object.keys(attributes)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var name_1 = _d.value;
                    if (name_1 !== 'id' || keepIds) {
                        node.attributes.set(name_1, attributes[name_1]);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        if (this.childNodes && this.childNodes.length) {
            var children = this.childNodes;
            if (children.length === 1 && children[0].isInferred) {
                children = children[0].childNodes;
            }
            try {
                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
                    var child = children_1_1.value;
                    if (child) {
                        node.appendChild(child.copy());
                    }
                    else {
                        node.childNodes.push(null);
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (children_1_1 && !children_1_1.done && (_b = children_1.return)) _b.call(children_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        return node;
    };
    Object.defineProperty(AbstractMmlNode.prototype, "texClass", {
        get: function () {
            return this.texclass;
        },
        set: function (texClass) {
            this.texclass = texClass;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "isToken", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "isEmbellished", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "isSpacelike", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "linebreakContainer", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "hasNewLine", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "arity", {
        get: function () {
            return Infinity;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "isInferred", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "Parent", {
        get: function () {
            var parent = this.parent;
            while (parent && parent.notParent) {
                parent = parent.Parent;
            }
            return parent;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlNode.prototype, "notParent", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    AbstractMmlNode.prototype.setChildren = function (children) {
        if (this.arity < 0) {
            return this.childNodes[0].setChildren(children);
        }
        return _super.prototype.setChildren.call(this, children);
    };
    AbstractMmlNode.prototype.appendChild = function (child) {
        var e_3, _a;
        var _this = this;
        if (this.arity < 0) {
            this.childNodes[0].appendChild(child);
            return child;
        }
        if (child.isInferred) {
            if (this.arity === Infinity) {
                child.childNodes.forEach(function (node) { return _super.prototype.appendChild.call(_this, node); });
                return child;
            }
            var original = child;
            child = this.factory.create('mrow');
            child.setChildren(original.childNodes);
            child.attributes = original.attributes;
            try {
                for (var _b = __values(original.getPropertyNames()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var name_2 = _c.value;
                    child.setProperty(name_2, original.getProperty(name_2));
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        return _super.prototype.appendChild.call(this, child);
    };
    AbstractMmlNode.prototype.replaceChild = function (newChild, oldChild) {
        if (this.arity < 0) {
            this.childNodes[0].replaceChild(newChild, oldChild);
            return newChild;
        }
        return _super.prototype.replaceChild.call(this, newChild, oldChild);
    };
    AbstractMmlNode.prototype.core = function () {
        return this;
    };
    AbstractMmlNode.prototype.coreMO = function () {
        return this;
    };
    AbstractMmlNode.prototype.coreIndex = function () {
        return 0;
    };
    AbstractMmlNode.prototype.childPosition = function () {
        var e_4, _a;
        var child = this;
        var parent = child.parent;
        while (parent && parent.notParent) {
            child = parent;
            parent = parent.parent;
        }
        if (parent) {
            var i = 0;
            try {
                for (var _b = __values(parent.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var node = _c.value;
                    if (node === child) {
                        return i;
                    }
                    i++;
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        return null;
    };
    AbstractMmlNode.prototype.setTeXclass = function (prev) {
        this.getPrevClass(prev);
        return (this.texClass != null ? this : prev);
    };
    AbstractMmlNode.prototype.updateTeXclass = function (core) {
        if (core) {
            this.prevClass = core.prevClass;
            this.prevLevel = core.prevLevel;
            core.prevClass = core.prevLevel = null;
            this.texClass = core.texClass;
        }
    };
    AbstractMmlNode.prototype.getPrevClass = function (prev) {
        if (prev) {
            this.prevClass = prev.texClass;
            this.prevLevel = prev.attributes.get('scriptlevel');
        }
    };
    AbstractMmlNode.prototype.texSpacing = function () {
        var prevClass = (this.prevClass != null ? this.prevClass : exports.TEXCLASS.NONE);
        var texClass = this.texClass || exports.TEXCLASS.ORD;
        if (prevClass === exports.TEXCLASS.NONE || texClass === exports.TEXCLASS.NONE) {
            return '';
        }
        if (prevClass === exports.TEXCLASS.VCENTER) {
            prevClass = exports.TEXCLASS.ORD;
        }
        if (texClass === exports.TEXCLASS.VCENTER) {
            texClass = exports.TEXCLASS.ORD;
        }
        var space = TEXSPACE[prevClass][texClass];
        if ((this.prevLevel > 0 || this.attributes.get('scriptlevel') > 0) && space >= 0) {
            return '';
        }
        return TEXSPACELENGTH[Math.abs(space)];
    };
    AbstractMmlNode.prototype.hasSpacingAttributes = function () {
        return this.isEmbellished && this.coreMO().hasSpacingAttributes();
    };
    AbstractMmlNode.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
        var e_5, _a;
        if (attributes === void 0) { attributes = {}; }
        if (display === void 0) { display = false; }
        if (level === void 0) { level = 0; }
        if (prime === void 0) { prime = false; }
        var defaults = this.attributes.getAllDefaults();
        try {
            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (defaults.hasOwnProperty(key) || AbstractMmlNode.alwaysInherit.hasOwnProperty(key)) {
                    var _d = __read(attributes[key], 2), node = _d[0], value = _d[1];
                    var noinherit = (AbstractMmlNode.noInherit[node] || {})[this.kind] || {};
                    if (!noinherit[key]) {
                        this.attributes.setInherited(key, value);
                    }
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
        var displaystyle = this.attributes.getExplicit('displaystyle');
        if (displaystyle === undefined) {
            this.attributes.setInherited('displaystyle', display);
        }
        var scriptlevel = this.attributes.getExplicit('scriptlevel');
        if (scriptlevel === undefined) {
            this.attributes.setInherited('scriptlevel', level);
        }
        if (prime) {
            this.setProperty('texprimestyle', prime);
        }
        var arity = this.arity;
        if (arity >= 0 && arity !== Infinity && ((arity === 1 && this.childNodes.length === 0) ||
            (arity !== 1 && this.childNodes.length !== arity))) {
            if (arity < this.childNodes.length) {
                this.childNodes = this.childNodes.slice(0, arity);
            }
            else {
                while (this.childNodes.length < arity) {
                    this.appendChild(this.factory.create('mrow'));
                }
            }
        }
        this.setChildInheritedAttributes(attributes, display, level, prime);
    };
    AbstractMmlNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        var e_6, _a;
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.setInheritedAttributes(attributes, display, level, prime);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_6) throw e_6.error; }
        }
    };
    AbstractMmlNode.prototype.addInheritedAttributes = function (current, attributes) {
        var e_7, _a;
        var updated = __assign({}, current);
        try {
            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_3 = _c.value;
                if (name_3 !== 'displaystyle' && name_3 !== 'scriptlevel' && name_3 !== 'style') {
                    updated[name_3] = [this.kind, attributes[name_3]];
                }
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
        return updated;
    };
    AbstractMmlNode.prototype.inheritAttributesFrom = function (node) {
        var attributes = node.attributes;
        var display = attributes.get('displaystyle');
        var scriptlevel = attributes.get('scriptlevel');
        var defaults = (!attributes.isSet('mathsize') ? {} : {
            mathsize: ['math', attributes.get('mathsize')]
        });
        var prime = node.getProperty('texprimestyle') || false;
        this.setInheritedAttributes(defaults, display, scriptlevel, prime);
    };
    AbstractMmlNode.prototype.verifyTree = function (options) {
        if (options === void 0) { options = null; }
        if (options === null) {
            return;
        }
        this.verifyAttributes(options);
        var arity = this.arity;
        if (options['checkArity']) {
            if (arity >= 0 && arity !== Infinity &&
                ((arity === 1 && this.childNodes.length === 0) ||
                    (arity !== 1 && this.childNodes.length !== arity))) {
                this.mError('Wrong number of children for "' + this.kind + '" node', options, true);
            }
        }
        this.verifyChildren(options);
    };
    AbstractMmlNode.prototype.verifyAttributes = function (options) {
        var e_8, _a;
        if (options['checkAttributes']) {
            var attributes = this.attributes;
            var bad = [];
            try {
                for (var _b = __values(attributes.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var name_4 = _c.value;
                    if (name_4.substr(0, 5) !== 'data-' && attributes.getDefault(name_4) === undefined &&
                        !name_4.match(/^(?:class|style|id|(?:xlink:)?href)$/)) {
                        bad.push(name_4);
                    }
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
            if (bad.length) {
                this.mError('Unknown attributes for ' + this.kind + ' node: ' + bad.join(', '), options);
            }
        }
    };
    AbstractMmlNode.prototype.verifyChildren = function (options) {
        var e_9, _a;
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.verifyTree(options);
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_9) throw e_9.error; }
        }
    };
    AbstractMmlNode.prototype.mError = function (message, options, short) {
        if (short === void 0) { short = false; }
        if (this.parent && this.parent.isKind('merror')) {
            return null;
        }
        var merror = this.factory.create('merror');
        merror.attributes.set('data-mjx-message', message);
        if (options['fullErrors'] || short) {
            var mtext = this.factory.create('mtext');
            var text = this.factory.create('text');
            text.setText(options['fullErrors'] ? message : this.kind);
            mtext.appendChild(text);
            merror.appendChild(mtext);
            this.parent.replaceChild(merror, this);
        }
        else {
            this.parent.replaceChild(merror, this);
            merror.appendChild(this);
        }
        return merror;
    };
    AbstractMmlNode.defaults = {
        mathbackground: Attributes_js_1.INHERIT,
        mathcolor: Attributes_js_1.INHERIT,
        mathsize: Attributes_js_1.INHERIT,
        dir: Attributes_js_1.INHERIT
    };
    AbstractMmlNode.noInherit = {
        mstyle: {
            mpadded: { width: true, height: true, depth: true, lspace: true, voffset: true },
            mtable: { width: true, height: true, depth: true, align: true }
        },
        maligngroup: {
            mrow: { groupalign: true },
            mtable: { groupalign: true }
        }
    };
    AbstractMmlNode.alwaysInherit = {
        scriptminsize: true,
        scriptsizemultiplier: true
    };
    AbstractMmlNode.verifyDefaults = {
        checkArity: true,
        checkAttributes: false,
        fullErrors: false,
        fixMmultiscripts: true,
        fixMtables: true
    };
    return AbstractMmlNode;
}(Node_js_1.AbstractNode));
exports.AbstractMmlNode = AbstractMmlNode;
var AbstractMmlTokenNode = (function (_super) {
    __extends(AbstractMmlTokenNode, _super);
    function AbstractMmlTokenNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(AbstractMmlTokenNode.prototype, "isToken", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    AbstractMmlTokenNode.prototype.getText = function () {
        var e_10, _a;
        var text = '';
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child instanceof TextNode) {
                    text += child.getText();
                }
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_10) throw e_10.error; }
        }
        return text;
    };
    AbstractMmlTokenNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        var e_11, _a;
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child instanceof AbstractMmlNode) {
                    child.setInheritedAttributes(attributes, display, level, prime);
                }
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_11) throw e_11.error; }
        }
    };
    AbstractMmlTokenNode.prototype.walkTree = function (func, data) {
        var e_12, _a;
        func(this, data);
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child instanceof AbstractMmlNode) {
                    child.walkTree(func, data);
                }
            }
        }
        catch (e_12_1) { e_12 = { error: e_12_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_12) throw e_12.error; }
        }
        return data;
    };
    AbstractMmlTokenNode.defaults = __assign(__assign({}, AbstractMmlNode.defaults), { mathvariant: 'normal', mathsize: Attributes_js_1.INHERIT });
    return AbstractMmlTokenNode;
}(AbstractMmlNode));
exports.AbstractMmlTokenNode = AbstractMmlTokenNode;
var AbstractMmlLayoutNode = (function (_super) {
    __extends(AbstractMmlLayoutNode, _super);
    function AbstractMmlLayoutNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(AbstractMmlLayoutNode.prototype, "isSpacelike", {
        get: function () {
            return this.childNodes[0].isSpacelike;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlLayoutNode.prototype, "isEmbellished", {
        get: function () {
            return this.childNodes[0].isEmbellished;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlLayoutNode.prototype, "arity", {
        get: function () {
            return -1;
        },
        enumerable: false,
        configurable: true
    });
    AbstractMmlLayoutNode.prototype.core = function () {
        return this.childNodes[0];
    };
    AbstractMmlLayoutNode.prototype.coreMO = function () {
        return this.childNodes[0].coreMO();
    };
    AbstractMmlLayoutNode.prototype.setTeXclass = function (prev) {
        prev = this.childNodes[0].setTeXclass(prev);
        this.updateTeXclass(this.childNodes[0]);
        return prev;
    };
    AbstractMmlLayoutNode.defaults = AbstractMmlNode.defaults;
    return AbstractMmlLayoutNode;
}(AbstractMmlNode));
exports.AbstractMmlLayoutNode = AbstractMmlLayoutNode;
var AbstractMmlBaseNode = (function (_super) {
    __extends(AbstractMmlBaseNode, _super);
    function AbstractMmlBaseNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(AbstractMmlBaseNode.prototype, "isEmbellished", {
        get: function () {
            return this.childNodes[0].isEmbellished;
        },
        enumerable: false,
        configurable: true
    });
    AbstractMmlBaseNode.prototype.core = function () {
        return this.childNodes[0];
    };
    AbstractMmlBaseNode.prototype.coreMO = function () {
        return this.childNodes[0].coreMO();
    };
    AbstractMmlBaseNode.prototype.setTeXclass = function (prev) {
        var e_13, _a;
        this.getPrevClass(prev);
        this.texClass = exports.TEXCLASS.ORD;
        var base = this.childNodes[0];
        if (base) {
            if (this.isEmbellished || base.isKind('mi')) {
                prev = base.setTeXclass(prev);
                this.updateTeXclass(this.core());
            }
            else {
                base.setTeXclass(null);
                prev = this;
            }
        }
        else {
            prev = this;
        }
        try {
            for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child) {
                    child.setTeXclass(null);
                }
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_13) throw e_13.error; }
        }
        return prev;
    };
    AbstractMmlBaseNode.defaults = AbstractMmlNode.defaults;
    return AbstractMmlBaseNode;
}(AbstractMmlNode));
exports.AbstractMmlBaseNode = AbstractMmlBaseNode;
var AbstractMmlEmptyNode = (function (_super) {
    __extends(AbstractMmlEmptyNode, _super);
    function AbstractMmlEmptyNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "isToken", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "isEmbellished", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "isSpacelike", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "linebreakContainer", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "hasNewLine", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "arity", {
        get: function () {
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "isInferred", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "notParent", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "Parent", {
        get: function () {
            return this.parent;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "texClass", {
        get: function () {
            return exports.TEXCLASS.NONE;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "prevClass", {
        get: function () {
            return exports.TEXCLASS.NONE;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "prevLevel", {
        get: function () {
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    AbstractMmlEmptyNode.prototype.hasSpacingAttributes = function () {
        return false;
    };
    Object.defineProperty(AbstractMmlEmptyNode.prototype, "attributes", {
        get: function () {
            return null;
        },
        enumerable: false,
        configurable: true
    });
    AbstractMmlEmptyNode.prototype.core = function () {
        return this;
    };
    AbstractMmlEmptyNode.prototype.coreMO = function () {
        return this;
    };
    AbstractMmlEmptyNode.prototype.coreIndex = function () {
        return 0;
    };
    AbstractMmlEmptyNode.prototype.childPosition = function () {
        return 0;
    };
    AbstractMmlEmptyNode.prototype.setTeXclass = function (prev) {
        return prev;
    };
    AbstractMmlEmptyNode.prototype.texSpacing = function () {
        return '';
    };
    AbstractMmlEmptyNode.prototype.setInheritedAttributes = function (_attributes, _display, _level, _prime) { };
    AbstractMmlEmptyNode.prototype.inheritAttributesFrom = function (_node) { };
    AbstractMmlEmptyNode.prototype.verifyTree = function (_options) { };
    AbstractMmlEmptyNode.prototype.mError = function (_message, _options, _short) {
        if (_short === void 0) { _short = false; }
        return null;
    };
    return AbstractMmlEmptyNode;
}(Node_js_1.AbstractEmptyNode));
exports.AbstractMmlEmptyNode = AbstractMmlEmptyNode;
var TextNode = (function (_super) {
    __extends(TextNode, _super);
    function TextNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.text = '';
        return _this;
    }
    Object.defineProperty(TextNode.prototype, "kind", {
        get: function () {
            return 'text';
        },
        enumerable: false,
        configurable: true
    });
    TextNode.prototype.getText = function () {
        return this.text;
    };
    TextNode.prototype.setText = function (text) {
        this.text = text;
        return this;
    };
    TextNode.prototype.copy = function () {
        return this.factory.create(this.kind).setText(this.getText());
    };
    TextNode.prototype.toString = function () {
        return this.text;
    };
    return TextNode;
}(AbstractMmlEmptyNode));
exports.TextNode = TextNode;
var XMLNode = (function (_super) {
    __extends(XMLNode, _super);
    function XMLNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.xml = null;
        _this.adaptor = null;
        return _this;
    }
    Object.defineProperty(XMLNode.prototype, "kind", {
        get: function () {
            return 'XML';
        },
        enumerable: false,
        configurable: true
    });
    XMLNode.prototype.getXML = function () {
        return this.xml;
    };
    XMLNode.prototype.setXML = function (xml, adaptor) {
        if (adaptor === void 0) { adaptor = null; }
        this.xml = xml;
        this.adaptor = adaptor;
        return this;
    };
    XMLNode.prototype.getSerializedXML = function () {
        return this.adaptor.serializeXML(this.xml);
    };
    XMLNode.prototype.copy = function () {
        return this.factory.create(this.kind).setXML(this.adaptor.clone(this.xml));
    };
    XMLNode.prototype.toString = function () {
        return 'XML data';
    };
    return XMLNode;
}(AbstractMmlEmptyNode));
exports.XMLNode = XMLNode;
//# sourceMappingURL=MmlNode.js.map

/***/ }),

/***/ 3948:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TeXAtom = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var mo_js_1 = __webpack_require__(2756);
var TeXAtom = (function (_super) {
    __extends(TeXAtom, _super);
    function TeXAtom(factory, attributes, children) {
        var _this = _super.call(this, factory, attributes, children) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        _this.setProperty('texClass', _this.texClass);
        return _this;
    }
    Object.defineProperty(TeXAtom.prototype, "kind", {
        get: function () {
            return 'TeXAtom';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TeXAtom.prototype, "arity", {
        get: function () {
            return -1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TeXAtom.prototype, "notParent", {
        get: function () {
            return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;
        },
        enumerable: false,
        configurable: true
    });
    TeXAtom.prototype.setTeXclass = function (prev) {
        this.childNodes[0].setTeXclass(null);
        return this.adjustTeXclass(prev);
    };
    TeXAtom.prototype.adjustTeXclass = function (prev) {
        return prev;
    };
    TeXAtom.defaults = __assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults);
    return TeXAtom;
}(MmlNode_js_1.AbstractMmlBaseNode));
exports.TeXAtom = TeXAtom;
TeXAtom.prototype.adjustTeXclass = mo_js_1.MmlMo.prototype.adjustTeXclass;
//# sourceMappingURL=TeXAtom.js.map

/***/ }),

/***/ 9145:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMaction = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMaction = (function (_super) {
    __extends(MmlMaction, _super);
    function MmlMaction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMaction.prototype, "kind", {
        get: function () {
            return 'maction';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMaction.prototype, "arity", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMaction.prototype, "selected", {
        get: function () {
            var selection = this.attributes.get('selection');
            var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;
            return this.childNodes[i] || this.factory.create('mrow');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMaction.prototype, "isEmbellished", {
        get: function () {
            return this.selected.isEmbellished;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMaction.prototype, "isSpacelike", {
        get: function () {
            return this.selected.isSpacelike;
        },
        enumerable: false,
        configurable: true
    });
    MmlMaction.prototype.core = function () {
        return this.selected.core();
    };
    MmlMaction.prototype.coreMO = function () {
        return this.selected.coreMO();
    };
    MmlMaction.prototype.verifyAttributes = function (options) {
        _super.prototype.verifyAttributes.call(this, options);
        if (this.attributes.get('actiontype') !== 'toggle' &&
            this.attributes.getExplicit('selection') !== undefined) {
            var attributes = this.attributes.getAllAttributes();
            delete attributes.selection;
        }
    };
    MmlMaction.prototype.setTeXclass = function (prev) {
        if (this.attributes.get('actiontype') === 'tooltip' && this.childNodes[1]) {
            this.childNodes[1].setTeXclass(null);
        }
        var selected = this.selected;
        prev = selected.setTeXclass(prev);
        this.updateTeXclass(selected);
        return prev;
    };
    MmlMaction.prototype.nextToggleSelection = function () {
        var selection = Math.max(1, this.attributes.get('selection') + 1);
        if (selection > this.childNodes.length) {
            selection = 1;
        }
        this.attributes.set('selection', selection);
    };
    MmlMaction.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { actiontype: 'toggle', selection: 1 });
    return MmlMaction;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMaction = MmlMaction;
//# sourceMappingURL=maction.js.map

/***/ }),

/***/ 142:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMaligngroup = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var Attributes_js_1 = __webpack_require__(91);
var MmlMaligngroup = (function (_super) {
    __extends(MmlMaligngroup, _super);
    function MmlMaligngroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMaligngroup.prototype, "kind", {
        get: function () {
            return 'maligngroup';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMaligngroup.prototype, "isSpacelike", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMaligngroup.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());
        _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
    };
    MmlMaligngroup.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), { groupalign: Attributes_js_1.INHERIT });
    return MmlMaligngroup;
}(MmlNode_js_1.AbstractMmlLayoutNode));
exports.MmlMaligngroup = MmlMaligngroup;
//# sourceMappingURL=maligngroup.js.map

/***/ }),

/***/ 7590:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMalignmark = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMalignmark = (function (_super) {
    __extends(MmlMalignmark, _super);
    function MmlMalignmark() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMalignmark.prototype, "kind", {
        get: function () {
            return 'malignmark';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMalignmark.prototype, "arity", {
        get: function () {
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMalignmark.prototype, "isSpacelike", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMalignmark.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { edge: 'left' });
    return MmlMalignmark;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMalignmark = MmlMalignmark;
//# sourceMappingURL=malignmark.js.map

/***/ }),

/***/ 3233:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMath = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMath = (function (_super) {
    __extends(MmlMath, _super);
    function MmlMath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMath.prototype, "kind", {
        get: function () {
            return 'math';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMath.prototype, "linebreakContainer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMath.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        if (this.attributes.get('mode') === 'display') {
            this.attributes.setInherited('display', 'block');
        }
        attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());
        display = (!!this.attributes.get('displaystyle') ||
            (!this.attributes.get('displaystyle') && this.attributes.get('display') === 'block'));
        this.attributes.setInherited('displaystyle', display);
        level = (this.attributes.get('scriptlevel') ||
            this.constructor.defaults['scriptlevel']);
        _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
    };
    MmlMath.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), { mathvariant: 'normal', mathsize: 'normal', mathcolor: '', mathbackground: 'transparent', dir: 'ltr', scriptlevel: 0, displaystyle: false, display: 'inline', maxwidth: '', overflow: 'linebreak', altimg: '', 'altimg-width': '', 'altimg-height': '', 'altimg-valign': '', alttext: '', cdgroup: '', scriptsizemultiplier: 1 / Math.sqrt(2), scriptminsize: '8px', infixlinebreakstyle: 'before', lineleading: '1ex', linebreakmultchar: '\u2062', indentshift: 'auto', indentalign: 'auto', indenttarget: '', indentalignfirst: 'indentalign', indentshiftfirst: 'indentshift', indentalignlast: 'indentalign', indentshiftlast: 'indentshift' });
    return MmlMath;
}(MmlNode_js_1.AbstractMmlLayoutNode));
exports.MmlMath = MmlMath;
//# sourceMappingURL=math.js.map

/***/ }),

/***/ 1334:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathChoice = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MathChoice = (function (_super) {
    __extends(MathChoice, _super);
    function MathChoice() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MathChoice.prototype, "kind", {
        get: function () {
            return 'MathChoice';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MathChoice.prototype, "arity", {
        get: function () {
            return 4;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MathChoice.prototype, "notParent", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MathChoice.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
        var selection = (display ? 0 : Math.max(0, Math.min(level, 2)) + 1);
        var child = this.childNodes[selection] || this.factory.create('mrow');
        this.parent.replaceChild(child, this);
        child.setInheritedAttributes(attributes, display, level, prime);
    };
    MathChoice.defaults = __assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults);
    return MathChoice;
}(MmlNode_js_1.AbstractMmlBaseNode));
exports.MathChoice = MathChoice;
//# sourceMappingURL=mathchoice.js.map

/***/ }),

/***/ 6661:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMenclose = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMenclose = (function (_super) {
    __extends(MmlMenclose, _super);
    function MmlMenclose() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMenclose.prototype, "kind", {
        get: function () {
            return 'menclose';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMenclose.prototype, "arity", {
        get: function () {
            return -1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMenclose.prototype, "linebreakContininer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMenclose.prototype.setTeXclass = function (prev) {
        prev = this.childNodes[0].setTeXclass(prev);
        this.updateTeXclass(this.childNodes[0]);
        return prev;
    };
    MmlMenclose.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { notation: 'longdiv' });
    return MmlMenclose;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMenclose = MmlMenclose;
//# sourceMappingURL=menclose.js.map

/***/ }),

/***/ 1581:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMerror = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMerror = (function (_super) {
    __extends(MmlMerror, _super);
    function MmlMerror() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMerror.prototype, "kind", {
        get: function () {
            return 'merror';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMerror.prototype, "arity", {
        get: function () {
            return -1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMerror.prototype, "linebreakContainer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMerror.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
    return MmlMerror;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMerror = MmlMerror;
//# sourceMappingURL=merror.js.map

/***/ }),

/***/ 5410:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMfenced = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMfenced = (function (_super) {
    __extends(MmlMfenced, _super);
    function MmlMfenced() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.INNER;
        _this.separators = [];
        _this.open = null;
        _this.close = null;
        return _this;
    }
    Object.defineProperty(MmlMfenced.prototype, "kind", {
        get: function () {
            return 'mfenced';
        },
        enumerable: false,
        configurable: true
    });
    MmlMfenced.prototype.setTeXclass = function (prev) {
        this.getPrevClass(prev);
        if (this.open) {
            prev = this.open.setTeXclass(prev);
        }
        if (this.childNodes[0]) {
            prev = this.childNodes[0].setTeXclass(prev);
        }
        for (var i = 1, m = this.childNodes.length; i < m; i++) {
            if (this.separators[i - 1]) {
                prev = this.separators[i - 1].setTeXclass(prev);
            }
            if (this.childNodes[i]) {
                prev = this.childNodes[i].setTeXclass(prev);
            }
        }
        if (this.close) {
            prev = this.close.setTeXclass(prev);
        }
        this.updateTeXclass(this.open);
        return prev;
    };
    MmlMfenced.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        var e_1, _a;
        this.addFakeNodes();
        try {
            for (var _b = __values([this.open, this.close].concat(this.separators)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child) {
                    child.setInheritedAttributes(attributes, display, level, prime);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
    };
    MmlMfenced.prototype.addFakeNodes = function () {
        var e_2, _a;
        var _b = this.attributes.getList('open', 'close', 'separators'), open = _b.open, close = _b.close, separators = _b.separators;
        open = open.replace(/[ \t\n\r]/g, '');
        close = close.replace(/[ \t\n\r]/g, '');
        separators = separators.replace(/[ \t\n\r]/g, '');
        if (open) {
            this.open = this.fakeNode(open, { fence: true, form: 'prefix' }, MmlNode_js_1.TEXCLASS.OPEN);
        }
        if (separators) {
            while (separators.length < this.childNodes.length - 1) {
                separators += separators.charAt(separators.length - 1);
            }
            var i = 0;
            try {
                for (var _c = __values(this.childNodes.slice(1)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var child = _d.value;
                    if (child) {
                        this.separators.push(this.fakeNode(separators.charAt(i++)));
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (close) {
            this.close = this.fakeNode(close, { fence: true, form: 'postfix' }, MmlNode_js_1.TEXCLASS.CLOSE);
        }
    };
    MmlMfenced.prototype.fakeNode = function (c, properties, texClass) {
        if (properties === void 0) { properties = {}; }
        if (texClass === void 0) { texClass = null; }
        var text = this.factory.create('text').setText(c);
        var node = this.factory.create('mo', properties, [text]);
        node.texClass = texClass;
        node.parent = this;
        return node;
    };
    MmlMfenced.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { open: '(', close: ')', separators: ',' });
    return MmlMfenced;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMfenced = MmlMfenced;
//# sourceMappingURL=mfenced.js.map

/***/ }),

/***/ 6850:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMfrac = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMfrac = (function (_super) {
    __extends(MmlMfrac, _super);
    function MmlMfrac() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMfrac.prototype, "kind", {
        get: function () {
            return 'mfrac';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMfrac.prototype, "arity", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMfrac.prototype, "linebreakContainer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMfrac.prototype.setTeXclass = function (prev) {
        var e_1, _a;
        this.getPrevClass(prev);
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.setTeXclass(null);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return this;
    };
    MmlMfrac.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        if (!display || level > 0) {
            level++;
        }
        this.childNodes[0].setInheritedAttributes(attributes, false, level, prime);
        this.childNodes[1].setInheritedAttributes(attributes, false, level, true);
    };
    MmlMfrac.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { linethickness: 'medium', numalign: 'center', denomalign: 'center', bevelled: false });
    return MmlMfrac;
}(MmlNode_js_1.AbstractMmlBaseNode));
exports.MmlMfrac = MmlMfrac;
//# sourceMappingURL=mfrac.js.map

/***/ }),

/***/ 3985:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMglyph = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMglyph = (function (_super) {
    __extends(MmlMglyph, _super);
    function MmlMglyph() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMglyph.prototype, "kind", {
        get: function () {
            return 'mglyph';
        },
        enumerable: false,
        configurable: true
    });
    MmlMglyph.prototype.verifyAttributes = function (options) {
        var _a = this.attributes.getList('src', 'fontfamily', 'index'), src = _a.src, fontfamily = _a.fontfamily, index = _a.index;
        if (src === '' && (fontfamily === '' || index === '')) {
            this.mError('mglyph must have either src or fontfamily and index attributes', options, true);
        }
        else {
            _super.prototype.verifyAttributes.call(this, options);
        }
    };
    MmlMglyph.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { alt: '', src: '', index: '', width: 'auto', height: 'auto', valign: '0em' });
    return MmlMglyph;
}(MmlNode_js_1.AbstractMmlTokenNode));
exports.MmlMglyph = MmlMglyph;
//# sourceMappingURL=mglyph.js.map

/***/ }),

/***/ 450:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMi = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMi = (function (_super) {
    __extends(MmlMi, _super);
    function MmlMi() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMi.prototype, "kind", {
        get: function () {
            return 'mi';
        },
        enumerable: false,
        configurable: true
    });
    MmlMi.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
        if (attributes === void 0) { attributes = {}; }
        if (display === void 0) { display = false; }
        if (level === void 0) { level = 0; }
        if (prime === void 0) { prime = false; }
        _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);
        var text = this.getText();
        if (text.match(MmlMi.singleCharacter) && !attributes.mathvariant) {
            this.attributes.setInherited('mathvariant', 'italic');
        }
    };
    MmlMi.prototype.setTeXclass = function (prev) {
        this.getPrevClass(prev);
        var name = this.getText();
        if (name.length > 1 && name.match(MmlMi.operatorName) &&
            this.attributes.get('mathvariant') === 'normal' &&
            this.getProperty('autoOP') === undefined &&
            this.getProperty('texClass') === undefined) {
            this.texClass = MmlNode_js_1.TEXCLASS.OP;
            this.setProperty('autoOP', true);
        }
        return this;
    };
    MmlMi.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
    MmlMi.operatorName = /^[a-z][a-z0-9]*$/i;
    MmlMi.singleCharacter = /^[\uD800-\uDBFF]?.[\u0300-\u036F\u1AB0-\u1ABE\u1DC0-\u1DFF\u20D0-\u20EF]*$/;
    return MmlMi;
}(MmlNode_js_1.AbstractMmlTokenNode));
exports.MmlMi = MmlMi;
//# sourceMappingURL=mi.js.map

/***/ }),

/***/ 6405:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlNone = exports.MmlMprescripts = exports.MmlMmultiscripts = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var msubsup_js_1 = __webpack_require__(4461);
var MmlMmultiscripts = (function (_super) {
    __extends(MmlMmultiscripts, _super);
    function MmlMmultiscripts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMmultiscripts.prototype, "kind", {
        get: function () {
            return 'mmultiscripts';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMmultiscripts.prototype, "arity", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    MmlMmultiscripts.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);
        var prescripts = false;
        for (var i = 1, n = 0; i < this.childNodes.length; i++) {
            var child = this.childNodes[i];
            if (child.isKind('mprescripts')) {
                if (!prescripts) {
                    prescripts = true;
                    if (i % 2 === 0) {
                        var mrow = this.factory.create('mrow');
                        this.childNodes.splice(i, 0, mrow);
                        mrow.parent = this;
                        i++;
                    }
                }
            }
            else {
                var primestyle = prime || (n % 2 === 0);
                child.setInheritedAttributes(attributes, false, level + 1, primestyle);
                n++;
            }
        }
        if (this.childNodes.length % 2 === (prescripts ? 1 : 0)) {
            this.appendChild(this.factory.create('mrow'));
            this.childNodes[this.childNodes.length - 1].setInheritedAttributes(attributes, false, level + 1, prime);
        }
    };
    MmlMmultiscripts.prototype.verifyChildren = function (options) {
        var prescripts = false;
        var fix = options['fixMmultiscripts'];
        for (var i = 0; i < this.childNodes.length; i++) {
            var child = this.childNodes[i];
            if (child.isKind('mprescripts')) {
                if (prescripts) {
                    child.mError(child.kind + ' can only appear once in ' + this.kind, options, true);
                }
                else {
                    prescripts = true;
                    if (i % 2 === 0 && !fix) {
                        this.mError('There must be an equal number of prescripts of each type', options);
                    }
                }
            }
        }
        if (this.childNodes.length % 2 === (prescripts ? 1 : 0) && !fix) {
            this.mError('There must be an equal number of scripts of each type', options);
        }
        _super.prototype.verifyChildren.call(this, options);
    };
    MmlMmultiscripts.defaults = __assign({}, msubsup_js_1.MmlMsubsup.defaults);
    return MmlMmultiscripts;
}(msubsup_js_1.MmlMsubsup));
exports.MmlMmultiscripts = MmlMmultiscripts;
var MmlMprescripts = (function (_super) {
    __extends(MmlMprescripts, _super);
    function MmlMprescripts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMprescripts.prototype, "kind", {
        get: function () {
            return 'mprescripts';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMprescripts.prototype, "arity", {
        get: function () {
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    MmlMprescripts.prototype.verifyTree = function (options) {
        _super.prototype.verifyTree.call(this, options);
        if (this.parent && !this.parent.isKind('mmultiscripts')) {
            this.mError(this.kind + ' must be a child of mmultiscripts', options, true);
        }
    };
    MmlMprescripts.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
    return MmlMprescripts;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMprescripts = MmlMprescripts;
var MmlNone = (function (_super) {
    __extends(MmlNone, _super);
    function MmlNone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlNone.prototype, "kind", {
        get: function () {
            return 'none';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlNone.prototype, "arity", {
        get: function () {
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    MmlNone.prototype.verifyTree = function (options) {
        _super.prototype.verifyTree.call(this, options);
        if (this.parent && !this.parent.isKind('mmultiscripts')) {
            this.mError(this.kind + ' must be a child of mmultiscripts', options, true);
        }
    };
    MmlNone.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
    return MmlNone;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlNone = MmlNone;
//# sourceMappingURL=mmultiscripts.js.map

/***/ }),

/***/ 3050:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMn = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMn = (function (_super) {
    __extends(MmlMn, _super);
    function MmlMn() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMn.prototype, "kind", {
        get: function () {
            return 'mn';
        },
        enumerable: false,
        configurable: true
    });
    MmlMn.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
    return MmlMn;
}(MmlNode_js_1.AbstractMmlTokenNode));
exports.MmlMn = MmlMn;
//# sourceMappingURL=mn.js.map

/***/ }),

/***/ 2756:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMo = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var OperatorDictionary_js_1 = __webpack_require__(4082);
var string_js_1 = __webpack_require__(505);
var MmlMo = (function (_super) {
    __extends(MmlMo, _super);
    function MmlMo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._texClass = null;
        _this.lspace = 5 / 18;
        _this.rspace = 5 / 18;
        return _this;
    }
    Object.defineProperty(MmlMo.prototype, "texClass", {
        get: function () {
            if (this._texClass === null) {
                var mo = this.getText();
                var _a = __read(this.handleExplicitForm(this.getForms()), 3), form1 = _a[0], form2 = _a[1], form3 = _a[2];
                var OPTABLE_1 = this.constructor.OPTABLE;
                var def = OPTABLE_1[form1][mo] || OPTABLE_1[form2][mo] || OPTABLE_1[form3][mo];
                return def ? def[2] : MmlNode_js_1.TEXCLASS.REL;
            }
            return this._texClass;
        },
        set: function (value) {
            this._texClass = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMo.prototype, "kind", {
        get: function () {
            return 'mo';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMo.prototype, "isEmbellished", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMo.prototype, "hasNewLine", {
        get: function () {
            return this.attributes.get('linebreak') === 'newline';
        },
        enumerable: false,
        configurable: true
    });
    MmlMo.prototype.coreParent = function () {
        var embellished = this;
        var parent = this;
        var math = this.factory.getNodeClass('math');
        while (parent && parent.isEmbellished && parent.coreMO() === this && !(parent instanceof math)) {
            embellished = parent;
            parent = parent.parent;
        }
        return embellished;
    };
    MmlMo.prototype.coreText = function (parent) {
        if (!parent) {
            return '';
        }
        if (parent.isEmbellished) {
            return parent.coreMO().getText();
        }
        while ((((parent.isKind('mrow') ||
            (parent.isKind('TeXAtom') && parent.texClass !== MmlNode_js_1.TEXCLASS.VCENTER) ||
            parent.isKind('mstyle') ||
            parent.isKind('mphantom')) && parent.childNodes.length === 1) ||
            parent.isKind('munderover')) && parent.childNodes[0]) {
            parent = parent.childNodes[0];
        }
        return (parent.isToken ? parent.getText() : '');
    };
    MmlMo.prototype.hasSpacingAttributes = function () {
        return this.attributes.isSet('lspace') ||
            this.attributes.isSet('rspace');
    };
    Object.defineProperty(MmlMo.prototype, "isAccent", {
        get: function () {
            var accent = false;
            var node = this.coreParent().parent;
            if (node) {
                var key = (node.isKind('mover') ?
                    (node.childNodes[node.over].coreMO() ?
                        'accent' : '') :
                    node.isKind('munder') ?
                        (node.childNodes[node.under].coreMO() ?
                            'accentunder' : '') :
                        node.isKind('munderover') ?
                            (this === node.childNodes[node.over].coreMO() ?
                                'accent' :
                                this === node.childNodes[node.under].coreMO() ?
                                    'accentunder' : '') :
                            '');
                if (key) {
                    var value = node.attributes.getExplicit(key);
                    accent = (value !== undefined ? accent : this.attributes.get('accent'));
                }
            }
            return accent;
        },
        enumerable: false,
        configurable: true
    });
    MmlMo.prototype.setTeXclass = function (prev) {
        var _a = this.attributes.getList('form', 'fence'), form = _a.form, fence = _a.fence;
        if (this.getProperty('texClass') === undefined &&
            (this.attributes.isSet('lspace') || this.attributes.isSet('rspace'))) {
            return null;
        }
        if (fence && this.texClass === MmlNode_js_1.TEXCLASS.REL) {
            if (form === 'prefix') {
                this.texClass = MmlNode_js_1.TEXCLASS.OPEN;
            }
            if (form === 'postfix') {
                this.texClass = MmlNode_js_1.TEXCLASS.CLOSE;
            }
        }
        return this.adjustTeXclass(prev);
    };
    MmlMo.prototype.adjustTeXclass = function (prev) {
        var texClass = this.texClass;
        var prevClass = this.prevClass;
        if (texClass === MmlNode_js_1.TEXCLASS.NONE) {
            return prev;
        }
        if (prev) {
            if (prev.getProperty('autoOP') && (texClass === MmlNode_js_1.TEXCLASS.BIN || texClass === MmlNode_js_1.TEXCLASS.REL)) {
                prevClass = prev.texClass = MmlNode_js_1.TEXCLASS.ORD;
            }
            prevClass = this.prevClass = (prev.texClass || MmlNode_js_1.TEXCLASS.ORD);
            this.prevLevel = this.attributes.getInherited('scriptlevel');
        }
        else {
            prevClass = this.prevClass = MmlNode_js_1.TEXCLASS.NONE;
        }
        if (texClass === MmlNode_js_1.TEXCLASS.BIN &&
            (prevClass === MmlNode_js_1.TEXCLASS.NONE || prevClass === MmlNode_js_1.TEXCLASS.BIN || prevClass === MmlNode_js_1.TEXCLASS.OP ||
                prevClass === MmlNode_js_1.TEXCLASS.REL || prevClass === MmlNode_js_1.TEXCLASS.OPEN || prevClass === MmlNode_js_1.TEXCLASS.PUNCT)) {
            this.texClass = MmlNode_js_1.TEXCLASS.ORD;
        }
        else if (prevClass === MmlNode_js_1.TEXCLASS.BIN &&
            (texClass === MmlNode_js_1.TEXCLASS.REL || texClass === MmlNode_js_1.TEXCLASS.CLOSE || texClass === MmlNode_js_1.TEXCLASS.PUNCT)) {
            prev.texClass = this.prevClass = MmlNode_js_1.TEXCLASS.ORD;
        }
        else if (texClass === MmlNode_js_1.TEXCLASS.BIN) {
            var child = this;
            var parent_1 = this.parent;
            while (parent_1 && parent_1.parent && parent_1.isEmbellished &&
                (parent_1.childNodes.length === 1 ||
                    (!parent_1.isKind('mrow') && parent_1.core() === child))) {
                child = parent_1;
                parent_1 = parent_1.parent;
            }
            if (parent_1.childNodes[parent_1.childNodes.length - 1] === child) {
                this.texClass = MmlNode_js_1.TEXCLASS.ORD;
            }
        }
        return this;
    };
    MmlMo.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
        if (attributes === void 0) { attributes = {}; }
        if (display === void 0) { display = false; }
        if (level === void 0) { level = 0; }
        if (prime === void 0) { prime = false; }
        _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);
        var mo = this.getText();
        this.checkOperatorTable(mo);
        this.checkPseudoScripts(mo);
        this.checkPrimes(mo);
        this.checkMathAccent(mo);
    };
    MmlMo.prototype.checkOperatorTable = function (mo) {
        var e_1, _a;
        var _b = __read(this.handleExplicitForm(this.getForms()), 3), form1 = _b[0], form2 = _b[1], form3 = _b[2];
        this.attributes.setInherited('form', form1);
        var OPTABLE = this.constructor.OPTABLE;
        var def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];
        if (def) {
            if (this.getProperty('texClass') === undefined) {
                this.texClass = def[2];
            }
            try {
                for (var _c = __values(Object.keys(def[3] || {})), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var name_1 = _d.value;
                    this.attributes.setInherited(name_1, def[3][name_1]);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.lspace = (def[0] + 1) / 18;
            this.rspace = (def[1] + 1) / 18;
        }
        else {
            var range = (0, OperatorDictionary_js_1.getRange)(mo);
            if (range) {
                if (this.getProperty('texClass') === undefined) {
                    this.texClass = range[2];
                }
                var spacing = this.constructor.MMLSPACING[range[2]];
                this.lspace = (spacing[0] + 1) / 18;
                this.rspace = (spacing[1] + 1) / 18;
            }
        }
    };
    MmlMo.prototype.getForms = function () {
        var core = this;
        var parent = this.parent;
        var Parent = this.Parent;
        while (Parent && Parent.isEmbellished) {
            core = parent;
            parent = Parent.parent;
            Parent = Parent.Parent;
        }
        if (parent && parent.isKind('mrow') && parent.nonSpaceLength() !== 1) {
            if (parent.firstNonSpace() === core) {
                return ['prefix', 'infix', 'postfix'];
            }
            if (parent.lastNonSpace() === core) {
                return ['postfix', 'infix', 'prefix'];
            }
        }
        return ['infix', 'prefix', 'postfix'];
    };
    MmlMo.prototype.handleExplicitForm = function (forms) {
        if (this.attributes.isSet('form')) {
            var form_1 = this.attributes.get('form');
            forms = [form_1].concat(forms.filter(function (name) { return (name !== form_1); }));
        }
        return forms;
    };
    MmlMo.prototype.checkPseudoScripts = function (mo) {
        var PSEUDOSCRIPTS = this.constructor.pseudoScripts;
        if (!mo.match(PSEUDOSCRIPTS))
            return;
        var parent = this.coreParent().Parent;
        var isPseudo = !parent || !(parent.isKind('msubsup') && !parent.isKind('msub'));
        this.setProperty('pseudoscript', isPseudo);
        if (isPseudo) {
            this.attributes.setInherited('lspace', 0);
            this.attributes.setInherited('rspace', 0);
        }
    };
    MmlMo.prototype.checkPrimes = function (mo) {
        var PRIMES = this.constructor.primes;
        if (!mo.match(PRIMES))
            return;
        var REMAP = this.constructor.remapPrimes;
        var primes = (0, string_js_1.unicodeString)((0, string_js_1.unicodeChars)(mo).map(function (c) { return REMAP[c]; }));
        this.setProperty('primes', primes);
    };
    MmlMo.prototype.checkMathAccent = function (mo) {
        var parent = this.Parent;
        if (this.getProperty('mathaccent') !== undefined || !parent || !parent.isKind('munderover'))
            return;
        var base = parent.childNodes[0];
        if (base.isEmbellished && base.coreMO() === this)
            return;
        var MATHACCENT = this.constructor.mathaccents;
        if (mo.match(MATHACCENT)) {
            this.setProperty('mathaccent', true);
        }
    };
    MmlMo.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { form: 'infix', fence: false, separator: false, lspace: 'thickmathspace', rspace: 'thickmathspace', stretchy: false, symmetric: false, maxsize: 'infinity', minsize: '0em', largeop: false, movablelimits: false, accent: false, linebreak: 'auto', lineleading: '1ex', linebreakstyle: 'before', indentalign: 'auto', indentshift: '0', indenttarget: '', indentalignfirst: 'indentalign', indentshiftfirst: 'indentshift', indentalignlast: 'indentalign', indentshiftlast: 'indentshift' });
    MmlMo.MMLSPACING = OperatorDictionary_js_1.MMLSPACING;
    MmlMo.OPTABLE = OperatorDictionary_js_1.OPTABLE;
    MmlMo.pseudoScripts = new RegExp([
        '^["\'*`',
        '\u00AA',
        '\u00B0',
        '\u00B2-\u00B4',
        '\u00B9',
        '\u00BA',
        '\u2018-\u201F',
        '\u2032-\u2037\u2057',
        '\u2070\u2071',
        '\u2074-\u207F',
        '\u2080-\u208E',
        ']+$'
    ].join(''));
    MmlMo.primes = new RegExp([
        '^["\'`',
        '\u2018-\u201F',
        ']+$'
    ].join(''));
    MmlMo.remapPrimes = {
        0x0022: 0x2033,
        0x0027: 0x2032,
        0x0060: 0x2035,
        0x2018: 0x2035,
        0x2019: 0x2032,
        0x201A: 0x2032,
        0x201B: 0x2035,
        0x201C: 0x2036,
        0x201D: 0x2033,
        0x201E: 0x2033,
        0x201F: 0x2036,
    };
    MmlMo.mathaccents = new RegExp([
        '^[',
        '\u00B4\u0301\u02CA',
        '\u0060\u0300\u02CB',
        '\u00A8\u0308',
        '\u007E\u0303\u02DC',
        '\u00AF\u0304\u02C9',
        '\u02D8\u0306',
        '\u02C7\u030C',
        '\u005E\u0302\u02C6',
        '\u2192\u20D7',
        '\u02D9\u0307',
        '\u02DA\u030A',
        '\u20DB',
        '\u20DC',
        ']$'
    ].join(''));
    return MmlMo;
}(MmlNode_js_1.AbstractMmlTokenNode));
exports.MmlMo = MmlMo;
//# sourceMappingURL=mo.js.map

/***/ }),

/***/ 7238:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMpadded = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMpadded = (function (_super) {
    __extends(MmlMpadded, _super);
    function MmlMpadded() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMpadded.prototype, "kind", {
        get: function () {
            return 'mpadded';
        },
        enumerable: false,
        configurable: true
    });
    MmlMpadded.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), { width: '', height: '', depth: '', lspace: 0, voffset: 0 });
    return MmlMpadded;
}(MmlNode_js_1.AbstractMmlLayoutNode));
exports.MmlMpadded = MmlMpadded;
//# sourceMappingURL=mpadded.js.map

/***/ }),

/***/ 5741:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMphantom = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMphantom = (function (_super) {
    __extends(MmlMphantom, _super);
    function MmlMphantom() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMphantom.prototype, "kind", {
        get: function () {
            return 'mphantom';
        },
        enumerable: false,
        configurable: true
    });
    MmlMphantom.defaults = __assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults);
    return MmlMphantom;
}(MmlNode_js_1.AbstractMmlLayoutNode));
exports.MmlMphantom = MmlMphantom;
//# sourceMappingURL=mphantom.js.map

/***/ }),

/***/ 6145:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMroot = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMroot = (function (_super) {
    __extends(MmlMroot, _super);
    function MmlMroot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMroot.prototype, "kind", {
        get: function () {
            return 'mroot';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMroot.prototype, "arity", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    MmlMroot.prototype.setTeXclass = function (prev) {
        this.getPrevClass(prev);
        this.childNodes[0].setTeXclass(null);
        this.childNodes[1].setTeXclass(null);
        return this;
    };
    MmlMroot.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        this.childNodes[0].setInheritedAttributes(attributes, display, level, true);
        this.childNodes[1].setInheritedAttributes(attributes, false, level + 2, prime);
    };
    MmlMroot.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
    return MmlMroot;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMroot = MmlMroot;
//# sourceMappingURL=mroot.js.map

/***/ }),

/***/ 9878:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlInferredMrow = exports.MmlMrow = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMrow = (function (_super) {
    __extends(MmlMrow, _super);
    function MmlMrow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._core = null;
        return _this;
    }
    Object.defineProperty(MmlMrow.prototype, "kind", {
        get: function () {
            return 'mrow';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMrow.prototype, "isSpacelike", {
        get: function () {
            var e_1, _a;
            try {
                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    if (!child.isSpacelike) {
                        return false;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMrow.prototype, "isEmbellished", {
        get: function () {
            var e_2, _a;
            var embellished = false;
            var i = 0;
            try {
                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    if (child) {
                        if (child.isEmbellished) {
                            if (embellished) {
                                return false;
                            }
                            embellished = true;
                            this._core = i;
                        }
                        else if (!child.isSpacelike) {
                            return false;
                        }
                    }
                    i++;
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
            return embellished;
        },
        enumerable: false,
        configurable: true
    });
    MmlMrow.prototype.core = function () {
        if (!this.isEmbellished || this._core == null) {
            return this;
        }
        return this.childNodes[this._core];
    };
    MmlMrow.prototype.coreMO = function () {
        if (!this.isEmbellished || this._core == null) {
            return this;
        }
        return this.childNodes[this._core].coreMO();
    };
    MmlMrow.prototype.nonSpaceLength = function () {
        var e_3, _a;
        var n = 0;
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child && !child.isSpacelike) {
                    n++;
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return n;
    };
    MmlMrow.prototype.firstNonSpace = function () {
        var e_4, _a;
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child && !child.isSpacelike) {
                    return child;
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return null;
    };
    MmlMrow.prototype.lastNonSpace = function () {
        var i = this.childNodes.length;
        while (--i >= 0) {
            var child = this.childNodes[i];
            if (child && !child.isSpacelike) {
                return child;
            }
        }
        return null;
    };
    MmlMrow.prototype.setTeXclass = function (prev) {
        var e_5, _a, e_6, _b;
        if (this.getProperty('open') != null || this.getProperty('close') != null) {
            this.getPrevClass(prev);
            prev = null;
            try {
                for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var child = _d.value;
                    prev = child.setTeXclass(prev);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_5) throw e_5.error; }
            }
            if (this.texClass == null) {
                this.texClass = MmlNode_js_1.TEXCLASS.INNER;
            }
        }
        else {
            try {
                for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var child = _f.value;
                    prev = child.setTeXclass(prev);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_6) throw e_6.error; }
            }
            if (this.childNodes[0]) {
                this.updateTeXclass(this.childNodes[0]);
            }
        }
        return prev;
    };
    MmlMrow.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
    return MmlMrow;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMrow = MmlMrow;
var MmlInferredMrow = (function (_super) {
    __extends(MmlInferredMrow, _super);
    function MmlInferredMrow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlInferredMrow.prototype, "kind", {
        get: function () {
            return 'inferredMrow';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlInferredMrow.prototype, "isInferred", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlInferredMrow.prototype, "notParent", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlInferredMrow.prototype.toString = function () {
        return '[' + this.childNodes.join(',') + ']';
    };
    MmlInferredMrow.defaults = MmlMrow.defaults;
    return MmlInferredMrow;
}(MmlMrow));
exports.MmlInferredMrow = MmlInferredMrow;
//# sourceMappingURL=mrow.js.map

/***/ }),

/***/ 7265:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMs = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMs = (function (_super) {
    __extends(MmlMs, _super);
    function MmlMs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMs.prototype, "kind", {
        get: function () {
            return 'ms';
        },
        enumerable: false,
        configurable: true
    });
    MmlMs.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { lquote: '"', rquote: '"' });
    return MmlMs;
}(MmlNode_js_1.AbstractMmlTokenNode));
exports.MmlMs = MmlMs;
//# sourceMappingURL=ms.js.map

/***/ }),

/***/ 6030:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMspace = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMspace = (function (_super) {
    __extends(MmlMspace, _super);
    function MmlMspace() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.NONE;
        return _this;
    }
    MmlMspace.prototype.setTeXclass = function (prev) {
        return prev;
    };
    Object.defineProperty(MmlMspace.prototype, "kind", {
        get: function () {
            return 'mspace';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMspace.prototype, "arity", {
        get: function () {
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMspace.prototype, "isSpacelike", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMspace.prototype, "hasNewline", {
        get: function () {
            var attributes = this.attributes;
            return (attributes.getExplicit('width') == null && attributes.getExplicit('height') == null &&
                attributes.getExplicit('depth') == null && attributes.get('linebreak') === 'newline');
        },
        enumerable: false,
        configurable: true
    });
    MmlMspace.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { width: '0em', height: '0ex', depth: '0ex', linebreak: 'auto' });
    return MmlMspace;
}(MmlNode_js_1.AbstractMmlTokenNode));
exports.MmlMspace = MmlMspace;
//# sourceMappingURL=mspace.js.map

/***/ }),

/***/ 7131:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMsqrt = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMsqrt = (function (_super) {
    __extends(MmlMsqrt, _super);
    function MmlMsqrt() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMsqrt.prototype, "kind", {
        get: function () {
            return 'msqrt';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsqrt.prototype, "arity", {
        get: function () {
            return -1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsqrt.prototype, "linebreakContainer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMsqrt.prototype.setTeXclass = function (prev) {
        this.getPrevClass(prev);
        this.childNodes[0].setTeXclass(null);
        return this;
    };
    MmlMsqrt.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {
        this.childNodes[0].setInheritedAttributes(attributes, display, level, true);
    };
    MmlMsqrt.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
    return MmlMsqrt;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMsqrt = MmlMsqrt;
//# sourceMappingURL=msqrt.js.map

/***/ }),

/***/ 1314:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMstyle = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var Attributes_js_1 = __webpack_require__(91);
var MmlMstyle = (function (_super) {
    __extends(MmlMstyle, _super);
    function MmlMstyle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMstyle.prototype, "kind", {
        get: function () {
            return 'mstyle';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMstyle.prototype, "notParent", {
        get: function () {
            return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;
        },
        enumerable: false,
        configurable: true
    });
    MmlMstyle.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        var scriptlevel = this.attributes.getExplicit('scriptlevel');
        if (scriptlevel != null) {
            scriptlevel = scriptlevel.toString();
            if (scriptlevel.match(/^\s*[-+]/)) {
                level += parseInt(scriptlevel);
            }
            else {
                level = parseInt(scriptlevel);
            }
            prime = false;
        }
        var displaystyle = this.attributes.getExplicit('displaystyle');
        if (displaystyle != null) {
            display = (displaystyle === true);
            prime = false;
        }
        var cramped = this.attributes.getExplicit('data-cramped');
        if (cramped != null) {
            prime = cramped;
        }
        attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());
        this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);
    };
    MmlMstyle.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), { scriptlevel: Attributes_js_1.INHERIT, displaystyle: Attributes_js_1.INHERIT, scriptsizemultiplier: 1 / Math.sqrt(2), scriptminsize: '8px', mathbackground: Attributes_js_1.INHERIT, mathcolor: Attributes_js_1.INHERIT, dir: Attributes_js_1.INHERIT, infixlinebreakstyle: 'before' });
    return MmlMstyle;
}(MmlNode_js_1.AbstractMmlLayoutNode));
exports.MmlMstyle = MmlMstyle;
//# sourceMappingURL=mstyle.js.map

/***/ }),

/***/ 4461:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMsup = exports.MmlMsub = exports.MmlMsubsup = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMsubsup = (function (_super) {
    __extends(MmlMsubsup, _super);
    function MmlMsubsup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMsubsup.prototype, "kind", {
        get: function () {
            return 'msubsup';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsubsup.prototype, "arity", {
        get: function () {
            return 3;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsubsup.prototype, "base", {
        get: function () {
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsubsup.prototype, "sub", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsubsup.prototype, "sup", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    MmlMsubsup.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        var nodes = this.childNodes;
        nodes[0].setInheritedAttributes(attributes, display, level, prime);
        nodes[1].setInheritedAttributes(attributes, false, level + 1, prime || this.sub === 1);
        if (!nodes[2]) {
            return;
        }
        nodes[2].setInheritedAttributes(attributes, false, level + 1, prime || this.sub === 2);
    };
    MmlMsubsup.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { subscriptshift: '', superscriptshift: '' });
    return MmlMsubsup;
}(MmlNode_js_1.AbstractMmlBaseNode));
exports.MmlMsubsup = MmlMsubsup;
var MmlMsub = (function (_super) {
    __extends(MmlMsub, _super);
    function MmlMsub() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMsub.prototype, "kind", {
        get: function () {
            return 'msub';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsub.prototype, "arity", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    MmlMsub.defaults = __assign({}, MmlMsubsup.defaults);
    return MmlMsub;
}(MmlMsubsup));
exports.MmlMsub = MmlMsub;
var MmlMsup = (function (_super) {
    __extends(MmlMsup, _super);
    function MmlMsup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMsup.prototype, "kind", {
        get: function () {
            return 'msup';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsup.prototype, "arity", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsup.prototype, "sup", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMsup.prototype, "sub", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    MmlMsup.defaults = __assign({}, MmlMsubsup.defaults);
    return MmlMsup;
}(MmlMsubsup));
exports.MmlMsup = MmlMsup;
//# sourceMappingURL=msubsup.js.map

/***/ }),

/***/ 1349:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMtable = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var string_js_1 = __webpack_require__(505);
var MmlMtable = (function (_super) {
    __extends(MmlMtable, _super);
    function MmlMtable() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.properties = {
            useHeight: true
        };
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMtable.prototype, "kind", {
        get: function () {
            return 'mtable';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMtable.prototype, "linebreakContainer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMtable.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
        var e_1, _a;
        try {
            for (var indentAttributes_1 = __values(MmlNode_js_1.indentAttributes), indentAttributes_1_1 = indentAttributes_1.next(); !indentAttributes_1_1.done; indentAttributes_1_1 = indentAttributes_1.next()) {
                var name_1 = indentAttributes_1_1.value;
                if (attributes[name_1]) {
                    this.attributes.setInherited(name_1, attributes[name_1][1]);
                }
                if (this.attributes.getExplicit(name_1) !== undefined) {
                    delete (this.attributes.getAllAttributes())[name_1];
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (indentAttributes_1_1 && !indentAttributes_1_1.done && (_a = indentAttributes_1.return)) _a.call(indentAttributes_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);
    };
    MmlMtable.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {
        var e_2, _a, e_3, _b;
        try {
            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
                var child = _d.value;
                if (!child.isKind('mtr')) {
                    this.replaceChild(this.factory.create('mtr'), child)
                        .appendChild(child);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        level = this.getProperty('scriptlevel') || level;
        display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));
        attributes = this.addInheritedAttributes(attributes, {
            columnalign: this.attributes.get('columnalign'),
            rowalign: 'center'
        });
        var cramped = this.attributes.getExplicit('data-cramped');
        var ralign = (0, string_js_1.split)(this.attributes.get('rowalign'));
        try {
            for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
                var child = _f.value;
                attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];
                child.setInheritedAttributes(attributes, display, level, !!cramped);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    MmlMtable.prototype.verifyChildren = function (options) {
        var mtr = null;
        var factory = this.factory;
        for (var i = 0; i < this.childNodes.length; i++) {
            var child = this.childNodes[i];
            if (child.isKind('mtr')) {
                mtr = null;
            }
            else {
                var isMtd = child.isKind('mtd');
                if (mtr) {
                    this.removeChild(child);
                    i--;
                }
                else {
                    mtr = this.replaceChild(factory.create('mtr'), child);
                }
                mtr.appendChild(isMtd ? child : factory.create('mtd', {}, [child]));
                if (!options['fixMtables']) {
                    child.parent.removeChild(child);
                    child.parent = this;
                    isMtd && mtr.appendChild(factory.create('mtd'));
                    var merror = child.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options, isMtd);
                    mtr.childNodes[mtr.childNodes.length - 1].appendChild(merror);
                }
            }
        }
        _super.prototype.verifyChildren.call(this, options);
    };
    MmlMtable.prototype.setTeXclass = function (prev) {
        var e_4, _a;
        this.getPrevClass(prev);
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.setTeXclass(null);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return this;
    };
    MmlMtable.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { align: 'axis', rowalign: 'baseline', columnalign: 'center', groupalign: '{left}', alignmentscope: true, columnwidth: 'auto', width: 'auto', rowspacing: '1ex', columnspacing: '.8em', rowlines: 'none', columnlines: 'none', frame: 'none', framespacing: '0.4em 0.5ex', equalrows: false, equalcolumns: false, displaystyle: false, side: 'right', minlabelspacing: '0.8em' });
    return MmlMtable;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMtable = MmlMtable;
//# sourceMappingURL=mtable.js.map

/***/ }),

/***/ 4359:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMtd = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var Attributes_js_1 = __webpack_require__(91);
var MmlMtd = (function (_super) {
    __extends(MmlMtd, _super);
    function MmlMtd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMtd.prototype, "kind", {
        get: function () {
            return 'mtd';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMtd.prototype, "arity", {
        get: function () {
            return -1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMtd.prototype, "linebreakContainer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMtd.prototype.verifyChildren = function (options) {
        if (this.parent && !this.parent.isKind('mtr')) {
            this.mError(this.kind + ' can only be a child of an mtr or mlabeledtr', options, true);
            return;
        }
        _super.prototype.verifyChildren.call(this, options);
    };
    MmlMtd.prototype.setTeXclass = function (prev) {
        this.getPrevClass(prev);
        this.childNodes[0].setTeXclass(null);
        return this;
    };
    MmlMtd.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { rowspan: 1, columnspan: 1, rowalign: Attributes_js_1.INHERIT, columnalign: Attributes_js_1.INHERIT, groupalign: Attributes_js_1.INHERIT });
    return MmlMtd;
}(MmlNode_js_1.AbstractMmlBaseNode));
exports.MmlMtd = MmlMtd;
//# sourceMappingURL=mtd.js.map

/***/ }),

/***/ 4770:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMtext = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMtext = (function (_super) {
    __extends(MmlMtext, _super);
    function MmlMtext() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.texclass = MmlNode_js_1.TEXCLASS.ORD;
        return _this;
    }
    Object.defineProperty(MmlMtext.prototype, "kind", {
        get: function () {
            return 'mtext';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMtext.prototype, "isSpacelike", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMtext.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
    return MmlMtext;
}(MmlNode_js_1.AbstractMmlTokenNode));
exports.MmlMtext = MmlMtext;
//# sourceMappingURL=mtext.js.map

/***/ }),

/***/ 5022:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMlabeledtr = exports.MmlMtr = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var Attributes_js_1 = __webpack_require__(91);
var string_js_1 = __webpack_require__(505);
var MmlMtr = (function (_super) {
    __extends(MmlMtr, _super);
    function MmlMtr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMtr.prototype, "kind", {
        get: function () {
            return 'mtr';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMtr.prototype, "linebreakContainer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMtr.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        var e_1, _a, e_2, _b;
        try {
            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
                var child = _d.value;
                if (!child.isKind('mtd')) {
                    this.replaceChild(this.factory.create('mtd'), child)
                        .appendChild(child);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var calign = (0, string_js_1.split)(this.attributes.get('columnalign'));
        if (this.arity === 1) {
            calign.unshift(this.parent.attributes.get('side'));
        }
        attributes = this.addInheritedAttributes(attributes, {
            rowalign: this.attributes.get('rowalign'),
            columnalign: 'center'
        });
        try {
            for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
                var child = _f.value;
                attributes.columnalign[1] = calign.shift() || attributes.columnalign[1];
                child.setInheritedAttributes(attributes, display, level, prime);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    MmlMtr.prototype.verifyChildren = function (options) {
        var e_3, _a;
        if (this.parent && !this.parent.isKind('mtable')) {
            this.mError(this.kind + ' can only be a child of an mtable', options, true);
            return;
        }
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (!child.isKind('mtd')) {
                    var mtd = this.replaceChild(this.factory.create('mtd'), child);
                    mtd.appendChild(child);
                    if (!options['fixMtables']) {
                        child.mError('Children of ' + this.kind + ' must be mtd', options);
                    }
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        _super.prototype.verifyChildren.call(this, options);
    };
    MmlMtr.prototype.setTeXclass = function (prev) {
        var e_4, _a;
        this.getPrevClass(prev);
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.setTeXclass(null);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return this;
    };
    MmlMtr.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { rowalign: Attributes_js_1.INHERIT, columnalign: Attributes_js_1.INHERIT, groupalign: Attributes_js_1.INHERIT });
    return MmlMtr;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlMtr = MmlMtr;
var MmlMlabeledtr = (function (_super) {
    __extends(MmlMlabeledtr, _super);
    function MmlMlabeledtr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMlabeledtr.prototype, "kind", {
        get: function () {
            return 'mlabeledtr';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMlabeledtr.prototype, "arity", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    return MmlMlabeledtr;
}(MmlMtr));
exports.MmlMlabeledtr = MmlMlabeledtr;
//# sourceMappingURL=mtr.js.map

/***/ }),

/***/ 5184:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlMover = exports.MmlMunder = exports.MmlMunderover = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlMunderover = (function (_super) {
    __extends(MmlMunderover, _super);
    function MmlMunderover() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMunderover.prototype, "kind", {
        get: function () {
            return 'munderover';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMunderover.prototype, "arity", {
        get: function () {
            return 3;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMunderover.prototype, "base", {
        get: function () {
            return 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMunderover.prototype, "under", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMunderover.prototype, "over", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMunderover.prototype, "linebreakContainer", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlMunderover.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
        var nodes = this.childNodes;
        nodes[0].setInheritedAttributes(attributes, display, level, prime || !!nodes[this.over]);
        var force = !!(!display && nodes[0].coreMO().attributes.get('movablelimits'));
        var ACCENTS = this.constructor.ACCENTS;
        nodes[1].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[1], force, level), prime || this.under === 1);
        this.setInheritedAccent(1, ACCENTS[1], display, level, prime, force);
        if (!nodes[2]) {
            return;
        }
        nodes[2].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[2], force, level), prime || this.under === 2);
        this.setInheritedAccent(2, ACCENTS[2], display, level, prime, force);
    };
    MmlMunderover.prototype.getScriptlevel = function (accent, force, level) {
        if (force || !this.attributes.get(accent)) {
            level++;
        }
        return level;
    };
    MmlMunderover.prototype.setInheritedAccent = function (n, accent, display, level, prime, force) {
        var node = this.childNodes[n];
        if (this.attributes.getExplicit(accent) == null && node.isEmbellished) {
            var value = node.coreMO().attributes.get('accent');
            this.attributes.setInherited(accent, value);
            if (value !== this.attributes.getDefault(accent)) {
                node.setInheritedAttributes({}, display, this.getScriptlevel(accent, force, level), prime);
            }
        }
    };
    MmlMunderover.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { accent: false, accentunder: false, align: 'center' });
    MmlMunderover.ACCENTS = ['', 'accentunder', 'accent'];
    return MmlMunderover;
}(MmlNode_js_1.AbstractMmlBaseNode));
exports.MmlMunderover = MmlMunderover;
var MmlMunder = (function (_super) {
    __extends(MmlMunder, _super);
    function MmlMunder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMunder.prototype, "kind", {
        get: function () {
            return 'munder';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMunder.prototype, "arity", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    MmlMunder.defaults = __assign({}, MmlMunderover.defaults);
    return MmlMunder;
}(MmlMunderover));
exports.MmlMunder = MmlMunder;
var MmlMover = (function (_super) {
    __extends(MmlMover, _super);
    function MmlMover() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlMover.prototype, "kind", {
        get: function () {
            return 'mover';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMover.prototype, "arity", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMover.prototype, "over", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlMover.prototype, "under", {
        get: function () {
            return 2;
        },
        enumerable: false,
        configurable: true
    });
    MmlMover.defaults = __assign({}, MmlMunderover.defaults);
    MmlMover.ACCENTS = ['', 'accent', 'accentunder'];
    return MmlMover;
}(MmlMunderover));
exports.MmlMover = MmlMover;
//# sourceMappingURL=munderover.js.map

/***/ }),

/***/ 9102:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlAnnotation = exports.MmlAnnotationXML = exports.MmlSemantics = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var MmlSemantics = (function (_super) {
    __extends(MmlSemantics, _super);
    function MmlSemantics() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlSemantics.prototype, "kind", {
        get: function () {
            return 'semantics';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlSemantics.prototype, "arity", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlSemantics.prototype, "notParent", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    MmlSemantics.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { definitionUrl: null, encoding: null });
    return MmlSemantics;
}(MmlNode_js_1.AbstractMmlBaseNode));
exports.MmlSemantics = MmlSemantics;
var MmlAnnotationXML = (function (_super) {
    __extends(MmlAnnotationXML, _super);
    function MmlAnnotationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlAnnotationXML.prototype, "kind", {
        get: function () {
            return 'annotation-xml';
        },
        enumerable: false,
        configurable: true
    });
    MmlAnnotationXML.prototype.setChildInheritedAttributes = function () { };
    MmlAnnotationXML.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { definitionUrl: null, encoding: null, cd: 'mathmlkeys', name: '', src: null });
    return MmlAnnotationXML;
}(MmlNode_js_1.AbstractMmlNode));
exports.MmlAnnotationXML = MmlAnnotationXML;
var MmlAnnotation = (function (_super) {
    __extends(MmlAnnotation, _super);
    function MmlAnnotation() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.properties = {
            isChars: true
        };
        return _this;
    }
    Object.defineProperty(MmlAnnotation.prototype, "kind", {
        get: function () {
            return 'annotation';
        },
        enumerable: false,
        configurable: true
    });
    MmlAnnotation.defaults = __assign({}, MmlAnnotationXML.defaults);
    return MmlAnnotation;
}(MmlAnnotationXML));
exports.MmlAnnotation = MmlAnnotation;
//# sourceMappingURL=semantics.js.map

/***/ }),

/***/ 6325:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlVisitor = void 0;
var MmlFactory_js_1 = __webpack_require__(3909);
var Visitor_js_1 = __webpack_require__(8823);
var MmlVisitor = (function (_super) {
    __extends(MmlVisitor, _super);
    function MmlVisitor(factory) {
        if (factory === void 0) { factory = null; }
        if (!factory) {
            factory = new MmlFactory_js_1.MmlFactory();
        }
        return _super.call(this, factory) || this;
    }
    MmlVisitor.prototype.visitTextNode = function (_node) {
        var _args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _args[_i - 1] = arguments[_i];
        }
    };
    MmlVisitor.prototype.visitXMLNode = function (_node) {
        var _args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _args[_i - 1] = arguments[_i];
        }
    };
    return MmlVisitor;
}(Visitor_js_1.AbstractVisitor));
exports.MmlVisitor = MmlVisitor;
//# sourceMappingURL=MmlVisitor.js.map

/***/ }),

/***/ 4082:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OPTABLE = exports.MMLSPACING = exports.getRange = exports.RANGES = exports.MO = exports.OPDEF = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
function OPDEF(lspace, rspace, texClass, properties) {
    if (texClass === void 0) { texClass = MmlNode_js_1.TEXCLASS.BIN; }
    if (properties === void 0) { properties = null; }
    return [lspace, rspace, texClass, properties];
}
exports.OPDEF = OPDEF;
exports.MO = {
    ORD: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD),
    ORD11: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.ORD),
    ORD21: OPDEF(2, 1, MmlNode_js_1.TEXCLASS.ORD),
    ORD02: OPDEF(0, 2, MmlNode_js_1.TEXCLASS.ORD),
    ORD55: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.ORD),
    NONE: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.NONE),
    OP: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, movablelimits: true, symmetric: true }),
    OPFIXED: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, movablelimits: true }),
    INTEGRAL: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.OP, { largeop: true, symmetric: true }),
    INTEGRAL2: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, symmetric: true }),
    BIN3: OPDEF(3, 3, MmlNode_js_1.TEXCLASS.BIN),
    BIN4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN),
    BIN01: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.BIN),
    BIN5: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.BIN),
    TALLBIN: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, { stretchy: true }),
    BINOP: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, { largeop: true, movablelimits: true }),
    REL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL),
    REL1: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.REL, { stretchy: true }),
    REL4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.REL),
    RELSTRETCH: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { stretchy: true }),
    RELACCENT: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { accent: true }),
    WIDEREL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { accent: true, stretchy: true }),
    OPEN: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true, stretchy: true, symmetric: true }),
    CLOSE: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true, stretchy: true, symmetric: true }),
    INNER: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.INNER),
    PUNCT: OPDEF(0, 3, MmlNode_js_1.TEXCLASS.PUNCT),
    ACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, { accent: true }),
    WIDEACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, { accent: true, stretchy: true })
};
exports.RANGES = [
    [0x0020, 0x007F, MmlNode_js_1.TEXCLASS.REL, 'mo'],
    [0x00A0, 0x00BF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x00C0, 0x024F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0x02B0, 0x036F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x0370, 0x1A20, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0x1AB0, 0x1AFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x1B00, 0x1DBF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0x1DC0, 0x1DFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x1E00, 0x1FFF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0x2000, 0x206F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x2070, 0x209F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x2100, 0x214F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0x2150, 0x218F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],
    [0x2190, 0x21FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],
    [0x2200, 0x22FF, MmlNode_js_1.TEXCLASS.BIN, 'mo'],
    [0x2300, 0x23FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x2460, 0x24FF, MmlNode_js_1.TEXCLASS.ORD, 'mn'],
    [0x2500, 0x27EF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x27F0, 0x27FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],
    [0x2800, 0x28FF, MmlNode_js_1.TEXCLASS.ORD, 'mtext'],
    [0x2900, 0x297F, MmlNode_js_1.TEXCLASS.REL, 'mo'],
    [0x2980, 0x29FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x2A00, 0x2AFF, MmlNode_js_1.TEXCLASS.BIN, 'mo'],
    [0x2B00, 0x2B2F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x2B30, 0x2B4F, MmlNode_js_1.TEXCLASS.REL, 'mo'],
    [0x2B50, 0x2BFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x2C00, 0x2DE0, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0x2E00, 0x2E7F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x2E80, 0x2FDF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],
    [0x2FF0, 0x303F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x3040, 0xA49F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],
    [0xA4D0, 0xA82F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0xA830, 0xA83F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],
    [0xA840, 0xD7FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0xF900, 0xFAFF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],
    [0xFB00, 0xFDFF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0xFE00, 0xFE6F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0xFE70, 0x100FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0x10100, 0x1018F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],
    [0x10190, 0x123FF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],
    [0x12400, 0x1247F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],
    [0x12480, 0x1BC9F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],
    [0x1BCA0, 0x1D25F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x1D360, 0x1D37F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],
    [0x1D400, 0x1D7CD, MmlNode_js_1.TEXCLASS.ORD, 'mi'],
    [0x1D7CE, 0x1D7FF, MmlNode_js_1.TEXCLASS.ORD, 'mn'],
    [0x1DF00, 0x1F7FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x1F800, 0x1F8FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],
    [0x1F900, 0x1F9FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],
    [0x20000, 0x2FA1F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normnal'],
];
function getRange(text) {
    var e_1, _a;
    var n = text.codePointAt(0);
    try {
        for (var RANGES_1 = __values(exports.RANGES), RANGES_1_1 = RANGES_1.next(); !RANGES_1_1.done; RANGES_1_1 = RANGES_1.next()) {
            var range = RANGES_1_1.value;
            if (n <= range[1]) {
                if (n >= range[0]) {
                    return range;
                }
                break;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (RANGES_1_1 && !RANGES_1_1.done && (_a = RANGES_1.return)) _a.call(RANGES_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return null;
}
exports.getRange = getRange;
exports.MMLSPACING = [
    [0, 0],
    [1, 2],
    [3, 3],
    [4, 4],
    [0, 0],
    [0, 0],
    [0, 3]
];
exports.OPTABLE = {
    prefix: {
        '(': exports.MO.OPEN,
        '+': exports.MO.BIN01,
        '-': exports.MO.BIN01,
        '[': exports.MO.OPEN,
        '{': exports.MO.OPEN,
        '|': exports.MO.OPEN,
        '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],
        '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],
        '\u00AC': exports.MO.ORD21,
        '\u00B1': exports.MO.BIN01,
        '\u2016': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],
        '\u2018': [0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true }],
        '\u201C': [0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true }],
        '\u2145': exports.MO.ORD21,
        '\u2146': OPDEF(2, 0, MmlNode_js_1.TEXCLASS.ORD),
        '\u2200': exports.MO.ORD21,
        '\u2202': exports.MO.ORD21,
        '\u2203': exports.MO.ORD21,
        '\u2204': exports.MO.ORD21,
        '\u2207': exports.MO.ORD21,
        '\u220F': exports.MO.OP,
        '\u2210': exports.MO.OP,
        '\u2211': exports.MO.OP,
        '\u2212': exports.MO.BIN01,
        '\u2213': exports.MO.BIN01,
        '\u221A': [1, 1, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],
        '\u221B': exports.MO.ORD11,
        '\u221C': exports.MO.ORD11,
        '\u2220': exports.MO.ORD,
        '\u2221': exports.MO.ORD,
        '\u2222': exports.MO.ORD,
        '\u222B': exports.MO.INTEGRAL,
        '\u222C': exports.MO.INTEGRAL,
        '\u222D': exports.MO.INTEGRAL,
        '\u222E': exports.MO.INTEGRAL,
        '\u222F': exports.MO.INTEGRAL,
        '\u2230': exports.MO.INTEGRAL,
        '\u2231': exports.MO.INTEGRAL,
        '\u2232': exports.MO.INTEGRAL,
        '\u2233': exports.MO.INTEGRAL,
        '\u22C0': exports.MO.OP,
        '\u22C1': exports.MO.OP,
        '\u22C2': exports.MO.OP,
        '\u22C3': exports.MO.OP,
        '\u2308': exports.MO.OPEN,
        '\u230A': exports.MO.OPEN,
        '\u2329': exports.MO.OPEN,
        '\u2772': exports.MO.OPEN,
        '\u27E6': exports.MO.OPEN,
        '\u27E8': exports.MO.OPEN,
        '\u27EA': exports.MO.OPEN,
        '\u27EC': exports.MO.OPEN,
        '\u27EE': exports.MO.OPEN,
        '\u2980': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],
        '\u2983': exports.MO.OPEN,
        '\u2985': exports.MO.OPEN,
        '\u2987': exports.MO.OPEN,
        '\u2989': exports.MO.OPEN,
        '\u298B': exports.MO.OPEN,
        '\u298D': exports.MO.OPEN,
        '\u298F': exports.MO.OPEN,
        '\u2991': exports.MO.OPEN,
        '\u2993': exports.MO.OPEN,
        '\u2995': exports.MO.OPEN,
        '\u2997': exports.MO.OPEN,
        '\u29FC': exports.MO.OPEN,
        '\u2A00': exports.MO.OP,
        '\u2A01': exports.MO.OP,
        '\u2A02': exports.MO.OP,
        '\u2A03': exports.MO.OP,
        '\u2A04': exports.MO.OP,
        '\u2A05': exports.MO.OP,
        '\u2A06': exports.MO.OP,
        '\u2A07': exports.MO.OP,
        '\u2A08': exports.MO.OP,
        '\u2A09': exports.MO.OP,
        '\u2A0A': exports.MO.OP,
        '\u2A0B': exports.MO.INTEGRAL2,
        '\u2A0C': exports.MO.INTEGRAL,
        '\u2A0D': exports.MO.INTEGRAL2,
        '\u2A0E': exports.MO.INTEGRAL2,
        '\u2A0F': exports.MO.INTEGRAL2,
        '\u2A10': exports.MO.OP,
        '\u2A11': exports.MO.OP,
        '\u2A12': exports.MO.OP,
        '\u2A13': exports.MO.OP,
        '\u2A14': exports.MO.OP,
        '\u2A15': exports.MO.INTEGRAL2,
        '\u2A16': exports.MO.INTEGRAL2,
        '\u2A17': exports.MO.INTEGRAL2,
        '\u2A18': exports.MO.INTEGRAL2,
        '\u2A19': exports.MO.INTEGRAL2,
        '\u2A1A': exports.MO.INTEGRAL2,
        '\u2A1B': exports.MO.INTEGRAL2,
        '\u2A1C': exports.MO.INTEGRAL2,
        '\u2AFC': exports.MO.OP,
        '\u2AFF': exports.MO.OP,
    },
    postfix: {
        '!!': OPDEF(1, 0),
        '!': [1, 0, MmlNode_js_1.TEXCLASS.CLOSE, null],
        '"': exports.MO.ACCENT,
        '&': exports.MO.ORD,
        ')': exports.MO.CLOSE,
        '++': OPDEF(0, 0),
        '--': OPDEF(0, 0),
        '..': OPDEF(0, 0),
        '...': exports.MO.ORD,
        '\'': exports.MO.ACCENT,
        ']': exports.MO.CLOSE,
        '^': exports.MO.WIDEACCENT,
        '_': exports.MO.WIDEACCENT,
        '`': exports.MO.ACCENT,
        '|': exports.MO.CLOSE,
        '}': exports.MO.CLOSE,
        '~': exports.MO.WIDEACCENT,
        '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],
        '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],
        '\u00A8': exports.MO.ACCENT,
        '\u00AA': exports.MO.ACCENT,
        '\u00AF': exports.MO.WIDEACCENT,
        '\u00B0': exports.MO.ORD,
        '\u00B2': exports.MO.ACCENT,
        '\u00B3': exports.MO.ACCENT,
        '\u00B4': exports.MO.ACCENT,
        '\u00B8': exports.MO.ACCENT,
        '\u00B9': exports.MO.ACCENT,
        '\u00BA': exports.MO.ACCENT,
        '\u02C6': exports.MO.WIDEACCENT,
        '\u02C7': exports.MO.WIDEACCENT,
        '\u02C9': exports.MO.WIDEACCENT,
        '\u02CA': exports.MO.ACCENT,
        '\u02CB': exports.MO.ACCENT,
        '\u02CD': exports.MO.WIDEACCENT,
        '\u02D8': exports.MO.ACCENT,
        '\u02D9': exports.MO.ACCENT,
        '\u02DA': exports.MO.ACCENT,
        '\u02DC': exports.MO.WIDEACCENT,
        '\u02DD': exports.MO.ACCENT,
        '\u02F7': exports.MO.WIDEACCENT,
        '\u0302': exports.MO.WIDEACCENT,
        '\u0311': exports.MO.ACCENT,
        '\u03F6': exports.MO.REL,
        '\u2016': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],
        '\u2019': [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true }],
        '\u201A': exports.MO.ACCENT,
        '\u201B': exports.MO.ACCENT,
        '\u201D': [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true }],
        '\u201E': exports.MO.ACCENT,
        '\u201F': exports.MO.ACCENT,
        '\u2032': exports.MO.ORD,
        '\u2033': exports.MO.ACCENT,
        '\u2034': exports.MO.ACCENT,
        '\u2035': exports.MO.ACCENT,
        '\u2036': exports.MO.ACCENT,
        '\u2037': exports.MO.ACCENT,
        '\u203E': exports.MO.WIDEACCENT,
        '\u2057': exports.MO.ACCENT,
        '\u20DB': exports.MO.ACCENT,
        '\u20DC': exports.MO.ACCENT,
        '\u2309': exports.MO.CLOSE,
        '\u230B': exports.MO.CLOSE,
        '\u232A': exports.MO.CLOSE,
        '\u23B4': exports.MO.WIDEACCENT,
        '\u23B5': exports.MO.WIDEACCENT,
        '\u23DC': exports.MO.WIDEACCENT,
        '\u23DD': exports.MO.WIDEACCENT,
        '\u23DE': exports.MO.WIDEACCENT,
        '\u23DF': exports.MO.WIDEACCENT,
        '\u23E0': exports.MO.WIDEACCENT,
        '\u23E1': exports.MO.WIDEACCENT,
        '\u25A0': exports.MO.BIN3,
        '\u25A1': exports.MO.BIN3,
        '\u25AA': exports.MO.BIN3,
        '\u25AB': exports.MO.BIN3,
        '\u25AD': exports.MO.BIN3,
        '\u25AE': exports.MO.BIN3,
        '\u25AF': exports.MO.BIN3,
        '\u25B0': exports.MO.BIN3,
        '\u25B1': exports.MO.BIN3,
        '\u25B2': exports.MO.BIN4,
        '\u25B4': exports.MO.BIN4,
        '\u25B6': exports.MO.BIN4,
        '\u25B7': exports.MO.BIN4,
        '\u25B8': exports.MO.BIN4,
        '\u25BC': exports.MO.BIN4,
        '\u25BE': exports.MO.BIN4,
        '\u25C0': exports.MO.BIN4,
        '\u25C1': exports.MO.BIN4,
        '\u25C2': exports.MO.BIN4,
        '\u25C4': exports.MO.BIN4,
        '\u25C5': exports.MO.BIN4,
        '\u25C6': exports.MO.BIN4,
        '\u25C7': exports.MO.BIN4,
        '\u25C8': exports.MO.BIN4,
        '\u25C9': exports.MO.BIN4,
        '\u25CC': exports.MO.BIN4,
        '\u25CD': exports.MO.BIN4,
        '\u25CE': exports.MO.BIN4,
        '\u25CF': exports.MO.BIN4,
        '\u25D6': exports.MO.BIN4,
        '\u25D7': exports.MO.BIN4,
        '\u25E6': exports.MO.BIN4,
        '\u266D': exports.MO.ORD02,
        '\u266E': exports.MO.ORD02,
        '\u266F': exports.MO.ORD02,
        '\u2773': exports.MO.CLOSE,
        '\u27E7': exports.MO.CLOSE,
        '\u27E9': exports.MO.CLOSE,
        '\u27EB': exports.MO.CLOSE,
        '\u27ED': exports.MO.CLOSE,
        '\u27EF': exports.MO.CLOSE,
        '\u2980': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],
        '\u2984': exports.MO.CLOSE,
        '\u2986': exports.MO.CLOSE,
        '\u2988': exports.MO.CLOSE,
        '\u298A': exports.MO.CLOSE,
        '\u298C': exports.MO.CLOSE,
        '\u298E': exports.MO.CLOSE,
        '\u2990': exports.MO.CLOSE,
        '\u2992': exports.MO.CLOSE,
        '\u2994': exports.MO.CLOSE,
        '\u2996': exports.MO.CLOSE,
        '\u2998': exports.MO.CLOSE,
        '\u29FD': exports.MO.CLOSE,
    },
    infix: {
        '!=': exports.MO.BIN4,
        '#': exports.MO.ORD,
        '$': exports.MO.ORD,
        '%': [3, 3, MmlNode_js_1.TEXCLASS.ORD, null],
        '&&': exports.MO.BIN4,
        '': exports.MO.ORD,
        '*': exports.MO.BIN3,
        '**': OPDEF(1, 1),
        '*=': exports.MO.BIN4,
        '+': exports.MO.BIN4,
        '+=': exports.MO.BIN4,
        ',': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { linebreakstyle: 'after', separator: true }],
        '-': exports.MO.BIN4,
        '-=': exports.MO.BIN4,
        '->': exports.MO.BIN5,
        '.': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { separator: true }],
        '/': exports.MO.ORD11,
        '//': OPDEF(1, 1),
        '/=': exports.MO.BIN4,
        ':': [1, 2, MmlNode_js_1.TEXCLASS.REL, null],
        ':=': exports.MO.BIN4,
        ';': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { linebreakstyle: 'after', separator: true }],
        '<': exports.MO.REL,
        '<=': exports.MO.BIN5,
        '<>': OPDEF(1, 1),
        '=': exports.MO.REL,
        '==': exports.MO.BIN4,
        '>': exports.MO.REL,
        '>=': exports.MO.BIN5,
        '?': [1, 1, MmlNode_js_1.TEXCLASS.CLOSE, null],
        '@': exports.MO.ORD11,
        '\\': exports.MO.ORD,
        '^': exports.MO.ORD11,
        '_': exports.MO.ORD11,
        '|': [2, 2, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],
        '||': [2, 2, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],
        '|||': [2, 2, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],
        '\u00B1': exports.MO.BIN4,
        '\u00B7': exports.MO.BIN4,
        '\u00D7': exports.MO.BIN4,
        '\u00F7': exports.MO.BIN4,
        '\u02B9': exports.MO.ORD,
        '\u0300': exports.MO.ACCENT,
        '\u0301': exports.MO.ACCENT,
        '\u0303': exports.MO.WIDEACCENT,
        '\u0304': exports.MO.ACCENT,
        '\u0306': exports.MO.ACCENT,
        '\u0307': exports.MO.ACCENT,
        '\u0308': exports.MO.ACCENT,
        '\u030C': exports.MO.ACCENT,
        '\u0332': exports.MO.WIDEACCENT,
        '\u0338': exports.MO.REL4,
        '\u2015': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],
        '\u2017': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],
        '\u2020': exports.MO.BIN3,
        '\u2021': exports.MO.BIN3,
        '\u2022': exports.MO.BIN4,
        '\u2026': exports.MO.INNER,
        '\u2043': exports.MO.BIN4,
        '\u2044': exports.MO.TALLBIN,
        '\u2061': exports.MO.NONE,
        '\u2062': exports.MO.NONE,
        '\u2063': [0, 0, MmlNode_js_1.TEXCLASS.NONE, { linebreakstyle: 'after', separator: true }],
        '\u2064': exports.MO.NONE,
        '\u20D7': exports.MO.ACCENT,
        '\u2111': exports.MO.ORD,
        '\u2113': exports.MO.ORD,
        '\u2118': exports.MO.ORD,
        '\u211C': exports.MO.ORD,
        '\u2190': exports.MO.WIDEREL,
        '\u2191': exports.MO.RELSTRETCH,
        '\u2192': exports.MO.WIDEREL,
        '\u2193': exports.MO.RELSTRETCH,
        '\u2194': exports.MO.WIDEREL,
        '\u2195': exports.MO.RELSTRETCH,
        '\u2196': exports.MO.RELSTRETCH,
        '\u2197': exports.MO.RELSTRETCH,
        '\u2198': exports.MO.RELSTRETCH,
        '\u2199': exports.MO.RELSTRETCH,
        '\u219A': exports.MO.RELACCENT,
        '\u219B': exports.MO.RELACCENT,
        '\u219C': exports.MO.WIDEREL,
        '\u219D': exports.MO.WIDEREL,
        '\u219E': exports.MO.WIDEREL,
        '\u219F': exports.MO.WIDEREL,
        '\u21A0': exports.MO.WIDEREL,
        '\u21A1': exports.MO.RELSTRETCH,
        '\u21A2': exports.MO.WIDEREL,
        '\u21A3': exports.MO.WIDEREL,
        '\u21A4': exports.MO.WIDEREL,
        '\u21A5': exports.MO.RELSTRETCH,
        '\u21A6': exports.MO.WIDEREL,
        '\u21A7': exports.MO.RELSTRETCH,
        '\u21A8': exports.MO.RELSTRETCH,
        '\u21A9': exports.MO.WIDEREL,
        '\u21AA': exports.MO.WIDEREL,
        '\u21AB': exports.MO.WIDEREL,
        '\u21AC': exports.MO.WIDEREL,
        '\u21AD': exports.MO.WIDEREL,
        '\u21AE': exports.MO.RELACCENT,
        '\u21AF': exports.MO.RELSTRETCH,
        '\u21B0': exports.MO.RELSTRETCH,
        '\u21B1': exports.MO.RELSTRETCH,
        '\u21B2': exports.MO.RELSTRETCH,
        '\u21B3': exports.MO.RELSTRETCH,
        '\u21B4': exports.MO.RELSTRETCH,
        '\u21B5': exports.MO.RELSTRETCH,
        '\u21B6': exports.MO.RELACCENT,
        '\u21B7': exports.MO.RELACCENT,
        '\u21B8': exports.MO.REL,
        '\u21B9': exports.MO.WIDEREL,
        '\u21BA': exports.MO.REL,
        '\u21BB': exports.MO.REL,
        '\u21BC': exports.MO.WIDEREL,
        '\u21BD': exports.MO.WIDEREL,
        '\u21BE': exports.MO.RELSTRETCH,
        '\u21BF': exports.MO.RELSTRETCH,
        '\u21C0': exports.MO.WIDEREL,
        '\u21C1': exports.MO.WIDEREL,
        '\u21C2': exports.MO.RELSTRETCH,
        '\u21C3': exports.MO.RELSTRETCH,
        '\u21C4': exports.MO.WIDEREL,
        '\u21C5': exports.MO.RELSTRETCH,
        '\u21C6': exports.MO.WIDEREL,
        '\u21C7': exports.MO.WIDEREL,
        '\u21C8': exports.MO.RELSTRETCH,
        '\u21C9': exports.MO.WIDEREL,
        '\u21CA': exports.MO.RELSTRETCH,
        '\u21CB': exports.MO.WIDEREL,
        '\u21CC': exports.MO.WIDEREL,
        '\u21CD': exports.MO.RELACCENT,
        '\u21CE': exports.MO.RELACCENT,
        '\u21CF': exports.MO.RELACCENT,
        '\u21D0': exports.MO.WIDEREL,
        '\u21D1': exports.MO.RELSTRETCH,
        '\u21D2': exports.MO.WIDEREL,
        '\u21D3': exports.MO.RELSTRETCH,
        '\u21D4': exports.MO.WIDEREL,
        '\u21D5': exports.MO.RELSTRETCH,
        '\u21D6': exports.MO.RELSTRETCH,
        '\u21D7': exports.MO.RELSTRETCH,
        '\u21D8': exports.MO.RELSTRETCH,
        '\u21D9': exports.MO.RELSTRETCH,
        '\u21DA': exports.MO.WIDEREL,
        '\u21DB': exports.MO.WIDEREL,
        '\u21DC': exports.MO.WIDEREL,
        '\u21DD': exports.MO.WIDEREL,
        '\u21DE': exports.MO.REL,
        '\u21DF': exports.MO.REL,
        '\u21E0': exports.MO.WIDEREL,
        '\u21E1': exports.MO.RELSTRETCH,
        '\u21E2': exports.MO.WIDEREL,
        '\u21E3': exports.MO.RELSTRETCH,
        '\u21E4': exports.MO.WIDEREL,
        '\u21E5': exports.MO.WIDEREL,
        '\u21E6': exports.MO.WIDEREL,
        '\u21E7': exports.MO.RELSTRETCH,
        '\u21E8': exports.MO.WIDEREL,
        '\u21E9': exports.MO.RELSTRETCH,
        '\u21EA': exports.MO.RELSTRETCH,
        '\u21EB': exports.MO.RELSTRETCH,
        '\u21EC': exports.MO.RELSTRETCH,
        '\u21ED': exports.MO.RELSTRETCH,
        '\u21EE': exports.MO.RELSTRETCH,
        '\u21EF': exports.MO.RELSTRETCH,
        '\u21F0': exports.MO.WIDEREL,
        '\u21F1': exports.MO.REL,
        '\u21F2': exports.MO.REL,
        '\u21F3': exports.MO.RELSTRETCH,
        '\u21F4': exports.MO.RELACCENT,
        '\u21F5': exports.MO.RELSTRETCH,
        '\u21F6': exports.MO.WIDEREL,
        '\u21F7': exports.MO.RELACCENT,
        '\u21F8': exports.MO.RELACCENT,
        '\u21F9': exports.MO.RELACCENT,
        '\u21FA': exports.MO.RELACCENT,
        '\u21FB': exports.MO.RELACCENT,
        '\u21FC': exports.MO.RELACCENT,
        '\u21FD': exports.MO.WIDEREL,
        '\u21FE': exports.MO.WIDEREL,
        '\u21FF': exports.MO.WIDEREL,
        '\u2201': OPDEF(1, 2, MmlNode_js_1.TEXCLASS.ORD),
        '\u2205': exports.MO.ORD,
        '\u2206': exports.MO.BIN3,
        '\u2208': exports.MO.REL,
        '\u2209': exports.MO.REL,
        '\u220A': exports.MO.REL,
        '\u220B': exports.MO.REL,
        '\u220C': exports.MO.REL,
        '\u220D': exports.MO.REL,
        '\u220E': exports.MO.BIN3,
        '\u2212': exports.MO.BIN4,
        '\u2213': exports.MO.BIN4,
        '\u2214': exports.MO.BIN4,
        '\u2215': exports.MO.TALLBIN,
        '\u2216': exports.MO.BIN4,
        '\u2217': exports.MO.BIN4,
        '\u2218': exports.MO.BIN4,
        '\u2219': exports.MO.BIN4,
        '\u221D': exports.MO.REL,
        '\u221E': exports.MO.ORD,
        '\u221F': exports.MO.REL,
        '\u2223': exports.MO.REL,
        '\u2224': exports.MO.REL,
        '\u2225': exports.MO.REL,
        '\u2226': exports.MO.REL,
        '\u2227': exports.MO.BIN4,
        '\u2228': exports.MO.BIN4,
        '\u2229': exports.MO.BIN4,
        '\u222A': exports.MO.BIN4,
        '\u2234': exports.MO.REL,
        '\u2235': exports.MO.REL,
        '\u2236': exports.MO.REL,
        '\u2237': exports.MO.REL,
        '\u2238': exports.MO.BIN4,
        '\u2239': exports.MO.REL,
        '\u223A': exports.MO.BIN4,
        '\u223B': exports.MO.REL,
        '\u223C': exports.MO.REL,
        '\u223D': exports.MO.REL,
        '\u223D\u0331': exports.MO.BIN3,
        '\u223E': exports.MO.REL,
        '\u223F': exports.MO.BIN3,
        '\u2240': exports.MO.BIN4,
        '\u2241': exports.MO.REL,
        '\u2242': exports.MO.REL,
        '\u2242\u0338': exports.MO.REL,
        '\u2243': exports.MO.REL,
        '\u2244': exports.MO.REL,
        '\u2245': exports.MO.REL,
        '\u2246': exports.MO.REL,
        '\u2247': exports.MO.REL,
        '\u2248': exports.MO.REL,
        '\u2249': exports.MO.REL,
        '\u224A': exports.MO.REL,
        '\u224B': exports.MO.REL,
        '\u224C': exports.MO.REL,
        '\u224D': exports.MO.REL,
        '\u224E': exports.MO.REL,
        '\u224E\u0338': exports.MO.REL,
        '\u224F': exports.MO.REL,
        '\u224F\u0338': exports.MO.REL,
        '\u2250': exports.MO.REL,
        '\u2251': exports.MO.REL,
        '\u2252': exports.MO.REL,
        '\u2253': exports.MO.REL,
        '\u2254': exports.MO.REL,
        '\u2255': exports.MO.REL,
        '\u2256': exports.MO.REL,
        '\u2257': exports.MO.REL,
        '\u2258': exports.MO.REL,
        '\u2259': exports.MO.REL,
        '\u225A': exports.MO.REL,
        '\u225B': exports.MO.REL,
        '\u225C': exports.MO.REL,
        '\u225D': exports.MO.REL,
        '\u225E': exports.MO.REL,
        '\u225F': exports.MO.REL,
        '\u2260': exports.MO.REL,
        '\u2261': exports.MO.REL,
        '\u2262': exports.MO.REL,
        '\u2263': exports.MO.REL,
        '\u2264': exports.MO.REL,
        '\u2265': exports.MO.REL,
        '\u2266': exports.MO.REL,
        '\u2266\u0338': exports.MO.REL,
        '\u2267': exports.MO.REL,
        '\u2268': exports.MO.REL,
        '\u2269': exports.MO.REL,
        '\u226A': exports.MO.REL,
        '\u226A\u0338': exports.MO.REL,
        '\u226B': exports.MO.REL,
        '\u226B\u0338': exports.MO.REL,
        '\u226C': exports.MO.REL,
        '\u226D': exports.MO.REL,
        '\u226E': exports.MO.REL,
        '\u226F': exports.MO.REL,
        '\u2270': exports.MO.REL,
        '\u2271': exports.MO.REL,
        '\u2272': exports.MO.REL,
        '\u2273': exports.MO.REL,
        '\u2274': exports.MO.REL,
        '\u2275': exports.MO.REL,
        '\u2276': exports.MO.REL,
        '\u2277': exports.MO.REL,
        '\u2278': exports.MO.REL,
        '\u2279': exports.MO.REL,
        '\u227A': exports.MO.REL,
        '\u227B': exports.MO.REL,
        '\u227C': exports.MO.REL,
        '\u227D': exports.MO.REL,
        '\u227E': exports.MO.REL,
        '\u227F': exports.MO.REL,
        '\u227F\u0338': exports.MO.REL,
        '\u2280': exports.MO.REL,
        '\u2281': exports.MO.REL,
        '\u2282': exports.MO.REL,
        '\u2282\u20D2': exports.MO.REL,
        '\u2283': exports.MO.REL,
        '\u2283\u20D2': exports.MO.REL,
        '\u2284': exports.MO.REL,
        '\u2285': exports.MO.REL,
        '\u2286': exports.MO.REL,
        '\u2287': exports.MO.REL,
        '\u2288': exports.MO.REL,
        '\u2289': exports.MO.REL,
        '\u228A': exports.MO.REL,
        '\u228B': exports.MO.REL,
        '\u228C': exports.MO.BIN4,
        '\u228D': exports.MO.BIN4,
        '\u228E': exports.MO.BIN4,
        '\u228F': exports.MO.REL,
        '\u228F\u0338': exports.MO.REL,
        '\u2290': exports.MO.REL,
        '\u2290\u0338': exports.MO.REL,
        '\u2291': exports.MO.REL,
        '\u2292': exports.MO.REL,
        '\u2293': exports.MO.BIN4,
        '\u2294': exports.MO.BIN4,
        '\u2295': exports.MO.BIN4,
        '\u2296': exports.MO.BIN4,
        '\u2297': exports.MO.BIN4,
        '\u2298': exports.MO.BIN4,
        '\u2299': exports.MO.BIN4,
        '\u229A': exports.MO.BIN4,
        '\u229B': exports.MO.BIN4,
        '\u229C': exports.MO.BIN4,
        '\u229D': exports.MO.BIN4,
        '\u229E': exports.MO.BIN4,
        '\u229F': exports.MO.BIN4,
        '\u22A0': exports.MO.BIN4,
        '\u22A1': exports.MO.BIN4,
        '\u22A2': exports.MO.REL,
        '\u22A3': exports.MO.REL,
        '\u22A4': exports.MO.ORD55,
        '\u22A5': exports.MO.REL,
        '\u22A6': exports.MO.REL,
        '\u22A7': exports.MO.REL,
        '\u22A8': exports.MO.REL,
        '\u22A9': exports.MO.REL,
        '\u22AA': exports.MO.REL,
        '\u22AB': exports.MO.REL,
        '\u22AC': exports.MO.REL,
        '\u22AD': exports.MO.REL,
        '\u22AE': exports.MO.REL,
        '\u22AF': exports.MO.REL,
        '\u22B0': exports.MO.REL,
        '\u22B1': exports.MO.REL,
        '\u22B2': exports.MO.REL,
        '\u22B3': exports.MO.REL,
        '\u22B4': exports.MO.REL,
        '\u22B5': exports.MO.REL,
        '\u22B6': exports.MO.REL,
        '\u22B7': exports.MO.REL,
        '\u22B8': exports.MO.REL,
        '\u22B9': exports.MO.REL,
        '\u22BA': exports.MO.BIN4,
        '\u22BB': exports.MO.BIN4,
        '\u22BC': exports.MO.BIN4,
        '\u22BD': exports.MO.BIN4,
        '\u22BE': exports.MO.BIN3,
        '\u22BF': exports.MO.BIN3,
        '\u22C4': exports.MO.BIN4,
        '\u22C5': exports.MO.BIN4,
        '\u22C6': exports.MO.BIN4,
        '\u22C7': exports.MO.BIN4,
        '\u22C8': exports.MO.REL,
        '\u22C9': exports.MO.BIN4,
        '\u22CA': exports.MO.BIN4,
        '\u22CB': exports.MO.BIN4,
        '\u22CC': exports.MO.BIN4,
        '\u22CD': exports.MO.REL,
        '\u22CE': exports.MO.BIN4,
        '\u22CF': exports.MO.BIN4,
        '\u22D0': exports.MO.REL,
        '\u22D1': exports.MO.REL,
        '\u22D2': exports.MO.BIN4,
        '\u22D3': exports.MO.BIN4,
        '\u22D4': exports.MO.REL,
        '\u22D5': exports.MO.REL,
        '\u22D6': exports.MO.REL,
        '\u22D7': exports.MO.REL,
        '\u22D8': exports.MO.REL,
        '\u22D9': exports.MO.REL,
        '\u22DA': exports.MO.REL,
        '\u22DB': exports.MO.REL,
        '\u22DC': exports.MO.REL,
        '\u22DD': exports.MO.REL,
        '\u22DE': exports.MO.REL,
        '\u22DF': exports.MO.REL,
        '\u22E0': exports.MO.REL,
        '\u22E1': exports.MO.REL,
        '\u22E2': exports.MO.REL,
        '\u22E3': exports.MO.REL,
        '\u22E4': exports.MO.REL,
        '\u22E5': exports.MO.REL,
        '\u22E6': exports.MO.REL,
        '\u22E7': exports.MO.REL,
        '\u22E8': exports.MO.REL,
        '\u22E9': exports.MO.REL,
        '\u22EA': exports.MO.REL,
        '\u22EB': exports.MO.REL,
        '\u22EC': exports.MO.REL,
        '\u22ED': exports.MO.REL,
        '\u22EE': exports.MO.ORD55,
        '\u22EF': exports.MO.INNER,
        '\u22F0': exports.MO.REL,
        '\u22F1': [5, 5, MmlNode_js_1.TEXCLASS.INNER, null],
        '\u22F2': exports.MO.REL,
        '\u22F3': exports.MO.REL,
        '\u22F4': exports.MO.REL,
        '\u22F5': exports.MO.REL,
        '\u22F6': exports.MO.REL,
        '\u22F7': exports.MO.REL,
        '\u22F8': exports.MO.REL,
        '\u22F9': exports.MO.REL,
        '\u22FA': exports.MO.REL,
        '\u22FB': exports.MO.REL,
        '\u22FC': exports.MO.REL,
        '\u22FD': exports.MO.REL,
        '\u22FE': exports.MO.REL,
        '\u22FF': exports.MO.REL,
        '\u2305': exports.MO.BIN3,
        '\u2306': exports.MO.BIN3,
        '\u2322': exports.MO.REL4,
        '\u2323': exports.MO.REL4,
        '\u2329': exports.MO.OPEN,
        '\u232A': exports.MO.CLOSE,
        '\u23AA': exports.MO.ORD,
        '\u23AF': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],
        '\u23B0': exports.MO.OPEN,
        '\u23B1': exports.MO.CLOSE,
        '\u2500': exports.MO.ORD,
        '\u25B3': exports.MO.BIN4,
        '\u25B5': exports.MO.BIN4,
        '\u25B9': exports.MO.BIN4,
        '\u25BD': exports.MO.BIN4,
        '\u25BF': exports.MO.BIN4,
        '\u25C3': exports.MO.BIN4,
        '\u25EF': exports.MO.BIN3,
        '\u2660': exports.MO.ORD,
        '\u2661': exports.MO.ORD,
        '\u2662': exports.MO.ORD,
        '\u2663': exports.MO.ORD,
        '\u2758': exports.MO.REL,
        '\u27F0': exports.MO.RELSTRETCH,
        '\u27F1': exports.MO.RELSTRETCH,
        '\u27F5': exports.MO.WIDEREL,
        '\u27F6': exports.MO.WIDEREL,
        '\u27F7': exports.MO.WIDEREL,
        '\u27F8': exports.MO.WIDEREL,
        '\u27F9': exports.MO.WIDEREL,
        '\u27FA': exports.MO.WIDEREL,
        '\u27FB': exports.MO.WIDEREL,
        '\u27FC': exports.MO.WIDEREL,
        '\u27FD': exports.MO.WIDEREL,
        '\u27FE': exports.MO.WIDEREL,
        '\u27FF': exports.MO.WIDEREL,
        '\u2900': exports.MO.RELACCENT,
        '\u2901': exports.MO.RELACCENT,
        '\u2902': exports.MO.RELACCENT,
        '\u2903': exports.MO.RELACCENT,
        '\u2904': exports.MO.RELACCENT,
        '\u2905': exports.MO.RELACCENT,
        '\u2906': exports.MO.RELACCENT,
        '\u2907': exports.MO.RELACCENT,
        '\u2908': exports.MO.REL,
        '\u2909': exports.MO.REL,
        '\u290A': exports.MO.RELSTRETCH,
        '\u290B': exports.MO.RELSTRETCH,
        '\u290C': exports.MO.WIDEREL,
        '\u290D': exports.MO.WIDEREL,
        '\u290E': exports.MO.WIDEREL,
        '\u290F': exports.MO.WIDEREL,
        '\u2910': exports.MO.WIDEREL,
        '\u2911': exports.MO.RELACCENT,
        '\u2912': exports.MO.RELSTRETCH,
        '\u2913': exports.MO.RELSTRETCH,
        '\u2914': exports.MO.RELACCENT,
        '\u2915': exports.MO.RELACCENT,
        '\u2916': exports.MO.RELACCENT,
        '\u2917': exports.MO.RELACCENT,
        '\u2918': exports.MO.RELACCENT,
        '\u2919': exports.MO.RELACCENT,
        '\u291A': exports.MO.RELACCENT,
        '\u291B': exports.MO.RELACCENT,
        '\u291C': exports.MO.RELACCENT,
        '\u291D': exports.MO.RELACCENT,
        '\u291E': exports.MO.RELACCENT,
        '\u291F': exports.MO.RELACCENT,
        '\u2920': exports.MO.RELACCENT,
        '\u2921': exports.MO.RELSTRETCH,
        '\u2922': exports.MO.RELSTRETCH,
        '\u2923': exports.MO.REL,
        '\u2924': exports.MO.REL,
        '\u2925': exports.MO.REL,
        '\u2926': exports.MO.REL,
        '\u2927': exports.MO.REL,
        '\u2928': exports.MO.REL,
        '\u2929': exports.MO.REL,
        '\u292A': exports.MO.REL,
        '\u292B': exports.MO.REL,
        '\u292C': exports.MO.REL,
        '\u292D': exports.MO.REL,
        '\u292E': exports.MO.REL,
        '\u292F': exports.MO.REL,
        '\u2930': exports.MO.REL,
        '\u2931': exports.MO.REL,
        '\u2932': exports.MO.REL,
        '\u2933': exports.MO.RELACCENT,
        '\u2934': exports.MO.REL,
        '\u2935': exports.MO.REL,
        '\u2936': exports.MO.REL,
        '\u2937': exports.MO.REL,
        '\u2938': exports.MO.REL,
        '\u2939': exports.MO.REL,
        '\u293A': exports.MO.RELACCENT,
        '\u293B': exports.MO.RELACCENT,
        '\u293C': exports.MO.RELACCENT,
        '\u293D': exports.MO.RELACCENT,
        '\u293E': exports.MO.REL,
        '\u293F': exports.MO.REL,
        '\u2940': exports.MO.REL,
        '\u2941': exports.MO.REL,
        '\u2942': exports.MO.RELACCENT,
        '\u2943': exports.MO.RELACCENT,
        '\u2944': exports.MO.RELACCENT,
        '\u2945': exports.MO.RELACCENT,
        '\u2946': exports.MO.RELACCENT,
        '\u2947': exports.MO.RELACCENT,
        '\u2948': exports.MO.RELACCENT,
        '\u2949': exports.MO.REL,
        '\u294A': exports.MO.RELACCENT,
        '\u294B': exports.MO.RELACCENT,
        '\u294C': exports.MO.REL,
        '\u294D': exports.MO.REL,
        '\u294E': exports.MO.WIDEREL,
        '\u294F': exports.MO.RELSTRETCH,
        '\u2950': exports.MO.WIDEREL,
        '\u2951': exports.MO.RELSTRETCH,
        '\u2952': exports.MO.WIDEREL,
        '\u2953': exports.MO.WIDEREL,
        '\u2954': exports.MO.RELSTRETCH,
        '\u2955': exports.MO.RELSTRETCH,
        '\u2956': exports.MO.RELSTRETCH,
        '\u2957': exports.MO.RELSTRETCH,
        '\u2958': exports.MO.RELSTRETCH,
        '\u2959': exports.MO.RELSTRETCH,
        '\u295A': exports.MO.WIDEREL,
        '\u295B': exports.MO.WIDEREL,
        '\u295C': exports.MO.RELSTRETCH,
        '\u295D': exports.MO.RELSTRETCH,
        '\u295E': exports.MO.WIDEREL,
        '\u295F': exports.MO.WIDEREL,
        '\u2960': exports.MO.RELSTRETCH,
        '\u2961': exports.MO.RELSTRETCH,
        '\u2962': exports.MO.RELACCENT,
        '\u2963': exports.MO.REL,
        '\u2964': exports.MO.RELACCENT,
        '\u2965': exports.MO.REL,
        '\u2966': exports.MO.RELACCENT,
        '\u2967': exports.MO.RELACCENT,
        '\u2968': exports.MO.RELACCENT,
        '\u2969': exports.MO.RELACCENT,
        '\u296A': exports.MO.RELACCENT,
        '\u296B': exports.MO.RELACCENT,
        '\u296C': exports.MO.RELACCENT,
        '\u296D': exports.MO.RELACCENT,
        '\u296E': exports.MO.RELSTRETCH,
        '\u296F': exports.MO.RELSTRETCH,
        '\u2970': exports.MO.RELACCENT,
        '\u2971': exports.MO.RELACCENT,
        '\u2972': exports.MO.RELACCENT,
        '\u2973': exports.MO.RELACCENT,
        '\u2974': exports.MO.RELACCENT,
        '\u2975': exports.MO.RELACCENT,
        '\u2976': exports.MO.RELACCENT,
        '\u2977': exports.MO.RELACCENT,
        '\u2978': exports.MO.RELACCENT,
        '\u2979': exports.MO.RELACCENT,
        '\u297A': exports.MO.RELACCENT,
        '\u297B': exports.MO.RELACCENT,
        '\u297C': exports.MO.RELACCENT,
        '\u297D': exports.MO.RELACCENT,
        '\u297E': exports.MO.REL,
        '\u297F': exports.MO.REL,
        '\u2981': exports.MO.BIN3,
        '\u2982': exports.MO.BIN3,
        '\u2999': exports.MO.BIN3,
        '\u299A': exports.MO.BIN3,
        '\u299B': exports.MO.BIN3,
        '\u299C': exports.MO.BIN3,
        '\u299D': exports.MO.BIN3,
        '\u299E': exports.MO.BIN3,
        '\u299F': exports.MO.BIN3,
        '\u29A0': exports.MO.BIN3,
        '\u29A1': exports.MO.BIN3,
        '\u29A2': exports.MO.BIN3,
        '\u29A3': exports.MO.BIN3,
        '\u29A4': exports.MO.BIN3,
        '\u29A5': exports.MO.BIN3,
        '\u29A6': exports.MO.BIN3,
        '\u29A7': exports.MO.BIN3,
        '\u29A8': exports.MO.BIN3,
        '\u29A9': exports.MO.BIN3,
        '\u29AA': exports.MO.BIN3,
        '\u29AB': exports.MO.BIN3,
        '\u29AC': exports.MO.BIN3,
        '\u29AD': exports.MO.BIN3,
        '\u29AE': exports.MO.BIN3,
        '\u29AF': exports.MO.BIN3,
        '\u29B0': exports.MO.BIN3,
        '\u29B1': exports.MO.BIN3,
        '\u29B2': exports.MO.BIN3,
        '\u29B3': exports.MO.BIN3,
        '\u29B4': exports.MO.BIN3,
        '\u29B5': exports.MO.BIN3,
        '\u29B6': exports.MO.BIN4,
        '\u29B7': exports.MO.BIN4,
        '\u29B8': exports.MO.BIN4,
        '\u29B9': exports.MO.BIN4,
        '\u29BA': exports.MO.BIN4,
        '\u29BB': exports.MO.BIN4,
        '\u29BC': exports.MO.BIN4,
        '\u29BD': exports.MO.BIN4,
        '\u29BE': exports.MO.BIN4,
        '\u29BF': exports.MO.BIN4,
        '\u29C0': exports.MO.REL,
        '\u29C1': exports.MO.REL,
        '\u29C2': exports.MO.BIN3,
        '\u29C3': exports.MO.BIN3,
        '\u29C4': exports.MO.BIN4,
        '\u29C5': exports.MO.BIN4,
        '\u29C6': exports.MO.BIN4,
        '\u29C7': exports.MO.BIN4,
        '\u29C8': exports.MO.BIN4,
        '\u29C9': exports.MO.BIN3,
        '\u29CA': exports.MO.BIN3,
        '\u29CB': exports.MO.BIN3,
        '\u29CC': exports.MO.BIN3,
        '\u29CD': exports.MO.BIN3,
        '\u29CE': exports.MO.REL,
        '\u29CF': exports.MO.REL,
        '\u29CF\u0338': exports.MO.REL,
        '\u29D0': exports.MO.REL,
        '\u29D0\u0338': exports.MO.REL,
        '\u29D1': exports.MO.REL,
        '\u29D2': exports.MO.REL,
        '\u29D3': exports.MO.REL,
        '\u29D4': exports.MO.REL,
        '\u29D5': exports.MO.REL,
        '\u29D6': exports.MO.BIN4,
        '\u29D7': exports.MO.BIN4,
        '\u29D8': exports.MO.BIN3,
        '\u29D9': exports.MO.BIN3,
        '\u29DB': exports.MO.BIN3,
        '\u29DC': exports.MO.BIN3,
        '\u29DD': exports.MO.BIN3,
        '\u29DE': exports.MO.REL,
        '\u29DF': exports.MO.BIN3,
        '\u29E0': exports.MO.BIN3,
        '\u29E1': exports.MO.REL,
        '\u29E2': exports.MO.BIN4,
        '\u29E3': exports.MO.REL,
        '\u29E4': exports.MO.REL,
        '\u29E5': exports.MO.REL,
        '\u29E6': exports.MO.REL,
        '\u29E7': exports.MO.BIN3,
        '\u29E8': exports.MO.BIN3,
        '\u29E9': exports.MO.BIN3,
        '\u29EA': exports.MO.BIN3,
        '\u29EB': exports.MO.BIN3,
        '\u29EC': exports.MO.BIN3,
        '\u29ED': exports.MO.BIN3,
        '\u29EE': exports.MO.BIN3,
        '\u29EF': exports.MO.BIN3,
        '\u29F0': exports.MO.BIN3,
        '\u29F1': exports.MO.BIN3,
        '\u29F2': exports.MO.BIN3,
        '\u29F3': exports.MO.BIN3,
        '\u29F4': exports.MO.REL,
        '\u29F5': exports.MO.BIN4,
        '\u29F6': exports.MO.BIN4,
        '\u29F7': exports.MO.BIN4,
        '\u29F8': exports.MO.BIN3,
        '\u29F9': exports.MO.BIN3,
        '\u29FA': exports.MO.BIN3,
        '\u29FB': exports.MO.BIN3,
        '\u29FE': exports.MO.BIN4,
        '\u29FF': exports.MO.BIN4,
        '\u2A1D': exports.MO.BIN3,
        '\u2A1E': exports.MO.BIN3,
        '\u2A1F': exports.MO.BIN3,
        '\u2A20': exports.MO.BIN3,
        '\u2A21': exports.MO.BIN3,
        '\u2A22': exports.MO.BIN4,
        '\u2A23': exports.MO.BIN4,
        '\u2A24': exports.MO.BIN4,
        '\u2A25': exports.MO.BIN4,
        '\u2A26': exports.MO.BIN4,
        '\u2A27': exports.MO.BIN4,
        '\u2A28': exports.MO.BIN4,
        '\u2A29': exports.MO.BIN4,
        '\u2A2A': exports.MO.BIN4,
        '\u2A2B': exports.MO.BIN4,
        '\u2A2C': exports.MO.BIN4,
        '\u2A2D': exports.MO.BIN4,
        '\u2A2E': exports.MO.BIN4,
        '\u2A2F': exports.MO.BIN4,
        '\u2A30': exports.MO.BIN4,
        '\u2A31': exports.MO.BIN4,
        '\u2A32': exports.MO.BIN4,
        '\u2A33': exports.MO.BIN4,
        '\u2A34': exports.MO.BIN4,
        '\u2A35': exports.MO.BIN4,
        '\u2A36': exports.MO.BIN4,
        '\u2A37': exports.MO.BIN4,
        '\u2A38': exports.MO.BIN4,
        '\u2A39': exports.MO.BIN4,
        '\u2A3A': exports.MO.BIN4,
        '\u2A3B': exports.MO.BIN4,
        '\u2A3C': exports.MO.BIN4,
        '\u2A3D': exports.MO.BIN4,
        '\u2A3E': exports.MO.BIN4,
        '\u2A3F': exports.MO.BIN4,
        '\u2A40': exports.MO.BIN4,
        '\u2A41': exports.MO.BIN4,
        '\u2A42': exports.MO.BIN4,
        '\u2A43': exports.MO.BIN4,
        '\u2A44': exports.MO.BIN4,
        '\u2A45': exports.MO.BIN4,
        '\u2A46': exports.MO.BIN4,
        '\u2A47': exports.MO.BIN4,
        '\u2A48': exports.MO.BIN4,
        '\u2A49': exports.MO.BIN4,
        '\u2A4A': exports.MO.BIN4,
        '\u2A4B': exports.MO.BIN4,
        '\u2A4C': exports.MO.BIN4,
        '\u2A4D': exports.MO.BIN4,
        '\u2A4E': exports.MO.BIN4,
        '\u2A4F': exports.MO.BIN4,
        '\u2A50': exports.MO.BIN4,
        '\u2A51': exports.MO.BIN4,
        '\u2A52': exports.MO.BIN4,
        '\u2A53': exports.MO.BIN4,
        '\u2A54': exports.MO.BIN4,
        '\u2A55': exports.MO.BIN4,
        '\u2A56': exports.MO.BIN4,
        '\u2A57': exports.MO.BIN4,
        '\u2A58': exports.MO.BIN4,
        '\u2A59': exports.MO.REL,
        '\u2A5A': exports.MO.BIN4,
        '\u2A5B': exports.MO.BIN4,
        '\u2A5C': exports.MO.BIN4,
        '\u2A5D': exports.MO.BIN4,
        '\u2A5E': exports.MO.BIN4,
        '\u2A5F': exports.MO.BIN4,
        '\u2A60': exports.MO.BIN4,
        '\u2A61': exports.MO.BIN4,
        '\u2A62': exports.MO.BIN4,
        '\u2A63': exports.MO.BIN4,
        '\u2A64': exports.MO.BIN4,
        '\u2A65': exports.MO.BIN4,
        '\u2A66': exports.MO.REL,
        '\u2A67': exports.MO.REL,
        '\u2A68': exports.MO.REL,
        '\u2A69': exports.MO.REL,
        '\u2A6A': exports.MO.REL,
        '\u2A6B': exports.MO.REL,
        '\u2A6C': exports.MO.REL,
        '\u2A6D': exports.MO.REL,
        '\u2A6E': exports.MO.REL,
        '\u2A6F': exports.MO.REL,
        '\u2A70': exports.MO.REL,
        '\u2A71': exports.MO.BIN4,
        '\u2A72': exports.MO.BIN4,
        '\u2A73': exports.MO.REL,
        '\u2A74': exports.MO.REL,
        '\u2A75': exports.MO.REL,
        '\u2A76': exports.MO.REL,
        '\u2A77': exports.MO.REL,
        '\u2A78': exports.MO.REL,
        '\u2A79': exports.MO.REL,
        '\u2A7A': exports.MO.REL,
        '\u2A7B': exports.MO.REL,
        '\u2A7C': exports.MO.REL,
        '\u2A7D': exports.MO.REL,
        '\u2A7D\u0338': exports.MO.REL,
        '\u2A7E': exports.MO.REL,
        '\u2A7E\u0338': exports.MO.REL,
        '\u2A7F': exports.MO.REL,
        '\u2A80': exports.MO.REL,
        '\u2A81': exports.MO.REL,
        '\u2A82': exports.MO.REL,
        '\u2A83': exports.MO.REL,
        '\u2A84': exports.MO.REL,
        '\u2A85': exports.MO.REL,
        '\u2A86': exports.MO.REL,
        '\u2A87': exports.MO.REL,
        '\u2A88': exports.MO.REL,
        '\u2A89': exports.MO.REL,
        '\u2A8A': exports.MO.REL,
        '\u2A8B': exports.MO.REL,
        '\u2A8C': exports.MO.REL,
        '\u2A8D': exports.MO.REL,
        '\u2A8E': exports.MO.REL,
        '\u2A8F': exports.MO.REL,
        '\u2A90': exports.MO.REL,
        '\u2A91': exports.MO.REL,
        '\u2A92': exports.MO.REL,
        '\u2A93': exports.MO.REL,
        '\u2A94': exports.MO.REL,
        '\u2A95': exports.MO.REL,
        '\u2A96': exports.MO.REL,
        '\u2A97': exports.MO.REL,
        '\u2A98': exports.MO.REL,
        '\u2A99': exports.MO.REL,
        '\u2A9A': exports.MO.REL,
        '\u2A9B': exports.MO.REL,
        '\u2A9C': exports.MO.REL,
        '\u2A9D': exports.MO.REL,
        '\u2A9E': exports.MO.REL,
        '\u2A9F': exports.MO.REL,
        '\u2AA0': exports.MO.REL,
        '\u2AA1': exports.MO.REL,
        '\u2AA1\u0338': exports.MO.REL,
        '\u2AA2': exports.MO.REL,
        '\u2AA2\u0338': exports.MO.REL,
        '\u2AA3': exports.MO.REL,
        '\u2AA4': exports.MO.REL,
        '\u2AA5': exports.MO.REL,
        '\u2AA6': exports.MO.REL,
        '\u2AA7': exports.MO.REL,
        '\u2AA8': exports.MO.REL,
        '\u2AA9': exports.MO.REL,
        '\u2AAA': exports.MO.REL,
        '\u2AAB': exports.MO.REL,
        '\u2AAC': exports.MO.REL,
        '\u2AAD': exports.MO.REL,
        '\u2AAE': exports.MO.REL,
        '\u2AAF': exports.MO.REL,
        '\u2AAF\u0338': exports.MO.REL,
        '\u2AB0': exports.MO.REL,
        '\u2AB0\u0338': exports.MO.REL,
        '\u2AB1': exports.MO.REL,
        '\u2AB2': exports.MO.REL,
        '\u2AB3': exports.MO.REL,
        '\u2AB4': exports.MO.REL,
        '\u2AB5': exports.MO.REL,
        '\u2AB6': exports.MO.REL,
        '\u2AB7': exports.MO.REL,
        '\u2AB8': exports.MO.REL,
        '\u2AB9': exports.MO.REL,
        '\u2ABA': exports.MO.REL,
        '\u2ABB': exports.MO.REL,
        '\u2ABC': exports.MO.REL,
        '\u2ABD': exports.MO.REL,
        '\u2ABE': exports.MO.REL,
        '\u2ABF': exports.MO.REL,
        '\u2AC0': exports.MO.REL,
        '\u2AC1': exports.MO.REL,
        '\u2AC2': exports.MO.REL,
        '\u2AC3': exports.MO.REL,
        '\u2AC4': exports.MO.REL,
        '\u2AC5': exports.MO.REL,
        '\u2AC6': exports.MO.REL,
        '\u2AC7': exports.MO.REL,
        '\u2AC8': exports.MO.REL,
        '\u2AC9': exports.MO.REL,
        '\u2ACA': exports.MO.REL,
        '\u2ACB': exports.MO.REL,
        '\u2ACC': exports.MO.REL,
        '\u2ACD': exports.MO.REL,
        '\u2ACE': exports.MO.REL,
        '\u2ACF': exports.MO.REL,
        '\u2AD0': exports.MO.REL,
        '\u2AD1': exports.MO.REL,
        '\u2AD2': exports.MO.REL,
        '\u2AD3': exports.MO.REL,
        '\u2AD4': exports.MO.REL,
        '\u2AD5': exports.MO.REL,
        '\u2AD6': exports.MO.REL,
        '\u2AD7': exports.MO.REL,
        '\u2AD8': exports.MO.REL,
        '\u2AD9': exports.MO.REL,
        '\u2ADA': exports.MO.REL,
        '\u2ADB': exports.MO.REL,
        '\u2ADD': exports.MO.REL,
        '\u2ADD\u0338': exports.MO.REL,
        '\u2ADE': exports.MO.REL,
        '\u2ADF': exports.MO.REL,
        '\u2AE0': exports.MO.REL,
        '\u2AE1': exports.MO.REL,
        '\u2AE2': exports.MO.REL,
        '\u2AE3': exports.MO.REL,
        '\u2AE4': exports.MO.REL,
        '\u2AE5': exports.MO.REL,
        '\u2AE6': exports.MO.REL,
        '\u2AE7': exports.MO.REL,
        '\u2AE8': exports.MO.REL,
        '\u2AE9': exports.MO.REL,
        '\u2AEA': exports.MO.REL,
        '\u2AEB': exports.MO.REL,
        '\u2AEC': exports.MO.REL,
        '\u2AED': exports.MO.REL,
        '\u2AEE': exports.MO.REL,
        '\u2AEF': exports.MO.REL,
        '\u2AF0': exports.MO.REL,
        '\u2AF1': exports.MO.REL,
        '\u2AF2': exports.MO.REL,
        '\u2AF3': exports.MO.REL,
        '\u2AF4': exports.MO.BIN4,
        '\u2AF5': exports.MO.BIN4,
        '\u2AF6': exports.MO.BIN4,
        '\u2AF7': exports.MO.REL,
        '\u2AF8': exports.MO.REL,
        '\u2AF9': exports.MO.REL,
        '\u2AFA': exports.MO.REL,
        '\u2AFB': exports.MO.BIN4,
        '\u2AFD': exports.MO.BIN4,
        '\u2AFE': exports.MO.BIN3,
        '\u2B45': exports.MO.RELSTRETCH,
        '\u2B46': exports.MO.RELSTRETCH,
        '\u3008': exports.MO.OPEN,
        '\u3009': exports.MO.CLOSE,
        '\uFE37': exports.MO.WIDEACCENT,
        '\uFE38': exports.MO.WIDEACCENT,
    }
};
exports.OPTABLE.infix["^"] = exports.MO.WIDEREL;
exports.OPTABLE.infix._ = exports.MO.WIDEREL;
exports.OPTABLE.infix["⫝̸"] = exports.MO.REL;
//# sourceMappingURL=OperatorDictionary.js.map

/***/ }),

/***/ 9259:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SerializedMmlVisitor = exports.toEntity = exports.DATAMJX = void 0;
var MmlVisitor_js_1 = __webpack_require__(6325);
var MmlNode_js_1 = __webpack_require__(9007);
var mi_js_1 = __webpack_require__(450);
exports.DATAMJX = 'data-mjx-';
var toEntity = function (c) { return '&#x' + c.codePointAt(0).toString(16).toUpperCase() + ';'; };
exports.toEntity = toEntity;
var SerializedMmlVisitor = (function (_super) {
    __extends(SerializedMmlVisitor, _super);
    function SerializedMmlVisitor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerializedMmlVisitor.prototype.visitTree = function (node) {
        return this.visitNode(node, '');
    };
    SerializedMmlVisitor.prototype.visitTextNode = function (node, _space) {
        return this.quoteHTML(node.getText());
    };
    SerializedMmlVisitor.prototype.visitXMLNode = function (node, space) {
        return space + node.getSerializedXML();
    };
    SerializedMmlVisitor.prototype.visitInferredMrowNode = function (node, space) {
        var e_1, _a;
        var mml = [];
        try {
            for (var _b = __values(node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                mml.push(this.visitNode(child, space));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return mml.join('\n');
    };
    SerializedMmlVisitor.prototype.visitTeXAtomNode = function (node, space) {
        var children = this.childNodeMml(node, space + '  ', '\n');
        var mml = space + '<mrow' + this.getAttributes(node) + '>' +
            (children.match(/\S/) ? '\n' + children + space : '') + '</mrow>';
        return mml;
    };
    SerializedMmlVisitor.prototype.visitAnnotationNode = function (node, space) {
        return space + '<annotation' + this.getAttributes(node) + '>'
            + this.childNodeMml(node, '', '')
            + '</annotation>';
    };
    SerializedMmlVisitor.prototype.visitDefault = function (node, space) {
        var kind = node.kind;
        var _a = __read((node.isToken || node.childNodes.length === 0 ? ['', ''] : ['\n', space]), 2), nl = _a[0], endspace = _a[1];
        var children = this.childNodeMml(node, space + '  ', nl);
        return space + '<' + kind + this.getAttributes(node) + '>'
            + (children.match(/\S/) ? nl + children + endspace : '')
            + '</' + kind + '>';
    };
    SerializedMmlVisitor.prototype.childNodeMml = function (node, space, nl) {
        var e_2, _a;
        var mml = '';
        try {
            for (var _b = __values(node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                mml += this.visitNode(child, space) + nl;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return mml;
    };
    SerializedMmlVisitor.prototype.getAttributes = function (node) {
        var e_3, _a;
        var attr = [];
        var defaults = this.constructor.defaultAttributes[node.kind] || {};
        var attributes = Object.assign({}, defaults, this.getDataAttributes(node), node.attributes.getAllAttributes());
        var variants = this.constructor.variants;
        if (attributes.hasOwnProperty('mathvariant') && variants.hasOwnProperty(attributes.mathvariant)) {
            attributes.mathvariant = variants[attributes.mathvariant];
        }
        try {
            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_1 = _c.value;
                var value = String(attributes[name_1]);
                if (value === undefined)
                    continue;
                attr.push(name_1 + '="' + this.quoteHTML(value) + '"');
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return attr.length ? ' ' + attr.join(' ') : '';
    };
    SerializedMmlVisitor.prototype.getDataAttributes = function (node) {
        var data = {};
        var variant = node.attributes.getExplicit('mathvariant');
        var variants = this.constructor.variants;
        variant && variants.hasOwnProperty(variant) && this.setDataAttribute(data, 'variant', variant);
        node.getProperty('variantForm') && this.setDataAttribute(data, 'alternate', '1');
        node.getProperty('pseudoscript') && this.setDataAttribute(data, 'pseudoscript', 'true');
        node.getProperty('autoOP') === false && this.setDataAttribute(data, 'auto-op', 'false');
        var scriptalign = node.getProperty('scriptalign');
        scriptalign && this.setDataAttribute(data, 'script-align', scriptalign);
        var texclass = node.getProperty('texClass');
        if (texclass !== undefined) {
            var setclass = true;
            if (texclass === MmlNode_js_1.TEXCLASS.OP && node.isKind('mi')) {
                var name_2 = node.getText();
                setclass = !(name_2.length > 1 && name_2.match(mi_js_1.MmlMi.operatorName));
            }
            setclass && this.setDataAttribute(data, 'texclass', texclass < 0 ? 'NONE' : MmlNode_js_1.TEXCLASSNAMES[texclass]);
        }
        node.getProperty('scriptlevel') && node.getProperty('useHeight') === false &&
            this.setDataAttribute(data, 'smallmatrix', 'true');
        return data;
    };
    SerializedMmlVisitor.prototype.setDataAttribute = function (data, name, value) {
        data[exports.DATAMJX + name] = value;
    };
    SerializedMmlVisitor.prototype.quoteHTML = function (value) {
        return value
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;').replace(/>/g, '&gt;')
            .replace(/\"/g, '&quot;')
            .replace(/[\uD800-\uDBFF]./g, exports.toEntity)
            .replace(/[\u0080-\uD7FF\uE000-\uFFFF]/g, exports.toEntity);
    };
    SerializedMmlVisitor.variants = {
        '-tex-calligraphic': 'script',
        '-tex-bold-calligraphic': 'bold-script',
        '-tex-oldstyle': 'normal',
        '-tex-bold-oldstyle': 'bold',
        '-tex-mathit': 'italic'
    };
    SerializedMmlVisitor.defaultAttributes = {
        math: {
            xmlns: 'http://www.w3.org/1998/Math/MathML'
        }
    };
    return SerializedMmlVisitor;
}(MmlVisitor_js_1.MmlVisitor));
exports.SerializedMmlVisitor = SerializedMmlVisitor;
//# sourceMappingURL=SerializedMmlVisitor.js.map

/***/ }),

/***/ 2975:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractOutputJax = void 0;
var Options_js_1 = __webpack_require__(7233);
var FunctionList_js_1 = __webpack_require__(7525);
var AbstractOutputJax = (function () {
    function AbstractOutputJax(options) {
        if (options === void 0) { options = {}; }
        this.adaptor = null;
        var CLASS = this.constructor;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);
        this.postFilters = new FunctionList_js_1.FunctionList();
    }
    Object.defineProperty(AbstractOutputJax.prototype, "name", {
        get: function () {
            return this.constructor.NAME;
        },
        enumerable: false,
        configurable: true
    });
    AbstractOutputJax.prototype.setAdaptor = function (adaptor) {
        this.adaptor = adaptor;
    };
    AbstractOutputJax.prototype.initialize = function () {
    };
    AbstractOutputJax.prototype.reset = function () {
        var _args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            _args[_i] = arguments[_i];
        }
    };
    AbstractOutputJax.prototype.getMetrics = function (_document) {
    };
    AbstractOutputJax.prototype.styleSheet = function (_document) {
        return null;
    };
    AbstractOutputJax.prototype.pageElements = function (_document) {
        return null;
    };
    AbstractOutputJax.prototype.executeFilters = function (filters, math, document, data) {
        var args = { math: math, document: document, data: data };
        filters.execute(args);
        return args.data;
    };
    AbstractOutputJax.NAME = 'generic';
    AbstractOutputJax.OPTIONS = {};
    return AbstractOutputJax;
}());
exports.AbstractOutputJax = AbstractOutputJax;
//# sourceMappingURL=OutputJax.js.map

/***/ }),

/***/ 4574:
/***/ (function(__unused_webpack_module, exports) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractFactory = void 0;
var AbstractFactory = (function () {
    function AbstractFactory(nodes) {
        var e_1, _a;
        if (nodes === void 0) { nodes = null; }
        this.defaultKind = 'unknown';
        this.nodeMap = new Map();
        this.node = {};
        if (nodes === null) {
            nodes = this.constructor.defaultNodes;
        }
        try {
            for (var _b = __values(Object.keys(nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var kind = _c.value;
                this.setNodeClass(kind, nodes[kind]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    AbstractFactory.prototype.create = function (kind) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return (this.node[kind] || this.node[this.defaultKind]).apply(void 0, __spreadArray([], __read(args), false));
    };
    AbstractFactory.prototype.setNodeClass = function (kind, nodeClass) {
        this.nodeMap.set(kind, nodeClass);
        var THIS = this;
        var KIND = this.nodeMap.get(kind);
        this.node[kind] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new (KIND.bind.apply(KIND, __spreadArray([void 0, THIS], __read(args), false)))();
        };
    };
    AbstractFactory.prototype.getNodeClass = function (kind) {
        return this.nodeMap.get(kind);
    };
    AbstractFactory.prototype.deleteNodeClass = function (kind) {
        this.nodeMap.delete(kind);
        delete this.node[kind];
    };
    AbstractFactory.prototype.nodeIsKind = function (node, kind) {
        return (node instanceof this.getNodeClass(kind));
    };
    AbstractFactory.prototype.getKinds = function () {
        return Array.from(this.nodeMap.keys());
    };
    AbstractFactory.defaultNodes = {};
    return AbstractFactory;
}());
exports.AbstractFactory = AbstractFactory;
//# sourceMappingURL=Factory.js.map

/***/ }),

/***/ 4596:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractEmptyNode = exports.AbstractNode = void 0;
var AbstractNode = (function () {
    function AbstractNode(factory, properties, children) {
        var e_1, _a;
        if (properties === void 0) { properties = {}; }
        if (children === void 0) { children = []; }
        this.factory = factory;
        this.parent = null;
        this.properties = {};
        this.childNodes = [];
        try {
            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_1 = _c.value;
                this.setProperty(name_1, properties[name_1]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (children.length) {
            this.setChildren(children);
        }
    }
    Object.defineProperty(AbstractNode.prototype, "kind", {
        get: function () {
            return 'unknown';
        },
        enumerable: false,
        configurable: true
    });
    AbstractNode.prototype.setProperty = function (name, value) {
        this.properties[name] = value;
    };
    AbstractNode.prototype.getProperty = function (name) {
        return this.properties[name];
    };
    AbstractNode.prototype.getPropertyNames = function () {
        return Object.keys(this.properties);
    };
    AbstractNode.prototype.getAllProperties = function () {
        return this.properties;
    };
    AbstractNode.prototype.removeProperty = function () {
        var e_2, _a;
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        try {
            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_2 = names_1_1.value;
                delete this.properties[name_2];
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    AbstractNode.prototype.isKind = function (kind) {
        return this.factory.nodeIsKind(this, kind);
    };
    AbstractNode.prototype.setChildren = function (children) {
        var e_3, _a;
        this.childNodes = [];
        try {
            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
                var child = children_1_1.value;
                this.appendChild(child);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    AbstractNode.prototype.appendChild = function (child) {
        this.childNodes.push(child);
        child.parent = this;
        return child;
    };
    AbstractNode.prototype.replaceChild = function (newChild, oldChild) {
        var i = this.childIndex(oldChild);
        if (i !== null) {
            this.childNodes[i] = newChild;
            newChild.parent = this;
            oldChild.parent = null;
        }
        return newChild;
    };
    AbstractNode.prototype.removeChild = function (child) {
        var i = this.childIndex(child);
        if (i !== null) {
            this.childNodes.splice(i, 1);
            child.parent = null;
        }
        return child;
    };
    AbstractNode.prototype.childIndex = function (node) {
        var i = this.childNodes.indexOf(node);
        return (i === -1 ? null : i);
    };
    AbstractNode.prototype.copy = function () {
        var e_4, _a;
        var node = this.factory.create(this.kind);
        node.properties = __assign({}, this.properties);
        try {
            for (var _b = __values(this.childNodes || []), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child) {
                    node.appendChild(child.copy());
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return node;
    };
    AbstractNode.prototype.findNodes = function (kind) {
        var nodes = [];
        this.walkTree(function (node) {
            if (node.isKind(kind)) {
                nodes.push(node);
            }
        });
        return nodes;
    };
    AbstractNode.prototype.walkTree = function (func, data) {
        var e_5, _a;
        func(this, data);
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child) {
                    child.walkTree(func, data);
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
        return data;
    };
    AbstractNode.prototype.toString = function () {
        return this.kind + '(' + this.childNodes.join(',') + ')';
    };
    return AbstractNode;
}());
exports.AbstractNode = AbstractNode;
var AbstractEmptyNode = (function (_super) {
    __extends(AbstractEmptyNode, _super);
    function AbstractEmptyNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractEmptyNode.prototype.setChildren = function (_children) {
    };
    AbstractEmptyNode.prototype.appendChild = function (child) {
        return child;
    };
    AbstractEmptyNode.prototype.replaceChild = function (_newChild, oldChild) {
        return oldChild;
    };
    AbstractEmptyNode.prototype.childIndex = function (_node) {
        return null;
    };
    AbstractEmptyNode.prototype.walkTree = function (func, data) {
        func(this, data);
        return data;
    };
    AbstractEmptyNode.prototype.toString = function () {
        return this.kind;
    };
    return AbstractEmptyNode;
}(AbstractNode));
exports.AbstractEmptyNode = AbstractEmptyNode;
//# sourceMappingURL=Node.js.map

/***/ }),

/***/ 7860:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractNodeFactory = void 0;
var Factory_js_1 = __webpack_require__(4574);
var AbstractNodeFactory = (function (_super) {
    __extends(AbstractNodeFactory, _super);
    function AbstractNodeFactory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractNodeFactory.prototype.create = function (kind, properties, children) {
        if (properties === void 0) { properties = {}; }
        if (children === void 0) { children = []; }
        return this.node[kind](properties, children);
    };
    return AbstractNodeFactory;
}(Factory_js_1.AbstractFactory));
exports.AbstractNodeFactory = AbstractNodeFactory;
//# sourceMappingURL=NodeFactory.js.map

/***/ }),

/***/ 8823:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractVisitor = void 0;
var Node_js_1 = __webpack_require__(4596);
var AbstractVisitor = (function () {
    function AbstractVisitor(factory) {
        var e_1, _a;
        this.nodeHandlers = new Map();
        try {
            for (var _b = __values(factory.getKinds()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var kind = _c.value;
                var method = this[AbstractVisitor.methodName(kind)];
                if (method) {
                    this.nodeHandlers.set(kind, method);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    AbstractVisitor.methodName = function (kind) {
        return 'visit' + (kind.charAt(0).toUpperCase() + kind.substr(1)).replace(/[^a-z0-9_]/ig, '_') + 'Node';
    };
    AbstractVisitor.prototype.visitTree = function (tree) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return this.visitNode.apply(this, __spreadArray([tree], __read(args), false));
    };
    AbstractVisitor.prototype.visitNode = function (node) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var handler = this.nodeHandlers.get(node.kind) || this.visitDefault;
        return handler.call.apply(handler, __spreadArray([this, node], __read(args), false));
    };
    AbstractVisitor.prototype.visitDefault = function (node) {
        var e_2, _a;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (node instanceof Node_js_1.AbstractNode) {
            try {
                for (var _b = __values(node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    this.visitNode.apply(this, __spreadArray([child], __read(args), false));
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    };
    AbstractVisitor.prototype.setNodeHandler = function (kind, handler) {
        this.nodeHandlers.set(kind, handler);
    };
    AbstractVisitor.prototype.removeNodeHandler = function (kind) {
        this.nodeHandlers.delete(kind);
    };
    return AbstractVisitor;
}());
exports.AbstractVisitor = AbstractVisitor;
//# sourceMappingURL=Visitor.js.map

/***/ }),

/***/ 8912:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractWrapper = void 0;
var AbstractWrapper = (function () {
    function AbstractWrapper(factory, node) {
        this.factory = factory;
        this.node = node;
    }
    Object.defineProperty(AbstractWrapper.prototype, "kind", {
        get: function () {
            return this.node.kind;
        },
        enumerable: false,
        configurable: true
    });
    AbstractWrapper.prototype.wrap = function (node) {
        return this.factory.wrap(node);
    };
    return AbstractWrapper;
}());
exports.AbstractWrapper = AbstractWrapper;
//# sourceMappingURL=Wrapper.js.map

/***/ }),

/***/ 3811:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractWrapperFactory = void 0;
var Factory_js_1 = __webpack_require__(4574);
var AbstractWrapperFactory = (function (_super) {
    __extends(AbstractWrapperFactory, _super);
    function AbstractWrapperFactory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractWrapperFactory.prototype.wrap = function (node) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return this.create.apply(this, __spreadArray([node.kind, node], __read(args), false));
    };
    return AbstractWrapperFactory;
}(Factory_js_1.AbstractFactory));
exports.AbstractWrapperFactory = AbstractWrapperFactory;
//# sourceMappingURL=WrapperFactory.js.map

/***/ }),

/***/ 6272:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RegisterHTMLHandler = void 0;
var mathjax_js_1 = __webpack_require__(5713);
var HTMLHandler_js_1 = __webpack_require__(3726);
function RegisterHTMLHandler(adaptor) {
    var handler = new HTMLHandler_js_1.HTMLHandler(adaptor);
    mathjax_js_1.mathjax.handlers.register(handler);
    return handler;
}
exports.RegisterHTMLHandler = RegisterHTMLHandler;
//# sourceMappingURL=html.js.map

/***/ }),

/***/ 3683:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HTMLDocument = void 0;
var MathDocument_js_1 = __webpack_require__(5722);
var Options_js_1 = __webpack_require__(7233);
var HTMLMathItem_js_1 = __webpack_require__(3363);
var HTMLMathList_js_1 = __webpack_require__(3335);
var HTMLDomStrings_js_1 = __webpack_require__(5138);
var MathItem_js_1 = __webpack_require__(4474);
var HTMLDocument = (function (_super) {
    __extends(HTMLDocument, _super);
    function HTMLDocument(document, adaptor, options) {
        var _this = this;
        var _a = __read((0, Options_js_1.separateOptions)(options, HTMLDomStrings_js_1.HTMLDomStrings.OPTIONS), 2), html = _a[0], dom = _a[1];
        _this = _super.call(this, document, adaptor, html) || this;
        _this.domStrings = _this.options['DomStrings'] || new HTMLDomStrings_js_1.HTMLDomStrings(dom);
        _this.domStrings.adaptor = adaptor;
        _this.styles = [];
        return _this;
    }
    HTMLDocument.prototype.findPosition = function (N, index, delim, nodes) {
        var e_1, _a;
        var adaptor = this.adaptor;
        try {
            for (var _b = __values(nodes[N]), _c = _b.next(); !_c.done; _c = _b.next()) {
                var list = _c.value;
                var _d = __read(list, 2), node = _d[0], n = _d[1];
                if (index <= n && adaptor.kind(node) === '#text') {
                    return { node: node, n: Math.max(index, 0), delim: delim };
                }
                index -= n;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return { node: null, n: 0, delim: delim };
    };
    HTMLDocument.prototype.mathItem = function (item, jax, nodes) {
        var math = item.math;
        var start = this.findPosition(item.n, item.start.n, item.open, nodes);
        var end = this.findPosition(item.n, item.end.n, item.close, nodes);
        return new this.options.MathItem(math, jax, item.display, start, end);
    };
    HTMLDocument.prototype.findMath = function (options) {
        var e_2, _a, e_3, _b, _c, e_4, _d, e_5, _e;
        if (!this.processed.isSet('findMath')) {
            this.adaptor.document = this.document;
            options = (0, Options_js_1.userOptions)({ elements: this.options.elements || [this.adaptor.body(this.document)] }, options);
            try {
                for (var _f = __values(this.adaptor.getElements(options['elements'], this.document)), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var container = _g.value;
                    var _h = __read([null, null], 2), strings = _h[0], nodes = _h[1];
                    try {
                        for (var _j = (e_3 = void 0, __values(this.inputJax)), _k = _j.next(); !_k.done; _k = _j.next()) {
                            var jax = _k.value;
                            var list = new (this.options['MathList'])();
                            if (jax.processStrings) {
                                if (strings === null) {
                                    _c = __read(this.domStrings.find(container), 2), strings = _c[0], nodes = _c[1];
                                }
                                try {
                                    for (var _l = (e_4 = void 0, __values(jax.findMath(strings))), _m = _l.next(); !_m.done; _m = _l.next()) {
                                        var math = _m.value;
                                        list.push(this.mathItem(math, jax, nodes));
                                    }
                                }
                                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                                finally {
                                    try {
                                        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                                    }
                                    finally { if (e_4) throw e_4.error; }
                                }
                            }
                            else {
                                try {
                                    for (var _o = (e_5 = void 0, __values(jax.findMath(container))), _p = _o.next(); !_p.done; _p = _o.next()) {
                                        var math = _p.value;
                                        var item = new this.options.MathItem(math.math, jax, math.display, math.start, math.end);
                                        list.push(item);
                                    }
                                }
                                catch (e_5_1) { e_5 = { error: e_5_1 }; }
                                finally {
                                    try {
                                        if (_p && !_p.done && (_e = _o.return)) _e.call(_o);
                                    }
                                    finally { if (e_5) throw e_5.error; }
                                }
                            }
                            this.math.merge(list);
                        }
                    }
                    catch (e_3_1) { e_3 = { error: e_3_1 }; }
                    finally {
                        try {
                            if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                        }
                        finally { if (e_3) throw e_3.error; }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
                }
                finally { if (e_2) throw e_2.error; }
            }
            this.processed.set('findMath');
        }
        return this;
    };
    HTMLDocument.prototype.updateDocument = function () {
        if (!this.processed.isSet('updateDocument')) {
            this.addPageElements();
            this.addStyleSheet();
            _super.prototype.updateDocument.call(this);
            this.processed.set('updateDocument');
        }
        return this;
    };
    HTMLDocument.prototype.addPageElements = function () {
        var body = this.adaptor.body(this.document);
        var node = this.documentPageElements();
        if (node) {
            this.adaptor.append(body, node);
        }
    };
    HTMLDocument.prototype.addStyleSheet = function () {
        var sheet = this.documentStyleSheet();
        var adaptor = this.adaptor;
        if (sheet && !adaptor.parent(sheet)) {
            var head = adaptor.head(this.document);
            var styles = this.findSheet(head, adaptor.getAttribute(sheet, 'id'));
            if (styles) {
                adaptor.replace(sheet, styles);
            }
            else {
                adaptor.append(head, sheet);
            }
        }
    };
    HTMLDocument.prototype.findSheet = function (head, id) {
        var e_6, _a;
        if (id) {
            try {
                for (var _b = __values(this.adaptor.tags(head, 'style')), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var sheet = _c.value;
                    if (this.adaptor.getAttribute(sheet, 'id') === id) {
                        return sheet;
                    }
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        return null;
    };
    HTMLDocument.prototype.removeFromDocument = function (restore) {
        var e_7, _a;
        if (restore === void 0) { restore = false; }
        if (this.processed.isSet('updateDocument')) {
            try {
                for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var math = _c.value;
                    if (math.state() >= MathItem_js_1.STATE.INSERTED) {
                        math.state(MathItem_js_1.STATE.TYPESET, restore);
                    }
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        this.processed.clear('updateDocument');
        return this;
    };
    HTMLDocument.prototype.documentStyleSheet = function () {
        return this.outputJax.styleSheet(this);
    };
    HTMLDocument.prototype.documentPageElements = function () {
        return this.outputJax.pageElements(this);
    };
    HTMLDocument.prototype.addStyles = function (styles) {
        this.styles.push(styles);
    };
    HTMLDocument.prototype.getStyles = function () {
        return this.styles;
    };
    HTMLDocument.KIND = 'HTML';
    HTMLDocument.OPTIONS = __assign(__assign({}, MathDocument_js_1.AbstractMathDocument.OPTIONS), { renderActions: (0, Options_js_1.expandable)(__assign(__assign({}, MathDocument_js_1.AbstractMathDocument.OPTIONS.renderActions), { styles: [MathItem_js_1.STATE.INSERTED + 1, '', 'updateStyleSheet', false] })), MathList: HTMLMathList_js_1.HTMLMathList, MathItem: HTMLMathItem_js_1.HTMLMathItem, DomStrings: null });
    return HTMLDocument;
}(MathDocument_js_1.AbstractMathDocument));
exports.HTMLDocument = HTMLDocument;
//# sourceMappingURL=HTMLDocument.js.map

/***/ }),

/***/ 5138:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HTMLDomStrings = void 0;
var Options_js_1 = __webpack_require__(7233);
var HTMLDomStrings = (function () {
    function HTMLDomStrings(options) {
        if (options === void 0) { options = null; }
        var CLASS = this.constructor;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);
        this.init();
        this.getPatterns();
    }
    HTMLDomStrings.prototype.init = function () {
        this.strings = [];
        this.string = '';
        this.snodes = [];
        this.nodes = [];
        this.stack = [];
    };
    HTMLDomStrings.prototype.getPatterns = function () {
        var skip = (0, Options_js_1.makeArray)(this.options['skipHtmlTags']);
        var ignore = (0, Options_js_1.makeArray)(this.options['ignoreHtmlClass']);
        var process = (0, Options_js_1.makeArray)(this.options['processHtmlClass']);
        this.skipHtmlTags = new RegExp('^(?:' + skip.join('|') + ')$', 'i');
        this.ignoreHtmlClass = new RegExp('(?:^| )(?:' + ignore.join('|') + ')(?: |$)');
        this.processHtmlClass = new RegExp('(?:^| )(?:' + process + ')(?: |$)');
    };
    HTMLDomStrings.prototype.pushString = function () {
        if (this.string.match(/\S/)) {
            this.strings.push(this.string);
            this.nodes.push(this.snodes);
        }
        this.string = '';
        this.snodes = [];
    };
    HTMLDomStrings.prototype.extendString = function (node, text) {
        this.snodes.push([node, text.length]);
        this.string += text;
    };
    HTMLDomStrings.prototype.handleText = function (node, ignore) {
        if (!ignore) {
            this.extendString(node, this.adaptor.value(node));
        }
        return this.adaptor.next(node);
    };
    HTMLDomStrings.prototype.handleTag = function (node, ignore) {
        if (!ignore) {
            var text = this.options['includeHtmlTags'][this.adaptor.kind(node)];
            this.extendString(node, text);
        }
        return this.adaptor.next(node);
    };
    HTMLDomStrings.prototype.handleContainer = function (node, ignore) {
        this.pushString();
        var cname = this.adaptor.getAttribute(node, 'class') || '';
        var tname = this.adaptor.kind(node) || '';
        var process = this.processHtmlClass.exec(cname);
        var next = node;
        if (this.adaptor.firstChild(node) && !this.adaptor.getAttribute(node, 'data-MJX') &&
            (process || !this.skipHtmlTags.exec(tname))) {
            if (this.adaptor.next(node)) {
                this.stack.push([this.adaptor.next(node), ignore]);
            }
            next = this.adaptor.firstChild(node);
            ignore = (ignore || this.ignoreHtmlClass.exec(cname)) && !process;
        }
        else {
            next = this.adaptor.next(node);
        }
        return [next, ignore];
    };
    HTMLDomStrings.prototype.handleOther = function (node, _ignore) {
        this.pushString();
        return this.adaptor.next(node);
    };
    HTMLDomStrings.prototype.find = function (node) {
        var _a, _b;
        this.init();
        var stop = this.adaptor.next(node);
        var ignore = false;
        var include = this.options['includeHtmlTags'];
        while (node && node !== stop) {
            var kind = this.adaptor.kind(node);
            if (kind === '#text') {
                node = this.handleText(node, ignore);
            }
            else if (include.hasOwnProperty(kind)) {
                node = this.handleTag(node, ignore);
            }
            else if (kind) {
                _a = __read(this.handleContainer(node, ignore), 2), node = _a[0], ignore = _a[1];
            }
            else {
                node = this.handleOther(node, ignore);
            }
            if (!node && this.stack.length) {
                this.pushString();
                _b = __read(this.stack.pop(), 2), node = _b[0], ignore = _b[1];
            }
        }
        this.pushString();
        var result = [this.strings, this.nodes];
        this.init();
        return result;
    };
    HTMLDomStrings.OPTIONS = {
        skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code', 'annotation', 'annotation-xml'],
        includeHtmlTags: { br: '\n', wbr: '', '#comment': '' },
        ignoreHtmlClass: 'mathjax_ignore',
        processHtmlClass: 'mathjax_process'
    };
    return HTMLDomStrings;
}());
exports.HTMLDomStrings = HTMLDomStrings;
//# sourceMappingURL=HTMLDomStrings.js.map

/***/ }),

/***/ 3726:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HTMLHandler = void 0;
var Handler_js_1 = __webpack_require__(3670);
var HTMLDocument_js_1 = __webpack_require__(3683);
var HTMLHandler = (function (_super) {
    __extends(HTMLHandler, _super);
    function HTMLHandler() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.documentClass = HTMLDocument_js_1.HTMLDocument;
        return _this;
    }
    HTMLHandler.prototype.handlesDocument = function (document) {
        var adaptor = this.adaptor;
        if (typeof (document) === 'string') {
            try {
                document = adaptor.parse(document, 'text/html');
            }
            catch (err) { }
        }
        if (document instanceof adaptor.window.Document ||
            document instanceof adaptor.window.HTMLElement ||
            document instanceof adaptor.window.DocumentFragment) {
            return true;
        }
        return false;
    };
    HTMLHandler.prototype.create = function (document, options) {
        var adaptor = this.adaptor;
        if (typeof (document) === 'string') {
            document = adaptor.parse(document, 'text/html');
        }
        else if (document instanceof adaptor.window.HTMLElement ||
            document instanceof adaptor.window.DocumentFragment) {
            var child = document;
            document = adaptor.parse('', 'text/html');
            adaptor.append(adaptor.body(document), child);
        }
        return _super.prototype.create.call(this, document, options);
    };
    return HTMLHandler;
}(Handler_js_1.AbstractHandler));
exports.HTMLHandler = HTMLHandler;
//# sourceMappingURL=HTMLHandler.js.map

/***/ }),

/***/ 3363:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HTMLMathItem = void 0;
var MathItem_js_1 = __webpack_require__(4474);
var HTMLMathItem = (function (_super) {
    __extends(HTMLMathItem, _super);
    function HTMLMathItem(math, jax, display, start, end) {
        if (display === void 0) { display = true; }
        if (start === void 0) { start = { node: null, n: 0, delim: '' }; }
        if (end === void 0) { end = { node: null, n: 0, delim: '' }; }
        return _super.call(this, math, jax, display, start, end) || this;
    }
    Object.defineProperty(HTMLMathItem.prototype, "adaptor", {
        get: function () {
            return this.inputJax.adaptor;
        },
        enumerable: false,
        configurable: true
    });
    HTMLMathItem.prototype.updateDocument = function (_html) {
        if (this.state() < MathItem_js_1.STATE.INSERTED) {
            if (this.inputJax.processStrings) {
                var node = this.start.node;
                if (node === this.end.node) {
                    if (this.end.n && this.end.n < this.adaptor.value(this.end.node).length) {
                        this.adaptor.split(this.end.node, this.end.n);
                    }
                    if (this.start.n) {
                        node = this.adaptor.split(this.start.node, this.start.n);
                    }
                    this.adaptor.replace(this.typesetRoot, node);
                }
                else {
                    if (this.start.n) {
                        node = this.adaptor.split(node, this.start.n);
                    }
                    while (node !== this.end.node) {
                        var next = this.adaptor.next(node);
                        this.adaptor.remove(node);
                        node = next;
                    }
                    this.adaptor.insert(this.typesetRoot, node);
                    if (this.end.n < this.adaptor.value(node).length) {
                        this.adaptor.split(node, this.end.n);
                    }
                    this.adaptor.remove(node);
                }
            }
            else {
                this.adaptor.replace(this.typesetRoot, this.start.node);
            }
            this.start.node = this.end.node = this.typesetRoot;
            this.start.n = this.end.n = 0;
            this.state(MathItem_js_1.STATE.INSERTED);
        }
    };
    HTMLMathItem.prototype.updateStyleSheet = function (document) {
        document.addStyleSheet();
    };
    HTMLMathItem.prototype.removeFromDocument = function (restore) {
        if (restore === void 0) { restore = false; }
        if (this.state() >= MathItem_js_1.STATE.TYPESET) {
            var adaptor = this.adaptor;
            var node = this.start.node;
            var math = adaptor.text('');
            if (restore) {
                var text = this.start.delim + this.math + this.end.delim;
                if (this.inputJax.processStrings) {
                    math = adaptor.text(text);
                }
                else {
                    var doc = adaptor.parse(text, 'text/html');
                    math = adaptor.firstChild(adaptor.body(doc));
                }
            }
            if (adaptor.parent(node)) {
                adaptor.replace(math, node);
            }
            this.start.node = this.end.node = math;
            this.start.n = this.end.n = 0;
        }
    };
    return HTMLMathItem;
}(MathItem_js_1.AbstractMathItem));
exports.HTMLMathItem = HTMLMathItem;
//# sourceMappingURL=HTMLMathItem.js.map

/***/ }),

/***/ 3335:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HTMLMathList = void 0;
var MathList_js_1 = __webpack_require__(9000);
var HTMLMathList = (function (_super) {
    __extends(HTMLMathList, _super);
    function HTMLMathList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return HTMLMathList;
}(MathList_js_1.AbstractMathList));
exports.HTMLMathList = HTMLMathList;
//# sourceMappingURL=HTMLMathList.js.map

/***/ }),

/***/ 8462:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TeX = void 0;
var InputJax_js_1 = __webpack_require__(9206);
var Options_js_1 = __webpack_require__(7233);
var FindTeX_js_1 = __webpack_require__(7073);
var FilterUtil_js_1 = __importDefault(__webpack_require__(4676));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var ParseOptions_js_1 = __importDefault(__webpack_require__(8562));
var Tags_js_1 = __webpack_require__(6521);
var Configuration_js_1 = __webpack_require__(9899);
__webpack_require__(2942);
var TeX = (function (_super) {
    __extends(TeX, _super);
    function TeX(options) {
        if (options === void 0) { options = {}; }
        var _this = this;
        var _a = __read((0, Options_js_1.separateOptions)(options, TeX.OPTIONS, FindTeX_js_1.FindTeX.OPTIONS), 3), rest = _a[0], tex = _a[1], find = _a[2];
        _this = _super.call(this, tex) || this;
        _this.findTeX = _this.options['FindTeX'] || new FindTeX_js_1.FindTeX(find);
        var packages = _this.options.packages;
        var configuration = _this.configuration = TeX.configure(packages);
        var parseOptions = _this._parseOptions =
            new ParseOptions_js_1.default(configuration, [_this.options, Tags_js_1.TagsFactory.OPTIONS]);
        (0, Options_js_1.userOptions)(parseOptions.options, rest);
        configuration.config(_this);
        TeX.tags(parseOptions, configuration);
        _this.postFilters.add(FilterUtil_js_1.default.cleanSubSup, -6);
        _this.postFilters.add(FilterUtil_js_1.default.setInherited, -5);
        _this.postFilters.add(FilterUtil_js_1.default.moveLimits, -4);
        _this.postFilters.add(FilterUtil_js_1.default.cleanStretchy, -3);
        _this.postFilters.add(FilterUtil_js_1.default.cleanAttributes, -2);
        _this.postFilters.add(FilterUtil_js_1.default.combineRelations, -1);
        return _this;
    }
    TeX.configure = function (packages) {
        var configuration = new Configuration_js_1.ParserConfiguration(packages, ['tex']);
        configuration.init();
        return configuration;
    };
    TeX.tags = function (options, configuration) {
        Tags_js_1.TagsFactory.addTags(configuration.tags);
        Tags_js_1.TagsFactory.setDefault(options.options.tags);
        options.tags = Tags_js_1.TagsFactory.getDefault();
        options.tags.configuration = options;
    };
    TeX.prototype.setMmlFactory = function (mmlFactory) {
        _super.prototype.setMmlFactory.call(this, mmlFactory);
        this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);
    };
    Object.defineProperty(TeX.prototype, "parseOptions", {
        get: function () {
            return this._parseOptions;
        },
        enumerable: false,
        configurable: true
    });
    TeX.prototype.reset = function (tag) {
        if (tag === void 0) { tag = 0; }
        this.parseOptions.tags.reset(tag);
    };
    TeX.prototype.compile = function (math, document) {
        this.parseOptions.clear();
        this.executeFilters(this.preFilters, math, document, this.parseOptions);
        var display = math.display;
        this.latex = math.math;
        var node;
        this.parseOptions.tags.startEquation(math);
        var globalEnv;
        try {
            var parser = new TexParser_js_1.default(this.latex, { display: display, isInner: false }, this.parseOptions);
            node = parser.mml();
            globalEnv = parser.stack.global;
        }
        catch (err) {
            if (!(err instanceof TexError_js_1.default)) {
                throw err;
            }
            this.parseOptions.error = true;
            node = this.options.formatError(this, err);
        }
        node = this.parseOptions.nodeFactory.create('node', 'math', [node]);
        if (globalEnv === null || globalEnv === void 0 ? void 0 : globalEnv.indentalign) {
            NodeUtil_js_1.default.setAttribute(node, 'indentalign', globalEnv.indentalign);
        }
        if (display) {
            NodeUtil_js_1.default.setAttribute(node, 'display', 'block');
        }
        this.parseOptions.tags.finishEquation(math);
        this.parseOptions.root = node;
        this.executeFilters(this.postFilters, math, document, this.parseOptions);
        this.mathNode = this.parseOptions.root;
        return this.mathNode;
    };
    TeX.prototype.findMath = function (strings) {
        return this.findTeX.findMath(strings);
    };
    TeX.prototype.formatError = function (err) {
        var message = err.message.replace(/\n.*/, '');
        return this.parseOptions.nodeFactory.create('error', message, err.id, this.latex);
    };
    TeX.NAME = 'TeX';
    TeX.OPTIONS = __assign(__assign({}, InputJax_js_1.AbstractInputJax.OPTIONS), { FindTeX: null, packages: ['base'], digits: /^(?:[0-9]+(?:\{,\}[0-9]{3})*(?:\.[0-9]*)?|\.[0-9]+)/, maxBuffer: 5 * 1024, formatError: function (jax, err) { return jax.formatError(err); } });
    return TeX;
}(InputJax_js_1.AbstractInputJax));
exports.TeX = TeX;
//# sourceMappingURL=tex.js.map

/***/ }),

/***/ 210:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllPackages = void 0;
__webpack_require__(2942);
__webpack_require__(8174);
__webpack_require__(8021);
__webpack_require__(583);
__webpack_require__(1186);
__webpack_require__(8603);
__webpack_require__(6538);
__webpack_require__(9499);
__webpack_require__(8963);
__webpack_require__(3752);
__webpack_require__(8227);
__webpack_require__(5860);
__webpack_require__(6628);
__webpack_require__(6648);
__webpack_require__(8458);
__webpack_require__(5464);
__webpack_require__(1428);
__webpack_require__(6121);
__webpack_require__(3078);
__webpack_require__(8901);
__webpack_require__(7535);
__webpack_require__(6944);
__webpack_require__(1496);
__webpack_require__(4234);
__webpack_require__(4898);
__webpack_require__(3168);
__webpack_require__(9365);
__webpack_require__(1527);
__webpack_require__(2307);
__webpack_require__(2675);
__webpack_require__(1442);
__webpack_require__(6841);
__webpack_require__(1247);
if (typeof MathJax !== 'undefined' && MathJax.loader) {
    MathJax.loader.preLoad('[tex]/action', '[tex]/ams', '[tex]/amscd', '[tex]/bbox', '[tex]/boldsymbol', '[tex]/braket', '[tex]/bussproofs', '[tex]/cancel', '[tex]/cases', '[tex]/centernot', '[tex]/color', '[tex]/colorv2', '[tex]/colortbl', '[tex]/empheq', '[tex]/enclose', '[tex]/extpfeil', '[tex]/gensymb', '[tex]/html', '[tex]/mathtools', '[tex]/mhchem', '[tex]/newcommand', '[tex]/noerrors', '[tex]/noundefined', '[tex]/physics', '[tex]/upgreek', '[tex]/unicode', '[tex]/verb', '[tex]/configmacros', '[tex]/tagformat', '[tex]/textcomp', '[tex]/textmacros', '[tex]/setoptions');
}
exports.AllPackages = [
    'base',
    'action',
    'ams',
    'amscd',
    'bbox',
    'boldsymbol',
    'braket',
    'bussproofs',
    'cancel',
    'cases',
    'centernot',
    'color',
    'colortbl',
    'empheq',
    'enclose',
    'extpfeil',
    'gensymb',
    'html',
    'mathtools',
    'mhchem',
    'newcommand',
    'noerrors',
    'noundefined',
    'upgreek',
    'unicode',
    'verb',
    'configmacros',
    'tagformat',
    'textcomp',
    'textmacros'
];
//# sourceMappingURL=AllPackages.js.map

/***/ }),

/***/ 9899:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ParserConfiguration = exports.ConfigurationHandler = exports.Configuration = void 0;
var Options_js_1 = __webpack_require__(7233);
var MapHandler_js_1 = __webpack_require__(2947);
var FunctionList_js_1 = __webpack_require__(7525);
var PrioritizedList_js_1 = __webpack_require__(8666);
var Tags_js_1 = __webpack_require__(6521);
var Configuration = (function () {
    function Configuration(name, handler, fallback, items, tags, options, nodes, preprocessors, postprocessors, initMethod, configMethod, priority, parser) {
        if (handler === void 0) { handler = {}; }
        if (fallback === void 0) { fallback = {}; }
        if (items === void 0) { items = {}; }
        if (tags === void 0) { tags = {}; }
        if (options === void 0) { options = {}; }
        if (nodes === void 0) { nodes = {}; }
        if (preprocessors === void 0) { preprocessors = []; }
        if (postprocessors === void 0) { postprocessors = []; }
        if (initMethod === void 0) { initMethod = null; }
        if (configMethod === void 0) { configMethod = null; }
        this.name = name;
        this.handler = handler;
        this.fallback = fallback;
        this.items = items;
        this.tags = tags;
        this.options = options;
        this.nodes = nodes;
        this.preprocessors = preprocessors;
        this.postprocessors = postprocessors;
        this.initMethod = initMethod;
        this.configMethod = configMethod;
        this.priority = priority;
        this.parser = parser;
        this.handler = Object.assign({ character: [], delimiter: [], macro: [], environment: [] }, handler);
    }
    Configuration.makeProcessor = function (func, priority) {
        return Array.isArray(func) ? func : [func, priority];
    };
    Configuration._create = function (name, config) {
        var _this = this;
        if (config === void 0) { config = {}; }
        var priority = config.priority || PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY;
        var init = config.init ? this.makeProcessor(config.init, priority) : null;
        var conf = config.config ? this.makeProcessor(config.config, priority) : null;
        var preprocessors = (config.preprocessors || []).map(function (pre) { return _this.makeProcessor(pre, priority); });
        var postprocessors = (config.postprocessors || []).map(function (post) { return _this.makeProcessor(post, priority); });
        var parser = config.parser || 'tex';
        return new Configuration(name, config.handler || {}, config.fallback || {}, config.items || {}, config.tags || {}, config.options || {}, config.nodes || {}, preprocessors, postprocessors, init, conf, priority, parser);
    };
    Configuration.create = function (name, config) {
        if (config === void 0) { config = {}; }
        var configuration = Configuration._create(name, config);
        ConfigurationHandler.set(name, configuration);
        return configuration;
    };
    Configuration.local = function (config) {
        if (config === void 0) { config = {}; }
        return Configuration._create('', config);
    };
    Object.defineProperty(Configuration.prototype, "init", {
        get: function () {
            return this.initMethod ? this.initMethod[0] : null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "config", {
        get: function () {
            return this.configMethod ? this.configMethod[0] : null;
        },
        enumerable: false,
        configurable: true
    });
    return Configuration;
}());
exports.Configuration = Configuration;
var ConfigurationHandler;
(function (ConfigurationHandler) {
    var maps = new Map();
    ConfigurationHandler.set = function (name, map) {
        maps.set(name, map);
    };
    ConfigurationHandler.get = function (name) {
        return maps.get(name);
    };
    ConfigurationHandler.keys = function () {
        return maps.keys();
    };
})(ConfigurationHandler = exports.ConfigurationHandler || (exports.ConfigurationHandler = {}));
var ParserConfiguration = (function () {
    function ParserConfiguration(packages, parsers) {
        var e_1, _a, e_2, _b;
        if (parsers === void 0) { parsers = ['tex']; }
        this.initMethod = new FunctionList_js_1.FunctionList();
        this.configMethod = new FunctionList_js_1.FunctionList();
        this.configurations = new PrioritizedList_js_1.PrioritizedList();
        this.parsers = [];
        this.handlers = new MapHandler_js_1.SubHandlers();
        this.items = {};
        this.tags = {};
        this.options = {};
        this.nodes = {};
        this.parsers = parsers;
        try {
            for (var _c = __values(packages.slice().reverse()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var pkg = _d.value;
                this.addPackage(pkg);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _e = __values(this.configurations), _f = _e.next(); !_f.done; _f = _e.next()) {
                var _g = _f.value, config = _g.item, priority = _g.priority;
                this.append(config, priority);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
    }
    ParserConfiguration.prototype.init = function () {
        this.initMethod.execute(this);
    };
    ParserConfiguration.prototype.config = function (jax) {
        var e_3, _a;
        this.configMethod.execute(this, jax);
        try {
            for (var _b = __values(this.configurations), _c = _b.next(); !_c.done; _c = _b.next()) {
                var config = _c.value;
                this.addFilters(jax, config.item);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    ParserConfiguration.prototype.addPackage = function (pkg) {
        var name = typeof pkg === 'string' ? pkg : pkg[0];
        var conf = this.getPackage(name);
        conf && this.configurations.add(conf, typeof pkg === 'string' ? conf.priority : pkg[1]);
    };
    ParserConfiguration.prototype.add = function (name, jax, options) {
        var e_4, _a;
        if (options === void 0) { options = {}; }
        var config = this.getPackage(name);
        this.append(config);
        this.configurations.add(config, config.priority);
        this.init();
        var parser = jax.parseOptions;
        parser.nodeFactory.setCreators(config.nodes);
        try {
            for (var _b = __values(Object.keys(config.items)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var kind = _c.value;
                parser.itemFactory.setNodeClass(kind, config.items[kind]);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        Tags_js_1.TagsFactory.addTags(config.tags);
        (0, Options_js_1.defaultOptions)(parser.options, config.options);
        (0, Options_js_1.userOptions)(parser.options, options);
        this.addFilters(jax, config);
        if (config.config) {
            config.config(this, jax);
        }
    };
    ParserConfiguration.prototype.getPackage = function (name) {
        var config = ConfigurationHandler.get(name);
        if (config && this.parsers.indexOf(config.parser) < 0) {
            throw Error("Package ".concat(name, " doesn't target the proper parser"));
        }
        return config;
    };
    ParserConfiguration.prototype.append = function (config, priority) {
        priority = priority || config.priority;
        if (config.initMethod) {
            this.initMethod.add(config.initMethod[0], config.initMethod[1]);
        }
        if (config.configMethod) {
            this.configMethod.add(config.configMethod[0], config.configMethod[1]);
        }
        this.handlers.add(config.handler, config.fallback, priority);
        Object.assign(this.items, config.items);
        Object.assign(this.tags, config.tags);
        (0, Options_js_1.defaultOptions)(this.options, config.options);
        Object.assign(this.nodes, config.nodes);
    };
    ParserConfiguration.prototype.addFilters = function (jax, config) {
        var e_5, _a, e_6, _b;
        try {
            for (var _c = __values(config.preprocessors), _d = _c.next(); !_d.done; _d = _c.next()) {
                var _e = __read(_d.value, 2), pre = _e[0], priority = _e[1];
                jax.preFilters.add(pre, priority);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_5) throw e_5.error; }
        }
        try {
            for (var _f = __values(config.postprocessors), _g = _f.next(); !_g.done; _g = _f.next()) {
                var _h = __read(_g.value, 2), post = _h[0], priority = _h[1];
                jax.postFilters.add(post, priority);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_6) throw e_6.error; }
        }
    };
    return ParserConfiguration;
}());
exports.ParserConfiguration = ParserConfiguration;
//# sourceMappingURL=Configuration.js.map

/***/ }),

/***/ 4676:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var MmlNode_js_1 = __webpack_require__(9007);
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var FilterUtil;
(function (FilterUtil) {
    FilterUtil.cleanStretchy = function (arg) {
        var e_1, _a;
        var options = arg.data;
        try {
            for (var _b = __values(options.getList('fixStretchy')), _c = _b.next(); !_c.done; _c = _b.next()) {
                var mo = _c.value;
                if (NodeUtil_js_1.default.getProperty(mo, 'fixStretchy')) {
                    var symbol = NodeUtil_js_1.default.getForm(mo);
                    if (symbol && symbol[3] && symbol[3]['stretchy']) {
                        NodeUtil_js_1.default.setAttribute(mo, 'stretchy', false);
                    }
                    var parent_1 = mo.parent;
                    if (!NodeUtil_js_1.default.getTexClass(mo) && (!symbol || !symbol[2])) {
                        var texAtom = options.nodeFactory.create('node', 'TeXAtom', [mo]);
                        parent_1.replaceChild(texAtom, mo);
                        texAtom.inheritAttributesFrom(mo);
                    }
                    NodeUtil_js_1.default.removeProperties(mo, 'fixStretchy');
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    FilterUtil.cleanAttributes = function (arg) {
        var node = arg.data.root;
        node.walkTree(function (mml, _d) {
            var e_2, _a;
            var attribs = mml.attributes;
            if (!attribs) {
                return;
            }
            var keep = new Set((attribs.get('mjx-keep-attrs') || '').split(/ /));
            delete (attribs.getAllAttributes())['mjx-keep-attrs'];
            try {
                for (var _b = __values(attribs.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (!keep.has(key) && attribs.attributes[key] === mml.attributes.getInherited(key)) {
                        delete attribs.attributes[key];
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }, {});
    };
    FilterUtil.combineRelations = function (arg) {
        var e_3, _a, e_4, _b;
        var remove = [];
        try {
            for (var _c = __values(arg.data.getList('mo')), _e = _c.next(); !_e.done; _e = _c.next()) {
                var mo = _e.value;
                if (mo.getProperty('relationsCombined') || !mo.parent ||
                    (mo.parent && !NodeUtil_js_1.default.isType(mo.parent, 'mrow')) ||
                    NodeUtil_js_1.default.getTexClass(mo) !== MmlNode_js_1.TEXCLASS.REL) {
                    continue;
                }
                var mml = mo.parent;
                var m2 = void 0;
                var children = mml.childNodes;
                var next = children.indexOf(mo) + 1;
                var variantForm = NodeUtil_js_1.default.getProperty(mo, 'variantForm');
                while (next < children.length && (m2 = children[next]) &&
                    NodeUtil_js_1.default.isType(m2, 'mo') &&
                    NodeUtil_js_1.default.getTexClass(m2) === MmlNode_js_1.TEXCLASS.REL) {
                    if (variantForm === NodeUtil_js_1.default.getProperty(m2, 'variantForm') &&
                        _compareExplicit(mo, m2)) {
                        NodeUtil_js_1.default.appendChildren(mo, NodeUtil_js_1.default.getChildren(m2));
                        _copyExplicit(['stretchy', 'rspace'], mo, m2);
                        try {
                            for (var _f = (e_4 = void 0, __values(m2.getPropertyNames())), _g = _f.next(); !_g.done; _g = _f.next()) {
                                var name_1 = _g.value;
                                mo.setProperty(name_1, m2.getProperty(name_1));
                            }
                        }
                        catch (e_4_1) { e_4 = { error: e_4_1 }; }
                        finally {
                            try {
                                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                            }
                            finally { if (e_4) throw e_4.error; }
                        }
                        children.splice(next, 1);
                        remove.push(m2);
                        m2.parent = null;
                        m2.setProperty('relationsCombined', true);
                    }
                    else {
                        if (mo.attributes.getExplicit('rspace') == null) {
                            NodeUtil_js_1.default.setAttribute(mo, 'rspace', '0pt');
                        }
                        if (m2.attributes.getExplicit('lspace') == null) {
                            NodeUtil_js_1.default.setAttribute(m2, 'lspace', '0pt');
                        }
                        break;
                    }
                }
                mo.attributes.setInherited('form', mo.getForms()[0]);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_3) throw e_3.error; }
        }
        arg.data.removeFromList('mo', remove);
    };
    var _copyExplicit = function (attrs, node1, node2) {
        var attr1 = node1.attributes;
        var attr2 = node2.attributes;
        attrs.forEach(function (x) {
            var attr = attr2.getExplicit(x);
            if (attr != null) {
                attr1.set(x, attr);
            }
        });
    };
    var _compareExplicit = function (node1, node2) {
        var e_5, _a;
        var filter = function (attr, space) {
            var exp = attr.getExplicitNames();
            return exp.filter(function (x) {
                return x !== space &&
                    (x !== 'stretchy' ||
                        attr.getExplicit('stretchy'));
            });
        };
        var attr1 = node1.attributes;
        var attr2 = node2.attributes;
        var exp1 = filter(attr1, 'lspace');
        var exp2 = filter(attr2, 'rspace');
        if (exp1.length !== exp2.length) {
            return false;
        }
        try {
            for (var exp1_1 = __values(exp1), exp1_1_1 = exp1_1.next(); !exp1_1_1.done; exp1_1_1 = exp1_1.next()) {
                var name_2 = exp1_1_1.value;
                if (attr1.getExplicit(name_2) !== attr2.getExplicit(name_2)) {
                    return false;
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (exp1_1_1 && !exp1_1_1.done && (_a = exp1_1.return)) _a.call(exp1_1);
            }
            finally { if (e_5) throw e_5.error; }
        }
        return true;
    };
    var _cleanSubSup = function (options, low, up) {
        var e_6, _a;
        var remove = [];
        try {
            for (var _b = __values(options.getList('m' + low + up)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var mml = _c.value;
                var children = mml.childNodes;
                if (children[mml[low]] && children[mml[up]]) {
                    continue;
                }
                var parent_2 = mml.parent;
                var newNode = (children[mml[low]] ?
                    options.nodeFactory.create('node', 'm' + low, [children[mml.base], children[mml[low]]]) :
                    options.nodeFactory.create('node', 'm' + up, [children[mml.base], children[mml[up]]]));
                NodeUtil_js_1.default.copyAttributes(mml, newNode);
                if (parent_2) {
                    parent_2.replaceChild(newNode, mml);
                }
                else {
                    options.root = newNode;
                }
                remove.push(mml);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_6) throw e_6.error; }
        }
        options.removeFromList('m' + low + up, remove);
    };
    FilterUtil.cleanSubSup = function (arg) {
        var options = arg.data;
        if (options.error) {
            return;
        }
        _cleanSubSup(options, 'sub', 'sup');
        _cleanSubSup(options, 'under', 'over');
    };
    var _moveLimits = function (options, underover, subsup) {
        var e_7, _a;
        var remove = [];
        try {
            for (var _b = __values(options.getList(underover)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var mml = _c.value;
                if (mml.attributes.get('displaystyle')) {
                    continue;
                }
                var base = mml.childNodes[mml.base];
                var mo = base.coreMO();
                if (base.getProperty('movablelimits') && !mo.attributes.getExplicit('movablelimits')) {
                    var node = options.nodeFactory.create('node', subsup, mml.childNodes);
                    NodeUtil_js_1.default.copyAttributes(mml, node);
                    if (mml.parent) {
                        mml.parent.replaceChild(node, mml);
                    }
                    else {
                        options.root = node;
                    }
                    remove.push(mml);
                }
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
        options.removeFromList(underover, remove);
    };
    FilterUtil.moveLimits = function (arg) {
        var options = arg.data;
        _moveLimits(options, 'munderover', 'msubsup');
        _moveLimits(options, 'munder', 'msub');
        _moveLimits(options, 'mover', 'msup');
    };
    FilterUtil.setInherited = function (arg) {
        arg.data.root.setInheritedAttributes({}, arg.math['display'], 0, false);
    };
})(FilterUtil || (FilterUtil = {}));
exports["default"] = FilterUtil;
//# sourceMappingURL=FilterUtil.js.map

/***/ }),

/***/ 7073:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FindTeX = void 0;
var FindMath_js_1 = __webpack_require__(3494);
var string_js_1 = __webpack_require__(505);
var MathItem_js_1 = __webpack_require__(4474);
var FindTeX = (function (_super) {
    __extends(FindTeX, _super);
    function FindTeX(options) {
        var _this = _super.call(this, options) || this;
        _this.getPatterns();
        return _this;
    }
    FindTeX.prototype.getPatterns = function () {
        var _this = this;
        var options = this.options;
        var starts = [], parts = [], subparts = [];
        this.end = {};
        this.env = this.sub = 0;
        var i = 1;
        options['inlineMath'].forEach(function (delims) { return _this.addPattern(starts, delims, false); });
        options['displayMath'].forEach(function (delims) { return _this.addPattern(starts, delims, true); });
        if (starts.length) {
            parts.push(starts.sort(string_js_1.sortLength).join('|'));
        }
        if (options['processEnvironments']) {
            parts.push('\\\\begin\\s*\\{([^}]*)\\}');
            this.env = i;
            i++;
        }
        if (options['processEscapes']) {
            subparts.push('\\\\([\\\\$])');
        }
        if (options['processRefs']) {
            subparts.push('(\\\\(?:eq)?ref\\s*\\{[^}]*\\})');
        }
        if (subparts.length) {
            parts.push('(' + subparts.join('|') + ')');
            this.sub = i;
        }
        this.start = new RegExp(parts.join('|'), 'g');
        this.hasPatterns = (parts.length > 0);
    };
    FindTeX.prototype.addPattern = function (starts, delims, display) {
        var _a = __read(delims, 2), open = _a[0], close = _a[1];
        starts.push((0, string_js_1.quotePattern)(open));
        this.end[open] = [close, display, this.endPattern(close)];
    };
    FindTeX.prototype.endPattern = function (end, endp) {
        return new RegExp((endp || (0, string_js_1.quotePattern)(end)) + '|\\\\(?:[a-zA-Z]|.)|[{}]', 'g');
    };
    FindTeX.prototype.findEnd = function (text, n, start, end) {
        var _a = __read(end, 3), close = _a[0], display = _a[1], pattern = _a[2];
        var i = pattern.lastIndex = start.index + start[0].length;
        var match, braces = 0;
        while ((match = pattern.exec(text))) {
            if ((match[1] || match[0]) === close && braces === 0) {
                return (0, MathItem_js_1.protoItem)(start[0], text.substr(i, match.index - i), match[0], n, start.index, match.index + match[0].length, display);
            }
            else if (match[0] === '{') {
                braces++;
            }
            else if (match[0] === '}' && braces) {
                braces--;
            }
        }
        return null;
    };
    FindTeX.prototype.findMathInString = function (math, n, text) {
        var start, match;
        this.start.lastIndex = 0;
        while ((start = this.start.exec(text))) {
            if (start[this.env] !== undefined && this.env) {
                var end = '\\\\end\\s*(\\{' + (0, string_js_1.quotePattern)(start[this.env]) + '\\})';
                match = this.findEnd(text, n, start, ['{' + start[this.env] + '}', true, this.endPattern(null, end)]);
                if (match) {
                    match.math = match.open + match.math + match.close;
                    match.open = match.close = '';
                }
            }
            else if (start[this.sub] !== undefined && this.sub) {
                var math_1 = start[this.sub];
                var end = start.index + start[this.sub].length;
                if (math_1.length === 2) {
                    match = (0, MathItem_js_1.protoItem)('', math_1.substr(1), '', n, start.index, end);
                }
                else {
                    match = (0, MathItem_js_1.protoItem)('', math_1, '', n, start.index, end, false);
                }
            }
            else {
                match = this.findEnd(text, n, start, this.end[start[0]]);
            }
            if (match) {
                math.push(match);
                this.start.lastIndex = match.end.n;
            }
        }
    };
    FindTeX.prototype.findMath = function (strings) {
        var math = [];
        if (this.hasPatterns) {
            for (var i = 0, m = strings.length; i < m; i++) {
                this.findMathInString(math, i, strings[i]);
            }
        }
        return math;
    };
    FindTeX.OPTIONS = {
        inlineMath: [
            ['\\(', '\\)']
        ],
        displayMath: [
            ['$$', '$$'],
            ['\\[', '\\]']
        ],
        processEscapes: true,
        processEnvironments: true,
        processRefs: true,
    };
    return FindTeX;
}(FindMath_js_1.AbstractFindMath));
exports.FindTeX = FindTeX;
//# sourceMappingURL=FindTeX.js.map

/***/ }),

/***/ 2947:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SubHandlers = exports.SubHandler = exports.MapHandler = void 0;
var PrioritizedList_js_1 = __webpack_require__(8666);
var FunctionList_js_1 = __webpack_require__(7525);
var MapHandler;
(function (MapHandler) {
    var maps = new Map();
    MapHandler.register = function (map) {
        maps.set(map.name, map);
    };
    MapHandler.getMap = function (name) {
        return maps.get(name);
    };
})(MapHandler = exports.MapHandler || (exports.MapHandler = {}));
var SubHandler = (function () {
    function SubHandler() {
        this._configuration = new PrioritizedList_js_1.PrioritizedList();
        this._fallback = new FunctionList_js_1.FunctionList();
    }
    SubHandler.prototype.add = function (maps, fallback, priority) {
        var e_1, _a;
        if (priority === void 0) { priority = PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY; }
        try {
            for (var _b = __values(maps.slice().reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_1 = _c.value;
                var map = MapHandler.getMap(name_1);
                if (!map) {
                    this.warn('Configuration ' + name_1 + ' not found! Omitted.');
                    return;
                }
                this._configuration.add(map, priority);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (fallback) {
            this._fallback.add(fallback, priority);
        }
    };
    SubHandler.prototype.parse = function (input) {
        var e_2, _a;
        try {
            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
                var map = _c.value.item;
                var result = map.parse(input);
                if (result) {
                    return result;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        var _d = __read(input, 2), env = _d[0], symbol = _d[1];
        Array.from(this._fallback)[0].item(env, symbol);
    };
    SubHandler.prototype.lookup = function (symbol) {
        var map = this.applicable(symbol);
        return map ? map.lookup(symbol) : null;
    };
    SubHandler.prototype.contains = function (symbol) {
        return this.applicable(symbol) ? true : false;
    };
    SubHandler.prototype.toString = function () {
        var e_3, _a;
        var names = [];
        try {
            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
                var map = _c.value.item;
                names.push(map.name);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return names.join(', ');
    };
    SubHandler.prototype.applicable = function (symbol) {
        var e_4, _a;
        try {
            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
                var map = _c.value.item;
                if (map.contains(symbol)) {
                    return map;
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return null;
    };
    SubHandler.prototype.retrieve = function (name) {
        var e_5, _a;
        try {
            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
                var map = _c.value.item;
                if (map.name === name) {
                    return map;
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
        return null;
    };
    SubHandler.prototype.warn = function (message) {
        console.log('TexParser Warning: ' + message);
    };
    return SubHandler;
}());
exports.SubHandler = SubHandler;
var SubHandlers = (function () {
    function SubHandlers() {
        this.map = new Map();
    }
    SubHandlers.prototype.add = function (handlers, fallbacks, priority) {
        var e_6, _a;
        if (priority === void 0) { priority = PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY; }
        try {
            for (var _b = __values(Object.keys(handlers)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                var name_2 = key;
                var subHandler = this.get(name_2);
                if (!subHandler) {
                    subHandler = new SubHandler();
                    this.set(name_2, subHandler);
                }
                subHandler.add(handlers[name_2], fallbacks[name_2], priority);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_6) throw e_6.error; }
        }
    };
    SubHandlers.prototype.set = function (name, subHandler) {
        this.map.set(name, subHandler);
    };
    SubHandlers.prototype.get = function (name) {
        return this.map.get(name);
    };
    SubHandlers.prototype.retrieve = function (name) {
        var e_7, _a;
        try {
            for (var _b = __values(this.map.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var handler = _c.value;
                var map = handler.retrieve(name);
                if (map) {
                    return map;
                }
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
        return null;
    };
    SubHandlers.prototype.keys = function () {
        return this.map.keys();
    };
    return SubHandlers;
}());
exports.SubHandlers = SubHandlers;
//# sourceMappingURL=MapHandler.js.map

/***/ }),

/***/ 8929:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NodeFactory = void 0;
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var NodeFactory = (function () {
    function NodeFactory() {
        this.mmlFactory = null;
        this.factory = { 'node': NodeFactory.createNode,
            'token': NodeFactory.createToken,
            'text': NodeFactory.createText,
            'error': NodeFactory.createError
        };
    }
    NodeFactory.createNode = function (factory, kind, children, def, text) {
        if (children === void 0) { children = []; }
        if (def === void 0) { def = {}; }
        var node = factory.mmlFactory.create(kind);
        node.setChildren(children);
        if (text) {
            node.appendChild(text);
        }
        NodeUtil_js_1.default.setProperties(node, def);
        return node;
    };
    NodeFactory.createToken = function (factory, kind, def, text) {
        if (def === void 0) { def = {}; }
        if (text === void 0) { text = ''; }
        var textNode = factory.create('text', text);
        return factory.create('node', kind, [], def, textNode);
    };
    NodeFactory.createText = function (factory, text) {
        if (text == null) {
            return null;
        }
        return factory.mmlFactory.create('text').setText(text);
    };
    NodeFactory.createError = function (factory, message) {
        var text = factory.create('text', message);
        var mtext = factory.create('node', 'mtext', [], {}, text);
        var error = factory.create('node', 'merror', [mtext], { 'data-mjx-error': message });
        return error;
    };
    NodeFactory.prototype.setMmlFactory = function (mmlFactory) {
        this.mmlFactory = mmlFactory;
    };
    NodeFactory.prototype.set = function (kind, func) {
        this.factory[kind] = func;
    };
    NodeFactory.prototype.setCreators = function (maps) {
        for (var kind in maps) {
            this.set(kind, maps[kind]);
        }
    };
    NodeFactory.prototype.create = function (kind) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        var func = this.factory[kind] || this.factory['node'];
        var node = func.apply(void 0, __spreadArray([this, rest[0]], __read(rest.slice(1)), false));
        if (kind === 'node') {
            this.configuration.addNode(rest[0], node);
        }
        return node;
    };
    NodeFactory.prototype.get = function (kind) {
        return this.factory[kind];
    };
    return NodeFactory;
}());
exports.NodeFactory = NodeFactory;
//# sourceMappingURL=NodeFactory.js.map

/***/ }),

/***/ 1256:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var MmlNode_js_1 = __webpack_require__(9007);
var mo_js_1 = __webpack_require__(2756);
var NodeUtil;
(function (NodeUtil) {
    var attrs = new Map([
        ['autoOP', true],
        ['fnOP', true],
        ['movesupsub', true],
        ['subsupOK', true],
        ['texprimestyle', true],
        ['useHeight', true],
        ['variantForm', true],
        ['withDelims', true],
        ['mathaccent', true],
        ['open', true],
        ['close', true]
    ]);
    function createEntity(code) {
        return String.fromCodePoint(parseInt(code, 16));
    }
    NodeUtil.createEntity = createEntity;
    function getChildren(node) {
        return node.childNodes;
    }
    NodeUtil.getChildren = getChildren;
    function getText(node) {
        return node.getText();
    }
    NodeUtil.getText = getText;
    function appendChildren(node, children) {
        var e_1, _a;
        try {
            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
                var child = children_1_1.value;
                node.appendChild(child);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    NodeUtil.appendChildren = appendChildren;
    function setAttribute(node, attribute, value) {
        node.attributes.set(attribute, value);
    }
    NodeUtil.setAttribute = setAttribute;
    function setProperty(node, property, value) {
        node.setProperty(property, value);
    }
    NodeUtil.setProperty = setProperty;
    function setProperties(node, properties) {
        var e_2, _a;
        try {
            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_1 = _c.value;
                var value = properties[name_1];
                if (name_1 === 'texClass') {
                    node.texClass = value;
                    node.setProperty(name_1, value);
                }
                else if (name_1 === 'movablelimits') {
                    node.setProperty('movablelimits', value);
                    if (node.isKind('mo') || node.isKind('mstyle')) {
                        node.attributes.set('movablelimits', value);
                    }
                }
                else if (name_1 === 'inferred') {
                }
                else if (attrs.has(name_1)) {
                    node.setProperty(name_1, value);
                }
                else {
                    node.attributes.set(name_1, value);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    }
    NodeUtil.setProperties = setProperties;
    function getProperty(node, property) {
        return node.getProperty(property);
    }
    NodeUtil.getProperty = getProperty;
    function getAttribute(node, attr) {
        return node.attributes.get(attr);
    }
    NodeUtil.getAttribute = getAttribute;
    function removeProperties(node) {
        var properties = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            properties[_i - 1] = arguments[_i];
        }
        node.removeProperty.apply(node, __spreadArray([], __read(properties), false));
    }
    NodeUtil.removeProperties = removeProperties;
    function getChildAt(node, position) {
        return node.childNodes[position];
    }
    NodeUtil.getChildAt = getChildAt;
    function setChild(node, position, child) {
        var children = node.childNodes;
        children[position] = child;
        if (child) {
            child.parent = node;
        }
    }
    NodeUtil.setChild = setChild;
    function copyChildren(oldNode, newNode) {
        var children = oldNode.childNodes;
        for (var i = 0; i < children.length; i++) {
            setChild(newNode, i, children[i]);
        }
    }
    NodeUtil.copyChildren = copyChildren;
    function copyAttributes(oldNode, newNode) {
        newNode.attributes = oldNode.attributes;
        setProperties(newNode, oldNode.getAllProperties());
    }
    NodeUtil.copyAttributes = copyAttributes;
    function isType(node, kind) {
        return node.isKind(kind);
    }
    NodeUtil.isType = isType;
    function isEmbellished(node) {
        return node.isEmbellished;
    }
    NodeUtil.isEmbellished = isEmbellished;
    function getTexClass(node) {
        return node.texClass;
    }
    NodeUtil.getTexClass = getTexClass;
    function getCoreMO(node) {
        return node.coreMO();
    }
    NodeUtil.getCoreMO = getCoreMO;
    function isNode(item) {
        return item instanceof MmlNode_js_1.AbstractMmlNode || item instanceof MmlNode_js_1.AbstractMmlEmptyNode;
    }
    NodeUtil.isNode = isNode;
    function isInferred(node) {
        return node.isInferred;
    }
    NodeUtil.isInferred = isInferred;
    function getForm(node) {
        var e_3, _a;
        if (!isType(node, 'mo')) {
            return null;
        }
        var mo = node;
        var forms = mo.getForms();
        try {
            for (var forms_1 = __values(forms), forms_1_1 = forms_1.next(); !forms_1_1.done; forms_1_1 = forms_1.next()) {
                var form = forms_1_1.value;
                var symbol = mo_js_1.MmlMo.OPTABLE[form][mo.getText()];
                if (symbol) {
                    return symbol;
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (forms_1_1 && !forms_1_1.done && (_a = forms_1.return)) _a.call(forms_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return null;
    }
    NodeUtil.getForm = getForm;
})(NodeUtil || (NodeUtil = {}));
exports["default"] = NodeUtil;
//# sourceMappingURL=NodeUtil.js.map

/***/ }),

/***/ 5450:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexConstants_js_1 = __webpack_require__(8317);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var ParseMethods;
(function (ParseMethods) {
    function variable(parser, c) {
        var def = ParseUtil_js_1.default.getFontDef(parser);
        var env = parser.stack.env;
        if (env.multiLetterIdentifiers && env.font !== '') {
            c = parser.string.substr(parser.i - 1).match(env.multiLetterIdentifiers)[0];
            parser.i += c.length - 1;
            if (def.mathvariant === TexConstants_js_1.TexConstant.Variant.NORMAL && env.noAutoOP && c.length > 1) {
                def.autoOP = false;
            }
        }
        var node = parser.create('token', 'mi', def, c);
        parser.Push(node);
    }
    ParseMethods.variable = variable;
    function digit(parser, c) {
        var mml;
        var pattern = parser.configuration.options['digits'];
        var n = parser.string.slice(parser.i - 1).match(pattern);
        var def = ParseUtil_js_1.default.getFontDef(parser);
        if (n) {
            mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));
            parser.i += n[0].length - 1;
        }
        else {
            mml = parser.create('token', 'mo', def, c);
        }
        parser.Push(mml);
    }
    ParseMethods.digit = digit;
    function controlSequence(parser, _c) {
        var name = parser.GetCS();
        parser.parse('macro', [parser, name]);
    }
    ParseMethods.controlSequence = controlSequence;
    function mathchar0mi(parser, mchar) {
        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC };
        var node = parser.create('token', 'mi', def, mchar.char);
        parser.Push(node);
    }
    ParseMethods.mathchar0mi = mathchar0mi;
    function mathchar0mo(parser, mchar) {
        var def = mchar.attributes || {};
        def['stretchy'] = false;
        var node = parser.create('token', 'mo', def, mchar.char);
        NodeUtil_js_1.default.setProperty(node, 'fixStretchy', true);
        parser.configuration.addNode('fixStretchy', node);
        parser.Push(node);
    }
    ParseMethods.mathchar0mo = mathchar0mo;
    function mathchar7(parser, mchar) {
        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL };
        if (parser.stack.env['font']) {
            def['mathvariant'] = parser.stack.env['font'];
        }
        var node = parser.create('token', 'mi', def, mchar.char);
        parser.Push(node);
    }
    ParseMethods.mathchar7 = mathchar7;
    function delimiter(parser, delim) {
        var def = delim.attributes || {};
        def = Object.assign({ fence: false, stretchy: false }, def);
        var node = parser.create('token', 'mo', def, delim.char);
        parser.Push(node);
    }
    ParseMethods.delimiter = delimiter;
    function environment(parser, env, func, args) {
        var end = args[0];
        var mml = parser.itemFactory.create('begin').setProperties({ name: env, end: end });
        mml = func.apply(void 0, __spreadArray([parser, mml], __read(args.slice(1)), false));
        parser.Push(mml);
    }
    ParseMethods.environment = environment;
})(ParseMethods || (ParseMethods = {}));
exports["default"] = ParseMethods;
//# sourceMappingURL=ParseMethods.js.map

/***/ }),

/***/ 8562:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var StackItemFactory_js_1 = __importDefault(__webpack_require__(5453));
var NodeFactory_js_1 = __webpack_require__(8929);
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var Options_js_1 = __webpack_require__(7233);
var ParseOptions = (function () {
    function ParseOptions(configuration, options) {
        if (options === void 0) { options = []; }
        this.options = {};
        this.packageData = new Map();
        this.parsers = [];
        this.root = null;
        this.nodeLists = {};
        this.error = false;
        this.handlers = configuration.handlers;
        this.nodeFactory = new NodeFactory_js_1.NodeFactory();
        this.nodeFactory.configuration = this;
        this.nodeFactory.setCreators(configuration.nodes);
        this.itemFactory = new StackItemFactory_js_1.default(configuration.items);
        this.itemFactory.configuration = this;
        Options_js_1.defaultOptions.apply(void 0, __spreadArray([this.options], __read(options), false));
        (0, Options_js_1.defaultOptions)(this.options, configuration.options);
    }
    ParseOptions.prototype.pushParser = function (parser) {
        this.parsers.unshift(parser);
    };
    ParseOptions.prototype.popParser = function () {
        this.parsers.shift();
    };
    Object.defineProperty(ParseOptions.prototype, "parser", {
        get: function () {
            return this.parsers[0];
        },
        enumerable: false,
        configurable: true
    });
    ParseOptions.prototype.clear = function () {
        this.parsers = [];
        this.root = null;
        this.nodeLists = {};
        this.error = false;
        this.tags.resetTag();
    };
    ParseOptions.prototype.addNode = function (property, node) {
        var list = this.nodeLists[property];
        if (!list) {
            list = this.nodeLists[property] = [];
        }
        list.push(node);
        if (node.kind !== property) {
            var inlists = (NodeUtil_js_1.default.getProperty(node, 'in-lists') || '');
            var lists = (inlists ? inlists.split(/,/) : []).concat(property).join(',');
            NodeUtil_js_1.default.setProperty(node, 'in-lists', lists);
        }
    };
    ParseOptions.prototype.getList = function (property) {
        var e_1, _a;
        var list = this.nodeLists[property] || [];
        var result = [];
        try {
            for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {
                var node = list_1_1.value;
                if (this.inTree(node)) {
                    result.push(node);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.nodeLists[property] = result;
        return result;
    };
    ParseOptions.prototype.removeFromList = function (property, nodes) {
        var e_2, _a;
        var list = this.nodeLists[property] || [];
        try {
            for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {
                var node = nodes_1_1.value;
                var i = list.indexOf(node);
                if (i >= 0) {
                    list.splice(i, 1);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    ParseOptions.prototype.inTree = function (node) {
        while (node && node !== this.root) {
            node = node.parent;
        }
        return !!node;
    };
    return ParseOptions;
}());
exports["default"] = ParseOptions;
//# sourceMappingURL=ParseOptions.js.map

/***/ }),

/***/ 1130:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var MmlNode_js_1 = __webpack_require__(9007);
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var Entities_js_1 = __webpack_require__(5368);
var ParseUtil;
(function (ParseUtil) {
    var emPerInch = 7.2;
    var pxPerInch = 72;
    var UNIT_CASES = {
        'em': function (m) { return m; },
        'ex': function (m) { return m * .43; },
        'pt': function (m) { return m / 10; },
        'pc': function (m) { return m * 1.2; },
        'px': function (m) { return m * emPerInch / pxPerInch; },
        'in': function (m) { return m * emPerInch; },
        'cm': function (m) { return m * emPerInch / 2.54; },
        'mm': function (m) { return m * emPerInch / 25.4; },
        'mu': function (m) { return m / 18; },
    };
    var num = '([-+]?([.,]\\d+|\\d+([.,]\\d*)?))';
    var unit = '(pt|em|ex|mu|px|mm|cm|in|pc)';
    var dimenEnd = RegExp('^\\s*' + num + '\\s*' + unit + '\\s*$');
    var dimenRest = RegExp('^\\s*' + num + '\\s*' + unit + ' ?');
    function matchDimen(dim, rest) {
        if (rest === void 0) { rest = false; }
        var match = dim.match(rest ? dimenRest : dimenEnd);
        return match ?
            muReplace([match[1].replace(/,/, '.'), match[4], match[0].length]) :
            [null, null, 0];
    }
    ParseUtil.matchDimen = matchDimen;
    function muReplace(_a) {
        var _b = __read(_a, 3), value = _b[0], unit = _b[1], length = _b[2];
        if (unit !== 'mu') {
            return [value, unit, length];
        }
        var em = Em(UNIT_CASES[unit](parseFloat(value || '1')));
        return [em.slice(0, -2), 'em', length];
    }
    function dimen2em(dim) {
        var _a = __read(matchDimen(dim), 2), value = _a[0], unit = _a[1];
        var m = parseFloat(value || '1');
        var func = UNIT_CASES[unit];
        return func ? func(m) : 0;
    }
    ParseUtil.dimen2em = dimen2em;
    function Em(m) {
        if (Math.abs(m) < .0006) {
            return '0em';
        }
        return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
    }
    ParseUtil.Em = Em;
    function cols() {
        var W = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            W[_i] = arguments[_i];
        }
        return W.map(function (n) { return Em(n); }).join(' ');
    }
    ParseUtil.cols = cols;
    function fenced(configuration, open, mml, close, big, color) {
        if (big === void 0) { big = ''; }
        if (color === void 0) { color = ''; }
        var nf = configuration.nodeFactory;
        var mrow = nf.create('node', 'mrow', [], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.INNER });
        var mo;
        if (big) {
            mo = new TexParser_js_1.default('\\' + big + 'l' + open, configuration.parser.stack.env, configuration).mml();
        }
        else {
            var openNode = nf.create('text', open);
            mo = nf.create('node', 'mo', [], { fence: true, stretchy: true, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.OPEN }, openNode);
        }
        NodeUtil_js_1.default.appendChildren(mrow, [mo, mml]);
        if (big) {
            mo = new TexParser_js_1.default('\\' + big + 'r' + close, configuration.parser.stack.env, configuration).mml();
        }
        else {
            var closeNode = nf.create('text', close);
            mo = nf.create('node', 'mo', [], { fence: true, stretchy: true, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.CLOSE }, closeNode);
        }
        color && mo.attributes.set('mathcolor', color);
        NodeUtil_js_1.default.appendChildren(mrow, [mo]);
        return mrow;
    }
    ParseUtil.fenced = fenced;
    function fixedFence(configuration, open, mml, close) {
        var mrow = configuration.nodeFactory.create('node', 'mrow', [], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.ORD });
        if (open) {
            NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, open, 'l')]);
        }
        if (NodeUtil_js_1.default.isType(mml, 'mrow')) {
            NodeUtil_js_1.default.appendChildren(mrow, NodeUtil_js_1.default.getChildren(mml));
        }
        else {
            NodeUtil_js_1.default.appendChildren(mrow, [mml]);
        }
        if (close) {
            NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, close, 'r')]);
        }
        return mrow;
    }
    ParseUtil.fixedFence = fixedFence;
    function mathPalette(configuration, fence, side) {
        if (fence === '{' || fence === '}') {
            fence = '\\' + fence;
        }
        var D = '{\\bigg' + side + ' ' + fence + '}';
        var T = '{\\big' + side + ' ' + fence + '}';
        return new TexParser_js_1.default('\\mathchoice' + D + T + T + T, {}, configuration).mml();
    }
    ParseUtil.mathPalette = mathPalette;
    function fixInitialMO(configuration, nodes) {
        for (var i = 0, m = nodes.length; i < m; i++) {
            var child = nodes[i];
            if (child && (!NodeUtil_js_1.default.isType(child, 'mspace') &&
                (!NodeUtil_js_1.default.isType(child, 'TeXAtom') ||
                    (NodeUtil_js_1.default.getChildren(child)[0] &&
                        NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(child)[0]).length)))) {
                if (NodeUtil_js_1.default.isEmbellished(child) ||
                    (NodeUtil_js_1.default.isType(child, 'TeXAtom') && NodeUtil_js_1.default.getTexClass(child) === MmlNode_js_1.TEXCLASS.REL)) {
                    var mi = configuration.nodeFactory.create('node', 'mi');
                    nodes.unshift(mi);
                }
                break;
            }
        }
    }
    ParseUtil.fixInitialMO = fixInitialMO;
    function internalMath(parser, text, level, font) {
        if (parser.configuration.options.internalMath) {
            return parser.configuration.options.internalMath(parser, text, level, font);
        }
        var mathvariant = font || parser.stack.env.font;
        var def = (mathvariant ? { mathvariant: mathvariant } : {});
        var mml = [], i = 0, k = 0, c, node, match = '', braces = 0;
        if (text.match(/\\?[${}\\]|\\\(|\\(eq)?ref\s*\{/)) {
            while (i < text.length) {
                c = text.charAt(i++);
                if (c === '$') {
                    if (match === '$' && braces === 0) {
                        node = parser.create('node', 'TeXAtom', [(new TexParser_js_1.default(text.slice(k, i - 1), {}, parser.configuration)).mml()]);
                        mml.push(node);
                        match = '';
                        k = i;
                    }
                    else if (match === '') {
                        if (k < i - 1) {
                            mml.push(internalText(parser, text.slice(k, i - 1), def));
                        }
                        match = '$';
                        k = i;
                    }
                }
                else if (c === '{' && match !== '') {
                    braces++;
                }
                else if (c === '}') {
                    if (match === '}' && braces === 0) {
                        var atom = (new TexParser_js_1.default(text.slice(k, i), {}, parser.configuration)).mml();
                        node = parser.create('node', 'TeXAtom', [atom], def);
                        mml.push(node);
                        match = '';
                        k = i;
                    }
                    else if (match !== '') {
                        if (braces) {
                            braces--;
                        }
                    }
                }
                else if (c === '\\') {
                    if (match === '' && text.substr(i).match(/^(eq)?ref\s*\{/)) {
                        var len = RegExp['$&'].length;
                        if (k < i - 1) {
                            mml.push(internalText(parser, text.slice(k, i - 1), def));
                        }
                        match = '}';
                        k = i - 1;
                        i += len;
                    }
                    else {
                        c = text.charAt(i++);
                        if (c === '(' && match === '') {
                            if (k < i - 2) {
                                mml.push(internalText(parser, text.slice(k, i - 2), def));
                            }
                            match = ')';
                            k = i;
                        }
                        else if (c === ')' && match === ')' && braces === 0) {
                            node = parser.create('node', 'TeXAtom', [(new TexParser_js_1.default(text.slice(k, i - 2), {}, parser.configuration)).mml()]);
                            mml.push(node);
                            match = '';
                            k = i;
                        }
                        else if (c.match(/[${}\\]/) && match === '') {
                            i--;
                            text = text.substr(0, i - 1) + text.substr(i);
                        }
                    }
                }
            }
            if (match !== '') {
                throw new TexError_js_1.default('MathNotTerminated', 'Math not terminated in text box');
            }
        }
        if (k < text.length) {
            mml.push(internalText(parser, text.slice(k), def));
        }
        if (level != null) {
            mml = [parser.create('node', 'mstyle', mml, { displaystyle: false, scriptlevel: level })];
        }
        else if (mml.length > 1) {
            mml = [parser.create('node', 'mrow', mml)];
        }
        return mml;
    }
    ParseUtil.internalMath = internalMath;
    function internalText(parser, text, def) {
        text = text.replace(/^\s+/, Entities_js_1.entities.nbsp).replace(/\s+$/, Entities_js_1.entities.nbsp);
        var textNode = parser.create('text', text);
        return parser.create('node', 'mtext', [], def, textNode);
    }
    ParseUtil.internalText = internalText;
    function underOver(parser, base, script, pos, stack) {
        ParseUtil.checkMovableLimits(base);
        if (NodeUtil_js_1.default.isType(base, 'munderover') && NodeUtil_js_1.default.isEmbellished(base)) {
            NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(base), { lspace: 0, rspace: 0 });
            var mo = parser.create('node', 'mo', [], { rspace: 0 });
            base = parser.create('node', 'mrow', [mo, base]);
        }
        var mml = parser.create('node', 'munderover', [base]);
        NodeUtil_js_1.default.setChild(mml, pos === 'over' ? mml.over : mml.under, script);
        var node = mml;
        if (stack) {
            node = parser.create('node', 'TeXAtom', [mml], { texClass: MmlNode_js_1.TEXCLASS.OP, movesupsub: true });
        }
        NodeUtil_js_1.default.setProperty(node, 'subsupOK', true);
        return node;
    }
    ParseUtil.underOver = underOver;
    function checkMovableLimits(base) {
        var symbol = (NodeUtil_js_1.default.isType(base, 'mo') ? NodeUtil_js_1.default.getForm(base) : null);
        if (NodeUtil_js_1.default.getProperty(base, 'movablelimits') || (symbol && symbol[3] && symbol[3].movablelimits)) {
            NodeUtil_js_1.default.setProperties(base, { movablelimits: false });
        }
    }
    ParseUtil.checkMovableLimits = checkMovableLimits;
    function trimSpaces(text) {
        if (typeof (text) !== 'string') {
            return text;
        }
        var TEXT = text.trim();
        if (TEXT.match(/\\$/) && text.match(/ $/)) {
            TEXT += ' ';
        }
        return TEXT;
    }
    ParseUtil.trimSpaces = trimSpaces;
    function setArrayAlign(array, align) {
        align = ParseUtil.trimSpaces(align || '');
        if (align === 't') {
            array.arraydef.align = 'baseline 1';
        }
        else if (align === 'b') {
            array.arraydef.align = 'baseline -1';
        }
        else if (align === 'c') {
            array.arraydef.align = 'axis';
        }
        else if (align) {
            array.arraydef.align = align;
        }
        return array;
    }
    ParseUtil.setArrayAlign = setArrayAlign;
    function substituteArgs(parser, args, str) {
        var text = '';
        var newstring = '';
        var i = 0;
        while (i < str.length) {
            var c = str.charAt(i++);
            if (c === '\\') {
                text += c + str.charAt(i++);
            }
            else if (c === '#') {
                c = str.charAt(i++);
                if (c === '#') {
                    text += c;
                }
                else {
                    if (!c.match(/[1-9]/) || parseInt(c, 10) > args.length) {
                        throw new TexError_js_1.default('IllegalMacroParam', 'Illegal macro parameter reference');
                    }
                    newstring = addArgs(parser, addArgs(parser, newstring, text), args[parseInt(c, 10) - 1]);
                    text = '';
                }
            }
            else {
                text += c;
            }
        }
        return addArgs(parser, newstring, text);
    }
    ParseUtil.substituteArgs = substituteArgs;
    function addArgs(parser, s1, s2) {
        if (s2.match(/^[a-z]/i) && s1.match(/(^|[^\\])(\\\\)*\\[a-z]+$/i)) {
            s1 += ' ';
        }
        if (s1.length + s2.length > parser.configuration.options['maxBuffer']) {
            throw new TexError_js_1.default('MaxBufferSize', 'MathJax internal buffer size exceeded; is there a' +
                ' recursive macro call?');
        }
        return s1 + s2;
    }
    ParseUtil.addArgs = addArgs;
    function checkMaxMacros(parser, isMacro) {
        if (isMacro === void 0) { isMacro = true; }
        if (++parser.macroCount <= parser.configuration.options['maxMacros']) {
            return;
        }
        if (isMacro) {
            throw new TexError_js_1.default('MaxMacroSub1', 'MathJax maximum macro substitution count exceeded; ' +
                'is here a recursive macro call?');
        }
        else {
            throw new TexError_js_1.default('MaxMacroSub2', 'MathJax maximum substitution count exceeded; ' +
                'is there a recursive latex environment?');
        }
    }
    ParseUtil.checkMaxMacros = checkMaxMacros;
    function checkEqnEnv(parser) {
        if (parser.stack.global.eqnenv) {
            throw new TexError_js_1.default('ErroneousNestingEq', 'Erroneous nesting of equation structures');
        }
        parser.stack.global.eqnenv = true;
    }
    ParseUtil.checkEqnEnv = checkEqnEnv;
    function copyNode(node, parser) {
        var tree = node.copy();
        var options = parser.configuration;
        tree.walkTree(function (n) {
            var e_1, _a;
            options.addNode(n.kind, n);
            var lists = (n.getProperty('in-lists') || '').split(/,/);
            try {
                for (var lists_1 = __values(lists), lists_1_1 = lists_1.next(); !lists_1_1.done; lists_1_1 = lists_1.next()) {
                    var list = lists_1_1.value;
                    list && options.addNode(list, n);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (lists_1_1 && !lists_1_1.done && (_a = lists_1.return)) _a.call(lists_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        });
        return tree;
    }
    ParseUtil.copyNode = copyNode;
    function MmlFilterAttribute(_parser, _name, value) {
        return value;
    }
    ParseUtil.MmlFilterAttribute = MmlFilterAttribute;
    function getFontDef(parser) {
        var font = parser.stack.env['font'];
        return (font ? { mathvariant: font } : {});
    }
    ParseUtil.getFontDef = getFontDef;
    function keyvalOptions(attrib, allowed, error) {
        var e_2, _a;
        if (allowed === void 0) { allowed = null; }
        if (error === void 0) { error = false; }
        var def = readKeyval(attrib);
        if (allowed) {
            try {
                for (var _b = __values(Object.keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var key = _c.value;
                    if (!allowed.hasOwnProperty(key)) {
                        if (error) {
                            throw new TexError_js_1.default('InvalidOption', 'Invalid option: %1', key);
                        }
                        delete def[key];
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        return def;
    }
    ParseUtil.keyvalOptions = keyvalOptions;
    function readKeyval(text) {
        var _a, _b;
        var options = {};
        var rest = text;
        var end, key, val;
        while (rest) {
            _a = __read(readValue(rest, ['=', ',']), 3), key = _a[0], end = _a[1], rest = _a[2];
            if (end === '=') {
                _b = __read(readValue(rest, [',']), 3), val = _b[0], end = _b[1], rest = _b[2];
                val = (val === 'false' || val === 'true') ?
                    JSON.parse(val) : val;
                options[key] = val;
            }
            else if (key) {
                options[key] = true;
            }
        }
        return options;
    }
    function removeBraces(text, count) {
        while (count > 0) {
            text = text.trim().slice(1, -1);
            count--;
        }
        return text.trim();
    }
    function readValue(text, end) {
        var length = text.length;
        var braces = 0;
        var value = '';
        var index = 0;
        var start = 0;
        var startCount = true;
        var stopCount = false;
        while (index < length) {
            var c = text[index++];
            switch (c) {
                case ' ':
                    break;
                case '{':
                    if (startCount) {
                        start++;
                    }
                    else {
                        stopCount = false;
                        if (start > braces) {
                            start = braces;
                        }
                    }
                    braces++;
                    break;
                case '}':
                    if (braces) {
                        braces--;
                    }
                    if (startCount || stopCount) {
                        start--;
                        stopCount = true;
                    }
                    startCount = false;
                    break;
                default:
                    if (!braces && end.indexOf(c) !== -1) {
                        return [stopCount ? 'true' :
                                removeBraces(value, start), c, text.slice(index)];
                    }
                    startCount = false;
                    stopCount = false;
            }
            value += c;
        }
        if (braces) {
            throw new TexError_js_1.default('ExtraOpenMissingClose', 'Extra open brace or missing close brace');
        }
        return [stopCount ? 'true' : removeBraces(value, start), '', text.slice(index)];
    }
})(ParseUtil || (ParseUtil = {}));
exports["default"] = ParseUtil;
//# sourceMappingURL=ParseUtil.js.map

/***/ }),

/***/ 9497:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var Stack = (function () {
    function Stack(_factory, _env, inner) {
        this._factory = _factory;
        this._env = _env;
        this.global = {};
        this.stack = [];
        this.global = { isInner: inner };
        this.stack = [this._factory.create('start', this.global)];
        if (_env) {
            this.stack[0].env = _env;
        }
        this.env = this.stack[0].env;
    }
    Object.defineProperty(Stack.prototype, "env", {
        get: function () {
            return this._env;
        },
        set: function (env) {
            this._env = env;
        },
        enumerable: false,
        configurable: true
    });
    Stack.prototype.Push = function () {
        var e_1, _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        try {
            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
                var node = args_1_1.value;
                if (!node) {
                    continue;
                }
                var item = NodeUtil_js_1.default.isNode(node) ?
                    this._factory.create('mml', node) : node;
                item.global = this.global;
                var _b = __read(this.stack.length ? this.Top().checkItem(item) : [null, true], 2), top_1 = _b[0], success = _b[1];
                if (!success) {
                    continue;
                }
                if (top_1) {
                    this.Pop();
                    this.Push.apply(this, __spreadArray([], __read(top_1), false));
                    continue;
                }
                this.stack.push(item);
                if (item.env) {
                    if (item.copyEnv) {
                        Object.assign(item.env, this.env);
                    }
                    this.env = item.env;
                }
                else {
                    item.env = this.env;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Stack.prototype.Pop = function () {
        var item = this.stack.pop();
        if (!item.isOpen) {
            delete item.env;
        }
        this.env = (this.stack.length ? this.Top().env : {});
        return item;
    };
    Stack.prototype.Top = function (n) {
        if (n === void 0) { n = 1; }
        return this.stack.length < n ? null : this.stack[this.stack.length - n];
    };
    Stack.prototype.Prev = function (noPop) {
        var top = this.Top();
        return noPop ? top.First : top.Pop();
    };
    Stack.prototype.toString = function () {
        return 'stack[\n  ' + this.stack.join('\n  ') + '\n]';
    };
    return Stack;
}());
exports["default"] = Stack;
//# sourceMappingURL=Stack.js.map

/***/ }),

/***/ 8292:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseItem = exports.MmlStack = void 0;
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var MmlStack = (function () {
    function MmlStack(_nodes) {
        this._nodes = _nodes;
    }
    Object.defineProperty(MmlStack.prototype, "nodes", {
        get: function () {
            return this._nodes;
        },
        enumerable: false,
        configurable: true
    });
    MmlStack.prototype.Push = function () {
        var _a;
        var nodes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            nodes[_i] = arguments[_i];
        }
        (_a = this._nodes).push.apply(_a, __spreadArray([], __read(nodes), false));
    };
    MmlStack.prototype.Pop = function () {
        return this._nodes.pop();
    };
    Object.defineProperty(MmlStack.prototype, "First", {
        get: function () {
            return this._nodes[this.Size() - 1];
        },
        set: function (node) {
            this._nodes[this.Size() - 1] = node;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlStack.prototype, "Last", {
        get: function () {
            return this._nodes[0];
        },
        set: function (node) {
            this._nodes[0] = node;
        },
        enumerable: false,
        configurable: true
    });
    MmlStack.prototype.Peek = function (n) {
        if (n == null) {
            n = 1;
        }
        return this._nodes.slice(this.Size() - n);
    };
    MmlStack.prototype.Size = function () {
        return this._nodes.length;
    };
    MmlStack.prototype.Clear = function () {
        this._nodes = [];
    };
    MmlStack.prototype.toMml = function (inferred, forceRow) {
        if (inferred === void 0) { inferred = true; }
        if (this._nodes.length === 1 && !forceRow) {
            return this.First;
        }
        return this.create('node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});
    };
    MmlStack.prototype.create = function (kind) {
        var _a;
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        return (_a = this.factory.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest), false));
    };
    return MmlStack;
}());
exports.MmlStack = MmlStack;
var BaseItem = (function (_super) {
    __extends(BaseItem, _super);
    function BaseItem(factory) {
        var nodes = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            nodes[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this, nodes) || this;
        _this.factory = factory;
        _this.global = {};
        _this._properties = {};
        if (_this.isOpen) {
            _this._env = {};
        }
        return _this;
    }
    Object.defineProperty(BaseItem.prototype, "kind", {
        get: function () {
            return 'base';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BaseItem.prototype, "env", {
        get: function () {
            return this._env;
        },
        set: function (value) {
            this._env = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BaseItem.prototype, "copyEnv", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    BaseItem.prototype.getProperty = function (key) {
        return this._properties[key];
    };
    BaseItem.prototype.setProperty = function (key, value) {
        this._properties[key] = value;
        return this;
    };
    Object.defineProperty(BaseItem.prototype, "isOpen", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BaseItem.prototype, "isClose", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BaseItem.prototype, "isFinal", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    BaseItem.prototype.isKind = function (kind) {
        return kind === this.kind;
    };
    BaseItem.prototype.checkItem = function (item) {
        if (item.isKind('over') && this.isOpen) {
            item.setProperty('num', this.toMml(false));
            this.Clear();
        }
        if (item.isKind('cell') && this.isOpen) {
            if (item.getProperty('linebreak')) {
                return BaseItem.fail;
            }
            throw new TexError_js_1.default('Misplaced', 'Misplaced %1', item.getName());
        }
        if (item.isClose && this.getErrors(item.kind)) {
            var _a = __read(this.getErrors(item.kind), 2), id = _a[0], message = _a[1];
            throw new TexError_js_1.default(id, message, item.getName());
        }
        if (!item.isFinal) {
            return BaseItem.success;
        }
        this.Push(item.First);
        return BaseItem.fail;
    };
    BaseItem.prototype.clearEnv = function () {
        var e_1, _a;
        try {
            for (var _b = __values(Object.keys(this.env)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var id = _c.value;
                delete this.env[id];
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    BaseItem.prototype.setProperties = function (def) {
        Object.assign(this._properties, def);
        return this;
    };
    BaseItem.prototype.getName = function () {
        return this.getProperty('name');
    };
    BaseItem.prototype.toString = function () {
        return this.kind + '[' + this.nodes.join('; ') + ']';
    };
    BaseItem.prototype.getErrors = function (kind) {
        var CLASS = this.constructor;
        return (CLASS.errors || {})[kind] || BaseItem.errors[kind];
    };
    BaseItem.fail = [null, false];
    BaseItem.success = [null, true];
    BaseItem.errors = {
        end: ['MissingBeginExtraEnd', 'Missing \\begin{%1} or extra \\end{%1}'],
        close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],
        right: ['MissingLeftExtraRight', 'Missing \\left or extra \\right'],
        middle: ['ExtraMiddle', 'Extra \\middle']
    };
    return BaseItem;
}(MmlStack));
exports.BaseItem = BaseItem;
//# sourceMappingURL=StackItem.js.map

/***/ }),

/***/ 5453:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
var StackItem_js_1 = __webpack_require__(8292);
var Factory_js_1 = __webpack_require__(4574);
var DummyItem = (function (_super) {
    __extends(DummyItem, _super);
    function DummyItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return DummyItem;
}(StackItem_js_1.BaseItem));
var StackItemFactory = (function (_super) {
    __extends(StackItemFactory, _super);
    function StackItemFactory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultKind = 'dummy';
        _this.configuration = null;
        return _this;
    }
    StackItemFactory.DefaultStackItems = (_a = {},
        _a[DummyItem.prototype.kind] = DummyItem,
        _a);
    return StackItemFactory;
}(Factory_js_1.AbstractFactory));
exports["default"] = StackItemFactory;
//# sourceMappingURL=StackItemFactory.js.map

/***/ }),

/***/ 8803:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Macro = exports.Symbol = void 0;
var Symbol = (function () {
    function Symbol(_symbol, _char, _attributes) {
        this._symbol = _symbol;
        this._char = _char;
        this._attributes = _attributes;
    }
    Object.defineProperty(Symbol.prototype, "symbol", {
        get: function () {
            return this._symbol;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Symbol.prototype, "char", {
        get: function () {
            return this._char;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Symbol.prototype, "attributes", {
        get: function () {
            return this._attributes;
        },
        enumerable: false,
        configurable: true
    });
    return Symbol;
}());
exports.Symbol = Symbol;
var Macro = (function () {
    function Macro(_symbol, _func, _args) {
        if (_args === void 0) { _args = []; }
        this._symbol = _symbol;
        this._func = _func;
        this._args = _args;
    }
    Object.defineProperty(Macro.prototype, "symbol", {
        get: function () {
            return this._symbol;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Macro.prototype, "func", {
        get: function () {
            return this._func;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Macro.prototype, "args", {
        get: function () {
            return this._args;
        },
        enumerable: false,
        configurable: true
    });
    return Macro;
}());
exports.Macro = Macro;
//# sourceMappingURL=Symbol.js.map

/***/ }),

/***/ 9140:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnvironmentMap = exports.CommandMap = exports.MacroMap = exports.DelimiterMap = exports.CharacterMap = exports.AbstractParseMap = exports.RegExpMap = exports.AbstractSymbolMap = exports.parseResult = void 0;
var Symbol_js_1 = __webpack_require__(8803);
var MapHandler_js_1 = __webpack_require__(2947);
function parseResult(result) {
    return result === void 0 ? true : result;
}
exports.parseResult = parseResult;
var AbstractSymbolMap = (function () {
    function AbstractSymbolMap(_name, _parser) {
        this._name = _name;
        this._parser = _parser;
        MapHandler_js_1.MapHandler.register(this);
    }
    Object.defineProperty(AbstractSymbolMap.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: false,
        configurable: true
    });
    AbstractSymbolMap.prototype.parserFor = function (symbol) {
        return this.contains(symbol) ? this.parser : null;
    };
    AbstractSymbolMap.prototype.parse = function (_a) {
        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
        var parser = this.parserFor(symbol);
        var mapped = this.lookup(symbol);
        return (parser && mapped) ? parseResult(parser(env, mapped)) : null;
    };
    Object.defineProperty(AbstractSymbolMap.prototype, "parser", {
        get: function () {
            return this._parser;
        },
        set: function (parser) {
            this._parser = parser;
        },
        enumerable: false,
        configurable: true
    });
    return AbstractSymbolMap;
}());
exports.AbstractSymbolMap = AbstractSymbolMap;
var RegExpMap = (function (_super) {
    __extends(RegExpMap, _super);
    function RegExpMap(name, parser, _regExp) {
        var _this = _super.call(this, name, parser) || this;
        _this._regExp = _regExp;
        return _this;
    }
    RegExpMap.prototype.contains = function (symbol) {
        return this._regExp.test(symbol);
    };
    RegExpMap.prototype.lookup = function (symbol) {
        return this.contains(symbol) ? symbol : null;
    };
    return RegExpMap;
}(AbstractSymbolMap));
exports.RegExpMap = RegExpMap;
var AbstractParseMap = (function (_super) {
    __extends(AbstractParseMap, _super);
    function AbstractParseMap() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.map = new Map();
        return _this;
    }
    AbstractParseMap.prototype.lookup = function (symbol) {
        return this.map.get(symbol);
    };
    AbstractParseMap.prototype.contains = function (symbol) {
        return this.map.has(symbol);
    };
    AbstractParseMap.prototype.add = function (symbol, object) {
        this.map.set(symbol, object);
    };
    AbstractParseMap.prototype.remove = function (symbol) {
        this.map.delete(symbol);
    };
    return AbstractParseMap;
}(AbstractSymbolMap));
exports.AbstractParseMap = AbstractParseMap;
var CharacterMap = (function (_super) {
    __extends(CharacterMap, _super);
    function CharacterMap(name, parser, json) {
        var e_1, _a;
        var _this = _super.call(this, name, parser) || this;
        try {
            for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                var value = json[key];
                var _d = __read((typeof (value) === 'string') ? [value, null] : value, 2), char = _d[0], attrs = _d[1];
                var character = new Symbol_js_1.Symbol(key, char, attrs);
                _this.add(key, character);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return _this;
    }
    return CharacterMap;
}(AbstractParseMap));
exports.CharacterMap = CharacterMap;
var DelimiterMap = (function (_super) {
    __extends(DelimiterMap, _super);
    function DelimiterMap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DelimiterMap.prototype.parse = function (_a) {
        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
        return _super.prototype.parse.call(this, [env, '\\' + symbol]);
    };
    return DelimiterMap;
}(CharacterMap));
exports.DelimiterMap = DelimiterMap;
var MacroMap = (function (_super) {
    __extends(MacroMap, _super);
    function MacroMap(name, json, functionMap) {
        var e_2, _a;
        var _this = _super.call(this, name, null) || this;
        try {
            for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                var value = json[key];
                var _d = __read((typeof (value) === 'string') ? [value] : value), func = _d[0], attrs = _d.slice(1);
                var character = new Symbol_js_1.Macro(key, functionMap[func], attrs);
                _this.add(key, character);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return _this;
    }
    MacroMap.prototype.parserFor = function (symbol) {
        var macro = this.lookup(symbol);
        return macro ? macro.func : null;
    };
    MacroMap.prototype.parse = function (_a) {
        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
        var macro = this.lookup(symbol);
        var parser = this.parserFor(symbol);
        if (!macro || !parser) {
            return null;
        }
        return parseResult(parser.apply(void 0, __spreadArray([env, macro.symbol], __read(macro.args), false)));
    };
    return MacroMap;
}(AbstractParseMap));
exports.MacroMap = MacroMap;
var CommandMap = (function (_super) {
    __extends(CommandMap, _super);
    function CommandMap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CommandMap.prototype.parse = function (_a) {
        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
        var macro = this.lookup(symbol);
        var parser = this.parserFor(symbol);
        if (!macro || !parser) {
            return null;
        }
        var saveCommand = env.currentCS;
        env.currentCS = '\\' + symbol;
        var result = parser.apply(void 0, __spreadArray([env, '\\' + macro.symbol], __read(macro.args), false));
        env.currentCS = saveCommand;
        return parseResult(result);
    };
    return CommandMap;
}(MacroMap));
exports.CommandMap = CommandMap;
var EnvironmentMap = (function (_super) {
    __extends(EnvironmentMap, _super);
    function EnvironmentMap(name, parser, json, functionMap) {
        var _this = _super.call(this, name, json, functionMap) || this;
        _this.parser = parser;
        return _this;
    }
    EnvironmentMap.prototype.parse = function (_a) {
        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
        var macro = this.lookup(symbol);
        var envParser = this.parserFor(symbol);
        if (!macro || !envParser) {
            return null;
        }
        return parseResult(this.parser(env, macro.symbol, envParser, macro.args));
    };
    return EnvironmentMap;
}(MacroMap));
exports.EnvironmentMap = EnvironmentMap;
//# sourceMappingURL=SymbolMap.js.map

/***/ }),

/***/ 6521:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TagsFactory = exports.AllTags = exports.NoTags = exports.AbstractTags = exports.TagInfo = exports.Label = void 0;
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var Label = (function () {
    function Label(tag, id) {
        if (tag === void 0) { tag = '???'; }
        if (id === void 0) { id = ''; }
        this.tag = tag;
        this.id = id;
    }
    return Label;
}());
exports.Label = Label;
var TagInfo = (function () {
    function TagInfo(env, taggable, defaultTags, tag, tagId, tagFormat, noTag, labelId) {
        if (env === void 0) { env = ''; }
        if (taggable === void 0) { taggable = false; }
        if (defaultTags === void 0) { defaultTags = false; }
        if (tag === void 0) { tag = null; }
        if (tagId === void 0) { tagId = ''; }
        if (tagFormat === void 0) { tagFormat = ''; }
        if (noTag === void 0) { noTag = false; }
        if (labelId === void 0) { labelId = ''; }
        this.env = env;
        this.taggable = taggable;
        this.defaultTags = defaultTags;
        this.tag = tag;
        this.tagId = tagId;
        this.tagFormat = tagFormat;
        this.noTag = noTag;
        this.labelId = labelId;
    }
    return TagInfo;
}());
exports.TagInfo = TagInfo;
var AbstractTags = (function () {
    function AbstractTags() {
        this.counter = 0;
        this.allCounter = 0;
        this.configuration = null;
        this.ids = {};
        this.allIds = {};
        this.labels = {};
        this.allLabels = {};
        this.redo = false;
        this.refUpdate = false;
        this.currentTag = new TagInfo();
        this.history = [];
        this.stack = [];
        this.enTag = function (node, tag) {
            var nf = this.configuration.nodeFactory;
            var cell = nf.create('node', 'mtd', [node]);
            var row = nf.create('node', 'mlabeledtr', [tag, cell]);
            var table = nf.create('node', 'mtable', [row], {
                side: this.configuration.options['tagSide'],
                minlabelspacing: this.configuration.options['tagIndent'],
                displaystyle: true
            });
            return table;
        };
    }
    AbstractTags.prototype.start = function (env, taggable, defaultTags) {
        if (this.currentTag) {
            this.stack.push(this.currentTag);
        }
        this.currentTag = new TagInfo(env, taggable, defaultTags);
    };
    Object.defineProperty(AbstractTags.prototype, "env", {
        get: function () {
            return this.currentTag.env;
        },
        enumerable: false,
        configurable: true
    });
    AbstractTags.prototype.end = function () {
        this.history.push(this.currentTag);
        this.currentTag = this.stack.pop();
    };
    AbstractTags.prototype.tag = function (tag, noFormat) {
        this.currentTag.tag = tag;
        this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);
        this.currentTag.noTag = false;
    };
    AbstractTags.prototype.notag = function () {
        this.tag('', true);
        this.currentTag.noTag = true;
    };
    Object.defineProperty(AbstractTags.prototype, "noTag", {
        get: function () {
            return this.currentTag.noTag;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractTags.prototype, "label", {
        get: function () {
            return this.currentTag.labelId;
        },
        set: function (label) {
            this.currentTag.labelId = label;
        },
        enumerable: false,
        configurable: true
    });
    AbstractTags.prototype.formatUrl = function (id, base) {
        return base + '#' + encodeURIComponent(id);
    };
    AbstractTags.prototype.formatTag = function (tag) {
        return '(' + tag + ')';
    };
    AbstractTags.prototype.formatId = function (id) {
        return 'mjx-eqn:' + id.replace(/\s/g, '_');
    };
    AbstractTags.prototype.formatNumber = function (n) {
        return n.toString();
    };
    AbstractTags.prototype.autoTag = function () {
        if (this.currentTag.tag == null) {
            this.counter++;
            this.tag(this.formatNumber(this.counter), false);
        }
    };
    AbstractTags.prototype.clearTag = function () {
        this.label = '';
        this.tag(null, true);
        this.currentTag.tagId = '';
    };
    AbstractTags.prototype.getTag = function (force) {
        if (force === void 0) { force = false; }
        if (force) {
            this.autoTag();
            return this.makeTag();
        }
        var ct = this.currentTag;
        if (ct.taggable && !ct.noTag) {
            if (ct.defaultTags) {
                this.autoTag();
            }
            if (ct.tag) {
                return this.makeTag();
            }
        }
        return null;
    };
    AbstractTags.prototype.resetTag = function () {
        this.history = [];
        this.redo = false;
        this.refUpdate = false;
        this.clearTag();
    };
    AbstractTags.prototype.reset = function (offset) {
        if (offset === void 0) { offset = 0; }
        this.resetTag();
        this.counter = this.allCounter = offset;
        this.allLabels = {};
        this.allIds = {};
    };
    AbstractTags.prototype.startEquation = function (math) {
        this.history = [];
        this.stack = [];
        this.clearTag();
        this.currentTag = new TagInfo('', undefined, undefined);
        this.labels = {};
        this.ids = {};
        this.counter = this.allCounter;
        this.redo = false;
        var recompile = math.inputData.recompile;
        if (recompile) {
            this.refUpdate = true;
            this.counter = recompile.counter;
        }
    };
    AbstractTags.prototype.finishEquation = function (math) {
        if (this.redo) {
            math.inputData.recompile = {
                state: math.state(),
                counter: this.allCounter
            };
        }
        if (!this.refUpdate) {
            this.allCounter = this.counter;
        }
        Object.assign(this.allIds, this.ids);
        Object.assign(this.allLabels, this.labels);
    };
    AbstractTags.prototype.finalize = function (node, env) {
        if (!env.display || this.currentTag.env ||
            this.currentTag.tag == null) {
            return node;
        }
        var tag = this.makeTag();
        var table = this.enTag(node, tag);
        return table;
    };
    AbstractTags.prototype.makeId = function () {
        this.currentTag.tagId = this.formatId(this.configuration.options['useLabelIds'] ?
            (this.label || this.currentTag.tag) : this.currentTag.tag);
    };
    AbstractTags.prototype.makeTag = function () {
        this.makeId();
        if (this.label) {
            this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);
        }
        var mml = new TexParser_js_1.default('\\text{' + this.currentTag.tagFormat + '}', {}, this.configuration).mml();
        return this.configuration.nodeFactory.create('node', 'mtd', [mml], { id: this.currentTag.tagId });
    };
    return AbstractTags;
}());
exports.AbstractTags = AbstractTags;
var NoTags = (function (_super) {
    __extends(NoTags, _super);
    function NoTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NoTags.prototype.autoTag = function () { };
    NoTags.prototype.getTag = function () {
        return !this.currentTag.tag ? null : _super.prototype.getTag.call(this);
    };
    return NoTags;
}(AbstractTags));
exports.NoTags = NoTags;
var AllTags = (function (_super) {
    __extends(AllTags, _super);
    function AllTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AllTags.prototype.finalize = function (node, env) {
        if (!env.display || this.history.find(function (x) { return x.taggable; })) {
            return node;
        }
        var tag = this.getTag(true);
        return this.enTag(node, tag);
    };
    return AllTags;
}(AbstractTags));
exports.AllTags = AllTags;
var TagsFactory;
(function (TagsFactory) {
    var tagsMapping = new Map([
        ['none', NoTags],
        ['all', AllTags]
    ]);
    var defaultTags = 'none';
    TagsFactory.OPTIONS = {
        tags: defaultTags,
        tagSide: 'right',
        tagIndent: '0.8em',
        useLabelIds: true,
        ignoreDuplicateLabels: false
    };
    TagsFactory.add = function (name, constr) {
        tagsMapping.set(name, constr);
    };
    TagsFactory.addTags = function (tags) {
        var e_1, _a;
        try {
            for (var _b = __values(Object.keys(tags)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                TagsFactory.add(key, tags[key]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    TagsFactory.create = function (name) {
        var constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);
        if (!constr) {
            throw Error('Unknown tags class');
        }
        return new constr();
    };
    TagsFactory.setDefault = function (name) {
        defaultTags = name;
    };
    TagsFactory.getDefault = function () {
        return TagsFactory.create(defaultTags);
    };
})(TagsFactory = exports.TagsFactory || (exports.TagsFactory = {}));
//# sourceMappingURL=Tags.js.map

/***/ }),

/***/ 8317:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TexConstant = void 0;
var TexConstant;
(function (TexConstant) {
    TexConstant.Variant = {
        NORMAL: 'normal',
        BOLD: 'bold',
        ITALIC: 'italic',
        BOLDITALIC: 'bold-italic',
        DOUBLESTRUCK: 'double-struck',
        FRAKTUR: 'fraktur',
        BOLDFRAKTUR: 'bold-fraktur',
        SCRIPT: 'script',
        BOLDSCRIPT: 'bold-script',
        SANSSERIF: 'sans-serif',
        BOLDSANSSERIF: 'bold-sans-serif',
        SANSSERIFITALIC: 'sans-serif-italic',
        SANSSERIFBOLDITALIC: 'sans-serif-bold-italic',
        MONOSPACE: 'monospace',
        INITIAL: 'inital',
        TAILED: 'tailed',
        LOOPED: 'looped',
        STRETCHED: 'stretched',
        CALLIGRAPHIC: '-tex-calligraphic',
        BOLDCALLIGRAPHIC: '-tex-bold-calligraphic',
        OLDSTYLE: '-tex-oldstyle',
        BOLDOLDSTYLE: '-tex-bold-oldstyle',
        MATHITALIC: '-tex-mathit'
    };
    TexConstant.Form = {
        PREFIX: 'prefix',
        INFIX: 'infix',
        POSTFIX: 'postfix'
    };
    TexConstant.LineBreak = {
        AUTO: 'auto',
        NEWLINE: 'newline',
        NOBREAK: 'nobreak',
        GOODBREAK: 'goodbreak',
        BADBREAK: 'badbreak'
    };
    TexConstant.LineBreakStyle = {
        BEFORE: 'before',
        AFTER: 'after',
        DUPLICATE: 'duplicate',
        INFIXLINBREAKSTYLE: 'infixlinebreakstyle'
    };
    TexConstant.IndentAlign = {
        LEFT: 'left',
        CENTER: 'center',
        RIGHT: 'right',
        AUTO: 'auto',
        ID: 'id',
        INDENTALIGN: 'indentalign'
    };
    TexConstant.IndentShift = {
        INDENTSHIFT: 'indentshift'
    };
    TexConstant.LineThickness = {
        THIN: 'thin',
        MEDIUM: 'medium',
        THICK: 'thick'
    };
    TexConstant.Notation = {
        LONGDIV: 'longdiv',
        ACTUARIAL: 'actuarial',
        PHASORANGLE: 'phasorangle',
        RADICAL: 'radical',
        BOX: 'box',
        ROUNDEDBOX: 'roundedbox',
        CIRCLE: 'circle',
        LEFT: 'left',
        RIGHT: 'right',
        TOP: 'top',
        BOTTOM: 'bottom',
        UPDIAGONALSTRIKE: 'updiagonalstrike',
        DOWNDIAGONALSTRIKE: 'downdiagonalstrike',
        VERTICALSTRIKE: 'verticalstrike',
        HORIZONTALSTRIKE: 'horizontalstrike',
        NORTHEASTARROW: 'northeastarrow',
        MADRUWB: 'madruwb',
        UPDIAGONALARROW: 'updiagonalarrow'
    };
    TexConstant.Align = {
        TOP: 'top',
        BOTTOM: 'bottom',
        CENTER: 'center',
        BASELINE: 'baseline',
        AXIS: 'axis',
        LEFT: 'left',
        RIGHT: 'right'
    };
    TexConstant.Lines = {
        NONE: 'none',
        SOLID: 'solid',
        DASHED: 'dashed'
    };
    TexConstant.Side = {
        LEFT: 'left',
        RIGHT: 'right',
        LEFTOVERLAP: 'leftoverlap',
        RIGHTOVERLAP: 'rightoverlap'
    };
    TexConstant.Width = {
        AUTO: 'auto',
        FIT: 'fit'
    };
    TexConstant.Actiontype = {
        TOGGLE: 'toggle',
        STATUSLINE: 'statusline',
        TOOLTIP: 'tooltip',
        INPUT: 'input'
    };
    TexConstant.Overflow = {
        LINBREAK: 'linebreak',
        SCROLL: 'scroll',
        ELIDE: 'elide',
        TRUNCATE: 'truncate',
        SCALE: 'scale'
    };
    TexConstant.Unit = {
        EM: 'em',
        EX: 'ex',
        PX: 'px',
        IN: 'in',
        CM: 'cm',
        MM: 'mm',
        PT: 'pt',
        PC: 'pc'
    };
})(TexConstant = exports.TexConstant || (exports.TexConstant = {}));
//# sourceMappingURL=TexConstants.js.map

/***/ }),

/***/ 3971:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
var TexError = (function () {
    function TexError(id, message) {
        var rest = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            rest[_i - 2] = arguments[_i];
        }
        this.id = id;
        this.message = TexError.processString(message, rest);
    }
    TexError.processString = function (str, args) {
        var parts = str.split(TexError.pattern);
        for (var i = 1, m = parts.length; i < m; i += 2) {
            var c = parts[i].charAt(0);
            if (c >= '0' && c <= '9') {
                parts[i] = args[parseInt(parts[i], 10) - 1];
                if (typeof parts[i] === 'number') {
                    parts[i] = parts[i].toString();
                }
            }
            else if (c === '{') {
                c = parts[i].substr(1);
                if (c >= '0' && c <= '9') {
                    parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];
                    if (typeof parts[i] === 'number') {
                        parts[i] = parts[i].toString();
                    }
                }
                else {
                    var match = parts[i].match(/^\{([a-z]+):%(\d+)\|(.*)\}$/);
                    if (match) {
                        parts[i] = '%' + parts[i];
                    }
                }
            }
            if (parts[i] == null) {
                parts[i] = '???';
            }
        }
        return parts.join('');
    };
    TexError.pattern = /%(\d+|\{\d+\}|\{[a-z]+:\%\d+(?:\|(?:%\{\d+\}|%.|[^\}])*)+\}|.)/g;
    return TexError;
}());
exports["default"] = TexError;
//# sourceMappingURL=TexError.js.map

/***/ }),

/***/ 8417:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var Stack_js_1 = __importDefault(__webpack_require__(9497));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var MmlNode_js_1 = __webpack_require__(9007);
var TexParser = (function () {
    function TexParser(_string, env, configuration) {
        var e_1, _a;
        this._string = _string;
        this.configuration = configuration;
        this.macroCount = 0;
        this.i = 0;
        this.currentCS = '';
        var inner = env.hasOwnProperty('isInner');
        var isInner = env['isInner'];
        delete env['isInner'];
        var ENV;
        if (env) {
            ENV = {};
            try {
                for (var _b = __values(Object.keys(env)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var id = _c.value;
                    ENV[id] = env[id];
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        this.configuration.pushParser(this);
        this.stack = new Stack_js_1.default(this.itemFactory, ENV, inner ? isInner : true);
        this.Parse();
        this.Push(this.itemFactory.create('stop'));
    }
    Object.defineProperty(TexParser.prototype, "options", {
        get: function () {
            return this.configuration.options;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TexParser.prototype, "itemFactory", {
        get: function () {
            return this.configuration.itemFactory;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TexParser.prototype, "tags", {
        get: function () {
            return this.configuration.tags;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TexParser.prototype, "string", {
        get: function () {
            return this._string;
        },
        set: function (str) {
            this._string = str;
        },
        enumerable: false,
        configurable: true
    });
    TexParser.prototype.parse = function (kind, input) {
        return this.configuration.handlers.get(kind).parse(input);
    };
    TexParser.prototype.lookup = function (kind, symbol) {
        return this.configuration.handlers.get(kind).lookup(symbol);
    };
    TexParser.prototype.contains = function (kind, symbol) {
        return this.configuration.handlers.get(kind).contains(symbol);
    };
    TexParser.prototype.toString = function () {
        var e_2, _a;
        var str = '';
        try {
            for (var _b = __values(Array.from(this.configuration.handlers.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {
                var config = _c.value;
                str += config + ': ' +
                    this.configuration.handlers.get(config) + '\n';
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return str;
    };
    TexParser.prototype.Parse = function () {
        var c;
        while (this.i < this.string.length) {
            c = this.getCodePoint();
            this.i += c.length;
            this.parse('character', [this, c]);
        }
    };
    TexParser.prototype.Push = function (arg) {
        if (arg instanceof MmlNode_js_1.AbstractMmlNode && arg.isInferred) {
            this.PushAll(arg.childNodes);
        }
        else {
            this.stack.Push(arg);
        }
    };
    TexParser.prototype.PushAll = function (args) {
        var e_3, _a;
        try {
            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
                var arg = args_1_1.value;
                this.stack.Push(arg);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    TexParser.prototype.mml = function () {
        if (!this.stack.Top().isKind('mml')) {
            return null;
        }
        var node = this.stack.Top().First;
        this.configuration.popParser();
        return node;
    };
    TexParser.prototype.convertDelimiter = function (c) {
        var symbol = this.lookup('delimiter', c);
        return symbol ? symbol.char : null;
    };
    TexParser.prototype.getCodePoint = function () {
        var code = this.string.codePointAt(this.i);
        return code === undefined ? '' : String.fromCodePoint(code);
    };
    TexParser.prototype.nextIsSpace = function () {
        return !!this.string.charAt(this.i).match(/\s/);
    };
    TexParser.prototype.GetNext = function () {
        while (this.nextIsSpace()) {
            this.i++;
        }
        return this.getCodePoint();
    };
    TexParser.prototype.GetCS = function () {
        var CS = this.string.slice(this.i).match(/^(([a-z]+) ?|[\uD800-\uDBFF].|.)/i);
        if (CS) {
            this.i += CS[0].length;
            return CS[2] || CS[1];
        }
        else {
            this.i++;
            return ' ';
        }
    };
    TexParser.prototype.GetArgument = function (_name, noneOK) {
        switch (this.GetNext()) {
            case '':
                if (!noneOK) {
                    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', this.currentCS);
                }
                return null;
            case '}':
                if (!noneOK) {
                    throw new TexError_js_1.default('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');
                }
                return null;
            case '\\':
                this.i++;
                return '\\' + this.GetCS();
            case '{':
                var j = ++this.i, parens = 1;
                while (this.i < this.string.length) {
                    switch (this.string.charAt(this.i++)) {
                        case '\\':
                            this.i++;
                            break;
                        case '{':
                            parens++;
                            break;
                        case '}':
                            if (--parens === 0) {
                                return this.string.slice(j, this.i - 1);
                            }
                            break;
                    }
                }
                throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');
        }
        var c = this.getCodePoint();
        this.i += c.length;
        return c;
    };
    TexParser.prototype.GetBrackets = function (_name, def) {
        if (this.GetNext() !== '[') {
            return def;
        }
        var j = ++this.i, parens = 0;
        while (this.i < this.string.length) {
            switch (this.string.charAt(this.i++)) {
                case '{':
                    parens++;
                    break;
                case '\\':
                    this.i++;
                    break;
                case '}':
                    if (parens-- <= 0) {
                        throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', '\']\'');
                    }
                    break;
                case ']':
                    if (parens === 0) {
                        return this.string.slice(j, this.i - 1);
                    }
                    break;
            }
        }
        throw new TexError_js_1.default('MissingCloseBracket', 'Could not find closing \']\' for argument to %1', this.currentCS);
    };
    TexParser.prototype.GetDelimiter = function (name, braceOK) {
        var c = this.GetNext();
        this.i += c.length;
        if (this.i <= this.string.length) {
            if (c === '\\') {
                c += this.GetCS();
            }
            else if (c === '{' && braceOK) {
                this.i--;
                c = this.GetArgument(name).trim();
            }
            if (this.contains('delimiter', c)) {
                return this.convertDelimiter(c);
            }
        }
        throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);
    };
    TexParser.prototype.GetDimen = function (name) {
        if (this.GetNext() === '{') {
            var dimen = this.GetArgument(name);
            var _a = __read(ParseUtil_js_1.default.matchDimen(dimen), 2), value = _a[0], unit = _a[1];
            if (value) {
                return value + unit;
            }
        }
        else {
            var dimen = this.string.slice(this.i);
            var _b = __read(ParseUtil_js_1.default.matchDimen(dimen, true), 3), value = _b[0], unit = _b[1], length_1 = _b[2];
            if (value) {
                this.i += length_1;
                return value + unit;
            }
        }
        throw new TexError_js_1.default('MissingDimOrUnits', 'Missing dimension or its units for %1', this.currentCS);
    };
    TexParser.prototype.GetUpTo = function (_name, token) {
        while (this.nextIsSpace()) {
            this.i++;
        }
        var j = this.i;
        var parens = 0;
        while (this.i < this.string.length) {
            var k = this.i;
            var c = this.GetNext();
            this.i += c.length;
            switch (c) {
                case '\\':
                    c += this.GetCS();
                    break;
                case '{':
                    parens++;
                    break;
                case '}':
                    if (parens === 0) {
                        throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', token);
                    }
                    parens--;
                    break;
            }
            if (parens === 0 && c === token) {
                return this.string.slice(j, k);
            }
        }
        throw new TexError_js_1.default('TokenNotFoundForCommand', 'Could not find %1 for %2', token, this.currentCS);
    };
    TexParser.prototype.ParseArg = function (name) {
        return new TexParser(this.GetArgument(name), this.stack.env, this.configuration).mml();
    };
    TexParser.prototype.ParseUpTo = function (name, token) {
        return new TexParser(this.GetUpTo(name, token), this.stack.env, this.configuration).mml();
    };
    TexParser.prototype.GetDelimiterArg = function (name) {
        var c = ParseUtil_js_1.default.trimSpaces(this.GetArgument(name));
        if (c === '') {
            return null;
        }
        if (this.contains('delimiter', c)) {
            return c;
        }
        throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);
    };
    TexParser.prototype.GetStar = function () {
        var star = (this.GetNext() === '*');
        if (star) {
            this.i++;
        }
        return star;
    };
    TexParser.prototype.create = function (kind) {
        var _a;
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        return (_a = this.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest), false));
    };
    return TexParser;
}());
exports["default"] = TexParser;
//# sourceMappingURL=TexParser.js.map

/***/ }),

/***/ 8174:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ActionConfiguration = exports.ActionMethods = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var SymbolMap_js_1 = __webpack_require__(9140);
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
exports.ActionMethods = {};
exports.ActionMethods.Macro = BaseMethods_js_1.default.Macro;
exports.ActionMethods.Toggle = function (parser, name) {
    var children = [];
    var arg;
    while ((arg = parser.GetArgument(name)) !== '\\endtoggle') {
        children.push(new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml());
    }
    parser.Push(parser.create('node', 'maction', children, { actiontype: 'toggle' }));
};
exports.ActionMethods.Mathtip = function (parser, name) {
    var arg = parser.ParseArg(name);
    var tip = parser.ParseArg(name);
    parser.Push(parser.create('node', 'maction', [arg, tip], { actiontype: 'tooltip' }));
};
new SymbolMap_js_1.CommandMap('action-macros', {
    toggle: 'Toggle',
    mathtip: 'Mathtip',
    texttip: ['Macro', '\\mathtip{#1}{\\text{#2}}', 2]
}, exports.ActionMethods);
exports.ActionConfiguration = Configuration_js_1.Configuration.create('action', { handler: { macro: ['action-macros'] } });
//# sourceMappingURL=ActionConfiguration.js.map

/***/ }),

/***/ 8021:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AmsConfiguration = exports.AmsTags = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var AmsItems_js_1 = __webpack_require__(2790);
var Tags_js_1 = __webpack_require__(6521);
var AmsMethods_js_1 = __webpack_require__(4387);
__webpack_require__(7379);
var SymbolMap_js_1 = __webpack_require__(9140);
var AmsTags = (function (_super) {
    __extends(AmsTags, _super);
    function AmsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AmsTags;
}(Tags_js_1.AbstractTags));
exports.AmsTags = AmsTags;
var init = function (config) {
    new SymbolMap_js_1.CommandMap(AmsMethods_js_1.NEW_OPS, {}, {});
    config.append(Configuration_js_1.Configuration.local({ handler: { macro: [AmsMethods_js_1.NEW_OPS] },
        priority: -1 }));
};
exports.AmsConfiguration = Configuration_js_1.Configuration.create('ams', {
    handler: {
        character: ['AMSmath-operatorLetter'],
        delimiter: ['AMSsymbols-delimiter', 'AMSmath-delimiter'],
        macro: ['AMSsymbols-mathchar0mi', 'AMSsymbols-mathchar0mo',
            'AMSsymbols-delimiter', 'AMSsymbols-macros',
            'AMSmath-mathchar0mo', 'AMSmath-macros', 'AMSmath-delimiter'],
        environment: ['AMSmath-environment']
    },
    items: (_a = {},
        _a[AmsItems_js_1.MultlineItem.prototype.kind] = AmsItems_js_1.MultlineItem,
        _a[AmsItems_js_1.FlalignItem.prototype.kind] = AmsItems_js_1.FlalignItem,
        _a),
    tags: { 'ams': AmsTags },
    init: init,
    config: function (_config, jax) {
        if (jax.parseOptions.options.multlineWidth) {
            jax.parseOptions.options.ams.multlineWidth = jax.parseOptions.options.multlineWidth;
        }
        delete jax.parseOptions.options.multlineWidth;
    },
    options: {
        multlineWidth: '',
        ams: {
            multlineWidth: '100%',
            multlineIndent: '1em',
        }
    }
});
//# sourceMappingURL=AmsConfiguration.js.map

/***/ }),

/***/ 2790:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FlalignItem = exports.MultlineItem = void 0;
var BaseItems_js_1 = __webpack_require__(1181);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var TexConstants_js_1 = __webpack_require__(8317);
var MultlineItem = (function (_super) {
    __extends(MultlineItem, _super);
    function MultlineItem(factory) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this, factory) || this;
        _this.factory.configuration.tags.start('multline', true, args[0]);
        return _this;
    }
    Object.defineProperty(MultlineItem.prototype, "kind", {
        get: function () {
            return 'multline';
        },
        enumerable: false,
        configurable: true
    });
    MultlineItem.prototype.EndEntry = function () {
        if (this.table.length) {
            ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);
        }
        var shove = this.getProperty('shove');
        var mtd = this.create('node', 'mtd', this.nodes, shove ? { columnalign: shove } : {});
        this.setProperty('shove', null);
        this.row.push(mtd);
        this.Clear();
    };
    MultlineItem.prototype.EndRow = function () {
        if (this.row.length !== 1) {
            throw new TexError_js_1.default('MultlineRowsOneCol', 'The rows within the %1 environment must have exactly one column', 'multline');
        }
        var row = this.create('node', 'mtr', this.row);
        this.table.push(row);
        this.row = [];
    };
    MultlineItem.prototype.EndTable = function () {
        _super.prototype.EndTable.call(this);
        if (this.table.length) {
            var m = this.table.length - 1, label = -1;
            if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign')) {
                NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.LEFT);
            }
            if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign')) {
                NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.RIGHT);
            }
            var tag = this.factory.configuration.tags.getTag();
            if (tag) {
                label = (this.arraydef.side === TexConstants_js_1.TexConstant.Align.LEFT ? 0 : this.table.length - 1);
                var mtr = this.table[label];
                var mlabel = this.create('node', 'mlabeledtr', [tag].concat(NodeUtil_js_1.default.getChildren(mtr)));
                NodeUtil_js_1.default.copyAttributes(mtr, mlabel);
                this.table[label] = mlabel;
            }
        }
        this.factory.configuration.tags.end();
    };
    return MultlineItem;
}(BaseItems_js_1.ArrayItem));
exports.MultlineItem = MultlineItem;
var FlalignItem = (function (_super) {
    __extends(FlalignItem, _super);
    function FlalignItem(factory, name, numbered, padded, center) {
        var _this = _super.call(this, factory) || this;
        _this.name = name;
        _this.numbered = numbered;
        _this.padded = padded;
        _this.center = center;
        _this.factory.configuration.tags.start(name, numbered, numbered);
        return _this;
    }
    Object.defineProperty(FlalignItem.prototype, "kind", {
        get: function () {
            return 'flalign';
        },
        enumerable: false,
        configurable: true
    });
    FlalignItem.prototype.EndEntry = function () {
        _super.prototype.EndEntry.call(this);
        var n = this.getProperty('xalignat');
        if (!n)
            return;
        if (this.row.length > n) {
            throw new TexError_js_1.default('XalignOverflow', 'Extra %1 in row of %2', '&', this.name);
        }
    };
    FlalignItem.prototype.EndRow = function () {
        var cell;
        var row = this.row;
        var n = this.getProperty('xalignat');
        while (row.length < n) {
            row.push(this.create('node', 'mtd'));
        }
        this.row = [];
        if (this.padded) {
            this.row.push(this.create('node', 'mtd'));
        }
        while ((cell = row.shift())) {
            this.row.push(cell);
            cell = row.shift();
            if (cell)
                this.row.push(cell);
            if (row.length || this.padded) {
                this.row.push(this.create('node', 'mtd'));
            }
        }
        if (this.row.length > this.maxrow) {
            this.maxrow = this.row.length;
        }
        _super.prototype.EndRow.call(this);
        var mtr = this.table[this.table.length - 1];
        if (this.getProperty('zeroWidthLabel') && mtr.isKind('mlabeledtr')) {
            var mtd = NodeUtil_js_1.default.getChildren(mtr)[0];
            var side = this.factory.configuration.options['tagSide'];
            var def = __assign({ width: 0 }, (side === 'right' ? { lspace: '-1width' } : {}));
            var mpadded = this.create('node', 'mpadded', NodeUtil_js_1.default.getChildren(mtd), def);
            mtd.setChildren([mpadded]);
        }
    };
    FlalignItem.prototype.EndTable = function () {
        _super.prototype.EndTable.call(this);
        if (this.center) {
            if (this.maxrow <= 2) {
                var def = this.arraydef;
                delete def.width;
                delete this.global.indentalign;
            }
        }
    };
    return FlalignItem;
}(BaseItems_js_1.EqnArrayItem));
exports.FlalignItem = FlalignItem;
//# sourceMappingURL=AmsItems.js.map

/***/ }),

/***/ 7379:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var AmsMethods_js_1 = __webpack_require__(4387);
var sm = __importStar(__webpack_require__(9140));
var TexConstants_js_1 = __webpack_require__(8317);
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var MmlNode_js_1 = __webpack_require__(9007);
var lengths_js_1 = __webpack_require__(6010);
new sm.CharacterMap('AMSmath-mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {
    iiiint: ['\u2A0C', { texClass: MmlNode_js_1.TEXCLASS.OP }]
});
new sm.RegExpMap('AMSmath-operatorLetter', AmsMethods_js_1.AmsMethods.operatorLetter, /[-*]/i);
new sm.CommandMap('AMSmath-macros', {
    mathring: ['Accent', '02DA'],
    nobreakspace: 'Tilde',
    negmedspace: ['Spacer', lengths_js_1.MATHSPACE.negativemediummathspace],
    negthickspace: ['Spacer', lengths_js_1.MATHSPACE.negativethickmathspace],
    idotsint: ['MultiIntegral', '\\int\\cdots\\int'],
    dddot: ['Accent', '20DB'],
    ddddot: ['Accent', '20DC'],
    sideset: 'SideSet',
    boxed: ['Macro', '\\fbox{$\\displaystyle{#1}$}', 1],
    tag: 'HandleTag',
    notag: 'HandleNoTag',
    eqref: ['HandleRef', true],
    substack: ['Macro', '\\begin{subarray}{c}#1\\end{subarray}', 1],
    injlim: ['NamedOp', 'inj&thinsp;lim'],
    projlim: ['NamedOp', 'proj&thinsp;lim'],
    varliminf: ['Macro', '\\mathop{\\underline{\\mmlToken{mi}{lim}}}'],
    varlimsup: ['Macro', '\\mathop{\\overline{\\mmlToken{mi}{lim}}}'],
    varinjlim: ['Macro', '\\mathop{\\underrightarrow{\\mmlToken{mi}{lim}}}'],
    varprojlim: ['Macro', '\\mathop{\\underleftarrow{\\mmlToken{mi}{lim}}}'],
    DeclareMathOperator: 'HandleDeclareOp',
    operatorname: 'HandleOperatorName',
    genfrac: 'Genfrac',
    frac: ['Genfrac', '', '', '', ''],
    tfrac: ['Genfrac', '', '', '', '1'],
    dfrac: ['Genfrac', '', '', '', '0'],
    binom: ['Genfrac', '(', ')', '0', ''],
    tbinom: ['Genfrac', '(', ')', '0', '1'],
    dbinom: ['Genfrac', '(', ')', '0', '0'],
    cfrac: 'CFrac',
    shoveleft: ['HandleShove', TexConstants_js_1.TexConstant.Align.LEFT],
    shoveright: ['HandleShove', TexConstants_js_1.TexConstant.Align.RIGHT],
    xrightarrow: ['xArrow', 0x2192, 5, 10],
    xleftarrow: ['xArrow', 0x2190, 10, 5]
}, AmsMethods_js_1.AmsMethods);
new sm.EnvironmentMap('AMSmath-environment', ParseMethods_js_1.default.environment, {
    'equation*': ['Equation', null, false],
    'eqnarray*': ['EqnArray', null, false, true, 'rcl',
        ParseUtil_js_1.default.cols(0, lengths_js_1.MATHSPACE.thickmathspace), '.5em'],
    align: ['EqnArray', null, true, true, 'rl', ParseUtil_js_1.default.cols(0, 2)],
    'align*': ['EqnArray', null, false, true, 'rl', ParseUtil_js_1.default.cols(0, 2)],
    multline: ['Multline', null, true],
    'multline*': ['Multline', null, false],
    split: ['EqnArray', null, false, false, 'rl', ParseUtil_js_1.default.cols(0)],
    gather: ['EqnArray', null, true, true, 'c'],
    'gather*': ['EqnArray', null, false, true, 'c'],
    alignat: ['AlignAt', null, true, true],
    'alignat*': ['AlignAt', null, false, true],
    alignedat: ['AlignAt', null, false, false],
    aligned: ['AmsEqnArray', null, null, null, 'rl', ParseUtil_js_1.default.cols(0, 2), '.5em', 'D'],
    gathered: ['AmsEqnArray', null, null, null, 'c', null, '.5em', 'D'],
    xalignat: ['XalignAt', null, true, true],
    'xalignat*': ['XalignAt', null, false, true],
    xxalignat: ['XalignAt', null, false, false],
    flalign: ['FlalignArray', null, true, false, true, 'rlc', 'auto auto fit'],
    'flalign*': ['FlalignArray', null, false, false, true, 'rlc', 'auto auto fit'],
    subarray: ['Array', null, null, null, null, ParseUtil_js_1.default.cols(0), '0.1em', 'S', 1],
    smallmatrix: ['Array', null, null, null, 'c', ParseUtil_js_1.default.cols(1 / 3),
        '.2em', 'S', 1],
    matrix: ['Array', null, null, null, 'c'],
    pmatrix: ['Array', null, '(', ')', 'c'],
    bmatrix: ['Array', null, '[', ']', 'c'],
    Bmatrix: ['Array', null, '\\{', '\\}', 'c'],
    vmatrix: ['Array', null, '\\vert', '\\vert', 'c'],
    Vmatrix: ['Array', null, '\\Vert', '\\Vert', 'c'],
    cases: ['Array', null, '\\{', '.', 'll', null, '.2em', 'T']
}, AmsMethods_js_1.AmsMethods);
new sm.DelimiterMap('AMSmath-delimiter', ParseMethods_js_1.default.delimiter, {
    '\\lvert': ['\u007C', { texClass: MmlNode_js_1.TEXCLASS.OPEN }],
    '\\rvert': ['\u007C', { texClass: MmlNode_js_1.TEXCLASS.CLOSE }],
    '\\lVert': ['\u2016', { texClass: MmlNode_js_1.TEXCLASS.OPEN }],
    '\\rVert': ['\u2016', { texClass: MmlNode_js_1.TEXCLASS.CLOSE }]
});
new sm.CharacterMap('AMSsymbols-mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {
    digamma: '\u03DD',
    varkappa: '\u03F0',
    varGamma: ['\u0393', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varDelta: ['\u0394', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varTheta: ['\u0398', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varLambda: ['\u039B', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varXi: ['\u039E', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varPi: ['\u03A0', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varSigma: ['\u03A3', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varUpsilon: ['\u03A5', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varPhi: ['\u03A6', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varPsi: ['\u03A8', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    varOmega: ['\u03A9', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    beth: '\u2136',
    gimel: '\u2137',
    daleth: '\u2138',
    backprime: ['\u2035', { variantForm: true }],
    hslash: '\u210F',
    varnothing: ['\u2205', { variantForm: true }],
    blacktriangle: '\u25B4',
    triangledown: ['\u25BD', { variantForm: true }],
    blacktriangledown: '\u25BE',
    square: '\u25FB',
    Box: '\u25FB',
    blacksquare: '\u25FC',
    lozenge: '\u25CA',
    Diamond: '\u25CA',
    blacklozenge: '\u29EB',
    circledS: ['\u24C8', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    bigstar: '\u2605',
    sphericalangle: '\u2222',
    measuredangle: '\u2221',
    nexists: '\u2204',
    complement: '\u2201',
    mho: '\u2127',
    eth: ['\u00F0', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    Finv: '\u2132',
    diagup: '\u2571',
    Game: '\u2141',
    diagdown: '\u2572',
    Bbbk: ['\u006B',
        { mathvariant: TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK }],
    yen: '\u00A5',
    circledR: '\u00AE',
    checkmark: '\u2713',
    maltese: '\u2720'
});
new sm.CharacterMap('AMSsymbols-mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {
    dotplus: '\u2214',
    ltimes: '\u22C9',
    smallsetminus: ['\u2216', { variantForm: true }],
    rtimes: '\u22CA',
    Cap: '\u22D2',
    doublecap: '\u22D2',
    leftthreetimes: '\u22CB',
    Cup: '\u22D3',
    doublecup: '\u22D3',
    rightthreetimes: '\u22CC',
    barwedge: '\u22BC',
    curlywedge: '\u22CF',
    veebar: '\u22BB',
    curlyvee: '\u22CE',
    doublebarwedge: '\u2A5E',
    boxminus: '\u229F',
    circleddash: '\u229D',
    boxtimes: '\u22A0',
    circledast: '\u229B',
    boxdot: '\u22A1',
    circledcirc: '\u229A',
    boxplus: '\u229E',
    centerdot: ['\u22C5', { variantForm: true }],
    divideontimes: '\u22C7',
    intercal: '\u22BA',
    leqq: '\u2266',
    geqq: '\u2267',
    leqslant: '\u2A7D',
    geqslant: '\u2A7E',
    eqslantless: '\u2A95',
    eqslantgtr: '\u2A96',
    lesssim: '\u2272',
    gtrsim: '\u2273',
    lessapprox: '\u2A85',
    gtrapprox: '\u2A86',
    approxeq: '\u224A',
    lessdot: '\u22D6',
    gtrdot: '\u22D7',
    lll: '\u22D8',
    llless: '\u22D8',
    ggg: '\u22D9',
    gggtr: '\u22D9',
    lessgtr: '\u2276',
    gtrless: '\u2277',
    lesseqgtr: '\u22DA',
    gtreqless: '\u22DB',
    lesseqqgtr: '\u2A8B',
    gtreqqless: '\u2A8C',
    doteqdot: '\u2251',
    Doteq: '\u2251',
    eqcirc: '\u2256',
    risingdotseq: '\u2253',
    circeq: '\u2257',
    fallingdotseq: '\u2252',
    triangleq: '\u225C',
    backsim: '\u223D',
    thicksim: ['\u223C', { variantForm: true }],
    backsimeq: '\u22CD',
    thickapprox: ['\u2248', { variantForm: true }],
    subseteqq: '\u2AC5',
    supseteqq: '\u2AC6',
    Subset: '\u22D0',
    Supset: '\u22D1',
    sqsubset: '\u228F',
    sqsupset: '\u2290',
    preccurlyeq: '\u227C',
    succcurlyeq: '\u227D',
    curlyeqprec: '\u22DE',
    curlyeqsucc: '\u22DF',
    precsim: '\u227E',
    succsim: '\u227F',
    precapprox: '\u2AB7',
    succapprox: '\u2AB8',
    vartriangleleft: '\u22B2',
    lhd: '\u22B2',
    vartriangleright: '\u22B3',
    rhd: '\u22B3',
    trianglelefteq: '\u22B4',
    unlhd: '\u22B4',
    trianglerighteq: '\u22B5',
    unrhd: '\u22B5',
    vDash: ['\u22A8', { variantForm: true }],
    Vdash: '\u22A9',
    Vvdash: '\u22AA',
    smallsmile: ['\u2323', { variantForm: true }],
    shortmid: ['\u2223', { variantForm: true }],
    smallfrown: ['\u2322', { variantForm: true }],
    shortparallel: ['\u2225', { variantForm: true }],
    bumpeq: '\u224F',
    between: '\u226C',
    Bumpeq: '\u224E',
    pitchfork: '\u22D4',
    varpropto: ['\u221D', { variantForm: true }],
    backepsilon: '\u220D',
    blacktriangleleft: '\u25C2',
    blacktriangleright: '\u25B8',
    therefore: '\u2234',
    because: '\u2235',
    eqsim: '\u2242',
    vartriangle: ['\u25B3', { variantForm: true }],
    Join: '\u22C8',
    nless: '\u226E',
    ngtr: '\u226F',
    nleq: '\u2270',
    ngeq: '\u2271',
    nleqslant: ['\u2A87', { variantForm: true }],
    ngeqslant: ['\u2A88', { variantForm: true }],
    nleqq: ['\u2270', { variantForm: true }],
    ngeqq: ['\u2271', { variantForm: true }],
    lneq: '\u2A87',
    gneq: '\u2A88',
    lneqq: '\u2268',
    gneqq: '\u2269',
    lvertneqq: ['\u2268', { variantForm: true }],
    gvertneqq: ['\u2269', { variantForm: true }],
    lnsim: '\u22E6',
    gnsim: '\u22E7',
    lnapprox: '\u2A89',
    gnapprox: '\u2A8A',
    nprec: '\u2280',
    nsucc: '\u2281',
    npreceq: ['\u22E0', { variantForm: true }],
    nsucceq: ['\u22E1', { variantForm: true }],
    precneqq: '\u2AB5',
    succneqq: '\u2AB6',
    precnsim: '\u22E8',
    succnsim: '\u22E9',
    precnapprox: '\u2AB9',
    succnapprox: '\u2ABA',
    nsim: '\u2241',
    ncong: '\u2247',
    nshortmid: ['\u2224', { variantForm: true }],
    nshortparallel: ['\u2226', { variantForm: true }],
    nmid: '\u2224',
    nparallel: '\u2226',
    nvdash: '\u22AC',
    nvDash: '\u22AD',
    nVdash: '\u22AE',
    nVDash: '\u22AF',
    ntriangleleft: '\u22EA',
    ntriangleright: '\u22EB',
    ntrianglelefteq: '\u22EC',
    ntrianglerighteq: '\u22ED',
    nsubseteq: '\u2288',
    nsupseteq: '\u2289',
    nsubseteqq: ['\u2288', { variantForm: true }],
    nsupseteqq: ['\u2289', { variantForm: true }],
    subsetneq: '\u228A',
    supsetneq: '\u228B',
    varsubsetneq: ['\u228A', { variantForm: true }],
    varsupsetneq: ['\u228B', { variantForm: true }],
    subsetneqq: '\u2ACB',
    supsetneqq: '\u2ACC',
    varsubsetneqq: ['\u2ACB', { variantForm: true }],
    varsupsetneqq: ['\u2ACC', { variantForm: true }],
    leftleftarrows: '\u21C7',
    rightrightarrows: '\u21C9',
    leftrightarrows: '\u21C6',
    rightleftarrows: '\u21C4',
    Lleftarrow: '\u21DA',
    Rrightarrow: '\u21DB',
    twoheadleftarrow: '\u219E',
    twoheadrightarrow: '\u21A0',
    leftarrowtail: '\u21A2',
    rightarrowtail: '\u21A3',
    looparrowleft: '\u21AB',
    looparrowright: '\u21AC',
    leftrightharpoons: '\u21CB',
    rightleftharpoons: ['\u21CC', { variantForm: true }],
    curvearrowleft: '\u21B6',
    curvearrowright: '\u21B7',
    circlearrowleft: '\u21BA',
    circlearrowright: '\u21BB',
    Lsh: '\u21B0',
    Rsh: '\u21B1',
    upuparrows: '\u21C8',
    downdownarrows: '\u21CA',
    upharpoonleft: '\u21BF',
    upharpoonright: '\u21BE',
    downharpoonleft: '\u21C3',
    restriction: '\u21BE',
    multimap: '\u22B8',
    downharpoonright: '\u21C2',
    leftrightsquigarrow: '\u21AD',
    rightsquigarrow: '\u21DD',
    leadsto: '\u21DD',
    dashrightarrow: '\u21E2',
    dashleftarrow: '\u21E0',
    nleftarrow: '\u219A',
    nrightarrow: '\u219B',
    nLeftarrow: '\u21CD',
    nRightarrow: '\u21CF',
    nleftrightarrow: '\u21AE',
    nLeftrightarrow: '\u21CE'
});
new sm.DelimiterMap('AMSsymbols-delimiter', ParseMethods_js_1.default.delimiter, {
    '\\ulcorner': '\u231C',
    '\\urcorner': '\u231D',
    '\\llcorner': '\u231E',
    '\\lrcorner': '\u231F'
});
new sm.CommandMap('AMSsymbols-macros', {
    implies: ['Macro', '\\;\\Longrightarrow\\;'],
    impliedby: ['Macro', '\\;\\Longleftarrow\\;']
}, AmsMethods_js_1.AmsMethods);
//# sourceMappingURL=AmsMappings.js.map

/***/ }),

/***/ 4387:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NEW_OPS = exports.AmsMethods = void 0;
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexConstants_js_1 = __webpack_require__(8317);
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var Symbol_js_1 = __webpack_require__(8803);
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var MmlNode_js_1 = __webpack_require__(9007);
exports.AmsMethods = {};
exports.AmsMethods.AmsEqnArray = function (parser, begin, numbered, taggable, align, spacing, style) {
    var args = parser.GetBrackets('\\begin{' + begin.getName() + '}');
    var array = BaseMethods_js_1.default.EqnArray(parser, begin, numbered, taggable, align, spacing, style);
    return ParseUtil_js_1.default.setArrayAlign(array, args);
};
exports.AmsMethods.AlignAt = function (parser, begin, numbered, taggable) {
    var name = begin.getName();
    var n, valign, align = '', spacing = [];
    if (!taggable) {
        valign = parser.GetBrackets('\\begin{' + name + '}');
    }
    n = parser.GetArgument('\\begin{' + name + '}');
    if (n.match(/[^0-9]/)) {
        throw new TexError_js_1.default('PositiveIntegerArg', 'Argument to %1 must me a positive integer', '\\begin{' + name + '}');
    }
    var count = parseInt(n, 10);
    while (count > 0) {
        align += 'rl';
        spacing.push('0em 0em');
        count--;
    }
    var spaceStr = spacing.join(' ');
    if (taggable) {
        return exports.AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);
    }
    var array = exports.AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);
    return ParseUtil_js_1.default.setArrayAlign(array, valign);
};
exports.AmsMethods.Multline = function (parser, begin, numbered) {
    parser.Push(begin);
    ParseUtil_js_1.default.checkEqnEnv(parser);
    var item = parser.itemFactory.create('multline', numbered, parser.stack);
    item.arraydef = {
        displaystyle: true,
        rowspacing: '.5em',
        columnspacing: '100%',
        width: parser.options.ams['multlineWidth'],
        side: parser.options['tagSide'],
        minlabelspacing: parser.options['tagIndent'],
        framespacing: parser.options.ams['multlineIndent'] + ' 0',
        frame: '',
        'data-width-includes-label': true
    };
    return item;
};
exports.AmsMethods.XalignAt = function (parser, begin, numbered, padded) {
    var n = parser.GetArgument('\\begin{' + begin.getName() + '}');
    if (n.match(/[^0-9]/)) {
        throw new TexError_js_1.default('PositiveIntegerArg', 'Argument to %1 must me a positive integer', '\\begin{' + begin.getName() + '}');
    }
    var align = (padded ? 'crl' : 'rlc');
    var width = (padded ? 'fit auto auto' : 'auto auto fit');
    var item = exports.AmsMethods.FlalignArray(parser, begin, numbered, padded, false, align, width, true);
    item.setProperty('xalignat', 2 * parseInt(n));
    return item;
};
exports.AmsMethods.FlalignArray = function (parser, begin, numbered, padded, center, align, width, zeroWidthLabel) {
    if (zeroWidthLabel === void 0) { zeroWidthLabel = false; }
    parser.Push(begin);
    ParseUtil_js_1.default.checkEqnEnv(parser);
    align = align
        .split('')
        .join(' ')
        .replace(/r/g, 'right')
        .replace(/l/g, 'left')
        .replace(/c/g, 'center');
    var item = parser.itemFactory.create('flalign', begin.getName(), numbered, padded, center, parser.stack);
    item.arraydef = {
        width: '100%',
        displaystyle: true,
        columnalign: align,
        columnspacing: '0em',
        columnwidth: width,
        rowspacing: '3pt',
        side: parser.options['tagSide'],
        minlabelspacing: (zeroWidthLabel ? '0' : parser.options['tagIndent']),
        'data-width-includes-label': true,
    };
    item.setProperty('zeroWidthLabel', zeroWidthLabel);
    return item;
};
exports.NEW_OPS = 'ams-declare-ops';
exports.AmsMethods.HandleDeclareOp = function (parser, name) {
    var star = (parser.GetStar() ? '*' : '');
    var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
    if (cs.charAt(0) === '\\') {
        cs = cs.substr(1);
    }
    var op = parser.GetArgument(name);
    parser.configuration.handlers.retrieve(exports.NEW_OPS).
        add(cs, new Symbol_js_1.Macro(cs, exports.AmsMethods.Macro, ["\\operatorname".concat(star, "{").concat(op, "}")]));
};
exports.AmsMethods.HandleOperatorName = function (parser, name) {
    var star = parser.GetStar();
    var op = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
    var mml = new TexParser_js_1.default(op, __assign(__assign({}, parser.stack.env), { font: TexConstants_js_1.TexConstant.Variant.NORMAL, multiLetterIdentifiers: /^[-*a-z]+/i, operatorLetters: true }), parser.configuration).mml();
    if (!mml.isKind('mi')) {
        mml = parser.create('node', 'TeXAtom', [mml]);
    }
    NodeUtil_js_1.default.setProperties(mml, { movesupsub: star, movablelimits: true, texClass: MmlNode_js_1.TEXCLASS.OP });
    if (!star) {
        var c = parser.GetNext(), i = parser.i;
        if (c === '\\' && ++parser.i && parser.GetCS() !== 'limits') {
            parser.i = i;
        }
    }
    parser.Push(mml);
};
exports.AmsMethods.SideSet = function (parser, name) {
    var _a = __read(splitSideSet(parser.ParseArg(name)), 2), preScripts = _a[0], preRest = _a[1];
    var _b = __read(splitSideSet(parser.ParseArg(name)), 2), postScripts = _b[0], postRest = _b[1];
    var base = parser.ParseArg(name);
    var mml = base;
    if (preScripts) {
        if (preRest) {
            preScripts.replaceChild(parser.create('node', 'mphantom', [
                parser.create('node', 'mpadded', [ParseUtil_js_1.default.copyNode(base, parser)], { width: 0 })
            ]), NodeUtil_js_1.default.getChildAt(preScripts, 0));
        }
        else {
            mml = parser.create('node', 'mmultiscripts', [base]);
            if (postScripts) {
                NodeUtil_js_1.default.appendChildren(mml, [
                    NodeUtil_js_1.default.getChildAt(postScripts, 1) || parser.create('node', 'none'),
                    NodeUtil_js_1.default.getChildAt(postScripts, 2) || parser.create('node', 'none')
                ]);
            }
            NodeUtil_js_1.default.setProperty(mml, 'scriptalign', 'left');
            NodeUtil_js_1.default.appendChildren(mml, [
                parser.create('node', 'mprescripts'),
                NodeUtil_js_1.default.getChildAt(preScripts, 1) || parser.create('node', 'none'),
                NodeUtil_js_1.default.getChildAt(preScripts, 2) || parser.create('node', 'none')
            ]);
        }
    }
    if (postScripts && mml === base) {
        postScripts.replaceChild(base, NodeUtil_js_1.default.getChildAt(postScripts, 0));
        mml = postScripts;
    }
    var mrow = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OP, movesupsub: true, movablelimits: true });
    if (preRest) {
        preScripts && mrow.appendChild(preScripts);
        mrow.appendChild(preRest);
    }
    mrow.appendChild(mml);
    postRest && mrow.appendChild(postRest);
    parser.Push(mrow);
};
function splitSideSet(mml) {
    if (!mml || (mml.isInferred && mml.childNodes.length === 0))
        return [null, null];
    if (mml.isKind('msubsup') && checkSideSetBase(mml))
        return [mml, null];
    var child = NodeUtil_js_1.default.getChildAt(mml, 0);
    if (!(mml.isInferred && child && checkSideSetBase(child)))
        return [null, mml];
    mml.childNodes.splice(0, 1);
    return [child, mml];
}
function checkSideSetBase(mml) {
    var base = mml.childNodes[0];
    return base && base.isKind('mi') && base.getText() === '';
}
exports.AmsMethods.operatorLetter = function (parser, c) {
    return parser.stack.env.operatorLetters ? ParseMethods_js_1.default.variable(parser, c) : false;
};
exports.AmsMethods.MultiIntegral = function (parser, name, integral) {
    var next = parser.GetNext();
    if (next === '\\') {
        var i = parser.i;
        next = parser.GetArgument(name);
        parser.i = i;
        if (next === '\\limits') {
            if (name === '\\idotsint') {
                integral = '\\!\\!\\mathop{\\,\\,' + integral + '}';
            }
            else {
                integral = '\\!\\!\\!\\mathop{\\,\\,\\,' + integral + '}';
            }
        }
    }
    parser.string = integral + ' ' + parser.string.slice(parser.i);
    parser.i = 0;
};
exports.AmsMethods.xArrow = function (parser, name, chr, l, r) {
    var def = { width: '+' + ParseUtil_js_1.default.Em((l + r) / 18), lspace: ParseUtil_js_1.default.Em(l / 18) };
    var bot = parser.GetBrackets(name);
    var first = parser.ParseArg(name);
    var dstrut = parser.create('node', 'mspace', [], { depth: '.25em' });
    var arrow = parser.create('token', 'mo', { stretchy: true, texClass: MmlNode_js_1.TEXCLASS.REL }, String.fromCodePoint(chr));
    arrow = parser.create('node', 'mstyle', [arrow], { scriptlevel: 0 });
    var mml = parser.create('node', 'munderover', [arrow]);
    var mpadded = parser.create('node', 'mpadded', [first, dstrut], def);
    NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '-.2em');
    NodeUtil_js_1.default.setAttribute(mpadded, 'height', '-.2em');
    NodeUtil_js_1.default.setChild(mml, mml.over, mpadded);
    if (bot) {
        var bottom = new TexParser_js_1.default(bot, parser.stack.env, parser.configuration).mml();
        var bstrut = parser.create('node', 'mspace', [], { height: '.75em' });
        mpadded = parser.create('node', 'mpadded', [bottom, bstrut], def);
        NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '.15em');
        NodeUtil_js_1.default.setAttribute(mpadded, 'depth', '-.15em');
        NodeUtil_js_1.default.setChild(mml, mml.under, mpadded);
    }
    NodeUtil_js_1.default.setProperty(mml, 'subsupOK', true);
    parser.Push(mml);
};
exports.AmsMethods.HandleShove = function (parser, _name, shove) {
    var top = parser.stack.Top();
    if (top.kind !== 'multline') {
        throw new TexError_js_1.default('CommandOnlyAllowedInEnv', '%1 only allowed in %2 environment', parser.currentCS, 'multline');
    }
    if (top.Size()) {
        throw new TexError_js_1.default('CommandAtTheBeginingOfLine', '%1 must come at the beginning of the line', parser.currentCS);
    }
    top.setProperty('shove', shove);
};
exports.AmsMethods.CFrac = function (parser, name) {
    var lr = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));
    var num = parser.GetArgument(name);
    var den = parser.GetArgument(name);
    var lrMap = {
        l: TexConstants_js_1.TexConstant.Align.LEFT, r: TexConstants_js_1.TexConstant.Align.RIGHT, '': ''
    };
    var numNode = new TexParser_js_1.default('\\strut\\textstyle{' + num + '}', parser.stack.env, parser.configuration).mml();
    var denNode = new TexParser_js_1.default('\\strut\\textstyle{' + den + '}', parser.stack.env, parser.configuration).mml();
    var frac = parser.create('node', 'mfrac', [numNode, denNode]);
    lr = lrMap[lr];
    if (lr == null) {
        throw new TexError_js_1.default('IllegalAlign', 'Illegal alignment specified in %1', parser.currentCS);
    }
    if (lr) {
        NodeUtil_js_1.default.setProperties(frac, { numalign: lr, denomalign: lr });
    }
    parser.Push(frac);
};
exports.AmsMethods.Genfrac = function (parser, name, left, right, thick, style) {
    if (left == null) {
        left = parser.GetDelimiterArg(name);
    }
    if (right == null) {
        right = parser.GetDelimiterArg(name);
    }
    if (thick == null) {
        thick = parser.GetArgument(name);
    }
    if (style == null) {
        style = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
    }
    var num = parser.ParseArg(name);
    var den = parser.ParseArg(name);
    var frac = parser.create('node', 'mfrac', [num, den]);
    if (thick !== '') {
        NodeUtil_js_1.default.setAttribute(frac, 'linethickness', thick);
    }
    if (left || right) {
        NodeUtil_js_1.default.setProperty(frac, 'withDelims', true);
        frac = ParseUtil_js_1.default.fixedFence(parser.configuration, left, frac, right);
    }
    if (style !== '') {
        var styleDigit = parseInt(style, 10);
        var styleAlpha = ['D', 'T', 'S', 'SS'][styleDigit];
        if (styleAlpha == null) {
            throw new TexError_js_1.default('BadMathStyleFor', 'Bad math style for %1', parser.currentCS);
        }
        frac = parser.create('node', 'mstyle', [frac]);
        if (styleAlpha === 'D') {
            NodeUtil_js_1.default.setProperties(frac, { displaystyle: true, scriptlevel: 0 });
        }
        else {
            NodeUtil_js_1.default.setProperties(frac, { displaystyle: false,
                scriptlevel: styleDigit - 1 });
        }
    }
    parser.Push(frac);
};
exports.AmsMethods.HandleTag = function (parser, name) {
    if (!parser.tags.currentTag.taggable && parser.tags.env) {
        throw new TexError_js_1.default('CommandNotAllowedInEnv', '%1 not allowed in %2 environment', parser.currentCS, parser.tags.env);
    }
    if (parser.tags.currentTag.tag) {
        throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);
    }
    var star = parser.GetStar();
    var tagId = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
    parser.tags.tag(tagId, star);
};
exports.AmsMethods.HandleNoTag = BaseMethods_js_1.default.HandleNoTag;
exports.AmsMethods.HandleRef = BaseMethods_js_1.default.HandleRef;
exports.AmsMethods.Macro = BaseMethods_js_1.default.Macro;
exports.AmsMethods.Accent = BaseMethods_js_1.default.Accent;
exports.AmsMethods.Tilde = BaseMethods_js_1.default.Tilde;
exports.AmsMethods.Array = BaseMethods_js_1.default.Array;
exports.AmsMethods.Spacer = BaseMethods_js_1.default.Spacer;
exports.AmsMethods.NamedOp = BaseMethods_js_1.default.NamedOp;
exports.AmsMethods.EqnArray = BaseMethods_js_1.default.EqnArray;
exports.AmsMethods.Equation = BaseMethods_js_1.default.Equation;
//# sourceMappingURL=AmsMethods.js.map

/***/ }),

/***/ 583:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AmsCdConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
__webpack_require__(8289);
exports.AmsCdConfiguration = Configuration_js_1.Configuration.create('amscd', {
    handler: {
        character: ['amscd_special'],
        macro: ['amscd_macros'],
        environment: ['amscd_environment']
    },
    options: {
        amscd: {
            colspace: '5pt',
            rowspace: '5pt',
            harrowsize: '2.75em',
            varrowsize: '1.75em',
            hideHorizontalLabels: false
        }
    }
});
//# sourceMappingURL=AmsCdConfiguration.js.map

/***/ }),

/***/ 8289:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var sm = __importStar(__webpack_require__(9140));
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var AmsCdMethods_js_1 = __importDefault(__webpack_require__(7819));
new sm.EnvironmentMap('amscd_environment', ParseMethods_js_1.default.environment, { CD: 'CD' }, AmsCdMethods_js_1.default);
new sm.CommandMap('amscd_macros', {
    minCDarrowwidth: 'minCDarrowwidth',
    minCDarrowheight: 'minCDarrowheight',
}, AmsCdMethods_js_1.default);
new sm.MacroMap('amscd_special', { '@': 'arrow' }, AmsCdMethods_js_1.default);
//# sourceMappingURL=AmsCdMappings.js.map

/***/ }),

/***/ 7819:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var BaseConfiguration_js_1 = __webpack_require__(2942);
var MmlNode_js_1 = __webpack_require__(9007);
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var AmsCdMethods = {};
AmsCdMethods.CD = function (parser, begin) {
    parser.Push(begin);
    var item = parser.itemFactory.create('array');
    var options = parser.configuration.options.amscd;
    item.setProperties({
        minw: parser.stack.env.CD_minw || options.harrowsize,
        minh: parser.stack.env.CD_minh || options.varrowsize
    });
    item.arraydef = {
        columnalign: 'center',
        columnspacing: options.colspace,
        rowspacing: options.rowspace,
        displaystyle: true
    };
    return item;
};
AmsCdMethods.arrow = function (parser, name) {
    var c = parser.string.charAt(parser.i);
    if (!c.match(/[><VA.|=]/)) {
        return (0, BaseConfiguration_js_1.Other)(parser, name);
    }
    else {
        parser.i++;
    }
    var first = parser.stack.Top();
    if (!first.isKind('array') || first.Size()) {
        AmsCdMethods.cell(parser, name);
        first = parser.stack.Top();
    }
    var top = first;
    var arrowRow = ((top.table.length % 2) === 1);
    var n = (top.row.length + (arrowRow ? 0 : 1)) % 2;
    while (n) {
        AmsCdMethods.cell(parser, name);
        n--;
    }
    var mml;
    var hdef = { minsize: top.getProperty('minw'), stretchy: true }, vdef = { minsize: top.getProperty('minh'),
        stretchy: true, symmetric: true, lspace: 0, rspace: 0 };
    if (c === '.') {
    }
    else if (c === '|') {
        mml = parser.create('token', 'mo', vdef, '\u2225');
    }
    else if (c === '=') {
        mml = parser.create('token', 'mo', hdef, '=');
    }
    else {
        var arrow = {
            '>': '\u2192', '<': '\u2190', 'V': '\u2193', 'A': '\u2191'
        }[c];
        var a = parser.GetUpTo(name + c, c);
        var b = parser.GetUpTo(name + c, c);
        if (c === '>' || c === '<') {
            mml = parser.create('token', 'mo', hdef, arrow);
            if (!a) {
                a = '\\kern ' + top.getProperty('minw');
            }
            if (a || b) {
                var pad = { width: '+.67em', lspace: '.33em' };
                mml = parser.create('node', 'munderover', [mml]);
                if (a) {
                    var nodeA = new TexParser_js_1.default(a, parser.stack.env, parser.configuration).mml();
                    var mpadded = parser.create('node', 'mpadded', [nodeA], pad);
                    NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '.1em');
                    NodeUtil_js_1.default.setChild(mml, mml.over, mpadded);
                }
                if (b) {
                    var nodeB = new TexParser_js_1.default(b, parser.stack.env, parser.configuration).mml();
                    NodeUtil_js_1.default.setChild(mml, mml.under, parser.create('node', 'mpadded', [nodeB], pad));
                }
                if (parser.configuration.options.amscd.hideHorizontalLabels) {
                    mml = parser.create('node', 'mpadded', mml, { depth: 0, height: '.67em' });
                }
            }
        }
        else {
            var arrowNode = parser.create('token', 'mo', vdef, arrow);
            mml = arrowNode;
            if (a || b) {
                mml = parser.create('node', 'mrow');
                if (a) {
                    NodeUtil_js_1.default.appendChildren(mml, [new TexParser_js_1.default('\\scriptstyle\\llap{' + a + '}', parser.stack.env, parser.configuration).mml()]);
                }
                arrowNode.texClass = MmlNode_js_1.TEXCLASS.ORD;
                NodeUtil_js_1.default.appendChildren(mml, [arrowNode]);
                if (b) {
                    NodeUtil_js_1.default.appendChildren(mml, [new TexParser_js_1.default('\\scriptstyle\\rlap{' + b + '}', parser.stack.env, parser.configuration).mml()]);
                }
            }
        }
    }
    if (mml) {
        parser.Push(mml);
    }
    AmsCdMethods.cell(parser, name);
};
AmsCdMethods.cell = function (parser, name) {
    var top = parser.stack.Top();
    if ((top.table || []).length % 2 === 0 && (top.row || []).length === 0) {
        parser.Push(parser.create('node', 'mpadded', [], { height: '8.5pt', depth: '2pt' }));
    }
    parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));
};
AmsCdMethods.minCDarrowwidth = function (parser, name) {
    parser.stack.env.CD_minw = parser.GetDimen(name);
};
AmsCdMethods.minCDarrowheight = function (parser, name) {
    parser.stack.env.CD_minh = parser.GetDimen(name);
};
exports["default"] = AmsCdMethods;
//# sourceMappingURL=AmsCdMethods.js.map

/***/ }),

/***/ 1275:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AutoloadConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var Symbol_js_1 = __webpack_require__(8803);
var RequireConfiguration_js_1 = __webpack_require__(7741);
var package_js_1 = __webpack_require__(265);
var Options_js_1 = __webpack_require__(7233);
function Autoload(parser, name, extension, isMacro) {
    var e_1, _a, e_2, _b;
    if (package_js_1.Package.packages.has(parser.options.require.prefix + extension)) {
        var def = parser.options.autoload[extension];
        var _c = __read((def.length === 2 && Array.isArray(def[0]) ? def : [def, []]), 2), macros = _c[0], envs = _c[1];
        try {
            for (var macros_1 = __values(macros), macros_1_1 = macros_1.next(); !macros_1_1.done; macros_1_1 = macros_1.next()) {
                var macro = macros_1_1.value;
                AutoloadMacros.remove(macro);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (macros_1_1 && !macros_1_1.done && (_a = macros_1.return)) _a.call(macros_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var envs_1 = __values(envs), envs_1_1 = envs_1.next(); !envs_1_1.done; envs_1_1 = envs_1.next()) {
                var env = envs_1_1.value;
                AutoloadEnvironments.remove(env);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (envs_1_1 && !envs_1_1.done && (_b = envs_1.return)) _b.call(envs_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        parser.string = (isMacro ? name + ' ' : '\\begin{' + name.slice(1) + '}') + parser.string.slice(parser.i);
        parser.i = 0;
    }
    (0, RequireConfiguration_js_1.RequireLoad)(parser, extension);
}
function initAutoload(config) {
    if (!config.options.require) {
        (0, Options_js_1.defaultOptions)(config.options, RequireConfiguration_js_1.RequireConfiguration.options);
    }
}
function configAutoload(config, jax) {
    var e_3, _a, e_4, _b, e_5, _c;
    var parser = jax.parseOptions;
    var macros = parser.handlers.get('macro');
    var environments = parser.handlers.get('environment');
    var autoload = parser.options.autoload;
    parser.packageData.set('autoload', { Autoload: Autoload });
    try {
        for (var _d = __values(Object.keys(autoload)), _e = _d.next(); !_e.done; _e = _d.next()) {
            var extension = _e.value;
            var def = autoload[extension];
            var _f = __read((def.length === 2 && Array.isArray(def[0]) ? def : [def, []]), 2), macs = _f[0], envs = _f[1];
            try {
                for (var macs_1 = (e_4 = void 0, __values(macs)), macs_1_1 = macs_1.next(); !macs_1_1.done; macs_1_1 = macs_1.next()) {
                    var name_1 = macs_1_1.value;
                    if (!macros.lookup(name_1) || name_1 === 'color') {
                        AutoloadMacros.add(name_1, new Symbol_js_1.Macro(name_1, Autoload, [extension, true]));
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (macs_1_1 && !macs_1_1.done && (_b = macs_1.return)) _b.call(macs_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
            try {
                for (var envs_2 = (e_5 = void 0, __values(envs)), envs_2_1 = envs_2.next(); !envs_2_1.done; envs_2_1 = envs_2.next()) {
                    var name_2 = envs_2_1.value;
                    if (!environments.lookup(name_2)) {
                        AutoloadEnvironments.add(name_2, new Symbol_js_1.Macro(name_2, Autoload, [extension, false]));
                    }
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (envs_2_1 && !envs_2_1.done && (_c = envs_2.return)) _c.call(envs_2);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        }
        finally { if (e_3) throw e_3.error; }
    }
    if (!parser.packageData.get('require')) {
        RequireConfiguration_js_1.RequireConfiguration.config(config, jax);
    }
}
var AutoloadMacros = new SymbolMap_js_1.CommandMap('autoload-macros', {}, {});
var AutoloadEnvironments = new SymbolMap_js_1.CommandMap('autoload-environments', {}, {});
exports.AutoloadConfiguration = Configuration_js_1.Configuration.create('autoload', {
    handler: {
        macro: ['autoload-macros'],
        environment: ['autoload-environments']
    },
    options: {
        autoload: (0, Options_js_1.expandable)({
            action: ['toggle', 'mathtip', 'texttip'],
            amscd: [[], ['CD']],
            bbox: ['bbox'],
            boldsymbol: ['boldsymbol'],
            braket: ['bra', 'ket', 'braket', 'set', 'Bra', 'Ket', 'Braket', 'Set', 'ketbra', 'Ketbra'],
            bussproofs: [[], ['prooftree']],
            cancel: ['cancel', 'bcancel', 'xcancel', 'cancelto'],
            color: ['color', 'definecolor', 'textcolor', 'colorbox', 'fcolorbox'],
            enclose: ['enclose'],
            extpfeil: ['xtwoheadrightarrow', 'xtwoheadleftarrow', 'xmapsto', 'xlongequal', 'xtofrom', 'Newextarrow'],
            html: ['href', 'class', 'style', 'cssId'],
            mhchem: ['ce', 'pu'],
            newcommand: ['newcommand', 'renewcommand', 'newenvironment', 'renewenvironment', 'def', 'let'],
            unicode: ['unicode'],
            verb: ['verb']
        })
    },
    config: configAutoload,
    init: initAutoload,
    priority: 10
});
//# sourceMappingURL=AutoloadConfiguration.js.map

/***/ }),

/***/ 2942:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseConfiguration = exports.BaseTags = exports.Other = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var MapHandler_js_1 = __webpack_require__(2947);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var SymbolMap_js_1 = __webpack_require__(9140);
var bitem = __importStar(__webpack_require__(1181));
var Tags_js_1 = __webpack_require__(6521);
__webpack_require__(1267);
var OperatorDictionary_js_1 = __webpack_require__(4082);
new SymbolMap_js_1.CharacterMap('remap', null, {
    '-': '\u2212',
    '*': '\u2217',
    '`': '\u2018'
});
function Other(parser, char) {
    var font = parser.stack.env['font'];
    var def = font ?
        { mathvariant: parser.stack.env['font'] } : {};
    var remap = MapHandler_js_1.MapHandler.getMap('remap').lookup(char);
    var range = (0, OperatorDictionary_js_1.getRange)(char);
    var type = (range ? range[3] : 'mo');
    var mo = parser.create('token', type, def, (remap ? remap.char : char));
    range[4] && mo.attributes.set('mathvariant', range[4]);
    if (type === 'mo') {
        NodeUtil_js_1.default.setProperty(mo, 'fixStretchy', true);
        parser.configuration.addNode('fixStretchy', mo);
    }
    parser.Push(mo);
}
exports.Other = Other;
function csUndefined(_parser, name) {
    throw new TexError_js_1.default('UndefinedControlSequence', 'Undefined control sequence %1', '\\' + name);
}
function envUndefined(_parser, env) {
    throw new TexError_js_1.default('UnknownEnv', 'Unknown environment \'%1\'', env);
}
function filterNonscript(_a) {
    var e_1, _b;
    var data = _a.data;
    try {
        for (var _c = __values(data.getList('nonscript')), _d = _c.next(); !_d.done; _d = _c.next()) {
            var mml = _d.value;
            if (mml.attributes.get('scriptlevel') > 0) {
                var parent_1 = mml.parent;
                parent_1.childNodes.splice(parent_1.childIndex(mml), 1);
                data.removeFromList(mml.kind, [mml]);
                if (mml.isKind('mrow')) {
                    var mstyle = mml.childNodes[0];
                    data.removeFromList('mstyle', [mstyle]);
                    data.removeFromList('mspace', mstyle.childNodes[0].childNodes);
                }
            }
            else if (mml.isKind('mrow')) {
                mml.parent.replaceChild(mml.childNodes[0], mml);
                data.removeFromList('mrow', [mml]);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
var BaseTags = (function (_super) {
    __extends(BaseTags, _super);
    function BaseTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BaseTags;
}(Tags_js_1.AbstractTags));
exports.BaseTags = BaseTags;
exports.BaseConfiguration = Configuration_js_1.Configuration.create('base', {
    handler: {
        character: ['command', 'special', 'letter', 'digit'],
        delimiter: ['delimiter'],
        macro: ['delimiter', 'macros', 'mathchar0mi', 'mathchar0mo', 'mathchar7'],
        environment: ['environment']
    },
    fallback: {
        character: Other,
        macro: csUndefined,
        environment: envUndefined
    },
    items: (_a = {},
        _a[bitem.StartItem.prototype.kind] = bitem.StartItem,
        _a[bitem.StopItem.prototype.kind] = bitem.StopItem,
        _a[bitem.OpenItem.prototype.kind] = bitem.OpenItem,
        _a[bitem.CloseItem.prototype.kind] = bitem.CloseItem,
        _a[bitem.PrimeItem.prototype.kind] = bitem.PrimeItem,
        _a[bitem.SubsupItem.prototype.kind] = bitem.SubsupItem,
        _a[bitem.OverItem.prototype.kind] = bitem.OverItem,
        _a[bitem.LeftItem.prototype.kind] = bitem.LeftItem,
        _a[bitem.Middle.prototype.kind] = bitem.Middle,
        _a[bitem.RightItem.prototype.kind] = bitem.RightItem,
        _a[bitem.BeginItem.prototype.kind] = bitem.BeginItem,
        _a[bitem.EndItem.prototype.kind] = bitem.EndItem,
        _a[bitem.StyleItem.prototype.kind] = bitem.StyleItem,
        _a[bitem.PositionItem.prototype.kind] = bitem.PositionItem,
        _a[bitem.CellItem.prototype.kind] = bitem.CellItem,
        _a[bitem.MmlItem.prototype.kind] = bitem.MmlItem,
        _a[bitem.FnItem.prototype.kind] = bitem.FnItem,
        _a[bitem.NotItem.prototype.kind] = bitem.NotItem,
        _a[bitem.NonscriptItem.prototype.kind] = bitem.NonscriptItem,
        _a[bitem.DotsItem.prototype.kind] = bitem.DotsItem,
        _a[bitem.ArrayItem.prototype.kind] = bitem.ArrayItem,
        _a[bitem.EqnArrayItem.prototype.kind] = bitem.EqnArrayItem,
        _a[bitem.EquationItem.prototype.kind] = bitem.EquationItem,
        _a),
    options: {
        maxMacros: 1000,
        baseURL: (typeof (document) === 'undefined' ||
            document.getElementsByTagName('base').length === 0) ?
            '' : String(document.location).replace(/#.*$/, '')
    },
    tags: {
        base: BaseTags
    },
    postprocessors: [[filterNonscript, -4]]
});
//# sourceMappingURL=BaseConfiguration.js.map

/***/ }),

/***/ 1181:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EquationItem = exports.EqnArrayItem = exports.ArrayItem = exports.DotsItem = exports.NonscriptItem = exports.NotItem = exports.FnItem = exports.MmlItem = exports.CellItem = exports.PositionItem = exports.StyleItem = exports.EndItem = exports.BeginItem = exports.RightItem = exports.Middle = exports.LeftItem = exports.OverItem = exports.SubsupItem = exports.PrimeItem = exports.CloseItem = exports.OpenItem = exports.StopItem = exports.StartItem = void 0;
var MapHandler_js_1 = __webpack_require__(2947);
var Entities_js_1 = __webpack_require__(5368);
var MmlNode_js_1 = __webpack_require__(9007);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var StackItem_js_1 = __webpack_require__(8292);
var StartItem = (function (_super) {
    __extends(StartItem, _super);
    function StartItem(factory, global) {
        var _this = _super.call(this, factory) || this;
        _this.global = global;
        return _this;
    }
    Object.defineProperty(StartItem.prototype, "kind", {
        get: function () {
            return 'start';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StartItem.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    StartItem.prototype.checkItem = function (item) {
        if (item.isKind('stop')) {
            var node = this.toMml();
            if (!this.global.isInner) {
                node = this.factory.configuration.tags.finalize(node, this.env);
            }
            return [[this.factory.create('mml', node)], true];
        }
        return _super.prototype.checkItem.call(this, item);
    };
    return StartItem;
}(StackItem_js_1.BaseItem));
exports.StartItem = StartItem;
var StopItem = (function (_super) {
    __extends(StopItem, _super);
    function StopItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StopItem.prototype, "kind", {
        get: function () {
            return 'stop';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StopItem.prototype, "isClose", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    return StopItem;
}(StackItem_js_1.BaseItem));
exports.StopItem = StopItem;
var OpenItem = (function (_super) {
    __extends(OpenItem, _super);
    function OpenItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(OpenItem.prototype, "kind", {
        get: function () {
            return 'open';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OpenItem.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    OpenItem.prototype.checkItem = function (item) {
        if (item.isKind('close')) {
            var mml = this.toMml();
            var node = this.create('node', 'TeXAtom', [mml]);
            return [[this.factory.create('mml', node)], true];
        }
        return _super.prototype.checkItem.call(this, item);
    };
    OpenItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
        'stop': ['ExtraOpenMissingClose',
            'Extra open brace or missing close brace']
    });
    return OpenItem;
}(StackItem_js_1.BaseItem));
exports.OpenItem = OpenItem;
var CloseItem = (function (_super) {
    __extends(CloseItem, _super);
    function CloseItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CloseItem.prototype, "kind", {
        get: function () {
            return 'close';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CloseItem.prototype, "isClose", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    return CloseItem;
}(StackItem_js_1.BaseItem));
exports.CloseItem = CloseItem;
var PrimeItem = (function (_super) {
    __extends(PrimeItem, _super);
    function PrimeItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PrimeItem.prototype, "kind", {
        get: function () {
            return 'prime';
        },
        enumerable: false,
        configurable: true
    });
    PrimeItem.prototype.checkItem = function (item) {
        var _a = __read(this.Peek(2), 2), top0 = _a[0], top1 = _a[1];
        if (!NodeUtil_js_1.default.isType(top0, 'msubsup') || NodeUtil_js_1.default.isType(top0, 'msup')) {
            var node = this.create('node', 'msup', [top0, top1]);
            return [[node, item], true];
        }
        NodeUtil_js_1.default.setChild(top0, top0.sup, top1);
        return [[top0, item], true];
    };
    return PrimeItem;
}(StackItem_js_1.BaseItem));
exports.PrimeItem = PrimeItem;
var SubsupItem = (function (_super) {
    __extends(SubsupItem, _super);
    function SubsupItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SubsupItem.prototype, "kind", {
        get: function () {
            return 'subsup';
        },
        enumerable: false,
        configurable: true
    });
    SubsupItem.prototype.checkItem = function (item) {
        if (item.isKind('open') || item.isKind('left')) {
            return StackItem_js_1.BaseItem.success;
        }
        var top = this.First;
        var position = this.getProperty('position');
        if (item.isKind('mml')) {
            if (this.getProperty('primes')) {
                if (position !== 2) {
                    NodeUtil_js_1.default.setChild(top, 2, this.getProperty('primes'));
                }
                else {
                    NodeUtil_js_1.default.setProperty(this.getProperty('primes'), 'variantForm', true);
                    var node = this.create('node', 'mrow', [this.getProperty('primes'), item.First]);
                    item.First = node;
                }
            }
            NodeUtil_js_1.default.setChild(top, position, item.First);
            if (this.getProperty('movesupsub') != null) {
                NodeUtil_js_1.default.setProperty(top, 'movesupsub', this.getProperty('movesupsub'));
            }
            var result = this.factory.create('mml', top);
            return [[result], true];
        }
        if (_super.prototype.checkItem.call(this, item)[1]) {
            var error = this.getErrors(['', 'sub', 'sup'][position]);
            throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, error[0], error[1]], __read(error.splice(2)), false)))();
        }
        return null;
    };
    SubsupItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
        'stop': ['MissingScript',
            'Missing superscript or subscript argument'],
        'sup': ['MissingOpenForSup',
            'Missing open brace for superscript'],
        'sub': ['MissingOpenForSub',
            'Missing open brace for subscript']
    });
    return SubsupItem;
}(StackItem_js_1.BaseItem));
exports.SubsupItem = SubsupItem;
var OverItem = (function (_super) {
    __extends(OverItem, _super);
    function OverItem(factory) {
        var _this = _super.call(this, factory) || this;
        _this.setProperty('name', '\\over');
        return _this;
    }
    Object.defineProperty(OverItem.prototype, "kind", {
        get: function () {
            return 'over';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(OverItem.prototype, "isClose", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    OverItem.prototype.checkItem = function (item) {
        if (item.isKind('over')) {
            throw new TexError_js_1.default('AmbiguousUseOf', 'Ambiguous use of %1', item.getName());
        }
        if (item.isClose) {
            var mml = this.create('node', 'mfrac', [this.getProperty('num'), this.toMml(false)]);
            if (this.getProperty('thickness') != null) {
                NodeUtil_js_1.default.setAttribute(mml, 'linethickness', this.getProperty('thickness'));
            }
            if (this.getProperty('open') || this.getProperty('close')) {
                NodeUtil_js_1.default.setProperty(mml, 'withDelims', true);
                mml = ParseUtil_js_1.default.fixedFence(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));
            }
            return [[this.factory.create('mml', mml), item], true];
        }
        return _super.prototype.checkItem.call(this, item);
    };
    OverItem.prototype.toString = function () {
        return 'over[' + this.getProperty('num') +
            ' / ' + this.nodes.join('; ') + ']';
    };
    return OverItem;
}(StackItem_js_1.BaseItem));
exports.OverItem = OverItem;
var LeftItem = (function (_super) {
    __extends(LeftItem, _super);
    function LeftItem(factory, delim) {
        var _this = _super.call(this, factory) || this;
        _this.setProperty('delim', delim);
        return _this;
    }
    Object.defineProperty(LeftItem.prototype, "kind", {
        get: function () {
            return 'left';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LeftItem.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    LeftItem.prototype.checkItem = function (item) {
        if (item.isKind('right')) {
            return [[this.factory.create('mml', ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('delim'), this.toMml(), item.getProperty('delim'), '', item.getProperty('color')))], true];
        }
        if (item.isKind('middle')) {
            var def = { stretchy: true };
            if (item.getProperty('color')) {
                def.mathcolor = item.getProperty('color');
            }
            this.Push(this.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.CLOSE }), this.create('token', 'mo', def, item.getProperty('delim')), this.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OPEN }));
            this.env = {};
            return [[this], true];
        }
        return _super.prototype.checkItem.call(this, item);
    };
    LeftItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
        'stop': ['ExtraLeftMissingRight',
            'Extra \\left or missing \\right']
    });
    return LeftItem;
}(StackItem_js_1.BaseItem));
exports.LeftItem = LeftItem;
var Middle = (function (_super) {
    __extends(Middle, _super);
    function Middle(factory, delim, color) {
        var _this = _super.call(this, factory) || this;
        _this.setProperty('delim', delim);
        color && _this.setProperty('color', color);
        return _this;
    }
    Object.defineProperty(Middle.prototype, "kind", {
        get: function () {
            return 'middle';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Middle.prototype, "isClose", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    return Middle;
}(StackItem_js_1.BaseItem));
exports.Middle = Middle;
var RightItem = (function (_super) {
    __extends(RightItem, _super);
    function RightItem(factory, delim, color) {
        var _this = _super.call(this, factory) || this;
        _this.setProperty('delim', delim);
        color && _this.setProperty('color', color);
        return _this;
    }
    Object.defineProperty(RightItem.prototype, "kind", {
        get: function () {
            return 'right';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RightItem.prototype, "isClose", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    return RightItem;
}(StackItem_js_1.BaseItem));
exports.RightItem = RightItem;
var BeginItem = (function (_super) {
    __extends(BeginItem, _super);
    function BeginItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BeginItem.prototype, "kind", {
        get: function () {
            return 'begin';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BeginItem.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    BeginItem.prototype.checkItem = function (item) {
        if (item.isKind('end')) {
            if (item.getName() !== this.getName()) {
                throw new TexError_js_1.default('EnvBadEnd', '\\begin{%1} ended with \\end{%2}', this.getName(), item.getName());
            }
            if (!this.getProperty('end')) {
                return [[this.factory.create('mml', this.toMml())], true];
            }
            return StackItem_js_1.BaseItem.fail;
        }
        if (item.isKind('stop')) {
            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
        }
        return _super.prototype.checkItem.call(this, item);
    };
    return BeginItem;
}(StackItem_js_1.BaseItem));
exports.BeginItem = BeginItem;
var EndItem = (function (_super) {
    __extends(EndItem, _super);
    function EndItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(EndItem.prototype, "kind", {
        get: function () {
            return 'end';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EndItem.prototype, "isClose", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    return EndItem;
}(StackItem_js_1.BaseItem));
exports.EndItem = EndItem;
var StyleItem = (function (_super) {
    __extends(StyleItem, _super);
    function StyleItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(StyleItem.prototype, "kind", {
        get: function () {
            return 'style';
        },
        enumerable: false,
        configurable: true
    });
    StyleItem.prototype.checkItem = function (item) {
        if (!item.isClose) {
            return _super.prototype.checkItem.call(this, item);
        }
        var mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));
        return [[this.factory.create('mml', mml), item], true];
    };
    return StyleItem;
}(StackItem_js_1.BaseItem));
exports.StyleItem = StyleItem;
var PositionItem = (function (_super) {
    __extends(PositionItem, _super);
    function PositionItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PositionItem.prototype, "kind", {
        get: function () {
            return 'position';
        },
        enumerable: false,
        configurable: true
    });
    PositionItem.prototype.checkItem = function (item) {
        if (item.isClose) {
            throw new TexError_js_1.default('MissingBoxFor', 'Missing box for %1', this.getName());
        }
        if (item.isFinal) {
            var mml = item.toMml();
            switch (this.getProperty('move')) {
                case 'vertical':
                    mml = this.create('node', 'mpadded', [mml], { height: this.getProperty('dh'),
                        depth: this.getProperty('dd'),
                        voffset: this.getProperty('dh') });
                    return [[this.factory.create('mml', mml)], true];
                case 'horizontal':
                    return [[this.factory.create('mml', this.getProperty('left')), item,
                            this.factory.create('mml', this.getProperty('right'))], true];
            }
        }
        return _super.prototype.checkItem.call(this, item);
    };
    return PositionItem;
}(StackItem_js_1.BaseItem));
exports.PositionItem = PositionItem;
var CellItem = (function (_super) {
    __extends(CellItem, _super);
    function CellItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CellItem.prototype, "kind", {
        get: function () {
            return 'cell';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CellItem.prototype, "isClose", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    return CellItem;
}(StackItem_js_1.BaseItem));
exports.CellItem = CellItem;
var MmlItem = (function (_super) {
    __extends(MmlItem, _super);
    function MmlItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MmlItem.prototype, "isFinal", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MmlItem.prototype, "kind", {
        get: function () {
            return 'mml';
        },
        enumerable: false,
        configurable: true
    });
    return MmlItem;
}(StackItem_js_1.BaseItem));
exports.MmlItem = MmlItem;
var FnItem = (function (_super) {
    __extends(FnItem, _super);
    function FnItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FnItem.prototype, "kind", {
        get: function () {
            return 'fn';
        },
        enumerable: false,
        configurable: true
    });
    FnItem.prototype.checkItem = function (item) {
        var top = this.First;
        if (top) {
            if (item.isOpen) {
                return StackItem_js_1.BaseItem.success;
            }
            if (!item.isKind('fn')) {
                var mml = item.First;
                if (!item.isKind('mml') || !mml) {
                    return [[top, item], true];
                }
                if ((NodeUtil_js_1.default.isType(mml, 'mstyle') && mml.childNodes.length &&
                    NodeUtil_js_1.default.isType(mml.childNodes[0].childNodes[0], 'mspace')) ||
                    NodeUtil_js_1.default.isType(mml, 'mspace')) {
                    return [[top, item], true];
                }
                if (NodeUtil_js_1.default.isEmbellished(mml)) {
                    mml = NodeUtil_js_1.default.getCoreMO(mml);
                }
                var form = NodeUtil_js_1.default.getForm(mml);
                if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {
                    return [[top, item], true];
                }
            }
            var node = this.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.NONE }, Entities_js_1.entities.ApplyFunction);
            return [[top, node, item], true];
        }
        return _super.prototype.checkItem.apply(this, arguments);
    };
    return FnItem;
}(StackItem_js_1.BaseItem));
exports.FnItem = FnItem;
var NotItem = (function (_super) {
    __extends(NotItem, _super);
    function NotItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.remap = MapHandler_js_1.MapHandler.getMap('not_remap');
        return _this;
    }
    Object.defineProperty(NotItem.prototype, "kind", {
        get: function () {
            return 'not';
        },
        enumerable: false,
        configurable: true
    });
    NotItem.prototype.checkItem = function (item) {
        var mml;
        var c;
        var textNode;
        if (item.isKind('open') || item.isKind('left')) {
            return StackItem_js_1.BaseItem.success;
        }
        if (item.isKind('mml') &&
            (NodeUtil_js_1.default.isType(item.First, 'mo') || NodeUtil_js_1.default.isType(item.First, 'mi') ||
                NodeUtil_js_1.default.isType(item.First, 'mtext'))) {
            mml = item.First;
            c = NodeUtil_js_1.default.getText(mml);
            if (c.length === 1 && !NodeUtil_js_1.default.getProperty(mml, 'movesupsub') &&
                NodeUtil_js_1.default.getChildren(mml).length === 1) {
                if (this.remap.contains(c)) {
                    textNode = this.create('text', this.remap.lookup(c).char);
                    NodeUtil_js_1.default.setChild(mml, 0, textNode);
                }
                else {
                    textNode = this.create('text', '\u0338');
                    NodeUtil_js_1.default.appendChildren(mml, [textNode]);
                }
                return [[item], true];
            }
        }
        textNode = this.create('text', '\u29F8');
        var mtextNode = this.create('node', 'mtext', [], {}, textNode);
        var paddedNode = this.create('node', 'mpadded', [mtextNode], { width: 0 });
        mml = this.create('node', 'TeXAtom', [paddedNode], { texClass: MmlNode_js_1.TEXCLASS.REL });
        return [[mml, item], true];
    };
    return NotItem;
}(StackItem_js_1.BaseItem));
exports.NotItem = NotItem;
var NonscriptItem = (function (_super) {
    __extends(NonscriptItem, _super);
    function NonscriptItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(NonscriptItem.prototype, "kind", {
        get: function () {
            return 'nonscript';
        },
        enumerable: false,
        configurable: true
    });
    NonscriptItem.prototype.checkItem = function (item) {
        if (item.isKind('mml') && item.Size() === 1) {
            var mml = item.First;
            if (mml.isKind('mstyle') && mml.notParent) {
                mml = NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(mml)[0])[0];
            }
            if (mml.isKind('mspace')) {
                if (mml !== item.First) {
                    var mrow = this.create('node', 'mrow', [item.Pop()]);
                    item.Push(mrow);
                }
                this.factory.configuration.addNode('nonscript', item.First);
            }
        }
        return [[item], true];
    };
    return NonscriptItem;
}(StackItem_js_1.BaseItem));
exports.NonscriptItem = NonscriptItem;
var DotsItem = (function (_super) {
    __extends(DotsItem, _super);
    function DotsItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DotsItem.prototype, "kind", {
        get: function () {
            return 'dots';
        },
        enumerable: false,
        configurable: true
    });
    DotsItem.prototype.checkItem = function (item) {
        if (item.isKind('open') || item.isKind('left')) {
            return StackItem_js_1.BaseItem.success;
        }
        var dots = this.getProperty('ldots');
        var top = item.First;
        if (item.isKind('mml') && NodeUtil_js_1.default.isEmbellished(top)) {
            var tclass = NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(top));
            if (tclass === MmlNode_js_1.TEXCLASS.BIN || tclass === MmlNode_js_1.TEXCLASS.REL) {
                dots = this.getProperty('cdots');
            }
        }
        return [[dots, item], true];
    };
    return DotsItem;
}(StackItem_js_1.BaseItem));
exports.DotsItem = DotsItem;
var ArrayItem = (function (_super) {
    __extends(ArrayItem, _super);
    function ArrayItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.table = [];
        _this.row = [];
        _this.frame = [];
        _this.hfill = [];
        _this.arraydef = {};
        _this.dashed = false;
        return _this;
    }
    Object.defineProperty(ArrayItem.prototype, "kind", {
        get: function () {
            return 'array';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ArrayItem.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ArrayItem.prototype, "copyEnv", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    ArrayItem.prototype.checkItem = function (item) {
        if (item.isClose && !item.isKind('over')) {
            if (item.getProperty('isEntry')) {
                this.EndEntry();
                this.clearEnv();
                return StackItem_js_1.BaseItem.fail;
            }
            if (item.getProperty('isCR')) {
                this.EndEntry();
                this.EndRow();
                this.clearEnv();
                return StackItem_js_1.BaseItem.fail;
            }
            this.EndTable();
            this.clearEnv();
            var newItem = this.factory.create('mml', this.createMml());
            if (this.getProperty('requireClose')) {
                if (item.isKind('close')) {
                    return [[newItem], true];
                }
                throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');
            }
            return [[newItem, item], true];
        }
        return _super.prototype.checkItem.call(this, item);
    };
    ArrayItem.prototype.createMml = function () {
        var scriptlevel = this.arraydef['scriptlevel'];
        delete this.arraydef['scriptlevel'];
        var mml = this.create('node', 'mtable', this.table, this.arraydef);
        if (scriptlevel) {
            mml.setProperty('scriptlevel', scriptlevel);
        }
        if (this.frame.length === 4) {
            NodeUtil_js_1.default.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');
        }
        else if (this.frame.length) {
            if (this.arraydef['rowlines']) {
                this.arraydef['rowlines'] =
                    this.arraydef['rowlines'].replace(/none( none)+$/, 'none');
            }
            NodeUtil_js_1.default.setAttribute(mml, 'frame', '');
            mml = this.create('node', 'menclose', [mml], { notation: this.frame.join(' ') });
            if ((this.arraydef['columnlines'] || 'none') !== 'none' ||
                (this.arraydef['rowlines'] || 'none') !== 'none') {
                NodeUtil_js_1.default.setAttribute(mml, 'data-padding', 0);
            }
        }
        if (this.getProperty('open') || this.getProperty('close')) {
            mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));
        }
        return mml;
    };
    ArrayItem.prototype.EndEntry = function () {
        var mtd = this.create('node', 'mtd', this.nodes);
        if (this.hfill.length) {
            if (this.hfill[0] === 0) {
                NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', 'right');
            }
            if (this.hfill[this.hfill.length - 1] === this.Size()) {
                NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', NodeUtil_js_1.default.getAttribute(mtd, 'columnalign') ? 'center' : 'left');
            }
        }
        this.row.push(mtd);
        this.Clear();
        this.hfill = [];
    };
    ArrayItem.prototype.EndRow = function () {
        var node;
        if (this.getProperty('isNumbered') && this.row.length === 3) {
            this.row.unshift(this.row.pop());
            node = this.create('node', 'mlabeledtr', this.row);
        }
        else {
            node = this.create('node', 'mtr', this.row);
        }
        this.table.push(node);
        this.row = [];
    };
    ArrayItem.prototype.EndTable = function () {
        if (this.Size() || this.row.length) {
            this.EndEntry();
            this.EndRow();
        }
        this.checkLines();
    };
    ArrayItem.prototype.checkLines = function () {
        if (this.arraydef['rowlines']) {
            var lines = this.arraydef['rowlines'].split(/ /);
            if (lines.length === this.table.length) {
                this.frame.push('bottom');
                lines.pop();
                this.arraydef['rowlines'] = lines.join(' ');
            }
            else if (lines.length < this.table.length - 1) {
                this.arraydef['rowlines'] += ' none';
            }
        }
        if (this.getProperty('rowspacing')) {
            var rows = this.arraydef['rowspacing'].split(/ /);
            while (rows.length < this.table.length) {
                rows.push(this.getProperty('rowspacing') + 'em');
            }
            this.arraydef['rowspacing'] = rows.join(' ');
        }
    };
    ArrayItem.prototype.addRowSpacing = function (spacing) {
        if (this.arraydef['rowspacing']) {
            var rows = this.arraydef['rowspacing'].split(/ /);
            if (!this.getProperty('rowspacing')) {
                var dimem = ParseUtil_js_1.default.dimen2em(rows[0]);
                this.setProperty('rowspacing', dimem);
            }
            var rowspacing = this.getProperty('rowspacing');
            while (rows.length < this.table.length) {
                rows.push(ParseUtil_js_1.default.Em(rowspacing));
            }
            rows[this.table.length - 1] = ParseUtil_js_1.default.Em(Math.max(0, rowspacing + ParseUtil_js_1.default.dimen2em(spacing)));
            this.arraydef['rowspacing'] = rows.join(' ');
        }
    };
    return ArrayItem;
}(StackItem_js_1.BaseItem));
exports.ArrayItem = ArrayItem;
var EqnArrayItem = (function (_super) {
    __extends(EqnArrayItem, _super);
    function EqnArrayItem(factory) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this, factory) || this;
        _this.maxrow = 0;
        _this.factory.configuration.tags.start(args[0], args[2], args[1]);
        return _this;
    }
    Object.defineProperty(EqnArrayItem.prototype, "kind", {
        get: function () {
            return 'eqnarray';
        },
        enumerable: false,
        configurable: true
    });
    EqnArrayItem.prototype.EndEntry = function () {
        if (this.row.length) {
            ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);
        }
        var node = this.create('node', 'mtd', this.nodes);
        this.row.push(node);
        this.Clear();
    };
    EqnArrayItem.prototype.EndRow = function () {
        if (this.row.length > this.maxrow) {
            this.maxrow = this.row.length;
        }
        var mtr = 'mtr';
        var tag = this.factory.configuration.tags.getTag();
        if (tag) {
            this.row = [tag].concat(this.row);
            mtr = 'mlabeledtr';
        }
        this.factory.configuration.tags.clearTag();
        var node = this.create('node', mtr, this.row);
        this.table.push(node);
        this.row = [];
    };
    EqnArrayItem.prototype.EndTable = function () {
        _super.prototype.EndTable.call(this);
        this.factory.configuration.tags.end();
        this.extendArray('columnalign', this.maxrow);
        this.extendArray('columnwidth', this.maxrow);
        this.extendArray('columnspacing', this.maxrow - 1);
    };
    EqnArrayItem.prototype.extendArray = function (name, max) {
        if (!this.arraydef[name])
            return;
        var repeat = this.arraydef[name].split(/ /);
        var columns = __spreadArray([], __read(repeat), false);
        if (columns.length > 1) {
            while (columns.length < max) {
                columns.push.apply(columns, __spreadArray([], __read(repeat), false));
            }
            this.arraydef[name] = columns.slice(0, max).join(' ');
        }
    };
    return EqnArrayItem;
}(ArrayItem));
exports.EqnArrayItem = EqnArrayItem;
var EquationItem = (function (_super) {
    __extends(EquationItem, _super);
    function EquationItem(factory) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this, factory) || this;
        _this.factory.configuration.tags.start('equation', true, args[0]);
        return _this;
    }
    Object.defineProperty(EquationItem.prototype, "kind", {
        get: function () {
            return 'equation';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EquationItem.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    EquationItem.prototype.checkItem = function (item) {
        if (item.isKind('end')) {
            var mml = this.toMml();
            var tag = this.factory.configuration.tags.getTag();
            this.factory.configuration.tags.end();
            return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];
        }
        if (item.isKind('stop')) {
            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
        }
        return _super.prototype.checkItem.call(this, item);
    };
    return EquationItem;
}(StackItem_js_1.BaseItem));
exports.EquationItem = EquationItem;
//# sourceMappingURL=BaseItems.js.map

/***/ }),

/***/ 1267:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var sm = __importStar(__webpack_require__(9140));
var TexConstants_js_1 = __webpack_require__(8317);
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var MmlNode_js_1 = __webpack_require__(9007);
var lengths_js_1 = __webpack_require__(6010);
new sm.RegExpMap('letter', ParseMethods_js_1.default.variable, /[a-z]/i);
new sm.RegExpMap('digit', ParseMethods_js_1.default.digit, /[0-9.,]/);
new sm.RegExpMap('command', ParseMethods_js_1.default.controlSequence, /^\\/);
new sm.MacroMap('special', {
    '{': 'Open',
    '}': 'Close',
    '~': 'Tilde',
    '^': 'Superscript',
    '_': 'Subscript',
    ' ': 'Space',
    '\t': 'Space',
    '\r': 'Space',
    '\n': 'Space',
    '\'': 'Prime',
    '%': 'Comment',
    '&': 'Entry',
    '#': 'Hash',
    '\u00A0': 'Space',
    '\u2019': 'Prime'
}, BaseMethods_js_1.default);
new sm.CharacterMap('mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {
    alpha: '\u03B1',
    beta: '\u03B2',
    gamma: '\u03B3',
    delta: '\u03B4',
    epsilon: '\u03F5',
    zeta: '\u03B6',
    eta: '\u03B7',
    theta: '\u03B8',
    iota: '\u03B9',
    kappa: '\u03BA',
    lambda: '\u03BB',
    mu: '\u03BC',
    nu: '\u03BD',
    xi: '\u03BE',
    omicron: '\u03BF',
    pi: '\u03C0',
    rho: '\u03C1',
    sigma: '\u03C3',
    tau: '\u03C4',
    upsilon: '\u03C5',
    phi: '\u03D5',
    chi: '\u03C7',
    psi: '\u03C8',
    omega: '\u03C9',
    varepsilon: '\u03B5',
    vartheta: '\u03D1',
    varpi: '\u03D6',
    varrho: '\u03F1',
    varsigma: '\u03C2',
    varphi: '\u03C6',
    S: ['\u00A7', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    aleph: ['\u2135', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    hbar: ['\u210F', { variantForm: true }],
    imath: '\u0131',
    jmath: '\u0237',
    ell: '\u2113',
    wp: ['\u2118', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    Re: ['\u211C', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    Im: ['\u2111', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    partial: ['\u2202', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
    infty: ['\u221E', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    prime: ['\u2032', { variantForm: true }],
    emptyset: ['\u2205', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    nabla: ['\u2207', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    top: ['\u22A4', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    bot: ['\u22A5', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    angle: ['\u2220', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    triangle: ['\u25B3', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    backslash: ['\u2216', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    forall: ['\u2200', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    exists: ['\u2203', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    neg: ['\u00AC', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    lnot: ['\u00AC', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    flat: ['\u266D', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    natural: ['\u266E', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    sharp: ['\u266F', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    clubsuit: ['\u2663', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    diamondsuit: ['\u2662', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    heartsuit: ['\u2661', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    spadesuit: ['\u2660', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }]
});
new sm.CharacterMap('mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {
    surd: '\u221A',
    coprod: ['\u2210', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    bigvee: ['\u22C1', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    bigwedge: ['\u22C0', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    biguplus: ['\u2A04', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    bigcap: ['\u22C2', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    bigcup: ['\u22C3', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    'int': ['\u222B', { texClass: MmlNode_js_1.TEXCLASS.OP }],
    intop: ['\u222B', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true, movablelimits: true }],
    iint: ['\u222C', { texClass: MmlNode_js_1.TEXCLASS.OP }],
    iiint: ['\u222D', { texClass: MmlNode_js_1.TEXCLASS.OP }],
    prod: ['\u220F', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    sum: ['\u2211', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    bigotimes: ['\u2A02', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    bigoplus: ['\u2A01', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    bigodot: ['\u2A00', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    oint: ['\u222E', { texClass: MmlNode_js_1.TEXCLASS.OP }],
    bigsqcup: ['\u2A06', { texClass: MmlNode_js_1.TEXCLASS.OP,
            movesupsub: true }],
    smallint: ['\u222B', { largeop: false }],
    triangleleft: '\u25C3',
    triangleright: '\u25B9',
    bigtriangleup: '\u25B3',
    bigtriangledown: '\u25BD',
    wedge: '\u2227',
    land: '\u2227',
    vee: '\u2228',
    lor: '\u2228',
    cap: '\u2229',
    cup: '\u222A',
    ddagger: '\u2021',
    dagger: '\u2020',
    sqcap: '\u2293',
    sqcup: '\u2294',
    uplus: '\u228E',
    amalg: '\u2A3F',
    diamond: '\u22C4',
    bullet: '\u2219',
    wr: '\u2240',
    div: '\u00F7',
    divsymbol: '\u00F7',
    odot: ['\u2299', { largeop: false }],
    oslash: ['\u2298', { largeop: false }],
    otimes: ['\u2297', { largeop: false }],
    ominus: ['\u2296', { largeop: false }],
    oplus: ['\u2295', { largeop: false }],
    mp: '\u2213',
    pm: '\u00B1',
    circ: '\u2218',
    bigcirc: '\u25EF',
    setminus: '\u2216',
    cdot: '\u22C5',
    ast: '\u2217',
    times: '\u00D7',
    star: '\u22C6',
    propto: '\u221D',
    sqsubseteq: '\u2291',
    sqsupseteq: '\u2292',
    parallel: '\u2225',
    mid: '\u2223',
    dashv: '\u22A3',
    vdash: '\u22A2',
    leq: '\u2264',
    le: '\u2264',
    geq: '\u2265',
    ge: '\u2265',
    lt: '\u003C',
    gt: '\u003E',
    succ: '\u227B',
    prec: '\u227A',
    approx: '\u2248',
    succeq: '\u2AB0',
    preceq: '\u2AAF',
    supset: '\u2283',
    subset: '\u2282',
    supseteq: '\u2287',
    subseteq: '\u2286',
    'in': '\u2208',
    ni: '\u220B',
    notin: '\u2209',
    owns: '\u220B',
    gg: '\u226B',
    ll: '\u226A',
    sim: '\u223C',
    simeq: '\u2243',
    perp: '\u22A5',
    equiv: '\u2261',
    asymp: '\u224D',
    smile: '\u2323',
    frown: '\u2322',
    ne: '\u2260',
    neq: '\u2260',
    cong: '\u2245',
    doteq: '\u2250',
    bowtie: '\u22C8',
    models: '\u22A8',
    notChar: '\u29F8',
    Leftrightarrow: '\u21D4',
    Leftarrow: '\u21D0',
    Rightarrow: '\u21D2',
    leftrightarrow: '\u2194',
    leftarrow: '\u2190',
    gets: '\u2190',
    rightarrow: '\u2192',
    to: ['\u2192', { accent: false }],
    mapsto: '\u21A6',
    leftharpoonup: '\u21BC',
    leftharpoondown: '\u21BD',
    rightharpoonup: '\u21C0',
    rightharpoondown: '\u21C1',
    nearrow: '\u2197',
    searrow: '\u2198',
    nwarrow: '\u2196',
    swarrow: '\u2199',
    rightleftharpoons: '\u21CC',
    hookrightarrow: '\u21AA',
    hookleftarrow: '\u21A9',
    longleftarrow: '\u27F5',
    Longleftarrow: '\u27F8',
    longrightarrow: '\u27F6',
    Longrightarrow: '\u27F9',
    Longleftrightarrow: '\u27FA',
    longleftrightarrow: '\u27F7',
    longmapsto: '\u27FC',
    ldots: '\u2026',
    cdots: '\u22EF',
    vdots: '\u22EE',
    ddots: '\u22F1',
    dotsc: '\u2026',
    dotsb: '\u22EF',
    dotsm: '\u22EF',
    dotsi: '\u22EF',
    dotso: '\u2026',
    ldotp: ['\u002E', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }],
    cdotp: ['\u22C5', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }],
    colon: ['\u003A', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }]
});
new sm.CharacterMap('mathchar7', ParseMethods_js_1.default.mathchar7, {
    Gamma: '\u0393',
    Delta: '\u0394',
    Theta: '\u0398',
    Lambda: '\u039B',
    Xi: '\u039E',
    Pi: '\u03A0',
    Sigma: '\u03A3',
    Upsilon: '\u03A5',
    Phi: '\u03A6',
    Psi: '\u03A8',
    Omega: '\u03A9',
    '_': '\u005F',
    '#': '\u0023',
    '$': '\u0024',
    '%': '\u0025',
    '&': '\u0026',
    And: '\u0026'
});
new sm.DelimiterMap('delimiter', ParseMethods_js_1.default.delimiter, {
    '(': '(',
    ')': ')',
    '[': '[',
    ']': ']',
    '<': '\u27E8',
    '>': '\u27E9',
    '\\lt': '\u27E8',
    '\\gt': '\u27E9',
    '/': '/',
    '|': ['|', { texClass: MmlNode_js_1.TEXCLASS.ORD }],
    '.': '',
    '\\\\': '\\',
    '\\lmoustache': '\u23B0',
    '\\rmoustache': '\u23B1',
    '\\lgroup': '\u27EE',
    '\\rgroup': '\u27EF',
    '\\arrowvert': '\u23D0',
    '\\Arrowvert': '\u2016',
    '\\bracevert': '\u23AA',
    '\\Vert': ['\u2016', { texClass: MmlNode_js_1.TEXCLASS.ORD }],
    '\\|': ['\u2016', { texClass: MmlNode_js_1.TEXCLASS.ORD }],
    '\\vert': ['|', { texClass: MmlNode_js_1.TEXCLASS.ORD }],
    '\\uparrow': '\u2191',
    '\\downarrow': '\u2193',
    '\\updownarrow': '\u2195',
    '\\Uparrow': '\u21D1',
    '\\Downarrow': '\u21D3',
    '\\Updownarrow': '\u21D5',
    '\\backslash': '\\',
    '\\rangle': '\u27E9',
    '\\langle': '\u27E8',
    '\\rbrace': '}',
    '\\lbrace': '{',
    '\\}': '}',
    '\\{': '{',
    '\\rceil': '\u2309',
    '\\lceil': '\u2308',
    '\\rfloor': '\u230B',
    '\\lfloor': '\u230A',
    '\\lbrack': '[',
    '\\rbrack': ']'
});
new sm.CommandMap('macros', {
    displaystyle: ['SetStyle', 'D', true, 0],
    textstyle: ['SetStyle', 'T', false, 0],
    scriptstyle: ['SetStyle', 'S', false, 1],
    scriptscriptstyle: ['SetStyle', 'SS', false, 2],
    rm: ['SetFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
    mit: ['SetFont', TexConstants_js_1.TexConstant.Variant.ITALIC],
    oldstyle: ['SetFont', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    cal: ['SetFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
    it: ['SetFont', TexConstants_js_1.TexConstant.Variant.MATHITALIC],
    bf: ['SetFont', TexConstants_js_1.TexConstant.Variant.BOLD],
    bbFont: ['SetFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
    scr: ['SetFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
    frak: ['SetFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
    sf: ['SetFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
    tt: ['SetFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
    mathrm: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
    mathup: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
    mathnormal: ['MathFont', ''],
    mathbf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],
    mathbfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],
    mathit: ['MathFont', TexConstants_js_1.TexConstant.Variant.MATHITALIC],
    mathbfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDITALIC],
    mathbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
    Bbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
    mathfrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
    mathbffrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR],
    mathscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
    mathbfscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT],
    mathsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
    mathsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
    mathbfsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],
    mathbfsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],
    mathsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFITALIC],
    mathbfsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFBOLDITALIC],
    mathtt: ['MathFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
    mathcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
    mathbfcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDCALLIGRAPHIC],
    symrm: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
    symup: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
    symnormal: ['MathFont', ''],
    symbf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],
    symbfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],
    symit: ['MathFont', TexConstants_js_1.TexConstant.Variant.ITALIC],
    symbfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDITALIC],
    symbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
    symfrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
    symbffrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR],
    symscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
    symbfscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT],
    symsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
    symsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
    symbfsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],
    symbfsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],
    symsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFITALIC],
    symbfsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFBOLDITALIC],
    symtt: ['MathFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
    symcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
    symbfcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDCALLIGRAPHIC],
    textrm: ['HBox', null, TexConstants_js_1.TexConstant.Variant.NORMAL],
    textup: ['HBox', null, TexConstants_js_1.TexConstant.Variant.NORMAL],
    textnormal: ['HBox'],
    textit: ['HBox', null, TexConstants_js_1.TexConstant.Variant.ITALIC],
    textbf: ['HBox', null, TexConstants_js_1.TexConstant.Variant.BOLD],
    textsf: ['HBox', null, TexConstants_js_1.TexConstant.Variant.SANSSERIF],
    texttt: ['HBox', null, TexConstants_js_1.TexConstant.Variant.MONOSPACE],
    tiny: ['SetSize', 0.5],
    Tiny: ['SetSize', 0.6],
    scriptsize: ['SetSize', 0.7],
    small: ['SetSize', 0.85],
    normalsize: ['SetSize', 1.0],
    large: ['SetSize', 1.2],
    Large: ['SetSize', 1.44],
    LARGE: ['SetSize', 1.73],
    huge: ['SetSize', 2.07],
    Huge: ['SetSize', 2.49],
    arcsin: 'NamedFn',
    arccos: 'NamedFn',
    arctan: 'NamedFn',
    arg: 'NamedFn',
    cos: 'NamedFn',
    cosh: 'NamedFn',
    cot: 'NamedFn',
    coth: 'NamedFn',
    csc: 'NamedFn',
    deg: 'NamedFn',
    det: 'NamedOp',
    dim: 'NamedFn',
    exp: 'NamedFn',
    gcd: 'NamedOp',
    hom: 'NamedFn',
    inf: 'NamedOp',
    ker: 'NamedFn',
    lg: 'NamedFn',
    lim: 'NamedOp',
    liminf: ['NamedOp', 'lim&thinsp;inf'],
    limsup: ['NamedOp', 'lim&thinsp;sup'],
    ln: 'NamedFn',
    log: 'NamedFn',
    max: 'NamedOp',
    min: 'NamedOp',
    Pr: 'NamedOp',
    sec: 'NamedFn',
    sin: 'NamedFn',
    sinh: 'NamedFn',
    sup: 'NamedOp',
    tan: 'NamedFn',
    tanh: 'NamedFn',
    limits: ['Limits', 1],
    nolimits: ['Limits', 0],
    overline: ['UnderOver', '2015'],
    underline: ['UnderOver', '2015'],
    overbrace: ['UnderOver', '23DE', 1],
    underbrace: ['UnderOver', '23DF', 1],
    overparen: ['UnderOver', '23DC'],
    underparen: ['UnderOver', '23DD'],
    overrightarrow: ['UnderOver', '2192'],
    underrightarrow: ['UnderOver', '2192'],
    overleftarrow: ['UnderOver', '2190'],
    underleftarrow: ['UnderOver', '2190'],
    overleftrightarrow: ['UnderOver', '2194'],
    underleftrightarrow: ['UnderOver', '2194'],
    overset: 'Overset',
    underset: 'Underset',
    overunderset: 'Overunderset',
    stackrel: ['Macro', '\\mathrel{\\mathop{#2}\\limits^{#1}}', 2],
    stackbin: ['Macro', '\\mathbin{\\mathop{#2}\\limits^{#1}}', 2],
    over: 'Over',
    overwithdelims: 'Over',
    atop: 'Over',
    atopwithdelims: 'Over',
    above: 'Over',
    abovewithdelims: 'Over',
    brace: ['Over', '{', '}'],
    brack: ['Over', '[', ']'],
    choose: ['Over', '(', ')'],
    frac: 'Frac',
    sqrt: 'Sqrt',
    root: 'Root',
    uproot: ['MoveRoot', 'upRoot'],
    leftroot: ['MoveRoot', 'leftRoot'],
    left: 'LeftRight',
    right: 'LeftRight',
    middle: 'LeftRight',
    llap: 'Lap',
    rlap: 'Lap',
    raise: 'RaiseLower',
    lower: 'RaiseLower',
    moveleft: 'MoveLeftRight',
    moveright: 'MoveLeftRight',
    ',': ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],
    ':': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],
    '>': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],
    ';': ['Spacer', lengths_js_1.MATHSPACE.thickmathspace],
    '!': ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],
    enspace: ['Spacer', .5],
    quad: ['Spacer', 1],
    qquad: ['Spacer', 2],
    thinspace: ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],
    negthinspace: ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],
    hskip: 'Hskip',
    hspace: 'Hskip',
    kern: 'Hskip',
    mskip: 'Hskip',
    mspace: 'Hskip',
    mkern: 'Hskip',
    rule: 'rule',
    Rule: ['Rule'],
    Space: ['Rule', 'blank'],
    nonscript: 'Nonscript',
    big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 0.85],
    Big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.15],
    bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.45],
    Bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.75],
    bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 0.85],
    Bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.15],
    biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.45],
    Biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.75],
    bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 0.85],
    Bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.15],
    biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.45],
    Biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.75],
    bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 0.85],
    Bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.15],
    biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.45],
    Biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.75],
    mathord: ['TeXAtom', MmlNode_js_1.TEXCLASS.ORD],
    mathop: ['TeXAtom', MmlNode_js_1.TEXCLASS.OP],
    mathopen: ['TeXAtom', MmlNode_js_1.TEXCLASS.OPEN],
    mathclose: ['TeXAtom', MmlNode_js_1.TEXCLASS.CLOSE],
    mathbin: ['TeXAtom', MmlNode_js_1.TEXCLASS.BIN],
    mathrel: ['TeXAtom', MmlNode_js_1.TEXCLASS.REL],
    mathpunct: ['TeXAtom', MmlNode_js_1.TEXCLASS.PUNCT],
    mathinner: ['TeXAtom', MmlNode_js_1.TEXCLASS.INNER],
    vcenter: ['TeXAtom', MmlNode_js_1.TEXCLASS.VCENTER],
    buildrel: 'BuildRel',
    hbox: ['HBox', 0],
    text: 'HBox',
    mbox: ['HBox', 0],
    fbox: 'FBox',
    boxed: ['Macro', '\\fbox{$\\displaystyle{#1}$}', 1],
    framebox: 'FrameBox',
    strut: 'Strut',
    mathstrut: ['Macro', '\\vphantom{(}'],
    phantom: 'Phantom',
    vphantom: ['Phantom', 1, 0],
    hphantom: ['Phantom', 0, 1],
    smash: 'Smash',
    acute: ['Accent', '00B4'],
    grave: ['Accent', '0060'],
    ddot: ['Accent', '00A8'],
    tilde: ['Accent', '007E'],
    bar: ['Accent', '00AF'],
    breve: ['Accent', '02D8'],
    check: ['Accent', '02C7'],
    hat: ['Accent', '005E'],
    vec: ['Accent', '2192'],
    dot: ['Accent', '02D9'],
    widetilde: ['Accent', '007E', 1],
    widehat: ['Accent', '005E', 1],
    matrix: 'Matrix',
    array: 'Matrix',
    pmatrix: ['Matrix', '(', ')'],
    cases: ['Matrix', '{', '', 'left left', null, '.1em', null,
        true],
    eqalign: ['Matrix', null, null, 'right left',
        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D'],
    displaylines: ['Matrix', null, null, 'center', null, '.5em', 'D'],
    cr: 'Cr',
    '\\': 'CrLaTeX',
    newline: ['CrLaTeX', true],
    hline: ['HLine', 'solid'],
    hdashline: ['HLine', 'dashed'],
    eqalignno: ['Matrix', null, null, 'right left',
        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D', null,
        'right'],
    leqalignno: ['Matrix', null, null, 'right left',
        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D', null,
        'left'],
    hfill: 'HFill',
    hfil: 'HFill',
    hfilll: 'HFill',
    bmod: ['Macro', '\\mmlToken{mo}[lspace="thickmathspace"' +
            ' rspace="thickmathspace"]{mod}'],
    pmod: ['Macro', '\\pod{\\mmlToken{mi}{mod}\\kern 6mu #1}', 1],
    mod: ['Macro', '\\mathchoice{\\kern18mu}{\\kern12mu}' +
            '{\\kern12mu}{\\kern12mu}\\mmlToken{mi}{mod}\\,\\,#1',
        1],
    pod: ['Macro', '\\mathchoice{\\kern18mu}{\\kern8mu}' +
            '{\\kern8mu}{\\kern8mu}(#1)', 1],
    iff: ['Macro', '\\;\\Longleftrightarrow\\;'],
    skew: ['Macro', '{{#2{#3\\mkern#1mu}\\mkern-#1mu}{}}', 3],
    pmb: ['Macro', '\\rlap{#1}\\kern1px{#1}', 1],
    TeX: ['Macro', 'T\\kern-.14em\\lower.5ex{E}\\kern-.115em X'],
    LaTeX: ['Macro', 'L\\kern-.325em\\raise.21em' +
            '{\\scriptstyle{A}}\\kern-.17em\\TeX'],
    ' ': ['Macro', '\\text{ }'],
    not: 'Not',
    dots: 'Dots',
    space: 'Tilde',
    '\u00A0': 'Tilde',
    begin: 'BeginEnd',
    end: 'BeginEnd',
    label: 'HandleLabel',
    ref: 'HandleRef',
    nonumber: 'HandleNoTag',
    mathchoice: 'MathChoice',
    mmlToken: 'MmlToken'
}, BaseMethods_js_1.default);
new sm.EnvironmentMap('environment', ParseMethods_js_1.default.environment, {
    array: ['AlignedArray'],
    equation: ['Equation', null, true],
    eqnarray: ['EqnArray', null, true, true, 'rcl',
        ParseUtil_js_1.default.cols(0, lengths_js_1.MATHSPACE.thickmathspace), '.5em']
}, BaseMethods_js_1.default);
new sm.CharacterMap('not_remap', null, {
    '\u2190': '\u219A',
    '\u2192': '\u219B',
    '\u2194': '\u21AE',
    '\u21D0': '\u21CD',
    '\u21D2': '\u21CF',
    '\u21D4': '\u21CE',
    '\u2208': '\u2209',
    '\u220B': '\u220C',
    '\u2223': '\u2224',
    '\u2225': '\u2226',
    '\u223C': '\u2241',
    '\u007E': '\u2241',
    '\u2243': '\u2244',
    '\u2245': '\u2247',
    '\u2248': '\u2249',
    '\u224D': '\u226D',
    '\u003D': '\u2260',
    '\u2261': '\u2262',
    '\u003C': '\u226E',
    '\u003E': '\u226F',
    '\u2264': '\u2270',
    '\u2265': '\u2271',
    '\u2272': '\u2274',
    '\u2273': '\u2275',
    '\u2276': '\u2278',
    '\u2277': '\u2279',
    '\u227A': '\u2280',
    '\u227B': '\u2281',
    '\u2282': '\u2284',
    '\u2283': '\u2285',
    '\u2286': '\u2288',
    '\u2287': '\u2289',
    '\u22A2': '\u22AC',
    '\u22A8': '\u22AD',
    '\u22A9': '\u22AE',
    '\u22AB': '\u22AF',
    '\u227C': '\u22E0',
    '\u227D': '\u22E1',
    '\u2291': '\u22E2',
    '\u2292': '\u22E3',
    '\u22B2': '\u22EA',
    '\u22B3': '\u22EB',
    '\u22B4': '\u22EC',
    '\u22B5': '\u22ED',
    '\u2203': '\u2204'
});
//# sourceMappingURL=BaseMappings.js.map

/***/ }),

/***/ 7693:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var sitem = __importStar(__webpack_require__(1181));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var TexConstants_js_1 = __webpack_require__(8317);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var MmlNode_js_1 = __webpack_require__(9007);
var Tags_js_1 = __webpack_require__(6521);
var lengths_js_1 = __webpack_require__(6010);
var Entities_js_1 = __webpack_require__(5368);
var Options_js_1 = __webpack_require__(7233);
var BaseMethods = {};
var P_HEIGHT = 1.2 / .85;
var MmlTokenAllow = {
    fontfamily: 1, fontsize: 1, fontweight: 1, fontstyle: 1,
    color: 1, background: 1,
    id: 1, 'class': 1, href: 1, style: 1
};
BaseMethods.Open = function (parser, _c) {
    parser.Push(parser.itemFactory.create('open'));
};
BaseMethods.Close = function (parser, _c) {
    parser.Push(parser.itemFactory.create('close'));
};
BaseMethods.Tilde = function (parser, _c) {
    parser.Push(parser.create('token', 'mtext', {}, Entities_js_1.entities.nbsp));
};
BaseMethods.Space = function (_parser, _c) { };
BaseMethods.Superscript = function (parser, _c) {
    var _a;
    if (parser.GetNext().match(/\d/)) {
        parser.string = parser.string.substr(0, parser.i + 1) +
            ' ' + parser.string.substr(parser.i + 1);
    }
    var primes;
    var base;
    var top = parser.stack.Top();
    if (top.isKind('prime')) {
        _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];
        parser.stack.Pop();
    }
    else {
        base = parser.stack.Prev();
        if (!base) {
            base = parser.create('token', 'mi', {}, '');
        }
    }
    var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');
    var position = NodeUtil_js_1.default.isType(base, 'msubsup') ? base.sup :
        base.over;
    if ((NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&
        NodeUtil_js_1.default.getChildAt(base, base.sup)) ||
        (NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') &&
            NodeUtil_js_1.default.getChildAt(base, base.over) &&
            !NodeUtil_js_1.default.getProperty(base, 'subsupOK'))) {
        throw new TexError_js_1.default('DoubleExponent', 'Double exponent: use braces to clarify');
    }
    if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {
        if (movesupsub) {
            if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') ||
                NodeUtil_js_1.default.getChildAt(base, base.over)) {
                base = parser.create('node', 'munderover', [base], { movesupsub: true });
            }
            position = base.over;
        }
        else {
            base = parser.create('node', 'msubsup', [base]);
            position = base.sup;
        }
    }
    parser.Push(parser.itemFactory.create('subsup', base).setProperties({
        position: position, primes: primes, movesupsub: movesupsub
    }));
};
BaseMethods.Subscript = function (parser, _c) {
    var _a;
    if (parser.GetNext().match(/\d/)) {
        parser.string =
            parser.string.substr(0, parser.i + 1) + ' ' +
                parser.string.substr(parser.i + 1);
    }
    var primes, base;
    var top = parser.stack.Top();
    if (top.isKind('prime')) {
        _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];
        parser.stack.Pop();
    }
    else {
        base = parser.stack.Prev();
        if (!base) {
            base = parser.create('token', 'mi', {}, '');
        }
    }
    var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');
    var position = NodeUtil_js_1.default.isType(base, 'msubsup') ?
        base.sub : base.under;
    if ((NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&
        NodeUtil_js_1.default.getChildAt(base, base.sub)) ||
        (NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') &&
            NodeUtil_js_1.default.getChildAt(base, base.under) &&
            !NodeUtil_js_1.default.getProperty(base, 'subsupOK'))) {
        throw new TexError_js_1.default('DoubleSubscripts', 'Double subscripts: use braces to clarify');
    }
    if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {
        if (movesupsub) {
            if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') ||
                NodeUtil_js_1.default.getChildAt(base, base.under)) {
                base = parser.create('node', 'munderover', [base], { movesupsub: true });
            }
            position = base.under;
        }
        else {
            base = parser.create('node', 'msubsup', [base]);
            position = base.sub;
        }
    }
    parser.Push(parser.itemFactory.create('subsup', base).setProperties({
        position: position, primes: primes, movesupsub: movesupsub
    }));
};
BaseMethods.Prime = function (parser, c) {
    var base = parser.stack.Prev();
    if (!base) {
        base = parser.create('node', 'mi');
    }
    if (NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&
        NodeUtil_js_1.default.getChildAt(base, base.sup)) {
        throw new TexError_js_1.default('DoubleExponentPrime', 'Prime causes double exponent: use braces to clarify');
    }
    var sup = '';
    parser.i--;
    do {
        sup += Entities_js_1.entities.prime;
        parser.i++, c = parser.GetNext();
    } while (c === '\'' || c === Entities_js_1.entities.rsquo);
    sup = ['', '\u2032', '\u2033', '\u2034', '\u2057'][sup.length] || sup;
    var node = parser.create('token', 'mo', { variantForm: true }, sup);
    parser.Push(parser.itemFactory.create('prime', base, node));
};
BaseMethods.Comment = function (parser, _c) {
    while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\n') {
        parser.i++;
    }
};
BaseMethods.Hash = function (_parser, _c) {
    throw new TexError_js_1.default('CantUseHash1', 'You can\'t use \'macro parameter character #\' in math mode');
};
BaseMethods.MathFont = function (parser, name, variant) {
    var text = parser.GetArgument(name);
    var mml = new TexParser_js_1.default(text, __assign(__assign({}, parser.stack.env), { font: variant, multiLetterIdentifiers: /^[a-zA-Z]+/, noAutoOP: true }), parser.configuration).mml();
    parser.Push(parser.create('node', 'TeXAtom', [mml]));
};
BaseMethods.SetFont = function (parser, _name, font) {
    parser.stack.env['font'] = font;
};
BaseMethods.SetStyle = function (parser, _name, texStyle, style, level) {
    parser.stack.env['style'] = texStyle;
    parser.stack.env['level'] = level;
    parser.Push(parser.itemFactory.create('style').setProperty('styles', { displaystyle: style, scriptlevel: level }));
};
BaseMethods.SetSize = function (parser, _name, size) {
    parser.stack.env['size'] = size;
    parser.Push(parser.itemFactory.create('style').setProperty('styles', { mathsize: (0, lengths_js_1.em)(size) }));
};
BaseMethods.Spacer = function (parser, _name, space) {
    var node = parser.create('node', 'mspace', [], { width: (0, lengths_js_1.em)(space) });
    var style = parser.create('node', 'mstyle', [node], { scriptlevel: 0 });
    parser.Push(style);
};
BaseMethods.LeftRight = function (parser, name) {
    var first = name.substr(1);
    parser.Push(parser.itemFactory.create(first, parser.GetDelimiter(name), parser.stack.env.color));
};
BaseMethods.NamedFn = function (parser, name, id) {
    if (!id) {
        id = name.substr(1);
    }
    var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, id);
    parser.Push(parser.itemFactory.create('fn', mml));
};
BaseMethods.NamedOp = function (parser, name, id) {
    if (!id) {
        id = name.substr(1);
    }
    id = id.replace(/&thinsp;/, '\u2006');
    var mml = parser.create('token', 'mo', {
        movablelimits: true,
        movesupsub: true,
        form: TexConstants_js_1.TexConstant.Form.PREFIX,
        texClass: MmlNode_js_1.TEXCLASS.OP
    }, id);
    parser.Push(mml);
};
BaseMethods.Limits = function (parser, _name, limits) {
    var op = parser.stack.Prev(true);
    if (!op || (NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(op)) !== MmlNode_js_1.TEXCLASS.OP &&
        NodeUtil_js_1.default.getProperty(op, 'movesupsub') == null)) {
        throw new TexError_js_1.default('MisplacedLimits', '%1 is allowed only on operators', parser.currentCS);
    }
    var top = parser.stack.Top();
    var node;
    if (NodeUtil_js_1.default.isType(op, 'munderover') && !limits) {
        node = parser.create('node', 'msubsup');
        NodeUtil_js_1.default.copyChildren(op, node);
        op = top.Last = node;
    }
    else if (NodeUtil_js_1.default.isType(op, 'msubsup') && limits) {
        node = parser.create('node', 'munderover');
        NodeUtil_js_1.default.copyChildren(op, node);
        op = top.Last = node;
    }
    NodeUtil_js_1.default.setProperty(op, 'movesupsub', limits ? true : false);
    NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(op), { 'movablelimits': false });
    if (NodeUtil_js_1.default.getAttribute(op, 'movablelimits') ||
        NodeUtil_js_1.default.getProperty(op, 'movablelimits')) {
        NodeUtil_js_1.default.setProperties(op, { 'movablelimits': false });
    }
};
BaseMethods.Over = function (parser, name, open, close) {
    var mml = parser.itemFactory.create('over').setProperty('name', parser.currentCS);
    if (open || close) {
        mml.setProperty('open', open);
        mml.setProperty('close', close);
    }
    else if (name.match(/withdelims$/)) {
        mml.setProperty('open', parser.GetDelimiter(name));
        mml.setProperty('close', parser.GetDelimiter(name));
    }
    if (name.match(/^\\above/)) {
        mml.setProperty('thickness', parser.GetDimen(name));
    }
    else if (name.match(/^\\atop/) || open || close) {
        mml.setProperty('thickness', 0);
    }
    parser.Push(mml);
};
BaseMethods.Frac = function (parser, name) {
    var num = parser.ParseArg(name);
    var den = parser.ParseArg(name);
    var node = parser.create('node', 'mfrac', [num, den]);
    parser.Push(node);
};
BaseMethods.Sqrt = function (parser, name) {
    var n = parser.GetBrackets(name);
    var arg = parser.GetArgument(name);
    if (arg === '\\frac') {
        arg += '{' + parser.GetArgument(arg) + '}{' + parser.GetArgument(arg) + '}';
    }
    var mml = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
    if (!n) {
        mml = parser.create('node', 'msqrt', [mml]);
    }
    else {
        mml = parser.create('node', 'mroot', [mml, parseRoot(parser, n)]);
    }
    parser.Push(mml);
};
function parseRoot(parser, n) {
    var env = parser.stack.env;
    var inRoot = env['inRoot'];
    env['inRoot'] = true;
    var newParser = new TexParser_js_1.default(n, env, parser.configuration);
    var node = newParser.mml();
    var global = newParser.stack.global;
    if (global['leftRoot'] || global['upRoot']) {
        var def = {};
        if (global['leftRoot']) {
            def['width'] = global['leftRoot'];
        }
        if (global['upRoot']) {
            def['voffset'] = global['upRoot'];
            def['height'] = global['upRoot'];
        }
        node = parser.create('node', 'mpadded', [node], def);
    }
    env['inRoot'] = inRoot;
    return node;
}
BaseMethods.Root = function (parser, name) {
    var n = parser.GetUpTo(name, '\\of');
    var arg = parser.ParseArg(name);
    var node = parser.create('node', 'mroot', [arg, parseRoot(parser, n)]);
    parser.Push(node);
};
BaseMethods.MoveRoot = function (parser, name, id) {
    if (!parser.stack.env['inRoot']) {
        throw new TexError_js_1.default('MisplacedMoveRoot', '%1 can appear only within a root', parser.currentCS);
    }
    if (parser.stack.global[id]) {
        throw new TexError_js_1.default('MultipleMoveRoot', 'Multiple use of %1', parser.currentCS);
    }
    var n = parser.GetArgument(name);
    if (!n.match(/-?[0-9]+/)) {
        throw new TexError_js_1.default('IntegerArg', 'The argument to %1 must be an integer', parser.currentCS);
    }
    n = (parseInt(n, 10) / 15) + 'em';
    if (n.substr(0, 1) !== '-') {
        n = '+' + n;
    }
    parser.stack.global[id] = n;
};
BaseMethods.Accent = function (parser, name, accent, stretchy) {
    var c = parser.ParseArg(name);
    var def = __assign(__assign({}, ParseUtil_js_1.default.getFontDef(parser)), { accent: true, mathaccent: true });
    var entity = NodeUtil_js_1.default.createEntity(accent);
    var moNode = parser.create('token', 'mo', def, entity);
    var mml = moNode;
    NodeUtil_js_1.default.setAttribute(mml, 'stretchy', stretchy ? true : false);
    var mo = (NodeUtil_js_1.default.isEmbellished(c) ? NodeUtil_js_1.default.getCoreMO(c) : c);
    if (NodeUtil_js_1.default.isType(mo, 'mo') || NodeUtil_js_1.default.getProperty(mo, 'movablelimits')) {
        NodeUtil_js_1.default.setProperties(mo, { 'movablelimits': false });
    }
    var muoNode = parser.create('node', 'munderover');
    NodeUtil_js_1.default.setChild(muoNode, 0, c);
    NodeUtil_js_1.default.setChild(muoNode, 1, null);
    NodeUtil_js_1.default.setChild(muoNode, 2, mml);
    var texAtom = parser.create('node', 'TeXAtom', [muoNode]);
    parser.Push(texAtom);
};
BaseMethods.UnderOver = function (parser, name, c, stack) {
    var entity = NodeUtil_js_1.default.createEntity(c);
    var mo = parser.create('token', 'mo', { stretchy: true, accent: true }, entity);
    var pos = (name.charAt(1) === 'o' ? 'over' : 'under');
    var base = parser.ParseArg(name);
    parser.Push(ParseUtil_js_1.default.underOver(parser, base, mo, pos, stack));
};
BaseMethods.Overset = function (parser, name) {
    var top = parser.ParseArg(name);
    var base = parser.ParseArg(name);
    ParseUtil_js_1.default.checkMovableLimits(base);
    if (top.isKind('mo')) {
        NodeUtil_js_1.default.setAttribute(top, 'accent', false);
    }
    var node = parser.create('node', 'mover', [base, top]);
    parser.Push(node);
};
BaseMethods.Underset = function (parser, name) {
    var bot = parser.ParseArg(name);
    var base = parser.ParseArg(name);
    ParseUtil_js_1.default.checkMovableLimits(base);
    if (bot.isKind('mo')) {
        NodeUtil_js_1.default.setAttribute(bot, 'accent', false);
    }
    var node = parser.create('node', 'munder', [base, bot], { accentunder: false });
    parser.Push(node);
};
BaseMethods.Overunderset = function (parser, name) {
    var top = parser.ParseArg(name);
    var bot = parser.ParseArg(name);
    var base = parser.ParseArg(name);
    ParseUtil_js_1.default.checkMovableLimits(base);
    if (top.isKind('mo')) {
        NodeUtil_js_1.default.setAttribute(top, 'accent', false);
    }
    if (bot.isKind('mo')) {
        NodeUtil_js_1.default.setAttribute(bot, 'accent', false);
    }
    var node = parser.create('node', 'munderover', [base, bot, top], { accent: false, accentunder: false });
    parser.Push(node);
};
BaseMethods.TeXAtom = function (parser, name, mclass) {
    var def = { texClass: mclass };
    var mml;
    var node;
    var parsed;
    if (mclass === MmlNode_js_1.TEXCLASS.OP) {
        def['movesupsub'] = def['movablelimits'] = true;
        var arg = parser.GetArgument(name);
        var match = arg.match(/^\s*\\rm\s+([a-zA-Z0-9 ]+)$/);
        if (match) {
            def['mathvariant'] = TexConstants_js_1.TexConstant.Variant.NORMAL;
            node = parser.create('token', 'mi', def, match[1]);
        }
        else {
            parsed = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
            node = parser.create('node', 'TeXAtom', [parsed], def);
        }
        mml = parser.itemFactory.create('fn', node);
    }
    else {
        parsed = parser.ParseArg(name);
        mml = parser.create('node', 'TeXAtom', [parsed], def);
    }
    parser.Push(mml);
};
BaseMethods.MmlToken = function (parser, name) {
    var kind = parser.GetArgument(name);
    var attr = parser.GetBrackets(name, '').replace(/^\s+/, '');
    var text = parser.GetArgument(name);
    var def = {};
    var keep = [];
    var node;
    try {
        node = parser.create('node', kind);
    }
    catch (e) {
        node = null;
    }
    if (!node || !node.isToken) {
        throw new TexError_js_1.default('NotMathMLToken', '%1 is not a token element', kind);
    }
    while (attr !== '') {
        var match = attr.match(/^([a-z]+)\s*=\s*('[^']*'|"[^"]*"|[^ ,]*)\s*,?\s*/i);
        if (!match) {
            throw new TexError_js_1.default('InvalidMathMLAttr', 'Invalid MathML attribute: %1', attr);
        }
        if (!node.attributes.hasDefault(match[1]) && !MmlTokenAllow[match[1]]) {
            throw new TexError_js_1.default('UnknownAttrForElement', '%1 is not a recognized attribute for %2', match[1], kind);
        }
        var value = ParseUtil_js_1.default.MmlFilterAttribute(parser, match[1], match[2].replace(/^(['"])(.*)\1$/, '$2'));
        if (value) {
            if (value.toLowerCase() === 'true') {
                value = true;
            }
            else if (value.toLowerCase() === 'false') {
                value = false;
            }
            def[match[1]] = value;
            keep.push(match[1]);
        }
        attr = attr.substr(match[0].length);
    }
    if (keep.length) {
        def['mjx-keep-attrs'] = keep.join(' ');
    }
    var textNode = parser.create('text', text);
    node.appendChild(textNode);
    NodeUtil_js_1.default.setProperties(node, def);
    parser.Push(node);
};
BaseMethods.Strut = function (parser, _name) {
    var row = parser.create('node', 'mrow');
    var padded = parser.create('node', 'mpadded', [row], { height: '8.6pt', depth: '3pt', width: 0 });
    parser.Push(padded);
};
BaseMethods.Phantom = function (parser, name, v, h) {
    var box = parser.create('node', 'mphantom', [parser.ParseArg(name)]);
    if (v || h) {
        box = parser.create('node', 'mpadded', [box]);
        if (h) {
            NodeUtil_js_1.default.setAttribute(box, 'height', 0);
            NodeUtil_js_1.default.setAttribute(box, 'depth', 0);
        }
        if (v) {
            NodeUtil_js_1.default.setAttribute(box, 'width', 0);
        }
    }
    var atom = parser.create('node', 'TeXAtom', [box]);
    parser.Push(atom);
};
BaseMethods.Smash = function (parser, name) {
    var bt = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));
    var smash = parser.create('node', 'mpadded', [parser.ParseArg(name)]);
    switch (bt) {
        case 'b':
            NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);
            break;
        case 't':
            NodeUtil_js_1.default.setAttribute(smash, 'height', 0);
            break;
        default:
            NodeUtil_js_1.default.setAttribute(smash, 'height', 0);
            NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);
    }
    var atom = parser.create('node', 'TeXAtom', [smash]);
    parser.Push(atom);
};
BaseMethods.Lap = function (parser, name) {
    var mml = parser.create('node', 'mpadded', [parser.ParseArg(name)], { width: 0 });
    if (name === '\\llap') {
        NodeUtil_js_1.default.setAttribute(mml, 'lspace', '-1width');
    }
    var atom = parser.create('node', 'TeXAtom', [mml]);
    parser.Push(atom);
};
BaseMethods.RaiseLower = function (parser, name) {
    var h = parser.GetDimen(name);
    var item = parser.itemFactory.create('position').setProperties({ name: parser.currentCS, move: 'vertical' });
    if (h.charAt(0) === '-') {
        h = h.slice(1);
        name = name.substr(1) === 'raise' ? '\\lower' : '\\raise';
    }
    if (name === '\\lower') {
        item.setProperty('dh', '-' + h);
        item.setProperty('dd', '+' + h);
    }
    else {
        item.setProperty('dh', '+' + h);
        item.setProperty('dd', '-' + h);
    }
    parser.Push(item);
};
BaseMethods.MoveLeftRight = function (parser, name) {
    var h = parser.GetDimen(name);
    var nh = (h.charAt(0) === '-' ? h.slice(1) : '-' + h);
    if (name === '\\moveleft') {
        var tmp = h;
        h = nh;
        nh = tmp;
    }
    parser.Push(parser.itemFactory.create('position').setProperties({
        name: parser.currentCS, move: 'horizontal',
        left: parser.create('node', 'mspace', [], { width: h }),
        right: parser.create('node', 'mspace', [], { width: nh })
    }));
};
BaseMethods.Hskip = function (parser, name) {
    var node = parser.create('node', 'mspace', [], { width: parser.GetDimen(name) });
    parser.Push(node);
};
BaseMethods.Nonscript = function (parser, _name) {
    parser.Push(parser.itemFactory.create('nonscript'));
};
BaseMethods.Rule = function (parser, name, style) {
    var w = parser.GetDimen(name), h = parser.GetDimen(name), d = parser.GetDimen(name);
    var def = { width: w, height: h, depth: d };
    if (style !== 'blank') {
        def['mathbackground'] = (parser.stack.env['color'] || 'black');
    }
    var node = parser.create('node', 'mspace', [], def);
    parser.Push(node);
};
BaseMethods.rule = function (parser, name) {
    var v = parser.GetBrackets(name), w = parser.GetDimen(name), h = parser.GetDimen(name);
    var mml = parser.create('node', 'mspace', [], {
        width: w, height: h,
        mathbackground: (parser.stack.env['color'] || 'black')
    });
    if (v) {
        mml = parser.create('node', 'mpadded', [mml], { voffset: v });
        if (v.match(/^\-/)) {
            NodeUtil_js_1.default.setAttribute(mml, 'height', v);
            NodeUtil_js_1.default.setAttribute(mml, 'depth', '+' + v.substr(1));
        }
        else {
            NodeUtil_js_1.default.setAttribute(mml, 'height', '+' + v);
        }
    }
    parser.Push(mml);
};
BaseMethods.MakeBig = function (parser, name, mclass, size) {
    size *= P_HEIGHT;
    var sizeStr = String(size).replace(/(\.\d\d\d).+/, '$1') + 'em';
    var delim = parser.GetDelimiter(name, true);
    var mo = parser.create('token', 'mo', {
        minsize: sizeStr, maxsize: sizeStr,
        fence: true, stretchy: true, symmetric: true
    }, delim);
    var node = parser.create('node', 'TeXAtom', [mo], { texClass: mclass });
    parser.Push(node);
};
BaseMethods.BuildRel = function (parser, name) {
    var top = parser.ParseUpTo(name, '\\over');
    var bot = parser.ParseArg(name);
    var node = parser.create('node', 'munderover');
    NodeUtil_js_1.default.setChild(node, 0, bot);
    NodeUtil_js_1.default.setChild(node, 1, null);
    NodeUtil_js_1.default.setChild(node, 2, top);
    var atom = parser.create('node', 'TeXAtom', [node], { texClass: MmlNode_js_1.TEXCLASS.REL });
    parser.Push(atom);
};
BaseMethods.HBox = function (parser, name, style, font) {
    parser.PushAll(ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), style, font));
};
BaseMethods.FBox = function (parser, name) {
    var internal = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
    var node = parser.create('node', 'menclose', internal, { notation: 'box' });
    parser.Push(node);
};
BaseMethods.FrameBox = function (parser, name) {
    var width = parser.GetBrackets(name);
    var pos = parser.GetBrackets(name) || 'c';
    var mml = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
    if (width) {
        mml = [parser.create('node', 'mpadded', mml, {
                width: width,
                'data-align': (0, Options_js_1.lookup)(pos, { l: 'left', r: 'right' }, 'center')
            })];
    }
    var node = parser.create('node', 'TeXAtom', [parser.create('node', 'menclose', mml, { notation: 'box' })], { texClass: MmlNode_js_1.TEXCLASS.ORD });
    parser.Push(node);
};
BaseMethods.Not = function (parser, _name) {
    parser.Push(parser.itemFactory.create('not'));
};
BaseMethods.Dots = function (parser, _name) {
    var ldotsEntity = NodeUtil_js_1.default.createEntity('2026');
    var cdotsEntity = NodeUtil_js_1.default.createEntity('22EF');
    var ldots = parser.create('token', 'mo', { stretchy: false }, ldotsEntity);
    var cdots = parser.create('token', 'mo', { stretchy: false }, cdotsEntity);
    parser.Push(parser.itemFactory.create('dots').setProperties({
        ldots: ldots,
        cdots: cdots
    }));
};
BaseMethods.Matrix = function (parser, _name, open, close, align, spacing, vspacing, style, cases, numbered) {
    var c = parser.GetNext();
    if (c === '') {
        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
    }
    if (c === '{') {
        parser.i++;
    }
    else {
        parser.string = c + '}' + parser.string.slice(parser.i + 1);
        parser.i = 0;
    }
    var array = parser.itemFactory.create('array').setProperty('requireClose', true);
    array.arraydef = {
        rowspacing: (vspacing || '4pt'),
        columnspacing: (spacing || '1em')
    };
    if (cases) {
        array.setProperty('isCases', true);
    }
    if (numbered) {
        array.setProperty('isNumbered', true);
        array.arraydef.side = numbered;
    }
    if (open || close) {
        array.setProperty('open', open);
        array.setProperty('close', close);
    }
    if (style === 'D') {
        array.arraydef.displaystyle = true;
    }
    if (align != null) {
        array.arraydef.columnalign = align;
    }
    parser.Push(array);
};
BaseMethods.Entry = function (parser, name) {
    parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));
    var top = parser.stack.Top();
    var env = top.getProperty('casesEnv');
    var cases = top.getProperty('isCases');
    if (!cases && !env)
        return;
    var str = parser.string;
    var braces = 0, close = -1, i = parser.i, m = str.length;
    var end = (env ? new RegExp("^\\\\end\\s*\\{".concat(env.replace(/\*/, '\\*'), "\\}")) : null);
    while (i < m) {
        var c = str.charAt(i);
        if (c === '{') {
            braces++;
            i++;
        }
        else if (c === '}') {
            if (braces === 0) {
                m = 0;
            }
            else {
                braces--;
                if (braces === 0 && close < 0) {
                    close = i - parser.i;
                }
                i++;
            }
        }
        else if (c === '&' && braces === 0) {
            throw new TexError_js_1.default('ExtraAlignTab', 'Extra alignment tab in \\cases text');
        }
        else if (c === '\\') {
            var rest = str.substr(i);
            if (rest.match(/^((\\cr)[^a-zA-Z]|\\\\)/) || (end && rest.match(end))) {
                m = 0;
            }
            else {
                i += 2;
            }
        }
        else {
            i++;
        }
    }
    var text = str.substr(parser.i, i - parser.i);
    if (!text.match(/^\s*\\text[^a-zA-Z]/) || close !== text.replace(/\s+$/, '').length - 1) {
        var internal = ParseUtil_js_1.default.internalMath(parser, ParseUtil_js_1.default.trimSpaces(text), 0);
        parser.PushAll(internal);
        parser.i = i;
    }
};
BaseMethods.Cr = function (parser, name) {
    parser.Push(parser.itemFactory.create('cell').setProperties({ isCR: true, name: name }));
};
BaseMethods.CrLaTeX = function (parser, name, nobrackets) {
    if (nobrackets === void 0) { nobrackets = false; }
    var n;
    if (!nobrackets) {
        if (parser.string.charAt(parser.i) === '*') {
            parser.i++;
        }
        if (parser.string.charAt(parser.i) === '[') {
            var dim = parser.GetBrackets(name, '');
            var _a = __read(ParseUtil_js_1.default.matchDimen(dim), 2), value = _a[0], unit = _a[1];
            if (dim && !value) {
                throw new TexError_js_1.default('BracketMustBeDimension', 'Bracket argument to %1 must be a dimension', parser.currentCS);
            }
            n = value + unit;
        }
    }
    parser.Push(parser.itemFactory.create('cell').setProperties({ isCR: true, name: name, linebreak: true }));
    var top = parser.stack.Top();
    var node;
    if (top instanceof sitem.ArrayItem) {
        if (n) {
            top.addRowSpacing(n);
        }
    }
    else {
        if (n) {
            node = parser.create('node', 'mspace', [], { depth: n });
            parser.Push(node);
        }
        node = parser.create('node', 'mspace', [], { linebreak: TexConstants_js_1.TexConstant.LineBreak.NEWLINE });
        parser.Push(node);
    }
};
BaseMethods.HLine = function (parser, _name, style) {
    if (style == null) {
        style = 'solid';
    }
    var top = parser.stack.Top();
    if (!(top instanceof sitem.ArrayItem) || top.Size()) {
        throw new TexError_js_1.default('Misplaced', 'Misplaced %1', parser.currentCS);
    }
    if (!top.table.length) {
        top.frame.push('top');
    }
    else {
        var lines = (top.arraydef['rowlines'] ? top.arraydef['rowlines'].split(/ /) : []);
        while (lines.length < top.table.length) {
            lines.push('none');
        }
        lines[top.table.length - 1] = style;
        top.arraydef['rowlines'] = lines.join(' ');
    }
};
BaseMethods.HFill = function (parser, _name) {
    var top = parser.stack.Top();
    if (top instanceof sitem.ArrayItem) {
        top.hfill.push(top.Size());
    }
    else {
        throw new TexError_js_1.default('UnsupportedHFill', 'Unsupported use of %1', parser.currentCS);
    }
};
BaseMethods.BeginEnd = function (parser, name) {
    var env = parser.GetArgument(name);
    if (env.match(/\\/i)) {
        throw new TexError_js_1.default('InvalidEnv', 'Invalid environment name \'%1\'', env);
    }
    var macro = parser.configuration.handlers.get('environment').lookup(env);
    if (macro && name === '\\end') {
        if (!macro.args[0]) {
            var mml = parser.itemFactory.create('end').setProperty('name', env);
            parser.Push(mml);
            return;
        }
        parser.stack.env['closing'] = env;
    }
    ParseUtil_js_1.default.checkMaxMacros(parser, false);
    parser.parse('environment', [parser, env]);
};
BaseMethods.Array = function (parser, begin, open, close, align, spacing, vspacing, style, raggedHeight) {
    if (!align) {
        align = parser.GetArgument('\\begin{' + begin.getName() + '}');
    }
    var lines = ('c' + align).replace(/[^clr|:]/g, '').replace(/[^|:]([|:])+/g, '$1');
    align = align.replace(/[^clr]/g, '').split('').join(' ');
    align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');
    var array = parser.itemFactory.create('array');
    array.arraydef = {
        columnalign: align,
        columnspacing: (spacing || '1em'),
        rowspacing: (vspacing || '4pt')
    };
    if (lines.match(/[|:]/)) {
        if (lines.charAt(0).match(/[|:]/)) {
            array.frame.push('left');
            array.dashed = lines.charAt(0) === ':';
        }
        if (lines.charAt(lines.length - 1).match(/[|:]/)) {
            array.frame.push('right');
        }
        lines = lines.substr(1, lines.length - 2);
        array.arraydef.columnlines =
            lines.split('').join(' ').replace(/[^|: ]/g, 'none').replace(/\|/g, 'solid').replace(/:/g, 'dashed');
    }
    if (open) {
        array.setProperty('open', parser.convertDelimiter(open));
    }
    if (close) {
        array.setProperty('close', parser.convertDelimiter(close));
    }
    if ((style || '').charAt(1) === '\'') {
        array.arraydef['data-cramped'] = true;
        style = style.charAt(0);
    }
    if (style === 'D') {
        array.arraydef['displaystyle'] = true;
    }
    else if (style) {
        array.arraydef['displaystyle'] = false;
    }
    if (style === 'S') {
        array.arraydef['scriptlevel'] = 1;
    }
    if (raggedHeight) {
        array.arraydef['useHeight'] = false;
    }
    parser.Push(begin);
    return array;
};
BaseMethods.AlignedArray = function (parser, begin) {
    var align = parser.GetBrackets('\\begin{' + begin.getName() + '}');
    var item = BaseMethods.Array(parser, begin);
    return ParseUtil_js_1.default.setArrayAlign(item, align);
};
BaseMethods.Equation = function (parser, begin, numbered) {
    parser.Push(begin);
    ParseUtil_js_1.default.checkEqnEnv(parser);
    return parser.itemFactory.create('equation', numbered).
        setProperty('name', begin.getName());
};
BaseMethods.EqnArray = function (parser, begin, numbered, taggable, align, spacing) {
    parser.Push(begin);
    if (taggable) {
        ParseUtil_js_1.default.checkEqnEnv(parser);
    }
    align = align.replace(/[^clr]/g, '').split('').join(' ');
    align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');
    var newItem = parser.itemFactory.create('eqnarray', begin.getName(), numbered, taggable, parser.stack.global);
    newItem.arraydef = {
        displaystyle: true,
        columnalign: align,
        columnspacing: (spacing || '1em'),
        rowspacing: '3pt',
        side: parser.options['tagSide'],
        minlabelspacing: parser.options['tagIndent']
    };
    return newItem;
};
BaseMethods.HandleNoTag = function (parser, _name) {
    parser.tags.notag();
};
BaseMethods.HandleLabel = function (parser, name) {
    var label = parser.GetArgument(name);
    if (label === '') {
        return;
    }
    if (!parser.tags.refUpdate) {
        if (parser.tags.label) {
            throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);
        }
        parser.tags.label = label;
        if ((parser.tags.allLabels[label] || parser.tags.labels[label]) && !parser.options['ignoreDuplicateLabels']) {
            throw new TexError_js_1.default('MultipleLabel', 'Label \'%1\' multiply defined', label);
        }
        parser.tags.labels[label] = new Tags_js_1.Label();
    }
};
BaseMethods.HandleRef = function (parser, name, eqref) {
    var label = parser.GetArgument(name);
    var ref = parser.tags.allLabels[label] || parser.tags.labels[label];
    if (!ref) {
        if (!parser.tags.refUpdate) {
            parser.tags.redo = true;
        }
        ref = new Tags_js_1.Label();
    }
    var tag = ref.tag;
    if (eqref) {
        tag = parser.tags.formatTag(tag);
    }
    var node = parser.create('node', 'mrow', ParseUtil_js_1.default.internalMath(parser, tag), {
        href: parser.tags.formatUrl(ref.id, parser.options.baseURL), 'class': 'MathJax_ref'
    });
    parser.Push(node);
};
BaseMethods.Macro = function (parser, name, macro, argcount, def) {
    if (argcount) {
        var args = [];
        if (def != null) {
            var optional = parser.GetBrackets(name);
            args.push(optional == null ? def : optional);
        }
        for (var i = args.length; i < argcount; i++) {
            args.push(parser.GetArgument(name));
        }
        macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);
    }
    parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));
    parser.i = 0;
    ParseUtil_js_1.default.checkMaxMacros(parser);
};
BaseMethods.MathChoice = function (parser, name) {
    var D = parser.ParseArg(name);
    var T = parser.ParseArg(name);
    var S = parser.ParseArg(name);
    var SS = parser.ParseArg(name);
    parser.Push(parser.create('node', 'MathChoice', [D, T, S, SS]));
};
exports["default"] = BaseMethods;
//# sourceMappingURL=BaseMethods.js.map

/***/ }),

/***/ 1186:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BboxConfiguration = exports.BboxMethods = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
exports.BboxMethods = {};
exports.BboxMethods.BBox = function (parser, name) {
    var bbox = parser.GetBrackets(name, '');
    var math = parser.ParseArg(name);
    var parts = bbox.split(/,/);
    var def, background, style;
    for (var i = 0, m = parts.length; i < m; i++) {
        var part = parts[i].trim();
        var match = part.match(/^(\.\d+|\d+(\.\d*)?)(pt|em|ex|mu|px|in|cm|mm)$/);
        if (match) {
            if (def) {
                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Padding', name);
            }
            var pad = BBoxPadding(match[1] + match[3]);
            if (pad) {
                def = {
                    height: '+' + pad,
                    depth: '+' + pad,
                    lspace: pad,
                    width: '+' + (2 * parseInt(match[1], 10)) + match[3]
                };
            }
        }
        else if (part.match(/^([a-z0-9]+|\#[0-9a-f]{6}|\#[0-9a-f]{3})$/i)) {
            if (background) {
                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Background', name);
            }
            background = part;
        }
        else if (part.match(/^[-a-z]+:/i)) {
            if (style) {
                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Style', name);
            }
            style = BBoxStyle(part);
        }
        else if (part !== '') {
            throw new TexError_js_1.default('InvalidBBoxProperty', '"%1" doesn\'t look like a color, a padding dimension, or a style', part);
        }
    }
    if (def) {
        math = parser.create('node', 'mpadded', [math], def);
    }
    if (background || style) {
        def = {};
        if (background) {
            Object.assign(def, { mathbackground: background });
        }
        if (style) {
            Object.assign(def, { style: style });
        }
        math = parser.create('node', 'mstyle', [math], def);
    }
    parser.Push(math);
};
var BBoxStyle = function (styles) {
    return styles;
};
var BBoxPadding = function (pad) {
    return pad;
};
new SymbolMap_js_1.CommandMap('bbox', { bbox: 'BBox' }, exports.BboxMethods);
exports.BboxConfiguration = Configuration_js_1.Configuration.create('bbox', { handler: { macro: ['bbox'] } });
//# sourceMappingURL=BboxConfiguration.js.map

/***/ }),

/***/ 8603:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BoldsymbolConfiguration = exports.rewriteBoldTokens = exports.createBoldToken = exports.BoldsymbolMethods = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexConstants_js_1 = __webpack_require__(8317);
var SymbolMap_js_1 = __webpack_require__(9140);
var NodeFactory_js_1 = __webpack_require__(8929);
var BOLDVARIANT = {};
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.NORMAL] = TexConstants_js_1.TexConstant.Variant.BOLD;
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.ITALIC] = TexConstants_js_1.TexConstant.Variant.BOLDITALIC;
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.FRAKTUR] = TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR;
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.SCRIPT] = TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT;
BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.SANSSERIF] = TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF;
BOLDVARIANT['-tex-calligraphic'] = '-tex-bold-calligraphic';
BOLDVARIANT['-tex-oldstyle'] = '-tex-bold-oldstyle';
BOLDVARIANT['-tex-mathit'] = TexConstants_js_1.TexConstant.Variant.BOLDITALIC;
exports.BoldsymbolMethods = {};
exports.BoldsymbolMethods.Boldsymbol = function (parser, name) {
    var boldsymbol = parser.stack.env['boldsymbol'];
    parser.stack.env['boldsymbol'] = true;
    var mml = parser.ParseArg(name);
    parser.stack.env['boldsymbol'] = boldsymbol;
    parser.Push(mml);
};
new SymbolMap_js_1.CommandMap('boldsymbol', { boldsymbol: 'Boldsymbol' }, exports.BoldsymbolMethods);
function createBoldToken(factory, kind, def, text) {
    var token = NodeFactory_js_1.NodeFactory.createToken(factory, kind, def, text);
    if (kind !== 'mtext' &&
        factory.configuration.parser.stack.env['boldsymbol']) {
        NodeUtil_js_1.default.setProperty(token, 'fixBold', true);
        factory.configuration.addNode('fixBold', token);
    }
    return token;
}
exports.createBoldToken = createBoldToken;
function rewriteBoldTokens(arg) {
    var e_1, _a;
    try {
        for (var _b = __values(arg.data.getList('fixBold')), _c = _b.next(); !_c.done; _c = _b.next()) {
            var node = _c.value;
            if (NodeUtil_js_1.default.getProperty(node, 'fixBold')) {
                var variant = NodeUtil_js_1.default.getAttribute(node, 'mathvariant');
                if (variant == null) {
                    NodeUtil_js_1.default.setAttribute(node, 'mathvariant', TexConstants_js_1.TexConstant.Variant.BOLD);
                }
                else {
                    NodeUtil_js_1.default.setAttribute(node, 'mathvariant', BOLDVARIANT[variant] || variant);
                }
                NodeUtil_js_1.default.removeProperties(node, 'fixBold');
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
exports.rewriteBoldTokens = rewriteBoldTokens;
exports.BoldsymbolConfiguration = Configuration_js_1.Configuration.create('boldsymbol', {
    handler: { macro: ['boldsymbol'] },
    nodes: { 'token': createBoldToken },
    postprocessors: [rewriteBoldTokens]
});
//# sourceMappingURL=BoldsymbolConfiguration.js.map

/***/ }),

/***/ 6538:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BraketConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var BraketItems_js_1 = __webpack_require__(7191);
__webpack_require__(2608);
exports.BraketConfiguration = Configuration_js_1.Configuration.create('braket', {
    handler: {
        character: ['Braket-characters'],
        macro: ['Braket-macros']
    },
    items: (_a = {},
        _a[BraketItems_js_1.BraketItem.prototype.kind] = BraketItems_js_1.BraketItem,
        _a)
});
//# sourceMappingURL=BraketConfiguration.js.map

/***/ }),

/***/ 7191:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BraketItem = void 0;
var StackItem_js_1 = __webpack_require__(8292);
var MmlNode_js_1 = __webpack_require__(9007);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var BraketItem = (function (_super) {
    __extends(BraketItem, _super);
    function BraketItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BraketItem.prototype, "kind", {
        get: function () {
            return 'braket';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BraketItem.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    BraketItem.prototype.checkItem = function (item) {
        if (item.isKind('close')) {
            return [[this.factory.create('mml', this.toMml())], true];
        }
        if (item.isKind('mml')) {
            this.Push(item.toMml());
            if (this.getProperty('single')) {
                return [[this.toMml()], true];
            }
            return StackItem_js_1.BaseItem.fail;
        }
        return _super.prototype.checkItem.call(this, item);
    };
    BraketItem.prototype.toMml = function () {
        var inner = _super.prototype.toMml.call(this);
        var open = this.getProperty('open');
        var close = this.getProperty('close');
        if (this.getProperty('stretchy')) {
            return ParseUtil_js_1.default.fenced(this.factory.configuration, open, inner, close);
        }
        var attrs = { fence: true, stretchy: false, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.OPEN };
        var openNode = this.create('token', 'mo', attrs, open);
        attrs.texClass = MmlNode_js_1.TEXCLASS.CLOSE;
        var closeNode = this.create('token', 'mo', attrs, close);
        var mrow = this.create('node', 'mrow', [openNode, inner, closeNode], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.INNER });
        return mrow;
    };
    return BraketItem;
}(StackItem_js_1.BaseItem));
exports.BraketItem = BraketItem;
//# sourceMappingURL=BraketItems.js.map

/***/ }),

/***/ 2608:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var SymbolMap_js_1 = __webpack_require__(9140);
var BraketMethods_js_1 = __importDefault(__webpack_require__(8667));
new SymbolMap_js_1.CommandMap('Braket-macros', {
    bra: ['Macro', '{\\langle {#1} \\vert}', 1],
    ket: ['Macro', '{\\vert {#1} \\rangle}', 1],
    braket: ['Braket', '\u27E8', '\u27E9', false, Infinity],
    'set': ['Braket', '{', '}', false, 1],
    Bra: ['Macro', '{\\left\\langle {#1} \\right\\vert}', 1],
    Ket: ['Macro', '{\\left\\vert {#1} \\right\\rangle}', 1],
    Braket: ['Braket', '\u27E8', '\u27E9', true, Infinity],
    Set: ['Braket', '{', '}', true, 1],
    ketbra: ['Macro', '{\\vert {#1} \\rangle\\langle {#2} \\vert}', 2],
    Ketbra: ['Macro', '{\\left\\vert {#1} \\right\\rangle\\left\\langle {#2} \\right\\vert}', 2],
    '|': 'Bar'
}, BraketMethods_js_1.default);
new SymbolMap_js_1.MacroMap('Braket-characters', {
    '|': 'Bar'
}, BraketMethods_js_1.default);
//# sourceMappingURL=BraketMappings.js.map

/***/ }),

/***/ 8667:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var MmlNode_js_1 = __webpack_require__(9007);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var BraketMethods = {};
BraketMethods.Macro = BaseMethods_js_1.default.Macro;
BraketMethods.Braket = function (parser, _name, open, close, stretchy, barmax) {
    var next = parser.GetNext();
    if (next === '') {
        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
    }
    var single = true;
    if (next === '{') {
        parser.i++;
        single = false;
    }
    parser.Push(parser.itemFactory.create('braket')
        .setProperties({ barmax: barmax, barcount: 0, open: open,
        close: close, stretchy: stretchy, single: single }));
};
BraketMethods.Bar = function (parser, name) {
    var c = name === '|' ? '|' : '\u2225';
    var top = parser.stack.Top();
    if (top.kind !== 'braket' ||
        top.getProperty('barcount') >= top.getProperty('barmax')) {
        var mml = parser.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.ORD, stretchy: false }, c);
        parser.Push(mml);
        return;
    }
    if (c === '|' && parser.GetNext() === '|') {
        parser.i++;
        c = '\u2225';
    }
    var stretchy = top.getProperty('stretchy');
    if (!stretchy) {
        var node_1 = parser.create('token', 'mo', { stretchy: false, braketbar: true }, c);
        parser.Push(node_1);
        return;
    }
    var node = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.CLOSE });
    parser.Push(node);
    top.setProperty('barcount', top.getProperty('barcount') + 1);
    node = parser.create('token', 'mo', { stretchy: true, braketbar: true }, c);
    parser.Push(node);
    node = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OPEN });
    parser.Push(node);
};
exports["default"] = BraketMethods;
//# sourceMappingURL=BraketMethods.js.map

/***/ }),

/***/ 9499:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BussproofsConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var BussproofsItems_js_1 = __webpack_require__(3980);
var BussproofsUtil_js_1 = __webpack_require__(1933);
__webpack_require__(8620);
exports.BussproofsConfiguration = Configuration_js_1.Configuration.create('bussproofs', {
    handler: {
        macro: ['Bussproofs-macros'],
        environment: ['Bussproofs-environments']
    },
    items: (_a = {},
        _a[BussproofsItems_js_1.ProofTreeItem.prototype.kind] = BussproofsItems_js_1.ProofTreeItem,
        _a),
    preprocessors: [
        [BussproofsUtil_js_1.saveDocument, 1]
    ],
    postprocessors: [
        [BussproofsUtil_js_1.clearDocument, 3],
        [BussproofsUtil_js_1.makeBsprAttributes, 2],
        [BussproofsUtil_js_1.balanceRules, 1]
    ]
});
//# sourceMappingURL=BussproofsConfiguration.js.map

/***/ }),

/***/ 3980:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProofTreeItem = void 0;
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var StackItem_js_1 = __webpack_require__(8292);
var Stack_js_1 = __importDefault(__webpack_require__(9497));
var BussproofsUtil = __importStar(__webpack_require__(1933));
var ProofTreeItem = (function (_super) {
    __extends(ProofTreeItem, _super);
    function ProofTreeItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.leftLabel = null;
        _this.rigthLabel = null;
        _this.innerStack = new Stack_js_1.default(_this.factory, {}, true);
        return _this;
    }
    Object.defineProperty(ProofTreeItem.prototype, "kind", {
        get: function () {
            return 'proofTree';
        },
        enumerable: false,
        configurable: true
    });
    ProofTreeItem.prototype.checkItem = function (item) {
        if (item.isKind('end') && item.getName() === 'prooftree') {
            var node = this.toMml();
            BussproofsUtil.setProperty(node, 'proof', true);
            return [[this.factory.create('mml', node), item], true];
        }
        if (item.isKind('stop')) {
            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
        }
        this.innerStack.Push(item);
        return StackItem_js_1.BaseItem.fail;
    };
    ProofTreeItem.prototype.toMml = function () {
        var tree = _super.prototype.toMml.call(this);
        var start = this.innerStack.Top();
        if (start.isKind('start') && !start.Size()) {
            return tree;
        }
        this.innerStack.Push(this.factory.create('stop'));
        var prefix = this.innerStack.Top().toMml();
        return this.create('node', 'mrow', [prefix, tree], {});
    };
    return ProofTreeItem;
}(StackItem_js_1.BaseItem));
exports.ProofTreeItem = ProofTreeItem;
//# sourceMappingURL=BussproofsItems.js.map

/***/ }),

/***/ 8620:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var BussproofsMethods_js_1 = __importDefault(__webpack_require__(4934));
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var SymbolMap_js_1 = __webpack_require__(9140);
new SymbolMap_js_1.CommandMap('Bussproofs-macros', {
    AxiomC: 'Axiom',
    UnaryInfC: ['Inference', 1],
    BinaryInfC: ['Inference', 2],
    TrinaryInfC: ['Inference', 3],
    QuaternaryInfC: ['Inference', 4],
    QuinaryInfC: ['Inference', 5],
    RightLabel: ['Label', 'right'],
    LeftLabel: ['Label', 'left'],
    AXC: 'Axiom',
    UIC: ['Inference', 1],
    BIC: ['Inference', 2],
    TIC: ['Inference', 3],
    RL: ['Label', 'right'],
    LL: ['Label', 'left'],
    noLine: ['SetLine', 'none', false],
    singleLine: ['SetLine', 'solid', false],
    solidLine: ['SetLine', 'solid', false],
    dashedLine: ['SetLine', 'dashed', false],
    alwaysNoLine: ['SetLine', 'none', true],
    alwaysSingleLine: ['SetLine', 'solid', true],
    alwaysSolidLine: ['SetLine', 'solid', true],
    alwaysDashedLine: ['SetLine', 'dashed', true],
    rootAtTop: ['RootAtTop', true],
    alwaysRootAtTop: ['RootAtTop', true],
    rootAtBottom: ['RootAtTop', false],
    alwaysRootAtBottom: ['RootAtTop', false],
    fCenter: 'FCenter',
    Axiom: 'AxiomF',
    UnaryInf: ['InferenceF', 1],
    BinaryInf: ['InferenceF', 2],
    TrinaryInf: ['InferenceF', 3],
    QuaternaryInf: ['InferenceF', 4],
    QuinaryInf: ['InferenceF', 5]
}, BussproofsMethods_js_1.default);
new SymbolMap_js_1.EnvironmentMap('Bussproofs-environments', ParseMethods_js_1.default.environment, {
    prooftree: ['Prooftree', null, false]
}, BussproofsMethods_js_1.default);
//# sourceMappingURL=BussproofsMappings.js.map

/***/ }),

/***/ 4934:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var BussproofsUtil = __importStar(__webpack_require__(1933));
var BussproofsMethods = {};
BussproofsMethods.Prooftree = function (parser, begin) {
    parser.Push(begin);
    var newItem = parser.itemFactory.create('proofTree').
        setProperties({ name: begin.getName(),
        line: 'solid', currentLine: 'solid', rootAtTop: false });
    return newItem;
};
BussproofsMethods.Axiom = function (parser, name) {
    var top = parser.stack.Top();
    if (top.kind !== 'proofTree') {
        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
    }
    var content = paddedContent(parser, parser.GetArgument(name));
    BussproofsUtil.setProperty(content, 'axiom', true);
    top.Push(content);
};
var paddedContent = function (parser, content) {
    var nodes = ParseUtil_js_1.default.internalMath(parser, ParseUtil_js_1.default.trimSpaces(content), 0);
    if (!nodes[0].childNodes[0].childNodes.length) {
        return parser.create('node', 'mrow', []);
    }
    var lpad = parser.create('node', 'mspace', [], { width: '.5ex' });
    var rpad = parser.create('node', 'mspace', [], { width: '.5ex' });
    return parser.create('node', 'mrow', __spreadArray(__spreadArray([lpad], __read(nodes), false), [rpad], false));
};
BussproofsMethods.Inference = function (parser, name, n) {
    var top = parser.stack.Top();
    if (top.kind !== 'proofTree') {
        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
    }
    if (top.Size() < n) {
        throw new TexError_js_1.default('BadProofTree', 'Proof tree badly specified.');
    }
    var rootAtTop = top.getProperty('rootAtTop');
    var childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;
    var children = [];
    do {
        if (children.length) {
            children.unshift(parser.create('node', 'mtd', [], {}));
        }
        children.unshift(parser.create('node', 'mtd', [top.Pop()], { 'rowalign': (rootAtTop ? 'top' : 'bottom') }));
        n--;
    } while (n > 0);
    var row = parser.create('node', 'mtr', children, {});
    var table = parser.create('node', 'mtable', [row], { framespacing: '0 0' });
    var conclusion = paddedContent(parser, parser.GetArgument(name));
    var style = top.getProperty('currentLine');
    if (style !== top.getProperty('line')) {
        top.setProperty('currentLine', top.getProperty('line'));
    }
    var rule = createRule(parser, table, [conclusion], top.getProperty('left'), top.getProperty('right'), style, rootAtTop);
    top.setProperty('left', null);
    top.setProperty('right', null);
    BussproofsUtil.setProperty(rule, 'inference', childCount);
    parser.configuration.addNode('inference', rule);
    top.Push(rule);
};
function createRule(parser, premise, conclusions, left, right, style, rootAtTop) {
    var upper = parser.create('node', 'mtr', [parser.create('node', 'mtd', [premise], {})], {});
    var lower = parser.create('node', 'mtr', [parser.create('node', 'mtd', conclusions, {})], {});
    var rule = parser.create('node', 'mtable', rootAtTop ? [lower, upper] : [upper, lower], { align: 'top 2', rowlines: style, framespacing: '0 0' });
    BussproofsUtil.setProperty(rule, 'inferenceRule', rootAtTop ? 'up' : 'down');
    var leftLabel, rightLabel;
    if (left) {
        leftLabel = parser.create('node', 'mpadded', [left], { height: '+.5em', width: '+.5em', voffset: '-.15em' });
        BussproofsUtil.setProperty(leftLabel, 'prooflabel', 'left');
    }
    if (right) {
        rightLabel = parser.create('node', 'mpadded', [right], { height: '+.5em', width: '+.5em', voffset: '-.15em' });
        BussproofsUtil.setProperty(rightLabel, 'prooflabel', 'right');
    }
    var children, label;
    if (left && right) {
        children = [leftLabel, rule, rightLabel];
        label = 'both';
    }
    else if (left) {
        children = [leftLabel, rule];
        label = 'left';
    }
    else if (right) {
        children = [rule, rightLabel];
        label = 'right';
    }
    else {
        return rule;
    }
    rule = parser.create('node', 'mrow', children);
    BussproofsUtil.setProperty(rule, 'labelledRule', label);
    return rule;
}
BussproofsMethods.Label = function (parser, name, side) {
    var top = parser.stack.Top();
    if (top.kind !== 'proofTree') {
        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
    }
    var content = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), 0);
    var label = (content.length > 1) ?
        parser.create('node', 'mrow', content, {}) : content[0];
    top.setProperty(side, label);
};
BussproofsMethods.SetLine = function (parser, _name, style, always) {
    var top = parser.stack.Top();
    if (top.kind !== 'proofTree') {
        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
    }
    top.setProperty('currentLine', style);
    if (always) {
        top.setProperty('line', style);
    }
};
BussproofsMethods.RootAtTop = function (parser, _name, where) {
    var top = parser.stack.Top();
    if (top.kind !== 'proofTree') {
        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
    }
    top.setProperty('rootAtTop', where);
};
BussproofsMethods.AxiomF = function (parser, name) {
    var top = parser.stack.Top();
    if (top.kind !== 'proofTree') {
        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
    }
    var line = parseFCenterLine(parser, name);
    BussproofsUtil.setProperty(line, 'axiom', true);
    top.Push(line);
};
function parseFCenterLine(parser, name) {
    var dollar = parser.GetNext();
    if (dollar !== '$') {
        throw new TexError_js_1.default('IllegalUseOfCommand', 'Use of %1 does not match it\'s definition.', name);
    }
    parser.i++;
    var axiom = parser.GetUpTo(name, '$');
    if (axiom.indexOf('\\fCenter') === -1) {
        throw new TexError_js_1.default('IllegalUseOfCommand', 'Missing \\fCenter in %1.', name);
    }
    var _a = __read(axiom.split('\\fCenter'), 2), prem = _a[0], conc = _a[1];
    var premise = (new TexParser_js_1.default(prem, parser.stack.env, parser.configuration)).mml();
    var conclusion = (new TexParser_js_1.default(conc, parser.stack.env, parser.configuration)).mml();
    var fcenter = (new TexParser_js_1.default('\\fCenter', parser.stack.env, parser.configuration)).mml();
    var left = parser.create('node', 'mtd', [premise], {});
    var middle = parser.create('node', 'mtd', [fcenter], {});
    var right = parser.create('node', 'mtd', [conclusion], {});
    var row = parser.create('node', 'mtr', [left, middle, right], {});
    var table = parser.create('node', 'mtable', [row], { columnspacing: '.5ex', columnalign: 'center 2' });
    BussproofsUtil.setProperty(table, 'sequent', true);
    parser.configuration.addNode('sequent', row);
    return table;
}
BussproofsMethods.FCenter = function (_parser, _name) { };
BussproofsMethods.InferenceF = function (parser, name, n) {
    var top = parser.stack.Top();
    if (top.kind !== 'proofTree') {
        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
    }
    if (top.Size() < n) {
        throw new TexError_js_1.default('BadProofTree', 'Proof tree badly specified.');
    }
    var rootAtTop = top.getProperty('rootAtTop');
    var childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;
    var children = [];
    do {
        if (children.length) {
            children.unshift(parser.create('node', 'mtd', [], {}));
        }
        children.unshift(parser.create('node', 'mtd', [top.Pop()], { 'rowalign': (rootAtTop ? 'top' : 'bottom') }));
        n--;
    } while (n > 0);
    var row = parser.create('node', 'mtr', children, {});
    var table = parser.create('node', 'mtable', [row], { framespacing: '0 0' });
    var conclusion = parseFCenterLine(parser, name);
    var style = top.getProperty('currentLine');
    if (style !== top.getProperty('line')) {
        top.setProperty('currentLine', top.getProperty('line'));
    }
    var rule = createRule(parser, table, [conclusion], top.getProperty('left'), top.getProperty('right'), style, rootAtTop);
    top.setProperty('left', null);
    top.setProperty('right', null);
    BussproofsUtil.setProperty(rule, 'inference', childCount);
    parser.configuration.addNode('inference', rule);
    top.Push(rule);
};
exports["default"] = BussproofsMethods;
//# sourceMappingURL=BussproofsMethods.js.map

/***/ }),

/***/ 1933:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.clearDocument = exports.saveDocument = exports.makeBsprAttributes = exports.removeProperty = exports.getProperty = exports.setProperty = exports.balanceRules = void 0;
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var doc = null;
var item = null;
var getBBox = function (node) {
    item.root = node;
    var width = doc.outputJax.getBBox(item, doc).w;
    return width;
};
var getRule = function (node) {
    var i = 0;
    while (node && !NodeUtil_js_1.default.isType(node, 'mtable')) {
        if (NodeUtil_js_1.default.isType(node, 'text')) {
            return null;
        }
        if (NodeUtil_js_1.default.isType(node, 'mrow')) {
            node = node.childNodes[0];
            i = 0;
            continue;
        }
        node = node.parent.childNodes[i];
        i++;
    }
    return node;
};
var getPremises = function (rule, direction) {
    return rule.childNodes[direction === 'up' ? 1 : 0].childNodes[0].
        childNodes[0].childNodes[0].childNodes[0];
};
var getPremise = function (premises, n) {
    return premises.childNodes[n].childNodes[0].childNodes[0];
};
var firstPremise = function (premises) {
    return getPremise(premises, 0);
};
var lastPremise = function (premises) {
    return getPremise(premises, premises.childNodes.length - 1);
};
var getConclusion = function (rule, direction) {
    return rule.childNodes[direction === 'up' ? 0 : 1].childNodes[0].childNodes[0].childNodes[0];
};
var getColumn = function (inf) {
    while (inf && !NodeUtil_js_1.default.isType(inf, 'mtd')) {
        inf = inf.parent;
    }
    return inf;
};
var nextSibling = function (inf) {
    return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) + 1];
};
var previousSibling = function (inf) {
    return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) - 1];
};
var getParentInf = function (inf) {
    while (inf && (0, exports.getProperty)(inf, 'inference') == null) {
        inf = inf.parent;
    }
    return inf;
};
var getSpaces = function (inf, rule, right) {
    if (right === void 0) { right = false; }
    var result = 0;
    if (inf === rule) {
        return result;
    }
    if (inf !== rule.parent) {
        var children_1 = inf.childNodes;
        var index_1 = right ? children_1.length - 1 : 0;
        if (NodeUtil_js_1.default.isType(children_1[index_1], 'mspace')) {
            result += getBBox(children_1[index_1]);
        }
        inf = rule.parent;
    }
    if (inf === rule) {
        return result;
    }
    var children = inf.childNodes;
    var index = right ? children.length - 1 : 0;
    if (children[index] !== rule) {
        result += getBBox(children[index]);
    }
    return result;
};
var adjustValue = function (inf, right) {
    if (right === void 0) { right = false; }
    var rule = getRule(inf);
    var conc = getConclusion(rule, (0, exports.getProperty)(rule, 'inferenceRule'));
    var w = getSpaces(inf, rule, right);
    var x = getBBox(rule);
    var y = getBBox(conc);
    return w + ((x - y) / 2);
};
var addSpace = function (config, inf, space, right) {
    if (right === void 0) { right = false; }
    if ((0, exports.getProperty)(inf, 'inferenceRule') ||
        (0, exports.getProperty)(inf, 'labelledRule')) {
        var mrow = config.nodeFactory.create('node', 'mrow');
        inf.parent.replaceChild(mrow, inf);
        mrow.setChildren([inf]);
        moveProperties(inf, mrow);
        inf = mrow;
    }
    var index = right ? inf.childNodes.length - 1 : 0;
    var mspace = inf.childNodes[index];
    if (NodeUtil_js_1.default.isType(mspace, 'mspace')) {
        NodeUtil_js_1.default.setAttribute(mspace, 'width', ParseUtil_js_1.default.Em(ParseUtil_js_1.default.dimen2em(NodeUtil_js_1.default.getAttribute(mspace, 'width')) + space));
        return;
    }
    mspace = config.nodeFactory.create('node', 'mspace', [], { width: ParseUtil_js_1.default.Em(space) });
    if (right) {
        inf.appendChild(mspace);
        return;
    }
    mspace.parent = inf;
    inf.childNodes.unshift(mspace);
};
var moveProperties = function (src, dest) {
    var props = ['inference', 'proof', 'maxAdjust', 'labelledRule'];
    props.forEach(function (x) {
        var value = (0, exports.getProperty)(src, x);
        if (value != null) {
            (0, exports.setProperty)(dest, x, value);
            (0, exports.removeProperty)(src, x);
        }
    });
};
var adjustSequents = function (config) {
    var sequents = config.nodeLists['sequent'];
    if (!sequents) {
        return;
    }
    for (var i = sequents.length - 1, seq = void 0; seq = sequents[i]; i--) {
        if ((0, exports.getProperty)(seq, 'sequentProcessed')) {
            (0, exports.removeProperty)(seq, 'sequentProcessed');
            continue;
        }
        var collect = [];
        var inf = getParentInf(seq);
        if ((0, exports.getProperty)(inf, 'inference') !== 1) {
            continue;
        }
        collect.push(seq);
        while ((0, exports.getProperty)(inf, 'inference') === 1) {
            inf = getRule(inf);
            var premise = firstPremise(getPremises(inf, (0, exports.getProperty)(inf, 'inferenceRule')));
            var sequent = ((0, exports.getProperty)(premise, 'inferenceRule')) ?
                getConclusion(premise, (0, exports.getProperty)(premise, 'inferenceRule')) :
                premise;
            if ((0, exports.getProperty)(sequent, 'sequent')) {
                seq = sequent.childNodes[0];
                collect.push(seq);
                (0, exports.setProperty)(seq, 'sequentProcessed', true);
            }
            inf = premise;
        }
        adjustSequentPairwise(config, collect);
    }
};
var addSequentSpace = function (config, sequent, position, direction, width) {
    var mspace = config.nodeFactory.create('node', 'mspace', [], { width: ParseUtil_js_1.default.Em(width) });
    if (direction === 'left') {
        var row = sequent.childNodes[position].childNodes[0];
        mspace.parent = row;
        row.childNodes.unshift(mspace);
    }
    else {
        sequent.childNodes[position].appendChild(mspace);
    }
    (0, exports.setProperty)(sequent.parent, 'sequentAdjust_' + direction, width);
};
var adjustSequentPairwise = function (config, sequents) {
    var top = sequents.pop();
    while (sequents.length) {
        var bottom = sequents.pop();
        var _a = __read(compareSequents(top, bottom), 2), left = _a[0], right = _a[1];
        if ((0, exports.getProperty)(top.parent, 'axiom')) {
            addSequentSpace(config, left < 0 ? top : bottom, 0, 'left', Math.abs(left));
            addSequentSpace(config, right < 0 ? top : bottom, 2, 'right', Math.abs(right));
        }
        top = bottom;
    }
};
var compareSequents = function (top, bottom) {
    var tr = getBBox(top.childNodes[2]);
    var br = getBBox(bottom.childNodes[2]);
    var tl = getBBox(top.childNodes[0]);
    var bl = getBBox(bottom.childNodes[0]);
    var dl = tl - bl;
    var dr = tr - br;
    return [dl, dr];
};
var balanceRules = function (arg) {
    var e_1, _a;
    item = new arg.document.options.MathItem('', null, arg.math.display);
    var config = arg.data;
    adjustSequents(config);
    var inferences = config.nodeLists['inference'] || [];
    try {
        for (var inferences_1 = __values(inferences), inferences_1_1 = inferences_1.next(); !inferences_1_1.done; inferences_1_1 = inferences_1.next()) {
            var inf = inferences_1_1.value;
            var isProof = (0, exports.getProperty)(inf, 'proof');
            var rule = getRule(inf);
            var premises = getPremises(rule, (0, exports.getProperty)(rule, 'inferenceRule'));
            var premiseF = firstPremise(premises);
            if ((0, exports.getProperty)(premiseF, 'inference')) {
                var adjust_1 = adjustValue(premiseF);
                if (adjust_1) {
                    addSpace(config, premiseF, -adjust_1);
                    var w_1 = getSpaces(inf, rule, false);
                    addSpace(config, inf, adjust_1 - w_1);
                }
            }
            var premiseL = lastPremise(premises);
            if ((0, exports.getProperty)(premiseL, 'inference') == null) {
                continue;
            }
            var adjust = adjustValue(premiseL, true);
            addSpace(config, premiseL, -adjust, true);
            var w = getSpaces(inf, rule, true);
            var maxAdjust = (0, exports.getProperty)(inf, 'maxAdjust');
            if (maxAdjust != null) {
                adjust = Math.max(adjust, maxAdjust);
            }
            var column = void 0;
            if (isProof || !(column = getColumn(inf))) {
                addSpace(config, (0, exports.getProperty)(inf, 'proof') ? inf : inf.parent, adjust - w, true);
                continue;
            }
            var sibling = nextSibling(column);
            if (sibling) {
                var pos = config.nodeFactory.create('node', 'mspace', [], { width: adjust - w + 'em' });
                sibling.appendChild(pos);
                inf.removeProperty('maxAdjust');
                continue;
            }
            var parentRule = getParentInf(column);
            if (!parentRule) {
                continue;
            }
            adjust = (0, exports.getProperty)(parentRule, 'maxAdjust') ?
                Math.max((0, exports.getProperty)(parentRule, 'maxAdjust'), adjust) : adjust;
            (0, exports.setProperty)(parentRule, 'maxAdjust', adjust);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (inferences_1_1 && !inferences_1_1.done && (_a = inferences_1.return)) _a.call(inferences_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
};
exports.balanceRules = balanceRules;
var property_prefix = 'bspr_';
var blacklistedProperties = (_a = {},
    _a[property_prefix + 'maxAdjust'] = true,
    _a);
var setProperty = function (node, property, value) {
    NodeUtil_js_1.default.setProperty(node, property_prefix + property, value);
};
exports.setProperty = setProperty;
var getProperty = function (node, property) {
    return NodeUtil_js_1.default.getProperty(node, property_prefix + property);
};
exports.getProperty = getProperty;
var removeProperty = function (node, property) {
    node.removeProperty(property_prefix + property);
};
exports.removeProperty = removeProperty;
var makeBsprAttributes = function (arg) {
    arg.data.root.walkTree(function (mml, _data) {
        var attr = [];
        mml.getPropertyNames().forEach(function (x) {
            if (!blacklistedProperties[x] && x.match(RegExp('^' + property_prefix))) {
                attr.push(x + ':' + mml.getProperty(x));
            }
        });
        if (attr.length) {
            NodeUtil_js_1.default.setAttribute(mml, 'semantics', attr.join(';'));
        }
    });
};
exports.makeBsprAttributes = makeBsprAttributes;
var saveDocument = function (arg) {
    doc = arg.document;
    if (!('getBBox' in doc.outputJax)) {
        throw Error('The bussproofs extension requires an output jax with a getBBox() method');
    }
};
exports.saveDocument = saveDocument;
var clearDocument = function (_arg) {
    doc = null;
};
exports.clearDocument = clearDocument;
//# sourceMappingURL=BussproofsUtil.js.map

/***/ }),

/***/ 8963:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CancelConfiguration = exports.CancelMethods = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var TexConstants_js_1 = __webpack_require__(8317);
var SymbolMap_js_1 = __webpack_require__(9140);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var EncloseConfiguration_js_1 = __webpack_require__(1428);
exports.CancelMethods = {};
exports.CancelMethods.Cancel = function (parser, name, notation) {
    var attr = parser.GetBrackets(name, '');
    var math = parser.ParseArg(name);
    var def = ParseUtil_js_1.default.keyvalOptions(attr, EncloseConfiguration_js_1.ENCLOSE_OPTIONS);
    def['notation'] = notation;
    parser.Push(parser.create('node', 'menclose', [math], def));
};
exports.CancelMethods.CancelTo = function (parser, name) {
    var attr = parser.GetBrackets(name, '');
    var value = parser.ParseArg(name);
    var math = parser.ParseArg(name);
    var def = ParseUtil_js_1.default.keyvalOptions(attr, EncloseConfiguration_js_1.ENCLOSE_OPTIONS);
    def['notation'] = [TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE,
        TexConstants_js_1.TexConstant.Notation.UPDIAGONALARROW,
        TexConstants_js_1.TexConstant.Notation.NORTHEASTARROW].join(' ');
    value = parser.create('node', 'mpadded', [value], { depth: '-.1em', height: '+.1em', voffset: '.1em' });
    parser.Push(parser.create('node', 'msup', [parser.create('node', 'menclose', [math], def), value]));
};
new SymbolMap_js_1.CommandMap('cancel', {
    cancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE],
    bcancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.DOWNDIAGONALSTRIKE],
    xcancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE + ' ' +
            TexConstants_js_1.TexConstant.Notation.DOWNDIAGONALSTRIKE],
    cancelto: 'CancelTo'
}, exports.CancelMethods);
exports.CancelConfiguration = Configuration_js_1.Configuration.create('cancel', { handler: { macro: ['cancel'] } });
//# sourceMappingURL=CancelConfiguration.js.map

/***/ }),

/***/ 3752:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CasesConfiguration = exports.CasesMethods = exports.CasesTags = exports.CasesBeginItem = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var BaseItems_js_1 = __webpack_require__(1181);
var AmsConfiguration_js_1 = __webpack_require__(8021);
var EmpheqUtil_js_1 = __webpack_require__(6471);
var CasesBeginItem = (function (_super) {
    __extends(CasesBeginItem, _super);
    function CasesBeginItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CasesBeginItem.prototype, "kind", {
        get: function () {
            return 'cases-begin';
        },
        enumerable: false,
        configurable: true
    });
    CasesBeginItem.prototype.checkItem = function (item) {
        if (item.isKind('end') && item.getName() === this.getName()) {
            if (this.getProperty('end')) {
                this.setProperty('end', false);
                return [[], true];
            }
        }
        return _super.prototype.checkItem.call(this, item);
    };
    return CasesBeginItem;
}(BaseItems_js_1.BeginItem));
exports.CasesBeginItem = CasesBeginItem;
var CasesTags = (function (_super) {
    __extends(CasesTags, _super);
    function CasesTags() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.subcounter = 0;
        return _this;
    }
    CasesTags.prototype.start = function (env, taggable, defaultTags) {
        this.subcounter = 0;
        _super.prototype.start.call(this, env, taggable, defaultTags);
    };
    CasesTags.prototype.autoTag = function () {
        if (this.currentTag.tag != null)
            return;
        if (this.currentTag.env === 'subnumcases') {
            if (this.subcounter === 0)
                this.counter++;
            this.subcounter++;
            this.tag(this.formatNumber(this.counter, this.subcounter), false);
        }
        else {
            if (this.subcounter === 0 || this.currentTag.env !== 'numcases-left')
                this.counter++;
            this.tag(this.formatNumber(this.counter), false);
        }
    };
    CasesTags.prototype.formatNumber = function (n, m) {
        if (m === void 0) { m = null; }
        return n.toString() + (m === null ? '' : String.fromCharCode(0x60 + m));
    };
    return CasesTags;
}(AmsConfiguration_js_1.AmsTags));
exports.CasesTags = CasesTags;
exports.CasesMethods = {
    NumCases: function (parser, begin) {
        if (parser.stack.env.closing === begin.getName()) {
            delete parser.stack.env.closing;
            parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));
            var cases = parser.stack.Top();
            var table = cases.Last;
            var original = ParseUtil_js_1.default.copyNode(table, parser);
            var left = cases.getProperty('left');
            EmpheqUtil_js_1.EmpheqUtil.left(table, original, left + '\\empheqlbrace\\,', parser, 'numcases-left');
            parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));
            return null;
        }
        else {
            var left = parser.GetArgument('\\begin{' + begin.getName() + '}');
            begin.setProperty('left', left);
            var array = BaseMethods_js_1.default.EqnArray(parser, begin, true, true, 'll');
            array.arraydef.displaystyle = false;
            array.arraydef.rowspacing = '.2em';
            array.setProperty('numCases', true);
            parser.Push(begin);
            return array;
        }
    },
    Entry: function (parser, name) {
        if (!parser.stack.Top().getProperty('numCases')) {
            return BaseMethods_js_1.default.Entry(parser, name);
        }
        parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));
        var tex = parser.string;
        var braces = 0, i = parser.i, m = tex.length;
        while (i < m) {
            var c = tex.charAt(i);
            if (c === '{') {
                braces++;
                i++;
            }
            else if (c === '}') {
                if (braces === 0) {
                    break;
                }
                else {
                    braces--;
                    i++;
                }
            }
            else if (c === '&' && braces === 0) {
                throw new TexError_js_1.default('ExtraCasesAlignTab', 'Extra alignment tab in text for numcase environment');
            }
            else if (c === '\\' && braces === 0) {
                var cs = (tex.slice(i + 1).match(/^[a-z]+|./i) || [])[0];
                if (cs === '\\' || cs === 'cr' || cs === 'end' || cs === 'label') {
                    break;
                }
                else {
                    i += cs.length;
                }
            }
            else {
                i++;
            }
        }
        var text = tex.substr(parser.i, i - parser.i).replace(/^\s*/, '');
        parser.PushAll(ParseUtil_js_1.default.internalMath(parser, text, 0));
        parser.i = i;
    }
};
new SymbolMap_js_1.EnvironmentMap('cases-env', EmpheqUtil_js_1.EmpheqUtil.environment, {
    numcases: ['NumCases', 'cases'],
    subnumcases: ['NumCases', 'cases']
}, exports.CasesMethods);
new SymbolMap_js_1.MacroMap('cases-macros', {
    '&': 'Entry'
}, exports.CasesMethods);
exports.CasesConfiguration = Configuration_js_1.Configuration.create('cases', {
    handler: {
        environment: ['cases-env'],
        character: ['cases-macros']
    },
    items: (_a = {},
        _a[CasesBeginItem.prototype.kind] = CasesBeginItem,
        _a),
    tags: { 'cases': CasesTags }
});
//# sourceMappingURL=CasesConfiguration.js.map

/***/ }),

/***/ 8227:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CenternotConfiguration = exports.filterCenterOver = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var SymbolMap_js_1 = __webpack_require__(9140);
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
new SymbolMap_js_1.CommandMap('centernot', {
    centerOver: 'CenterOver',
    centernot: ['Macro', '\\centerOver{#1}{{\u29F8}}', 1]
}, {
    CenterOver: function (parser, name) {
        var arg = '{' + parser.GetArgument(name) + '}';
        var over = parser.ParseArg(name);
        var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
        var mml = parser.create('node', 'TeXAtom', [
            new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml(),
            parser.create('node', 'mpadded', [
                parser.create('node', 'mpadded', [over], { width: 0, lspace: '-.5width' }),
                parser.create('node', 'mphantom', [base])
            ], { width: 0, lspace: '-.5width' })
        ]);
        parser.configuration.addNode('centerOver', base);
        parser.Push(mml);
    },
    Macro: BaseMethods_js_1.default.Macro
});
function filterCenterOver(_a) {
    var e_1, _b;
    var data = _a.data;
    try {
        for (var _c = __values(data.getList('centerOver')), _d = _c.next(); !_d.done; _d = _c.next()) {
            var base = _d.value;
            var texClass = NodeUtil_js_1.default.getTexClass(base.childNodes[0].childNodes[0]);
            if (texClass !== null) {
                NodeUtil_js_1.default.setProperties(base.parent.parent.parent.parent.parent.parent, { texClass: texClass });
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
exports.filterCenterOver = filterCenterOver;
exports.CenternotConfiguration = Configuration_js_1.Configuration.create('centernot', {
    handler: { macro: ['centernot'] },
    postprocessors: [filterCenterOver]
});
//# sourceMappingURL=CenternotConfiguration.js.map

/***/ }),

/***/ 5860:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorConfiguration = void 0;
var SymbolMap_js_1 = __webpack_require__(9140);
var Configuration_js_1 = __webpack_require__(9899);
var ColorMethods_js_1 = __webpack_require__(2784);
var ColorUtil_js_1 = __webpack_require__(4207);
new SymbolMap_js_1.CommandMap('color', {
    color: 'Color',
    textcolor: 'TextColor',
    definecolor: 'DefineColor',
    colorbox: 'ColorBox',
    fcolorbox: 'FColorBox'
}, ColorMethods_js_1.ColorMethods);
var config = function (_config, jax) {
    jax.parseOptions.packageData.set('color', { model: new ColorUtil_js_1.ColorModel() });
};
exports.ColorConfiguration = Configuration_js_1.Configuration.create('color', {
    handler: {
        macro: ['color'],
    },
    options: {
        color: {
            padding: '5px',
            borderWidth: '2px'
        }
    },
    config: config
});
//# sourceMappingURL=ColorConfiguration.js.map

/***/ }),

/***/ 7960:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.COLORS = void 0;
exports.COLORS = new Map([
    ['Apricot', '#FBB982'],
    ['Aquamarine', '#00B5BE'],
    ['Bittersweet', '#C04F17'],
    ['Black', '#221E1F'],
    ['Blue', '#2D2F92'],
    ['BlueGreen', '#00B3B8'],
    ['BlueViolet', '#473992'],
    ['BrickRed', '#B6321C'],
    ['Brown', '#792500'],
    ['BurntOrange', '#F7921D'],
    ['CadetBlue', '#74729A'],
    ['CarnationPink', '#F282B4'],
    ['Cerulean', '#00A2E3'],
    ['CornflowerBlue', '#41B0E4'],
    ['Cyan', '#00AEEF'],
    ['Dandelion', '#FDBC42'],
    ['DarkOrchid', '#A4538A'],
    ['Emerald', '#00A99D'],
    ['ForestGreen', '#009B55'],
    ['Fuchsia', '#8C368C'],
    ['Goldenrod', '#FFDF42'],
    ['Gray', '#949698'],
    ['Green', '#00A64F'],
    ['GreenYellow', '#DFE674'],
    ['JungleGreen', '#00A99A'],
    ['Lavender', '#F49EC4'],
    ['LimeGreen', '#8DC73E'],
    ['Magenta', '#EC008C'],
    ['Mahogany', '#A9341F'],
    ['Maroon', '#AF3235'],
    ['Melon', '#F89E7B'],
    ['MidnightBlue', '#006795'],
    ['Mulberry', '#A93C93'],
    ['NavyBlue', '#006EB8'],
    ['OliveGreen', '#3C8031'],
    ['Orange', '#F58137'],
    ['OrangeRed', '#ED135A'],
    ['Orchid', '#AF72B0'],
    ['Peach', '#F7965A'],
    ['Periwinkle', '#7977B8'],
    ['PineGreen', '#008B72'],
    ['Plum', '#92268F'],
    ['ProcessBlue', '#00B0F0'],
    ['Purple', '#99479B'],
    ['RawSienna', '#974006'],
    ['Red', '#ED1B23'],
    ['RedOrange', '#F26035'],
    ['RedViolet', '#A1246B'],
    ['Rhodamine', '#EF559F'],
    ['RoyalBlue', '#0071BC'],
    ['RoyalPurple', '#613F99'],
    ['RubineRed', '#ED017D'],
    ['Salmon', '#F69289'],
    ['SeaGreen', '#3FBC9D'],
    ['Sepia', '#671800'],
    ['SkyBlue', '#46C5DD'],
    ['SpringGreen', '#C6DC67'],
    ['Tan', '#DA9D76'],
    ['TealBlue', '#00AEB3'],
    ['Thistle', '#D883B7'],
    ['Turquoise', '#00B4CE'],
    ['Violet', '#58429B'],
    ['VioletRed', '#EF58A0'],
    ['White', '#FFFFFF'],
    ['WildStrawberry', '#EE2967'],
    ['Yellow', '#FFF200'],
    ['YellowGreen', '#98CC70'],
    ['YellowOrange', '#FAA21A'],
]);
//# sourceMappingURL=ColorConstants.js.map

/***/ }),

/***/ 2784:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorMethods = void 0;
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
function padding(colorPadding) {
    var pad = "+".concat(colorPadding);
    var unit = colorPadding.replace(/^.*?([a-z]*)$/, '$1');
    var pad2 = 2 * parseFloat(pad);
    return {
        width: "+".concat(pad2).concat(unit),
        height: pad,
        depth: pad,
        lspace: colorPadding,
    };
}
exports.ColorMethods = {};
exports.ColorMethods.Color = function (parser, name) {
    var model = parser.GetBrackets(name, '');
    var colorDef = parser.GetArgument(name);
    var colorModel = parser.configuration.packageData.get('color').model;
    var color = colorModel.getColor(model, colorDef);
    var style = parser.itemFactory.create('style')
        .setProperties({ styles: { mathcolor: color } });
    parser.stack.env['color'] = color;
    parser.Push(style);
};
exports.ColorMethods.TextColor = function (parser, name) {
    var model = parser.GetBrackets(name, '');
    var colorDef = parser.GetArgument(name);
    var colorModel = parser.configuration.packageData.get('color').model;
    var color = colorModel.getColor(model, colorDef);
    var old = parser.stack.env['color'];
    parser.stack.env['color'] = color;
    var math = parser.ParseArg(name);
    if (old) {
        parser.stack.env['color'] = old;
    }
    else {
        delete parser.stack.env['color'];
    }
    var node = parser.create('node', 'mstyle', [math], { mathcolor: color });
    parser.Push(node);
};
exports.ColorMethods.DefineColor = function (parser, name) {
    var cname = parser.GetArgument(name);
    var model = parser.GetArgument(name);
    var def = parser.GetArgument(name);
    var colorModel = parser.configuration.packageData.get('color').model;
    colorModel.defineColor(model, cname, def);
};
exports.ColorMethods.ColorBox = function (parser, name) {
    var cname = parser.GetArgument(name);
    var math = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
    var colorModel = parser.configuration.packageData.get('color').model;
    var node = parser.create('node', 'mpadded', math, {
        mathbackground: colorModel.getColor('named', cname)
    });
    NodeUtil_js_1.default.setProperties(node, padding(parser.options.color.padding));
    parser.Push(node);
};
exports.ColorMethods.FColorBox = function (parser, name) {
    var fname = parser.GetArgument(name);
    var cname = parser.GetArgument(name);
    var math = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
    var options = parser.options.color;
    var colorModel = parser.configuration.packageData.get('color').model;
    var node = parser.create('node', 'mpadded', math, {
        mathbackground: colorModel.getColor('named', cname),
        style: "border: ".concat(options.borderWidth, " solid ").concat(colorModel.getColor('named', fname))
    });
    NodeUtil_js_1.default.setProperties(node, padding(options.padding));
    parser.Push(node);
};
//# sourceMappingURL=ColorMethods.js.map

/***/ }),

/***/ 4207:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorModel = void 0;
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var ColorConstants_js_1 = __webpack_require__(7960);
var ColorModelProcessors = new Map();
var ColorModel = (function () {
    function ColorModel() {
        this.userColors = new Map();
    }
    ColorModel.prototype.normalizeColor = function (model, def) {
        if (!model || model === 'named') {
            return def;
        }
        if (ColorModelProcessors.has(model)) {
            var modelProcessor = ColorModelProcessors.get(model);
            return modelProcessor(def);
        }
        throw new TexError_js_1.default('UndefinedColorModel', 'Color model \'%1\' not defined', model);
    };
    ColorModel.prototype.getColor = function (model, def) {
        if (!model || model === 'named') {
            return this.getColorByName(def);
        }
        return this.normalizeColor(model, def);
    };
    ColorModel.prototype.getColorByName = function (name) {
        if (this.userColors.has(name)) {
            return this.userColors.get(name);
        }
        if (ColorConstants_js_1.COLORS.has(name)) {
            return ColorConstants_js_1.COLORS.get(name);
        }
        return name;
    };
    ColorModel.prototype.defineColor = function (model, name, def) {
        var normalized = this.normalizeColor(model, def);
        this.userColors.set(name, normalized);
    };
    return ColorModel;
}());
exports.ColorModel = ColorModel;
ColorModelProcessors.set('rgb', function (rgb) {
    var e_1, _a;
    var rgbParts = rgb.trim().split(/\s*,\s*/);
    var RGB = '#';
    if (rgbParts.length !== 3) {
        throw new TexError_js_1.default('ModelArg1', 'Color values for the %1 model require 3 numbers', 'rgb');
    }
    try {
        for (var rgbParts_1 = __values(rgbParts), rgbParts_1_1 = rgbParts_1.next(); !rgbParts_1_1.done; rgbParts_1_1 = rgbParts_1.next()) {
            var rgbPart = rgbParts_1_1.value;
            if (!rgbPart.match(/^(\d+(\.\d*)?|\.\d+)$/)) {
                throw new TexError_js_1.default('InvalidDecimalNumber', 'Invalid decimal number');
            }
            var n = parseFloat(rgbPart);
            if (n < 0 || n > 1) {
                throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'rgb', '0', '1');
            }
            var pn = Math.floor(n * 255).toString(16);
            if (pn.length < 2) {
                pn = '0' + pn;
            }
            RGB += pn;
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (rgbParts_1_1 && !rgbParts_1_1.done && (_a = rgbParts_1.return)) _a.call(rgbParts_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return RGB;
});
ColorModelProcessors.set('RGB', function (rgb) {
    var e_2, _a;
    var rgbParts = rgb.trim().split(/\s*,\s*/);
    var RGB = '#';
    if (rgbParts.length !== 3) {
        throw new TexError_js_1.default('ModelArg1', 'Color values for the %1 model require 3 numbers', 'RGB');
    }
    try {
        for (var rgbParts_2 = __values(rgbParts), rgbParts_2_1 = rgbParts_2.next(); !rgbParts_2_1.done; rgbParts_2_1 = rgbParts_2.next()) {
            var rgbPart = rgbParts_2_1.value;
            if (!rgbPart.match(/^\d+$/)) {
                throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
            }
            var n = parseInt(rgbPart);
            if (n > 255) {
                throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'RGB', '0', '255');
            }
            var pn = n.toString(16);
            if (pn.length < 2) {
                pn = '0' + pn;
            }
            RGB += pn;
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (rgbParts_2_1 && !rgbParts_2_1.done && (_a = rgbParts_2.return)) _a.call(rgbParts_2);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return RGB;
});
ColorModelProcessors.set('gray', function (gray) {
    if (!gray.match(/^\s*(\d+(\.\d*)?|\.\d+)\s*$/)) {
        throw new TexError_js_1.default('InvalidDecimalNumber', 'Invalid decimal number');
    }
    var n = parseFloat(gray);
    if (n < 0 || n > 1) {
        throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'gray', '0', '1');
    }
    var pn = Math.floor(n * 255).toString(16);
    if (pn.length < 2) {
        pn = '0' + pn;
    }
    return "#".concat(pn).concat(pn).concat(pn);
});
//# sourceMappingURL=ColorUtil.js.map

/***/ }),

/***/ 6648:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColortblConfiguration = exports.ColorArrayItem = void 0;
var BaseItems_js_1 = __webpack_require__(1181);
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var ColorArrayItem = (function (_super) {
    __extends(ColorArrayItem, _super);
    function ColorArrayItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.color = {
            cell: '',
            row: '',
            col: []
        };
        _this.hasColor = false;
        return _this;
    }
    ColorArrayItem.prototype.EndEntry = function () {
        _super.prototype.EndEntry.call(this);
        var cell = this.row[this.row.length - 1];
        var color = this.color.cell || this.color.row || this.color.col[this.row.length - 1];
        if (color) {
            cell.attributes.set('mathbackground', color);
            this.color.cell = '';
            this.hasColor = true;
        }
    };
    ColorArrayItem.prototype.EndRow = function () {
        _super.prototype.EndRow.call(this);
        this.color.row = '';
    };
    ColorArrayItem.prototype.createMml = function () {
        var mml = _super.prototype.createMml.call(this);
        var table = (mml.isKind('mrow') ? mml.childNodes[1] : mml);
        if (table.isKind('menclose')) {
            table = table.childNodes[0].childNodes[0];
        }
        if (this.hasColor && table.attributes.get('frame') === 'none') {
            table.attributes.set('frame', '');
        }
        return mml;
    };
    return ColorArrayItem;
}(BaseItems_js_1.ArrayItem));
exports.ColorArrayItem = ColorArrayItem;
new SymbolMap_js_1.CommandMap('colortbl', {
    cellcolor: ['TableColor', 'cell'],
    rowcolor: ['TableColor', 'row'],
    columncolor: ['TableColor', 'col']
}, {
    TableColor: function (parser, name, type) {
        var lookup = parser.configuration.packageData.get('color').model;
        var model = parser.GetBrackets(name, '');
        var color = lookup.getColor(model, parser.GetArgument(name));
        var top = parser.stack.Top();
        if (!(top instanceof ColorArrayItem)) {
            throw new TexError_js_1.default('UnsupportedTableColor', 'Unsupported use of %1', parser.currentCS);
        }
        if (type === 'col') {
            if (top.table.length) {
                throw new TexError_js_1.default('ColumnColorNotTop', '%1 must be in the top row', name);
            }
            top.color.col[top.row.length] = color;
            if (parser.GetBrackets(name, '')) {
                parser.GetBrackets(name, '');
            }
        }
        else {
            top.color[type] = color;
            if (type === 'row' && (top.Size() || top.row.length)) {
                throw new TexError_js_1.default('RowColorNotFirst', '%1 must be at the beginning of a row', name);
            }
        }
    }
});
var config = function (config, jax) {
    if (!jax.parseOptions.packageData.has('color')) {
        Configuration_js_1.ConfigurationHandler.get('color').config(config, jax);
    }
};
exports.ColortblConfiguration = Configuration_js_1.Configuration.create('colortbl', {
    handler: { macro: ['colortbl'] },
    items: { 'array': ColorArrayItem },
    priority: 10,
    config: [config, 10]
});
//# sourceMappingURL=ColortblConfiguration.js.map

/***/ }),

/***/ 6628:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorConfiguration = exports.ColorV2Methods = void 0;
var SymbolMap_js_1 = __webpack_require__(9140);
var Configuration_js_1 = __webpack_require__(9899);
exports.ColorV2Methods = {
    Color: function (parser, name) {
        var color = parser.GetArgument(name);
        var old = parser.stack.env['color'];
        parser.stack.env['color'] = color;
        var math = parser.ParseArg(name);
        if (old) {
            parser.stack.env['color'] = old;
        }
        else {
            delete parser.stack.env['color'];
        }
        var node = parser.create('node', 'mstyle', [math], { mathcolor: color });
        parser.Push(node);
    }
};
new SymbolMap_js_1.CommandMap('colorv2', { color: 'Color' }, exports.ColorV2Methods);
exports.ColorConfiguration = Configuration_js_1.Configuration.create('colorv2', { handler: { macro: ['colorv2'] } });
//# sourceMappingURL=ColorV2Configuration.js.map

/***/ }),

/***/ 8458:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConfigMacrosConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var Options_js_1 = __webpack_require__(7233);
var SymbolMap_js_1 = __webpack_require__(9140);
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var Symbol_js_1 = __webpack_require__(8803);
var NewcommandMethods_js_1 = __importDefault(__webpack_require__(1110));
var NewcommandItems_js_1 = __webpack_require__(6793);
var MACROSMAP = 'configmacros-map';
var ENVIRONMENTMAP = 'configmacros-env-map';
function configmacrosInit(config) {
    new SymbolMap_js_1.CommandMap(MACROSMAP, {}, {});
    new SymbolMap_js_1.EnvironmentMap(ENVIRONMENTMAP, ParseMethods_js_1.default.environment, {}, {});
    config.append(Configuration_js_1.Configuration.local({
        handler: {
            macro: [MACROSMAP],
            environment: [ENVIRONMENTMAP]
        },
        priority: 3
    }));
}
function configmacrosConfig(_config, jax) {
    configMacros(jax);
    configEnvironments(jax);
}
function configMacros(jax) {
    var e_1, _a;
    var handler = jax.parseOptions.handlers.retrieve(MACROSMAP);
    var macros = jax.parseOptions.options.macros;
    try {
        for (var _b = __values(Object.keys(macros)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var cs = _c.value;
            var def = (typeof macros[cs] === 'string' ? [macros[cs]] : macros[cs]);
            var macro = Array.isArray(def[2]) ?
                new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.MacroWithTemplate, def.slice(0, 2).concat(def[2])) :
                new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.Macro, def);
            handler.add(cs, macro);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
function configEnvironments(jax) {
    var e_2, _a;
    var handler = jax.parseOptions.handlers.retrieve(ENVIRONMENTMAP);
    var environments = jax.parseOptions.options.environments;
    try {
        for (var _b = __values(Object.keys(environments)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var env = _c.value;
            handler.add(env, new Symbol_js_1.Macro(env, NewcommandMethods_js_1.default.BeginEnv, [true].concat(environments[env])));
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_2) throw e_2.error; }
    }
}
exports.ConfigMacrosConfiguration = Configuration_js_1.Configuration.create('configmacros', {
    init: configmacrosInit,
    config: configmacrosConfig,
    items: (_a = {},
        _a[NewcommandItems_js_1.BeginEnvItem.prototype.kind] = NewcommandItems_js_1.BeginEnvItem,
        _a),
    options: {
        macros: (0, Options_js_1.expandable)({}),
        environments: (0, Options_js_1.expandable)({})
    }
});
//# sourceMappingURL=ConfigMacrosConfiguration.js.map

/***/ }),

/***/ 5464:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmpheqConfiguration = exports.EmpheqMethods = exports.EmpheqBeginItem = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var BaseItems_js_1 = __webpack_require__(1181);
var EmpheqUtil_js_1 = __webpack_require__(6471);
var EmpheqBeginItem = (function (_super) {
    __extends(EmpheqBeginItem, _super);
    function EmpheqBeginItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(EmpheqBeginItem.prototype, "kind", {
        get: function () {
            return 'empheq-begin';
        },
        enumerable: false,
        configurable: true
    });
    EmpheqBeginItem.prototype.checkItem = function (item) {
        if (item.isKind('end') && item.getName() === this.getName()) {
            this.setProperty('end', false);
        }
        return _super.prototype.checkItem.call(this, item);
    };
    return EmpheqBeginItem;
}(BaseItems_js_1.BeginItem));
exports.EmpheqBeginItem = EmpheqBeginItem;
exports.EmpheqMethods = {
    Empheq: function (parser, begin) {
        if (parser.stack.env.closing === begin.getName()) {
            delete parser.stack.env.closing;
            parser.Push(parser.itemFactory.create('end').setProperty('name', parser.stack.global.empheq));
            parser.stack.global.empheq = '';
            var empheq = parser.stack.Top();
            EmpheqUtil_js_1.EmpheqUtil.adjustTable(empheq, parser);
            parser.Push(parser.itemFactory.create('end').setProperty('name', 'empheq'));
        }
        else {
            ParseUtil_js_1.default.checkEqnEnv(parser);
            delete parser.stack.global.eqnenv;
            var opts = parser.GetBrackets('\\begin{' + begin.getName() + '}') || '';
            var _a = __read((parser.GetArgument('\\begin{' + begin.getName() + '}') || '').split(/=/), 2), env = _a[0], n = _a[1];
            if (!EmpheqUtil_js_1.EmpheqUtil.checkEnv(env)) {
                throw new TexError_js_1.default('UnknownEnv', 'Unknown environment "%1"', env);
            }
            if (opts) {
                begin.setProperties(EmpheqUtil_js_1.EmpheqUtil.splitOptions(opts, { left: 1, right: 1 }));
            }
            parser.stack.global.empheq = env;
            parser.string = '\\begin{' + env + '}' + (n ? '{' + n + '}' : '') + parser.string.slice(parser.i);
            parser.i = 0;
            parser.Push(begin);
        }
    },
    EmpheqMO: function (parser, _name, c) {
        parser.Push(parser.create('token', 'mo', {}, c));
    },
    EmpheqDelim: function (parser, name) {
        var c = parser.GetDelimiter(name);
        parser.Push(parser.create('token', 'mo', { stretchy: true, symmetric: true }, c));
    }
};
new SymbolMap_js_1.EnvironmentMap('empheq-env', EmpheqUtil_js_1.EmpheqUtil.environment, {
    empheq: ['Empheq', 'empheq'],
}, exports.EmpheqMethods);
new SymbolMap_js_1.CommandMap('empheq-macros', {
    empheqlbrace: ['EmpheqMO', '{'],
    empheqrbrace: ['EmpheqMO', '}'],
    empheqlbrack: ['EmpheqMO', '['],
    empheqrbrack: ['EmpheqMO', ']'],
    empheqlangle: ['EmpheqMO', '\u27E8'],
    empheqrangle: ['EmpheqMO', '\u27E9'],
    empheqlparen: ['EmpheqMO', '('],
    empheqrparen: ['EmpheqMO', ')'],
    empheqlvert: ['EmpheqMO', '|'],
    empheqrvert: ['EmpheqMO', '|'],
    empheqlVert: ['EmpheqMO', '\u2016'],
    empheqrVert: ['EmpheqMO', '\u2016'],
    empheqlfloor: ['EmpheqMO', '\u230A'],
    empheqrfloor: ['EmpheqMO', '\u230B'],
    empheqlceil: ['EmpheqMO', '\u2308'],
    empheqrceil: ['EmpheqMO', '\u2309'],
    empheqbiglbrace: ['EmpheqMO', '{'],
    empheqbigrbrace: ['EmpheqMO', '}'],
    empheqbiglbrack: ['EmpheqMO', '['],
    empheqbigrbrack: ['EmpheqMO', ']'],
    empheqbiglangle: ['EmpheqMO', '\u27E8'],
    empheqbigrangle: ['EmpheqMO', '\u27E9'],
    empheqbiglparen: ['EmpheqMO', '('],
    empheqbigrparen: ['EmpheqMO', ')'],
    empheqbiglvert: ['EmpheqMO', '|'],
    empheqbigrvert: ['EmpheqMO', '|'],
    empheqbiglVert: ['EmpheqMO', '\u2016'],
    empheqbigrVert: ['EmpheqMO', '\u2016'],
    empheqbiglfloor: ['EmpheqMO', '\u230A'],
    empheqbigrfloor: ['EmpheqMO', '\u230B'],
    empheqbiglceil: ['EmpheqMO', '\u2308'],
    empheqbigrceil: ['EmpheqMO', '\u2309'],
    empheql: 'EmpheqDelim',
    empheqr: 'EmpheqDelim',
    empheqbigl: 'EmpheqDelim',
    empheqbigr: 'EmpheqDelim'
}, exports.EmpheqMethods);
exports.EmpheqConfiguration = Configuration_js_1.Configuration.create('empheq', {
    handler: {
        macro: ['empheq-macros'],
        environment: ['empheq-env'],
    },
    items: (_a = {},
        _a[EmpheqBeginItem.prototype.kind] = EmpheqBeginItem,
        _a)
});
//# sourceMappingURL=EmpheqConfiguration.js.map

/***/ }),

/***/ 6471:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmpheqUtil = void 0;
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
exports.EmpheqUtil = {
    environment: function (parser, env, func, args) {
        var name = args[0];
        var item = parser.itemFactory.create(name + '-begin').setProperties({ name: env, end: name });
        parser.Push(func.apply(void 0, __spreadArray([parser, item], __read(args.slice(1)), false)));
    },
    splitOptions: function (text, allowed) {
        if (allowed === void 0) { allowed = null; }
        return ParseUtil_js_1.default.keyvalOptions(text, allowed, true);
    },
    columnCount: function (table) {
        var e_1, _a;
        var m = 0;
        try {
            for (var _b = __values(table.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var row = _c.value;
                var n = row.childNodes.length - (row.isKind('mlabeledtr') ? 1 : 0);
                if (n > m)
                    m = n;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return m;
    },
    cellBlock: function (tex, table, parser, env) {
        var e_2, _a;
        var mpadded = parser.create('node', 'mpadded', [], { height: 0, depth: 0, voffset: '-1height' });
        var result = new TexParser_js_1.default(tex, parser.stack.env, parser.configuration);
        var mml = result.mml();
        if (env && result.configuration.tags.label) {
            result.configuration.tags.currentTag.env = env;
            result.configuration.tags.getTag(true);
        }
        try {
            for (var _b = __values((mml.isInferred ? mml.childNodes : [mml])), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                mpadded.appendChild(child);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        mpadded.appendChild(parser.create('node', 'mphantom', [
            parser.create('node', 'mpadded', [table], { width: 0 })
        ]));
        return mpadded;
    },
    topRowTable: function (original, parser) {
        var table = ParseUtil_js_1.default.copyNode(original, parser);
        table.setChildren(table.childNodes.slice(0, 1));
        table.attributes.set('align', 'baseline 1');
        return original.factory.create('mphantom', {}, [parser.create('node', 'mpadded', [table], { width: 0 })]);
    },
    rowspanCell: function (mtd, tex, table, parser, env) {
        mtd.appendChild(parser.create('node', 'mpadded', [
            this.cellBlock(tex, ParseUtil_js_1.default.copyNode(table, parser), parser, env),
            this.topRowTable(table, parser)
        ], { height: 0, depth: 0, voffset: 'height' }));
    },
    left: function (table, original, left, parser, env) {
        var e_3, _a;
        if (env === void 0) { env = ''; }
        table.attributes.set('columnalign', 'right ' + (table.attributes.get('columnalign') || ''));
        table.attributes.set('columnspacing', '0em ' + (table.attributes.get('columnspacing') || ''));
        var mtd;
        try {
            for (var _b = __values(table.childNodes.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var row = _c.value;
                mtd = parser.create('node', 'mtd');
                row.childNodes.unshift(mtd);
                mtd.parent = row;
                if (row.isKind('mlabeledtr')) {
                    row.childNodes[0] = row.childNodes[1];
                    row.childNodes[1] = mtd;
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        this.rowspanCell(mtd, left, original, parser, env);
    },
    right: function (table, original, right, parser, env) {
        if (env === void 0) { env = ''; }
        if (table.childNodes.length === 0) {
            table.appendChild(parser.create('node', 'mtr'));
        }
        var m = exports.EmpheqUtil.columnCount(table);
        var row = table.childNodes[0];
        while (row.childNodes.length < m)
            row.appendChild(parser.create('node', 'mtd'));
        var mtd = row.appendChild(parser.create('node', 'mtd'));
        exports.EmpheqUtil.rowspanCell(mtd, right, original, parser, env);
        table.attributes.set('columnalign', (table.attributes.get('columnalign') || '').split(/ /).slice(0, m).join(' ') + ' left');
        table.attributes.set('columnspacing', (table.attributes.get('columnspacing') || '').split(/ /).slice(0, m - 1).join(' ') + ' 0em');
    },
    adjustTable: function (empheq, parser) {
        var left = empheq.getProperty('left');
        var right = empheq.getProperty('right');
        if (left || right) {
            var table = empheq.Last;
            var original = ParseUtil_js_1.default.copyNode(table, parser);
            if (left)
                this.left(table, original, left, parser);
            if (right)
                this.right(table, original, right, parser);
        }
    },
    allowEnv: {
        equation: true,
        align: true,
        gather: true,
        flalign: true,
        alignat: true,
        multline: true
    },
    checkEnv: function (env) {
        return this.allowEnv.hasOwnProperty(env.replace(/\*$/, '')) || false;
    }
};
//# sourceMappingURL=EmpheqUtil.js.map

/***/ }),

/***/ 1428:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EncloseConfiguration = exports.EncloseMethods = exports.ENCLOSE_OPTIONS = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
exports.ENCLOSE_OPTIONS = {
    'data-arrowhead': 1,
    color: 1,
    mathcolor: 1,
    background: 1,
    mathbackground: 1,
    'data-padding': 1,
    'data-thickness': 1
};
exports.EncloseMethods = {};
exports.EncloseMethods.Enclose = function (parser, name) {
    var notation = parser.GetArgument(name).replace(/,/g, ' ');
    var attr = parser.GetBrackets(name, '');
    var math = parser.ParseArg(name);
    var def = ParseUtil_js_1.default.keyvalOptions(attr, exports.ENCLOSE_OPTIONS);
    def.notation = notation;
    parser.Push(parser.create('node', 'menclose', [math], def));
};
new SymbolMap_js_1.CommandMap('enclose', { enclose: 'Enclose' }, exports.EncloseMethods);
exports.EncloseConfiguration = Configuration_js_1.Configuration.create('enclose', { handler: { macro: ['enclose'] } });
//# sourceMappingURL=EncloseConfiguration.js.map

/***/ }),

/***/ 6121:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExtpfeilConfiguration = exports.ExtpfeilMethods = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var AmsMethods_js_1 = __webpack_require__(4387);
var NewcommandUtil_js_1 = __importDefault(__webpack_require__(5579));
var NewcommandConfiguration_js_1 = __webpack_require__(1496);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
exports.ExtpfeilMethods = {};
exports.ExtpfeilMethods.xArrow = AmsMethods_js_1.AmsMethods.xArrow;
exports.ExtpfeilMethods.NewExtArrow = function (parser, name) {
    var cs = parser.GetArgument(name);
    var space = parser.GetArgument(name);
    var chr = parser.GetArgument(name);
    if (!cs.match(/^\\([a-z]+|.)$/i)) {
        throw new TexError_js_1.default('NewextarrowArg1', 'First argument to %1 must be a control sequence name', name);
    }
    if (!space.match(/^(\d+),(\d+)$/)) {
        throw new TexError_js_1.default('NewextarrowArg2', 'Second argument to %1 must be two integers separated by a comma', name);
    }
    if (!chr.match(/^(\d+|0x[0-9A-F]+)$/i)) {
        throw new TexError_js_1.default('NewextarrowArg3', 'Third argument to %1 must be a unicode character number', name);
    }
    cs = cs.substr(1);
    var spaces = space.split(',');
    NewcommandUtil_js_1.default.addMacro(parser, cs, exports.ExtpfeilMethods.xArrow, [parseInt(chr), parseInt(spaces[0]), parseInt(spaces[1])]);
};
new SymbolMap_js_1.CommandMap('extpfeil', {
    xtwoheadrightarrow: ['xArrow', 0x21A0, 12, 16],
    xtwoheadleftarrow: ['xArrow', 0x219E, 17, 13],
    xmapsto: ['xArrow', 0x21A6, 6, 7],
    xlongequal: ['xArrow', 0x003D, 7, 7],
    xtofrom: ['xArrow', 0x21C4, 12, 12],
    Newextarrow: 'NewExtArrow'
}, exports.ExtpfeilMethods);
var init = function (config) {
    NewcommandConfiguration_js_1.NewcommandConfiguration.init(config);
};
exports.ExtpfeilConfiguration = Configuration_js_1.Configuration.create('extpfeil', {
    handler: { macro: ['extpfeil'] },
    init: init
});
//# sourceMappingURL=ExtpfeilConfiguration.js.map

/***/ }),

/***/ 3078:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GensymbConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var TexConstants_js_1 = __webpack_require__(8317);
var SymbolMap_js_1 = __webpack_require__(9140);
function mathcharUnit(parser, mchar) {
    var def = mchar.attributes || {};
    def.mathvariant = TexConstants_js_1.TexConstant.Variant.NORMAL;
    def.class = 'MathML-Unit';
    var node = parser.create('token', 'mi', def, mchar.char);
    parser.Push(node);
}
new SymbolMap_js_1.CharacterMap('gensymb-symbols', mathcharUnit, {
    ohm: '\u2126',
    degree: '\u00B0',
    celsius: '\u2103',
    perthousand: '\u2030',
    micro: '\u00B5'
});
exports.GensymbConfiguration = Configuration_js_1.Configuration.create('gensymb', {
    handler: { macro: ['gensymb-symbols'] },
});
//# sourceMappingURL=GensymbConfiguration.js.map

/***/ }),

/***/ 8901:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HtmlConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var HtmlMethods_js_1 = __importDefault(__webpack_require__(332));
new SymbolMap_js_1.CommandMap('html_macros', {
    href: 'Href',
    'class': 'Class',
    style: 'Style',
    cssId: 'Id'
}, HtmlMethods_js_1.default);
exports.HtmlConfiguration = Configuration_js_1.Configuration.create('html', { handler: { macro: ['html_macros'] } });
//# sourceMappingURL=HtmlConfiguration.js.map

/***/ }),

/***/ 332:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var HtmlMethods = {};
HtmlMethods.Href = function (parser, name) {
    var url = parser.GetArgument(name);
    var arg = GetArgumentMML(parser, name);
    NodeUtil_js_1.default.setAttribute(arg, 'href', url);
    parser.Push(arg);
};
HtmlMethods.Class = function (parser, name) {
    var CLASS = parser.GetArgument(name);
    var arg = GetArgumentMML(parser, name);
    var oldClass = NodeUtil_js_1.default.getAttribute(arg, 'class');
    if (oldClass) {
        CLASS = oldClass + ' ' + CLASS;
    }
    NodeUtil_js_1.default.setAttribute(arg, 'class', CLASS);
    parser.Push(arg);
};
HtmlMethods.Style = function (parser, name) {
    var style = parser.GetArgument(name);
    var arg = GetArgumentMML(parser, name);
    var oldStyle = NodeUtil_js_1.default.getAttribute(arg, 'style');
    if (oldStyle) {
        if (style.charAt(style.length - 1) !== ';') {
            style += ';';
        }
        style = oldStyle + ' ' + style;
    }
    NodeUtil_js_1.default.setAttribute(arg, 'style', style);
    parser.Push(arg);
};
HtmlMethods.Id = function (parser, name) {
    var ID = parser.GetArgument(name);
    var arg = GetArgumentMML(parser, name);
    NodeUtil_js_1.default.setAttribute(arg, 'id', ID);
    parser.Push(arg);
};
var GetArgumentMML = function (parser, name) {
    var arg = parser.ParseArg(name);
    if (!NodeUtil_js_1.default.isInferred(arg)) {
        return arg;
    }
    var children = NodeUtil_js_1.default.getChildren(arg);
    if (children.length === 1) {
        return children[0];
    }
    var mrow = parser.create('node', 'mrow');
    NodeUtil_js_1.default.copyChildren(arg, mrow);
    NodeUtil_js_1.default.copyAttributes(arg, mrow);
    return mrow;
};
exports["default"] = HtmlMethods;
//# sourceMappingURL=HtmlMethods.js.map

/***/ }),

/***/ 7535:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathtoolsConfiguration = exports.fixPrescripts = exports.PAIREDDELIMS = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var Options_js_1 = __webpack_require__(7233);
__webpack_require__(2448);
var MathtoolsUtil_js_1 = __webpack_require__(836);
var MathtoolsTags_js_1 = __webpack_require__(1503);
var MathtoolsItems_js_1 = __webpack_require__(6224);
exports.PAIREDDELIMS = 'mathtools-paired-delims';
function initMathtools(config) {
    new SymbolMap_js_1.CommandMap(exports.PAIREDDELIMS, {}, {});
    config.append(Configuration_js_1.Configuration.local({ handler: { macro: [exports.PAIREDDELIMS] }, priority: -5 }));
}
function configMathtools(config, jax) {
    var e_1, _a;
    var parser = jax.parseOptions;
    var pairedDelims = parser.options.mathtools.pairedDelimiters;
    try {
        for (var _b = __values(Object.keys(pairedDelims)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var cs = _c.value;
            MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser, cs, pairedDelims[cs]);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    (0, MathtoolsTags_js_1.MathtoolsTagFormat)(config, jax);
}
function fixPrescripts(_a) {
    var e_2, _b, e_3, _c, e_4, _d;
    var data = _a.data;
    try {
        for (var _e = __values(data.getList('mmultiscripts')), _f = _e.next(); !_f.done; _f = _e.next()) {
            var node = _f.value;
            if (!node.getProperty('fixPrescript'))
                continue;
            var childNodes = NodeUtil_js_1.default.getChildren(node);
            var n = 0;
            try {
                for (var _g = (e_3 = void 0, __values([1, 2])), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var i = _h.value;
                    if (!childNodes[i]) {
                        NodeUtil_js_1.default.setChild(node, i, data.nodeFactory.create('node', 'none'));
                        n++;
                    }
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_c = _g.return)) _c.call(_g);
                }
                finally { if (e_3) throw e_3.error; }
            }
            try {
                for (var _j = (e_4 = void 0, __values([4, 5])), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var i = _k.value;
                    if (NodeUtil_js_1.default.isType(childNodes[i], 'mrow') && NodeUtil_js_1.default.getChildren(childNodes[i]).length === 0) {
                        NodeUtil_js_1.default.setChild(node, i, data.nodeFactory.create('node', 'none'));
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_d = _j.return)) _d.call(_j);
                }
                finally { if (e_4) throw e_4.error; }
            }
            if (n === 2) {
                childNodes.splice(1, 2);
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
        }
        finally { if (e_2) throw e_2.error; }
    }
}
exports.fixPrescripts = fixPrescripts;
exports.MathtoolsConfiguration = Configuration_js_1.Configuration.create('mathtools', {
    handler: {
        macro: ['mathtools-macros', 'mathtools-delimiters'],
        environment: ['mathtools-environments'],
        delimiter: ['mathtools-delimiters'],
        character: ['mathtools-characters']
    },
    items: (_a = {},
        _a[MathtoolsItems_js_1.MultlinedItem.prototype.kind] = MathtoolsItems_js_1.MultlinedItem,
        _a),
    init: initMathtools,
    config: configMathtools,
    postprocessors: [[fixPrescripts, -6]],
    options: {
        mathtools: {
            'multlinegap': '1em',
            'multlined-pos': 'c',
            'firstline-afterskip': '',
            'lastline-preskip': '',
            'smallmatrix-align': 'c',
            'shortvdotsadjustabove': '.2em',
            'shortvdotsadjustbelow': '.2em',
            'centercolon': false,
            'centercolon-offset': '.04em',
            'thincolon-dx': '-.04em',
            'thincolon-dw': '-.08em',
            'use-unicode': false,
            'prescript-sub-format': '',
            'prescript-sup-format': '',
            'prescript-arg-format': '',
            'allow-mathtoolsset': true,
            pairedDelimiters: (0, Options_js_1.expandable)({}),
            tagforms: (0, Options_js_1.expandable)({}),
        }
    }
});
//# sourceMappingURL=MathtoolsConfiguration.js.map

/***/ }),

/***/ 6224:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MultlinedItem = void 0;
var AmsItems_js_1 = __webpack_require__(2790);
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexConstants_js_1 = __webpack_require__(8317);
var MultlinedItem = (function (_super) {
    __extends(MultlinedItem, _super);
    function MultlinedItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MultlinedItem.prototype, "kind", {
        get: function () {
            return 'multlined';
        },
        enumerable: false,
        configurable: true
    });
    MultlinedItem.prototype.EndTable = function () {
        if (this.Size() || this.row.length) {
            this.EndEntry();
            this.EndRow();
        }
        if (this.table.length > 1) {
            var options = this.factory.configuration.options.mathtools;
            var gap = options.multlinegap;
            var firstskip = options['firstline-afterskip'] || gap;
            var lastskip = options['lastline-preskip'] || gap;
            var first = NodeUtil_js_1.default.getChildren(this.table[0])[0];
            if (NodeUtil_js_1.default.getAttribute(first, 'columnalign') !== TexConstants_js_1.TexConstant.Align.RIGHT) {
                first.appendChild(this.create('node', 'mspace', [], { width: firstskip }));
            }
            var last = NodeUtil_js_1.default.getChildren(this.table[this.table.length - 1])[0];
            if (NodeUtil_js_1.default.getAttribute(last, 'columnalign') !== TexConstants_js_1.TexConstant.Align.LEFT) {
                var top_1 = NodeUtil_js_1.default.getChildren(last)[0];
                top_1.childNodes.unshift(null);
                var space = this.create('node', 'mspace', [], { width: lastskip });
                NodeUtil_js_1.default.setChild(top_1, 0, space);
            }
        }
        _super.prototype.EndTable.call(this);
    };
    return MultlinedItem;
}(AmsItems_js_1.MultlineItem));
exports.MultlinedItem = MultlinedItem;
//# sourceMappingURL=MathtoolsItems.js.map

/***/ }),

/***/ 2448:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var SymbolMap_js_1 = __webpack_require__(9140);
var TexConstants_js_1 = __webpack_require__(8317);
var MathtoolsMethods_js_1 = __webpack_require__(643);
new SymbolMap_js_1.CommandMap('mathtools-macros', {
    shoveleft: ['HandleShove', TexConstants_js_1.TexConstant.Align.LEFT],
    shoveright: ['HandleShove', TexConstants_js_1.TexConstant.Align.RIGHT],
    xleftrightarrow: ['xArrow', 0x2194, 10, 10],
    xLeftarrow: ['xArrow', 0x21D0, 12, 7],
    xRightarrow: ['xArrow', 0x21D2, 7, 12],
    xLeftrightarrow: ['xArrow', 0x21D4, 12, 12],
    xhookleftarrow: ['xArrow', 0x21A9, 10, 5],
    xhookrightarrow: ['xArrow', 0x21AA, 5, 10],
    xmapsto: ['xArrow', 0x21A6, 10, 10],
    xrightharpoondown: ['xArrow', 0x21C1, 5, 10],
    xleftharpoondown: ['xArrow', 0x21BD, 10, 5],
    xrightleftharpoons: ['xArrow', 0x21CC, 10, 10],
    xrightharpoonup: ['xArrow', 0x21C0, 5, 10],
    xleftharpoonup: ['xArrow', 0x21BC, 10, 5],
    xleftrightharpoons: ['xArrow', 0x21CB, 10, 10],
    mathllap: ['MathLap', 'l', false],
    mathrlap: ['MathLap', 'r', false],
    mathclap: ['MathLap', 'c', false],
    clap: ['MtLap', 'c'],
    textllap: ['MtLap', 'l'],
    textrlap: ['MtLap', 'r'],
    textclap: ['MtLap', 'c'],
    cramped: 'Cramped',
    crampedllap: ['MathLap', 'l', true],
    crampedrlap: ['MathLap', 'r', true],
    crampedclap: ['MathLap', 'c', true],
    crampedsubstack: ['Macro', '\\begin{crampedsubarray}{c}#1\\end{crampedsubarray}', 1],
    mathmbox: 'MathMBox',
    mathmakebox: 'MathMakeBox',
    overbracket: 'UnderOverBracket',
    underbracket: 'UnderOverBracket',
    refeq: 'HandleRef',
    MoveEqLeft: ['Macro', '\\hspace{#1em}&\\hspace{-#1em}', 1, '2'],
    Aboxed: 'Aboxed',
    ArrowBetweenLines: 'ArrowBetweenLines',
    vdotswithin: 'VDotsWithin',
    shortvdotswithin: 'ShortVDotsWithin',
    MTFlushSpaceAbove: 'FlushSpaceAbove',
    MTFlushSpaceBelow: 'FlushSpaceBelow',
    DeclarePairedDelimiter: 'DeclarePairedDelimiter',
    DeclarePairedDelimiterX: 'DeclarePairedDelimiterX',
    DeclarePairedDelimiterXPP: 'DeclarePairedDelimiterXPP',
    DeclarePairedDelimiters: 'DeclarePairedDelimiter',
    DeclarePairedDelimitersX: 'DeclarePairedDelimiterX',
    DeclarePairedDelimitersXPP: 'DeclarePairedDelimiterXPP',
    centercolon: ['CenterColon', true, true],
    ordinarycolon: ['CenterColon', false],
    MTThinColon: ['CenterColon', true, true, true],
    coloneqq: ['Relation', ':=', '\u2254'],
    Coloneqq: ['Relation', '::=', '\u2A74'],
    coloneq: ['Relation', ':-'],
    Coloneq: ['Relation', '::-'],
    eqqcolon: ['Relation', '=:', '\u2255'],
    Eqqcolon: ['Relation', '=::'],
    eqcolon: ['Relation', '-:', '\u2239'],
    Eqcolon: ['Relation', '-::'],
    colonapprox: ['Relation', ':\\approx'],
    Colonapprox: ['Relation', '::\\approx'],
    colonsim: ['Relation', ':\\sim'],
    Colonsim: ['Relation', '::\\sim'],
    dblcolon: ['Relation', '::', '\u2237'],
    nuparrow: ['NArrow', '\u2191', '.06em'],
    ndownarrow: ['NArrow', '\u2193', '.25em'],
    bigtimes: ['Macro', '\\mathop{\\Large\\kern-.1em\\boldsymbol{\\times}\\kern-.1em}'],
    splitfrac: ['SplitFrac', false],
    splitdfrac: ['SplitFrac', true],
    xmathstrut: 'XMathStrut',
    prescript: 'Prescript',
    newtagform: ['NewTagForm', false],
    renewtagform: ['NewTagForm', true],
    usetagform: 'UseTagForm',
    adjustlimits: [
        'MacroWithTemplate',
        '\\mathop{{#1}\\vphantom{{#3}}}_{{#2}\\vphantom{{#4}}}\\mathop{{#3}\\vphantom{{#1}}}_{{#4}\\vphantom{{#2}}}',
        4, , '_', , '_'
    ],
    mathtoolsset: 'SetOptions'
}, MathtoolsMethods_js_1.MathtoolsMethods);
new SymbolMap_js_1.EnvironmentMap('mathtools-environments', ParseMethods_js_1.default.environment, {
    dcases: ['Array', null, '\\{', '', 'll', null, '.2em', 'D'],
    rcases: ['Array', null, '', '\\}', 'll', null, '.2em'],
    drcases: ['Array', null, '', '\\}', 'll', null, '.2em', 'D'],
    'dcases*': ['Cases', null, '{', '', 'D'],
    'rcases*': ['Cases', null, '', '}'],
    'drcases*': ['Cases', null, '', '}', 'D'],
    'cases*': ['Cases', null, '{', ''],
    'matrix*': ['MtMatrix', null, null, null],
    'pmatrix*': ['MtMatrix', null, '(', ')'],
    'bmatrix*': ['MtMatrix', null, '[', ']'],
    'Bmatrix*': ['MtMatrix', null, '\\{', '\\}'],
    'vmatrix*': ['MtMatrix', null, '\\vert', '\\vert'],
    'Vmatrix*': ['MtMatrix', null, '\\Vert', '\\Vert'],
    'smallmatrix*': ['MtSmallMatrix', null, null, null],
    psmallmatrix: ['MtSmallMatrix', null, '(', ')', 'c'],
    'psmallmatrix*': ['MtSmallMatrix', null, '(', ')'],
    bsmallmatrix: ['MtSmallMatrix', null, '[', ']', 'c'],
    'bsmallmatrix*': ['MtSmallMatrix', null, '[', ']'],
    Bsmallmatrix: ['MtSmallMatrix', null, '\\{', '\\}', 'c'],
    'Bsmallmatrix*': ['MtSmallMatrix', null, '\\{', '\\}'],
    vsmallmatrix: ['MtSmallMatrix', null, '\\vert', '\\vert', 'c'],
    'vsmallmatrix*': ['MtSmallMatrix', null, '\\vert', '\\vert'],
    Vsmallmatrix: ['MtSmallMatrix', null, '\\Vert', '\\Vert', 'c'],
    'Vsmallmatrix*': ['MtSmallMatrix', null, '\\Vert', '\\Vert'],
    crampedsubarray: ['Array', null, null, null, null, '0em', '0.1em', 'S\'', 1],
    multlined: 'MtMultlined',
    spreadlines: ['SpreadLines', true],
    lgathered: ['AmsEqnArray', null, null, null, 'l', null, '.5em', 'D'],
    rgathered: ['AmsEqnArray', null, null, null, 'r', null, '.5em', 'D'],
}, MathtoolsMethods_js_1.MathtoolsMethods);
new SymbolMap_js_1.DelimiterMap('mathtools-delimiters', ParseMethods_js_1.default.delimiter, {
    '\\lparen': '(',
    '\\rparen': ')'
});
new SymbolMap_js_1.CommandMap('mathtools-characters', {
    ':': ['CenterColon', true]
}, MathtoolsMethods_js_1.MathtoolsMethods);
//# sourceMappingURL=MathtoolsMappings.js.map

/***/ }),

/***/ 643:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathtoolsMethods = void 0;
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var AmsMethods_js_1 = __webpack_require__(4387);
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var MmlNode_js_1 = __webpack_require__(9007);
var lengths_js_1 = __webpack_require__(6010);
var Options_js_1 = __webpack_require__(7233);
var NewcommandUtil_js_1 = __importDefault(__webpack_require__(5579));
var NewcommandMethods_js_1 = __importDefault(__webpack_require__(1110));
var MathtoolsUtil_js_1 = __webpack_require__(836);
exports.MathtoolsMethods = {
    MtMatrix: function (parser, begin, open, close) {
        var align = parser.GetBrackets("\\begin{".concat(begin.getName(), "}"), 'c');
        return exports.MathtoolsMethods.Array(parser, begin, open, close, align);
    },
    MtSmallMatrix: function (parser, begin, open, close, align) {
        if (!align) {
            align = parser.GetBrackets("\\begin{".concat(begin.getName(), "}"), parser.options.mathtools['smallmatrix-align']);
        }
        return exports.MathtoolsMethods.Array(parser, begin, open, close, align, ParseUtil_js_1.default.Em(1 / 3), '.2em', 'S', 1);
    },
    MtMultlined: function (parser, begin) {
        var _a;
        var name = "\\begin{".concat(begin.getName(), "}");
        var pos = parser.GetBrackets(name, parser.options.mathtools['multlined-pos'] || 'c');
        var width = pos ? parser.GetBrackets(name, '') : '';
        if (pos && !pos.match(/^[cbt]$/)) {
            _a = __read([pos, width], 2), width = _a[0], pos = _a[1];
        }
        parser.Push(begin);
        var item = parser.itemFactory.create('multlined', parser, begin);
        item.arraydef = {
            displaystyle: true,
            rowspacing: '.5em',
            width: width || 'auto',
            columnwidth: '100%',
        };
        return ParseUtil_js_1.default.setArrayAlign(item, pos || 'c');
    },
    HandleShove: function (parser, name, shove) {
        var top = parser.stack.Top();
        if (top.kind !== 'multline' && top.kind !== 'multlined') {
            throw new TexError_js_1.default('CommandInMultlined', '%1 can only appear within the multline or multlined environments', name);
        }
        if (top.Size()) {
            throw new TexError_js_1.default('CommandAtTheBeginingOfLine', '%1 must come at the beginning of the line', name);
        }
        top.setProperty('shove', shove);
        var shift = parser.GetBrackets(name);
        var mml = parser.ParseArg(name);
        if (shift) {
            var mrow = parser.create('node', 'mrow', []);
            var mspace = parser.create('node', 'mspace', [], { width: shift });
            if (shove === 'left') {
                mrow.appendChild(mspace);
                mrow.appendChild(mml);
            }
            else {
                mrow.appendChild(mml);
                mrow.appendChild(mspace);
            }
            mml = mrow;
        }
        parser.Push(mml);
    },
    SpreadLines: function (parser, begin) {
        var e_1, _a;
        if (parser.stack.env.closing === begin.getName()) {
            delete parser.stack.env.closing;
            var top_1 = parser.stack.Pop();
            var mml = top_1.toMml();
            var spread = top_1.getProperty('spread');
            if (mml.isInferred) {
                try {
                    for (var _b = __values(NodeUtil_js_1.default.getChildren(mml)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var child = _c.value;
                        MathtoolsUtil_js_1.MathtoolsUtil.spreadLines(child, spread);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            else {
                MathtoolsUtil_js_1.MathtoolsUtil.spreadLines(mml, spread);
            }
            parser.Push(mml);
        }
        else {
            var spread = parser.GetDimen("\\begin{".concat(begin.getName(), "}"));
            begin.setProperty('spread', spread);
            parser.Push(begin);
        }
    },
    Cases: function (parser, begin, open, close, style) {
        var array = parser.itemFactory.create('array').setProperty('casesEnv', begin.getName());
        array.arraydef = {
            rowspacing: '.2em',
            columnspacing: '1em',
            columnalign: 'left'
        };
        if (style === 'D') {
            array.arraydef.displaystyle = true;
        }
        array.setProperties({ open: open, close: close });
        parser.Push(begin);
        return array;
    },
    MathLap: function (parser, name, pos, cramped) {
        var style = parser.GetBrackets(name, '').trim();
        var mml = parser.create('node', 'mstyle', [
            parser.create('node', 'mpadded', [parser.ParseArg(name)], __assign({ width: 0 }, (pos === 'r' ? {} : { lspace: (pos === 'l' ? '-1width' : '-.5width') })))
        ], { 'data-cramped': cramped });
        MathtoolsUtil_js_1.MathtoolsUtil.setDisplayLevel(mml, style);
        parser.Push(parser.create('node', 'TeXAtom', [mml]));
    },
    Cramped: function (parser, name) {
        var style = parser.GetBrackets(name, '').trim();
        var arg = parser.ParseArg(name);
        var mml = parser.create('node', 'mstyle', [arg], { 'data-cramped': true });
        MathtoolsUtil_js_1.MathtoolsUtil.setDisplayLevel(mml, style);
        parser.Push(mml);
    },
    MtLap: function (parser, name, pos) {
        var content = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), 0);
        var mml = parser.create('node', 'mpadded', content, { width: 0 });
        if (pos !== 'r') {
            NodeUtil_js_1.default.setAttribute(mml, 'lspace', pos === 'l' ? '-1width' : '-.5width');
        }
        parser.Push(mml);
    },
    MathMakeBox: function (parser, name) {
        var width = parser.GetBrackets(name);
        var pos = parser.GetBrackets(name, 'c');
        var mml = parser.create('node', 'mpadded', [parser.ParseArg(name)]);
        if (width) {
            NodeUtil_js_1.default.setAttribute(mml, 'width', width);
        }
        var align = (0, Options_js_1.lookup)(pos, { c: 'center', r: 'right' }, '');
        if (align) {
            NodeUtil_js_1.default.setAttribute(mml, 'data-align', align);
        }
        parser.Push(mml);
    },
    MathMBox: function (parser, name) {
        parser.Push(parser.create('node', 'mrow', [parser.ParseArg(name)]));
    },
    UnderOverBracket: function (parser, name) {
        var thickness = (0, lengths_js_1.length2em)(parser.GetBrackets(name, '.1em'), .1);
        var height = parser.GetBrackets(name, '.2em');
        var arg = parser.GetArgument(name);
        var _a = __read((name.charAt(1) === 'o' ?
            ['over', 'accent', 'bottom'] :
            ['under', 'accentunder', 'top']), 3), pos = _a[0], accent = _a[1], border = _a[2];
        var t = (0, lengths_js_1.em)(thickness);
        var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
        var copy = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
        var script = parser.create('node', 'mpadded', [
            parser.create('node', 'mphantom', [copy])
        ], {
            style: "border: ".concat(t, " solid; border-").concat(border, ": none"),
            height: height,
            depth: 0
        });
        var node = ParseUtil_js_1.default.underOver(parser, base, script, pos, true);
        var munderover = NodeUtil_js_1.default.getChildAt(NodeUtil_js_1.default.getChildAt(node, 0), 0);
        NodeUtil_js_1.default.setAttribute(munderover, accent, true);
        parser.Push(node);
    },
    Aboxed: function (parser, name) {
        var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);
        if (top.row.length % 2 === 1) {
            top.row.push(parser.create('node', 'mtd', []));
        }
        var arg = parser.GetArgument(name);
        var rest = parser.string.substr(parser.i);
        parser.string = arg + '&&\\endAboxed';
        parser.i = 0;
        var left = parser.GetUpTo(name, '&');
        var right = parser.GetUpTo(name, '&');
        parser.GetUpTo(name, '\\endAboxed');
        var tex = ParseUtil_js_1.default.substituteArgs(parser, [left, right], '\\rlap{\\boxed{#1{}#2}}\\kern.267em\\phantom{#1}&\\phantom{{}#2}\\kern.267em');
        parser.string = tex + rest;
        parser.i = 0;
    },
    ArrowBetweenLines: function (parser, name) {
        var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);
        if (top.Size() || top.row.length) {
            throw new TexError_js_1.default('BetweenLines', '%1 must be on a row by itself', name);
        }
        var star = parser.GetStar();
        var symbol = parser.GetBrackets(name, '\\Updownarrow');
        if (star) {
            top.EndEntry();
            top.EndEntry();
        }
        var tex = (star ? '\\quad' + symbol : symbol + '\\quad');
        var mml = new TexParser_js_1.default(tex, parser.stack.env, parser.configuration).mml();
        parser.Push(mml);
        top.EndEntry();
        top.EndRow();
    },
    VDotsWithin: function (parser, name) {
        var top = parser.stack.Top();
        var isFlush = (top.getProperty('flushspaceabove') === top.table.length);
        var arg = '\\mmlToken{mi}{}' + parser.GetArgument(name) + '\\mmlToken{mi}{}';
        var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
        var mml = parser.create('node', 'mpadded', [
            parser.create('node', 'mpadded', [
                parser.create('node', 'mo', [
                    parser.create('text', '\u22EE')
                ])
            ], __assign({ width: 0, lspace: '-.5width' }, (isFlush ? { height: '-.6em', voffset: '-.18em' } : {}))),
            parser.create('node', 'mphantom', [base])
        ], {
            lspace: '.5width'
        });
        parser.Push(mml);
    },
    ShortVDotsWithin: function (parser, _name) {
        var top = parser.stack.Top();
        var star = parser.GetStar();
        exports.MathtoolsMethods.FlushSpaceAbove(parser, '\\MTFlushSpaceAbove');
        !star && top.EndEntry();
        exports.MathtoolsMethods.VDotsWithin(parser, '\\vdotswithin');
        star && top.EndEntry();
        exports.MathtoolsMethods.FlushSpaceBelow(parser, '\\MTFlushSpaceBelow');
    },
    FlushSpaceAbove: function (parser, name) {
        var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);
        top.setProperty('flushspaceabove', top.table.length);
        top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustabove']);
    },
    FlushSpaceBelow: function (parser, name) {
        var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);
        top.Size() && top.EndEntry();
        top.EndRow();
        top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustbelow']);
    },
    PairedDelimiters: function (parser, name, open, close, body, n, pre, post) {
        if (body === void 0) { body = '#1'; }
        if (n === void 0) { n = 1; }
        if (pre === void 0) { pre = ''; }
        if (post === void 0) { post = ''; }
        var star = parser.GetStar();
        var size = (star ? '' : parser.GetBrackets(name));
        var _a = __read((star ? ['\\left', '\\right'] : size ? [size + 'l', size + 'r'] : ['', '']), 2), left = _a[0], right = _a[1];
        var delim = (star ? '\\middle' : size || '');
        if (n) {
            var args = [];
            for (var i = args.length; i < n; i++) {
                args.push(parser.GetArgument(name));
            }
            pre = ParseUtil_js_1.default.substituteArgs(parser, args, pre);
            body = ParseUtil_js_1.default.substituteArgs(parser, args, body);
            post = ParseUtil_js_1.default.substituteArgs(parser, args, post);
        }
        body = body.replace(/\\delimsize/g, delim);
        parser.string = [pre, left, open, body, right, close, post, parser.string.substr(parser.i)]
            .reduce(function (s, part) { return ParseUtil_js_1.default.addArgs(parser, s, part); }, '');
        parser.i = 0;
        ParseUtil_js_1.default.checkMaxMacros(parser);
    },
    DeclarePairedDelimiter: function (parser, name) {
        var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);
        var open = parser.GetArgument(name);
        var close = parser.GetArgument(name);
        MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close]);
    },
    DeclarePairedDelimiterX: function (parser, name) {
        var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);
        var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);
        var open = parser.GetArgument(name);
        var close = parser.GetArgument(name);
        var body = parser.GetArgument(name);
        MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n]);
    },
    DeclarePairedDelimiterXPP: function (parser, name) {
        var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);
        var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);
        var pre = parser.GetArgument(name);
        var open = parser.GetArgument(name);
        var close = parser.GetArgument(name);
        var post = parser.GetArgument(name);
        var body = parser.GetArgument(name);
        MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n, pre, post]);
    },
    CenterColon: function (parser, _name, center, force, thin) {
        if (force === void 0) { force = false; }
        if (thin === void 0) { thin = false; }
        var options = parser.options.mathtools;
        var mml = parser.create('token', 'mo', {}, ':');
        if (center && (options['centercolon'] || force)) {
            var dy = options['centercolon-offset'];
            mml = parser.create('node', 'mpadded', [mml], __assign({ voffset: dy, height: "+".concat(dy), depth: "-".concat(dy) }, (thin ? { width: options['thincolon-dw'], lspace: options['thincolon-dx'] } : {})));
        }
        parser.Push(mml);
    },
    Relation: function (parser, _name, tex, unicode) {
        var options = parser.options.mathtools;
        if (options['use-unicode'] && unicode) {
            parser.Push(parser.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.REL }, unicode));
        }
        else {
            tex = '\\mathrel{' + tex.replace(/:/g, '\\MTThinColon').replace(/-/g, '\\mathrel{-}') + '}';
            parser.string = ParseUtil_js_1.default.addArgs(parser, tex, parser.string.substr(parser.i));
            parser.i = 0;
        }
    },
    NArrow: function (parser, _name, c, dy) {
        parser.Push(parser.create('node', 'TeXAtom', [
            parser.create('token', 'mtext', {}, c),
            parser.create('node', 'mpadded', [
                parser.create('node', 'mpadded', [
                    parser.create('node', 'menclose', [
                        parser.create('node', 'mspace', [], { height: '.2em', depth: 0, width: '.4em' })
                    ], { notation: 'updiagonalstrike', 'data-thickness': '.05em', 'data-padding': 0 })
                ], { width: 0, lspace: '-.5width', voffset: dy }),
                parser.create('node', 'mphantom', [
                    parser.create('token', 'mtext', {}, c)
                ])
            ], { width: 0, lspace: '-.5width' })
        ], { texClass: MmlNode_js_1.TEXCLASS.REL }));
    },
    SplitFrac: function (parser, name, display) {
        var num = parser.ParseArg(name);
        var den = parser.ParseArg(name);
        parser.Push(parser.create('node', 'mstyle', [
            parser.create('node', 'mfrac', [
                parser.create('node', 'mstyle', [
                    num,
                    parser.create('token', 'mi'),
                    parser.create('token', 'mspace', { width: '1em' })
                ], { scriptlevel: 0 }),
                parser.create('node', 'mstyle', [
                    parser.create('token', 'mspace', { width: '1em' }),
                    parser.create('token', 'mi'),
                    den
                ], { scriptlevel: 0 })
            ], { linethickness: 0, numalign: 'left', denomalign: 'right' })
        ], { displaystyle: display, scriptlevel: 0 }));
    },
    XMathStrut: function (parser, name) {
        var dd = parser.GetBrackets(name);
        var dh = parser.GetArgument(name);
        dh = MathtoolsUtil_js_1.MathtoolsUtil.plusOrMinus(name, dh);
        dd = MathtoolsUtil_js_1.MathtoolsUtil.plusOrMinus(name, dd || dh);
        parser.Push(parser.create('node', 'TeXAtom', [
            parser.create('node', 'mpadded', [
                parser.create('node', 'mphantom', [
                    parser.create('token', 'mo', { stretchy: false }, '(')
                ])
            ], { width: 0, height: dh + 'height', depth: dd + 'depth' })
        ], { texClass: MmlNode_js_1.TEXCLASS.ORD }));
    },
    Prescript: function (parser, name) {
        var sup = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'sup');
        var sub = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'sub');
        var base = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'arg');
        if (NodeUtil_js_1.default.isType(sup, 'none') && NodeUtil_js_1.default.isType(sub, 'none')) {
            parser.Push(base);
            return;
        }
        var mml = parser.create('node', 'mmultiscripts', [base]);
        NodeUtil_js_1.default.getChildren(mml).push(null, null);
        NodeUtil_js_1.default.appendChildren(mml, [parser.create('node', 'mprescripts'), sub, sup]);
        mml.setProperty('fixPrescript', true);
        parser.Push(mml);
    },
    NewTagForm: function (parser, name, renew) {
        if (renew === void 0) { renew = false; }
        var tags = parser.tags;
        if (!('mtFormats' in tags)) {
            throw new TexError_js_1.default('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);
        }
        var id = parser.GetArgument(name).trim();
        if (!id) {
            throw new TexError_js_1.default('InvalidTagFormID', 'Tag form name can\'t be empty');
        }
        var format = parser.GetBrackets(name, '');
        var left = parser.GetArgument(name);
        var right = parser.GetArgument(name);
        if (!renew && tags.mtFormats.has(id)) {
            throw new TexError_js_1.default('DuplicateTagForm', 'Duplicate tag form: %1', id);
        }
        tags.mtFormats.set(id, [left, right, format]);
    },
    UseTagForm: function (parser, name) {
        var tags = parser.tags;
        if (!('mtFormats' in tags)) {
            throw new TexError_js_1.default('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);
        }
        var id = parser.GetArgument(name).trim();
        if (!id) {
            tags.mtCurrent = null;
            return;
        }
        if (!tags.mtFormats.has(id)) {
            throw new TexError_js_1.default('UndefinedTagForm', 'Undefined tag form: %1', id);
        }
        tags.mtCurrent = tags.mtFormats.get(id);
    },
    SetOptions: function (parser, name) {
        var e_2, _a;
        var options = parser.options.mathtools;
        if (!options['allow-mathtoolsset']) {
            throw new TexError_js_1.default('ForbiddenMathtoolsSet', '%1 is disabled', name);
        }
        var allowed = {};
        Object.keys(options).forEach(function (id) {
            if (id !== 'pariedDelimiters' && id !== 'tagforms' && id !== 'allow-mathtoolsset') {
                allowed[id] = 1;
            }
        });
        var args = parser.GetArgument(name);
        var keys = ParseUtil_js_1.default.keyvalOptions(args, allowed, true);
        try {
            for (var _b = __values(Object.keys(keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var id = _c.value;
                options[id] = keys[id];
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    },
    Array: BaseMethods_js_1.default.Array,
    Macro: BaseMethods_js_1.default.Macro,
    xArrow: AmsMethods_js_1.AmsMethods.xArrow,
    HandleRef: AmsMethods_js_1.AmsMethods.HandleRef,
    AmsEqnArray: AmsMethods_js_1.AmsMethods.AmsEqnArray,
    MacroWithTemplate: NewcommandMethods_js_1.default.MacroWithTemplate,
};
//# sourceMappingURL=MathtoolsMethods.js.map

/***/ }),

/***/ 1503:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathtoolsTagFormat = void 0;
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var Tags_js_1 = __webpack_require__(6521);
var tagID = 0;
function MathtoolsTagFormat(config, jax) {
    var tags = jax.parseOptions.options.tags;
    if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {
        Tags_js_1.TagsFactory.add(tags, config.tags[tags]);
    }
    var TagClass = Tags_js_1.TagsFactory.create(jax.parseOptions.options.tags).constructor;
    var TagFormat = (function (_super) {
        __extends(TagFormat, _super);
        function TagFormat() {
            var e_1, _a;
            var _this = _super.call(this) || this;
            _this.mtFormats = new Map();
            _this.mtCurrent = null;
            var forms = jax.parseOptions.options.mathtools.tagforms;
            try {
                for (var _b = __values(Object.keys(forms)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var form = _c.value;
                    if (!Array.isArray(forms[form]) || forms[form].length !== 3) {
                        throw new TexError_js_1.default('InvalidTagFormDef', 'The tag form definition for "%1" should be an array fo three strings', form);
                    }
                    _this.mtFormats.set(form, forms[form]);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return _this;
        }
        TagFormat.prototype.formatTag = function (tag) {
            if (this.mtCurrent) {
                var _a = __read(this.mtCurrent, 3), left = _a[0], right = _a[1], format = _a[2];
                return (format ? "".concat(left).concat(format, "{").concat(tag, "}").concat(right) : "".concat(left).concat(tag).concat(right));
            }
            return _super.prototype.formatTag.call(this, tag);
        };
        return TagFormat;
    }(TagClass));
    tagID++;
    var tagName = 'MathtoolsTags-' + tagID;
    Tags_js_1.TagsFactory.add(tagName, TagFormat);
    jax.parseOptions.options.tags = tagName;
}
exports.MathtoolsTagFormat = MathtoolsTagFormat;
//# sourceMappingURL=MathtoolsTags.js.map

/***/ }),

/***/ 836:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathtoolsUtil = void 0;
var BaseItems_js_1 = __webpack_require__(1181);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var Symbol_js_1 = __webpack_require__(8803);
var Options_js_1 = __webpack_require__(7233);
var MathtoolsMethods_js_1 = __webpack_require__(643);
var MathtoolsConfiguration_js_1 = __webpack_require__(7535);
exports.MathtoolsUtil = {
    setDisplayLevel: function (mml, style) {
        if (!style)
            return;
        var _a = __read((0, Options_js_1.lookup)(style, {
            '\\displaystyle': [true, 0],
            '\\textstyle': [false, 0],
            '\\scriptstyle': [false, 1],
            '\\scriptscriptstyle': [false, 2]
        }, [null, null]), 2), display = _a[0], script = _a[1];
        if (display !== null) {
            mml.attributes.set('displaystyle', display);
            mml.attributes.set('scriptlevel', script);
        }
    },
    checkAlignment: function (parser, name) {
        var top = parser.stack.Top();
        if (top.kind !== BaseItems_js_1.EqnArrayItem.prototype.kind) {
            throw new TexError_js_1.default('NotInAlignment', '%1 can only be used in aligment environments', name);
        }
        return top;
    },
    addPairedDelims: function (config, cs, args) {
        var delims = config.handlers.retrieve(MathtoolsConfiguration_js_1.PAIREDDELIMS);
        delims.add(cs, new Symbol_js_1.Macro(cs, MathtoolsMethods_js_1.MathtoolsMethods.PairedDelimiters, args));
    },
    spreadLines: function (mtable, spread) {
        if (!mtable.isKind('mtable'))
            return;
        var rowspacing = mtable.attributes.get('rowspacing');
        if (rowspacing) {
            var add_1 = ParseUtil_js_1.default.dimen2em(spread);
            rowspacing = rowspacing
                .split(/ /)
                .map(function (s) { return ParseUtil_js_1.default.Em(Math.max(0, ParseUtil_js_1.default.dimen2em(s) + add_1)); })
                .join(' ');
        }
        else {
            rowspacing = spread;
        }
        mtable.attributes.set('rowspacing', rowspacing);
    },
    plusOrMinus: function (name, n) {
        n = n.trim();
        if (!n.match(/^[-+]?(?:\d+(?:\.\d*)?|\.\d+)$/)) {
            throw new TexError_js_1.default('NotANumber', 'Argument to %1 is not a number', name);
        }
        return (n.match(/^[-+]/) ? n : '+' + n);
    },
    getScript: function (parser, name, pos) {
        var arg = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
        if (arg === '') {
            return parser.create('node', 'none');
        }
        var format = parser.options.mathtools["prescript-".concat(pos, "-format")];
        format && (arg = "".concat(format, "{").concat(arg, "}"));
        return new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
    }
};
//# sourceMappingURL=MathtoolsUtil.js.map

/***/ }),

/***/ 6944:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MhchemConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var AmsMethods_js_1 = __webpack_require__(4387);
var mhchemParser_js_1 = __webpack_require__(7718);
var MhchemMethods = {};
MhchemMethods.Macro = BaseMethods_js_1.default.Macro;
MhchemMethods.xArrow = AmsMethods_js_1.AmsMethods.xArrow;
MhchemMethods.Machine = function (parser, name, machine) {
    var arg = parser.GetArgument(name);
    var tex;
    try {
        tex = mhchemParser_js_1.mhchemParser.toTex(arg, machine);
    }
    catch (err) {
        throw new TexError_js_1.default(err[0], err[1]);
    }
    parser.string = tex + parser.string.substr(parser.i);
    parser.i = 0;
};
new SymbolMap_js_1.CommandMap('mhchem', {
    ce: ['Machine', 'ce'],
    pu: ['Machine', 'pu'],
    longrightleftharpoons: [
        'Macro',
        '\\stackrel{\\textstyle{-}\\!\\!{\\rightharpoonup}}{\\smash{{\\leftharpoondown}\\!\\!{-}}}'
    ],
    longRightleftharpoons: [
        'Macro',
        '\\stackrel{\\textstyle{-}\\!\\!{\\rightharpoonup}}{\\smash{\\leftharpoondown}}'
    ],
    longLeftrightharpoons: [
        'Macro',
        '\\stackrel{\\textstyle\\vphantom{{-}}{\\rightharpoonup}}{\\smash{{\\leftharpoondown}\\!\\!{-}}}'
    ],
    longleftrightarrows: [
        'Macro',
        '\\stackrel{\\longrightarrow}{\\smash{\\longleftarrow}\\Rule{0px}{.25em}{0px}}'
    ],
    tripledash: [
        'Macro',
        '\\vphantom{-}\\raise2mu{\\kern2mu\\tiny\\text{-}\\kern1mu\\text{-}\\kern1mu\\text{-}\\kern2mu}'
    ],
    xleftrightarrow: ['xArrow', 0x2194, 6, 6],
    xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],
    xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],
    xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]
}, MhchemMethods);
exports.MhchemConfiguration = Configuration_js_1.Configuration.create('mhchem', { handler: { macro: ['mhchem'] } });
//# sourceMappingURL=MhchemConfiguration.js.map

/***/ }),

/***/ 1496:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NewcommandConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var NewcommandItems_js_1 = __webpack_require__(6793);
var NewcommandUtil_js_1 = __importDefault(__webpack_require__(5579));
__webpack_require__(5117);
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var sm = __importStar(__webpack_require__(9140));
var init = function (config) {
    new sm.DelimiterMap(NewcommandUtil_js_1.default.NEW_DELIMITER, ParseMethods_js_1.default.delimiter, {});
    new sm.CommandMap(NewcommandUtil_js_1.default.NEW_COMMAND, {}, {});
    new sm.EnvironmentMap(NewcommandUtil_js_1.default.NEW_ENVIRONMENT, ParseMethods_js_1.default.environment, {}, {});
    config.append(Configuration_js_1.Configuration.local({ handler: { character: [],
            delimiter: [NewcommandUtil_js_1.default.NEW_DELIMITER],
            macro: [NewcommandUtil_js_1.default.NEW_DELIMITER,
                NewcommandUtil_js_1.default.NEW_COMMAND],
            environment: [NewcommandUtil_js_1.default.NEW_ENVIRONMENT]
        },
        priority: -1 }));
};
exports.NewcommandConfiguration = Configuration_js_1.Configuration.create('newcommand', {
    handler: {
        macro: ['Newcommand-macros']
    },
    items: (_a = {},
        _a[NewcommandItems_js_1.BeginEnvItem.prototype.kind] = NewcommandItems_js_1.BeginEnvItem,
        _a),
    options: { maxMacros: 1000 },
    init: init
});
//# sourceMappingURL=NewcommandConfiguration.js.map

/***/ }),

/***/ 6793:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BeginEnvItem = void 0;
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var StackItem_js_1 = __webpack_require__(8292);
var BeginEnvItem = (function (_super) {
    __extends(BeginEnvItem, _super);
    function BeginEnvItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BeginEnvItem.prototype, "kind", {
        get: function () {
            return 'beginEnv';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BeginEnvItem.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    BeginEnvItem.prototype.checkItem = function (item) {
        if (item.isKind('end')) {
            if (item.getName() !== this.getName()) {
                throw new TexError_js_1.default('EnvBadEnd', '\\begin{%1} ended with \\end{%2}', this.getName(), item.getName());
            }
            return [[this.factory.create('mml', this.toMml())], true];
        }
        if (item.isKind('stop')) {
            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
        }
        return _super.prototype.checkItem.call(this, item);
    };
    return BeginEnvItem;
}(StackItem_js_1.BaseItem));
exports.BeginEnvItem = BeginEnvItem;
//# sourceMappingURL=NewcommandItems.js.map

/***/ }),

/***/ 5117:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var NewcommandMethods_js_1 = __importDefault(__webpack_require__(1110));
var SymbolMap_js_1 = __webpack_require__(9140);
new SymbolMap_js_1.CommandMap('Newcommand-macros', {
    newcommand: 'NewCommand',
    renewcommand: 'NewCommand',
    newenvironment: 'NewEnvironment',
    renewenvironment: 'NewEnvironment',
    def: 'MacroDef',
    'let': 'Let'
}, NewcommandMethods_js_1.default);
//# sourceMappingURL=NewcommandMappings.js.map

/***/ }),

/***/ 1110:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var sm = __importStar(__webpack_require__(9140));
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var NewcommandUtil_js_1 = __importDefault(__webpack_require__(5579));
var NewcommandMethods = {};
NewcommandMethods.NewCommand = function (parser, name) {
    var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);
    var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);
    var opt = parser.GetBrackets(name);
    var def = parser.GetArgument(name);
    NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [def, n, opt]);
};
NewcommandMethods.NewEnvironment = function (parser, name) {
    var env = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
    var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);
    var opt = parser.GetBrackets(name);
    var bdef = parser.GetArgument(name);
    var edef = parser.GetArgument(name);
    NewcommandUtil_js_1.default.addEnvironment(parser, env, NewcommandMethods.BeginEnv, [true, bdef, edef, n, opt]);
};
NewcommandMethods.MacroDef = function (parser, name) {
    var cs = NewcommandUtil_js_1.default.GetCSname(parser, name);
    var params = NewcommandUtil_js_1.default.GetTemplate(parser, name, '\\' + cs);
    var def = parser.GetArgument(name);
    !(params instanceof Array) ?
        NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [def, params]) :
        NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.MacroWithTemplate, [def].concat(params));
};
NewcommandMethods.Let = function (parser, name) {
    var cs = NewcommandUtil_js_1.default.GetCSname(parser, name);
    var c = parser.GetNext();
    if (c === '=') {
        parser.i++;
        c = parser.GetNext();
    }
    var handlers = parser.configuration.handlers;
    if (c === '\\') {
        name = NewcommandUtil_js_1.default.GetCSname(parser, name);
        var macro_1 = handlers.get('delimiter').lookup('\\' + name);
        if (macro_1) {
            NewcommandUtil_js_1.default.addDelimiter(parser, '\\' + cs, macro_1.char, macro_1.attributes);
            return;
        }
        var map_1 = handlers.get('macro').applicable(name);
        if (!map_1) {
            return;
        }
        if (map_1 instanceof sm.MacroMap) {
            var macro_2 = map_1.lookup(name);
            NewcommandUtil_js_1.default.addMacro(parser, cs, macro_2.func, macro_2.args, macro_2.symbol);
            return;
        }
        macro_1 = map_1.lookup(name);
        var newArgs = NewcommandUtil_js_1.default.disassembleSymbol(cs, macro_1);
        var method = function (p, _cs) {
            var rest = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                rest[_i - 2] = arguments[_i];
            }
            var symb = NewcommandUtil_js_1.default.assembleSymbol(rest);
            return map_1.parser(p, symb);
        };
        NewcommandUtil_js_1.default.addMacro(parser, cs, method, newArgs);
        return;
    }
    parser.i++;
    var macro = handlers.get('delimiter').lookup(c);
    if (macro) {
        NewcommandUtil_js_1.default.addDelimiter(parser, '\\' + cs, macro.char, macro.attributes);
        return;
    }
    NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [c]);
};
NewcommandMethods.MacroWithTemplate = function (parser, name, text, n) {
    var params = [];
    for (var _i = 4; _i < arguments.length; _i++) {
        params[_i - 4] = arguments[_i];
    }
    var argCount = parseInt(n, 10);
    if (argCount) {
        var args = [];
        parser.GetNext();
        if (params[0] && !NewcommandUtil_js_1.default.MatchParam(parser, params[0])) {
            throw new TexError_js_1.default('MismatchUseDef', 'Use of %1 doesn\'t match its definition', name);
        }
        for (var i = 0; i < argCount; i++) {
            args.push(NewcommandUtil_js_1.default.GetParameter(parser, name, params[i + 1]));
        }
        text = ParseUtil_js_1.default.substituteArgs(parser, args, text);
    }
    parser.string = ParseUtil_js_1.default.addArgs(parser, text, parser.string.slice(parser.i));
    parser.i = 0;
    ParseUtil_js_1.default.checkMaxMacros(parser);
};
NewcommandMethods.BeginEnv = function (parser, begin, bdef, edef, n, def) {
    if (begin.getProperty('end') && parser.stack.env['closing'] === begin.getName()) {
        delete parser.stack.env['closing'];
        var rest = parser.string.slice(parser.i);
        parser.string = edef;
        parser.i = 0;
        parser.Parse();
        parser.string = rest;
        parser.i = 0;
        return parser.itemFactory.create('end').setProperty('name', begin.getName());
    }
    if (n) {
        var args = [];
        if (def != null) {
            var optional = parser.GetBrackets('\\begin{' + begin.getName() + '}');
            args.push(optional == null ? def : optional);
        }
        for (var i = args.length; i < n; i++) {
            args.push(parser.GetArgument('\\begin{' + begin.getName() + '}'));
        }
        bdef = ParseUtil_js_1.default.substituteArgs(parser, args, bdef);
        edef = ParseUtil_js_1.default.substituteArgs(parser, [], edef);
    }
    parser.string = ParseUtil_js_1.default.addArgs(parser, bdef, parser.string.slice(parser.i));
    parser.i = 0;
    return parser.itemFactory.create('beginEnv').setProperty('name', begin.getName());
};
NewcommandMethods.Macro = BaseMethods_js_1.default.Macro;
exports["default"] = NewcommandMethods;
//# sourceMappingURL=NewcommandMethods.js.map

/***/ }),

/***/ 5579:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var Symbol_js_1 = __webpack_require__(8803);
var NewcommandUtil;
(function (NewcommandUtil) {
    function disassembleSymbol(name, symbol) {
        var newArgs = [name, symbol.char];
        if (symbol.attributes) {
            for (var key in symbol.attributes) {
                newArgs.push(key);
                newArgs.push(symbol.attributes[key]);
            }
        }
        return newArgs;
    }
    NewcommandUtil.disassembleSymbol = disassembleSymbol;
    function assembleSymbol(args) {
        var name = args[0];
        var char = args[1];
        var attrs = {};
        for (var i = 2; i < args.length; i = i + 2) {
            attrs[args[i]] = args[i + 1];
        }
        return new Symbol_js_1.Symbol(name, char, attrs);
    }
    NewcommandUtil.assembleSymbol = assembleSymbol;
    function GetCSname(parser, cmd) {
        var c = parser.GetNext();
        if (c !== '\\') {
            throw new TexError_js_1.default('MissingCS', '%1 must be followed by a control sequence', cmd);
        }
        var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(cmd));
        return cs.substr(1);
    }
    NewcommandUtil.GetCSname = GetCSname;
    function GetCsNameArgument(parser, name) {
        var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
        if (cs.charAt(0) === '\\') {
            cs = cs.substr(1);
        }
        if (!cs.match(/^(.|[a-z]+)$/i)) {
            throw new TexError_js_1.default('IllegalControlSequenceName', 'Illegal control sequence name for %1', name);
        }
        return cs;
    }
    NewcommandUtil.GetCsNameArgument = GetCsNameArgument;
    function GetArgCount(parser, name) {
        var n = parser.GetBrackets(name);
        if (n) {
            n = ParseUtil_js_1.default.trimSpaces(n);
            if (!n.match(/^[0-9]+$/)) {
                throw new TexError_js_1.default('IllegalParamNumber', 'Illegal number of parameters specified in %1', name);
            }
        }
        return n;
    }
    NewcommandUtil.GetArgCount = GetArgCount;
    function GetTemplate(parser, cmd, cs) {
        var c = parser.GetNext();
        var params = [];
        var n = 0;
        var i = parser.i;
        while (parser.i < parser.string.length) {
            c = parser.GetNext();
            if (c === '#') {
                if (i !== parser.i) {
                    params[n] = parser.string.substr(i, parser.i - i);
                }
                c = parser.string.charAt(++parser.i);
                if (!c.match(/^[1-9]$/)) {
                    throw new TexError_js_1.default('CantUseHash2', 'Illegal use of # in template for %1', cs);
                }
                if (parseInt(c) !== ++n) {
                    throw new TexError_js_1.default('SequentialParam', 'Parameters for %1 must be numbered sequentially', cs);
                }
                i = parser.i + 1;
            }
            else if (c === '{') {
                if (i !== parser.i) {
                    params[n] = parser.string.substr(i, parser.i - i);
                }
                if (params.length > 0) {
                    return [n.toString()].concat(params);
                }
                else {
                    return n;
                }
            }
            parser.i++;
        }
        throw new TexError_js_1.default('MissingReplacementString', 'Missing replacement string for definition of %1', cmd);
    }
    NewcommandUtil.GetTemplate = GetTemplate;
    function GetParameter(parser, name, param) {
        if (param == null) {
            return parser.GetArgument(name);
        }
        var i = parser.i;
        var j = 0;
        var hasBraces = 0;
        while (parser.i < parser.string.length) {
            var c = parser.string.charAt(parser.i);
            if (c === '{') {
                if (parser.i === i) {
                    hasBraces = 1;
                }
                parser.GetArgument(name);
                j = parser.i - i;
            }
            else if (MatchParam(parser, param)) {
                if (hasBraces) {
                    i++;
                    j -= 2;
                }
                return parser.string.substr(i, j);
            }
            else if (c === '\\') {
                parser.i++;
                j++;
                hasBraces = 0;
                var match = parser.string.substr(parser.i).match(/[a-z]+|./i);
                if (match) {
                    parser.i += match[0].length;
                    j = parser.i - i;
                }
            }
            else {
                parser.i++;
                j++;
                hasBraces = 0;
            }
        }
        throw new TexError_js_1.default('RunawayArgument', 'Runaway argument for %1?', name);
    }
    NewcommandUtil.GetParameter = GetParameter;
    function MatchParam(parser, param) {
        if (parser.string.substr(parser.i, param.length) !== param) {
            return 0;
        }
        if (param.match(/\\[a-z]+$/i) &&
            parser.string.charAt(parser.i + param.length).match(/[a-z]/i)) {
            return 0;
        }
        parser.i += param.length;
        return 1;
    }
    NewcommandUtil.MatchParam = MatchParam;
    function addDelimiter(parser, cs, char, attr) {
        var handlers = parser.configuration.handlers;
        var handler = handlers.retrieve(NewcommandUtil.NEW_DELIMITER);
        handler.add(cs, new Symbol_js_1.Symbol(cs, char, attr));
    }
    NewcommandUtil.addDelimiter = addDelimiter;
    function addMacro(parser, cs, func, attr, symbol) {
        if (symbol === void 0) { symbol = ''; }
        var handlers = parser.configuration.handlers;
        var handler = handlers.retrieve(NewcommandUtil.NEW_COMMAND);
        handler.add(cs, new Symbol_js_1.Macro(symbol ? symbol : cs, func, attr));
    }
    NewcommandUtil.addMacro = addMacro;
    function addEnvironment(parser, env, func, attr) {
        var handlers = parser.configuration.handlers;
        var handler = handlers.retrieve(NewcommandUtil.NEW_ENVIRONMENT);
        handler.add(env, new Symbol_js_1.Macro(env, func, attr));
    }
    NewcommandUtil.addEnvironment = addEnvironment;
    NewcommandUtil.NEW_DELIMITER = 'new-Delimiter';
    NewcommandUtil.NEW_COMMAND = 'new-Command';
    NewcommandUtil.NEW_ENVIRONMENT = 'new-Environment';
})(NewcommandUtil || (NewcommandUtil = {}));
exports["default"] = NewcommandUtil;
//# sourceMappingURL=NewcommandUtil.js.map

/***/ }),

/***/ 4234:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NoErrorsConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
function noErrors(factory, message, _id, expr) {
    var mtext = factory.create('token', 'mtext', {}, expr.replace(/\n/g, ' '));
    var error = factory.create('node', 'merror', [mtext], { 'data-mjx-error': message, title: message });
    return error;
}
exports.NoErrorsConfiguration = Configuration_js_1.Configuration.create('noerrors', { nodes: { 'error': noErrors } });
//# sourceMappingURL=NoErrorsConfiguration.js.map

/***/ }),

/***/ 4898:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NoUndefinedConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
function noUndefined(parser, name) {
    var e_1, _a;
    var textNode = parser.create('text', '\\' + name);
    var options = parser.options.noundefined || {};
    var def = {};
    try {
        for (var _b = __values(['color', 'background', 'size']), _c = _b.next(); !_c.done; _c = _b.next()) {
            var id = _c.value;
            if (options[id]) {
                def['math' + id] = options[id];
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    parser.Push(parser.create('node', 'mtext', [], def, textNode));
}
exports.NoUndefinedConfiguration = Configuration_js_1.Configuration.create('noundefined', {
    fallback: { macro: noUndefined },
    options: {
        noundefined: {
            color: 'red',
            background: '',
            size: ''
        }
    },
    priority: 3
});
//# sourceMappingURL=NoUndefinedConfiguration.js.map

/***/ }),

/***/ 3168:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PhysicsConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var PhysicsItems_js_1 = __webpack_require__(2612);
__webpack_require__(3847);
exports.PhysicsConfiguration = Configuration_js_1.Configuration.create('physics', {
    handler: {
        macro: [
            'Physics-automatic-bracing-macros',
            'Physics-vector-macros',
            'Physics-vector-mo',
            'Physics-vector-mi',
            'Physics-derivative-macros',
            'Physics-expressions-macros',
            'Physics-quick-quad-macros',
            'Physics-bra-ket-macros',
            'Physics-matrix-macros'
        ],
        character: ['Physics-characters'],
        environment: ['Physics-aux-envs']
    },
    items: (_a = {},
        _a[PhysicsItems_js_1.AutoOpen.prototype.kind] = PhysicsItems_js_1.AutoOpen,
        _a),
    options: {
        physics: {
            italicdiff: false,
            arrowdel: false
        }
    }
});
//# sourceMappingURL=PhysicsConfiguration.js.map

/***/ }),

/***/ 2612:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AutoOpen = void 0;
var StackItem_js_1 = __webpack_require__(8292);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var AutoOpen = (function (_super) {
    __extends(AutoOpen, _super);
    function AutoOpen() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.openCount = 0;
        return _this;
    }
    Object.defineProperty(AutoOpen.prototype, "kind", {
        get: function () {
            return 'auto open';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AutoOpen.prototype, "isOpen", {
        get: function () {
            return true;
        },
        enumerable: false,
        configurable: true
    });
    AutoOpen.prototype.toMml = function () {
        var parser = this.factory.configuration.parser;
        var right = this.getProperty('right');
        if (this.getProperty('smash')) {
            var mml_1 = _super.prototype.toMml.call(this);
            var smash = parser.create('node', 'mpadded', [mml_1], { height: 0, depth: 0 });
            this.Clear();
            this.Push(parser.create('node', 'TeXAtom', [smash]));
        }
        if (right) {
            this.Push(new TexParser_js_1.default(right, parser.stack.env, parser.configuration).mml());
        }
        var mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), _super.prototype.toMml.call(this), this.getProperty('close'), this.getProperty('big'));
        NodeUtil_js_1.default.removeProperties(mml, 'open', 'close', 'texClass');
        return mml;
    };
    AutoOpen.prototype.checkItem = function (item) {
        if (item.isKind('mml') && item.Size() === 1) {
            var mml = item.toMml();
            if (mml.isKind('mo') && mml.getText() === this.getProperty('open')) {
                this.openCount++;
            }
        }
        var close = item.getProperty('autoclose');
        if (close && close === this.getProperty('close') && !this.openCount--) {
            if (this.getProperty('ignore')) {
                this.Clear();
                return [[], true];
            }
            return [[this.toMml()], true];
        }
        return _super.prototype.checkItem.call(this, item);
    };
    AutoOpen.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
        'stop': ['ExtraOrMissingDelims', 'Extra open or missing close delimiter']
    });
    return AutoOpen;
}(StackItem_js_1.BaseItem));
exports.AutoOpen = AutoOpen;
//# sourceMappingURL=PhysicsItems.js.map

/***/ }),

/***/ 3847:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var SymbolMap_js_1 = __webpack_require__(9140);
var PhysicsMethods_js_1 = __importDefault(__webpack_require__(7157));
var TexConstants_js_1 = __webpack_require__(8317);
var ParseMethods_js_1 = __importDefault(__webpack_require__(5450));
var MmlNode_js_1 = __webpack_require__(9007);
new SymbolMap_js_1.CommandMap('Physics-automatic-bracing-macros', {
    'quantity': 'Quantity',
    'qty': 'Quantity',
    'pqty': ['Quantity', '(', ')', true],
    'bqty': ['Quantity', '[', ']', true],
    'vqty': ['Quantity', '|', '|', true],
    'Bqty': ['Quantity', '\\{', '\\}', true],
    'absolutevalue': ['Quantity', '|', '|', true],
    'abs': ['Quantity', '|', '|', true],
    'norm': ['Quantity', '\\|', '\\|', true],
    'evaluated': 'Eval',
    'eval': 'Eval',
    'order': ['Quantity', '(', ')', true, 'O',
        TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
    'commutator': 'Commutator',
    'comm': 'Commutator',
    'anticommutator': ['Commutator', '\\{', '\\}'],
    'acomm': ['Commutator', '\\{', '\\}'],
    'poissonbracket': ['Commutator', '\\{', '\\}'],
    'pb': ['Commutator', '\\{', '\\}']
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CharacterMap('Physics-vector-mo', ParseMethods_js_1.default.mathchar0mo, {
    dotproduct: ['\u22C5', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }],
    vdot: ['\u22C5', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }],
    crossproduct: '\u00D7',
    cross: '\u00D7',
    cp: '\u00D7',
    gradientnabla: ['\u2207', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }]
});
new SymbolMap_js_1.CharacterMap('Physics-vector-mi', ParseMethods_js_1.default.mathchar0mi, {
    real: ['\u211C', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
    imaginary: ['\u2111', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }]
});
new SymbolMap_js_1.CommandMap('Physics-vector-macros', {
    'vnabla': 'Vnabla',
    'vectorbold': 'VectorBold',
    'vb': 'VectorBold',
    'vectorarrow': ['StarMacro', 1, '\\vec{\\vb', '{#1}}'],
    'va': ['StarMacro', 1, '\\vec{\\vb', '{#1}}'],
    'vectorunit': ['StarMacro', 1, '\\hat{\\vb', '{#1}}'],
    'vu': ['StarMacro', 1, '\\hat{\\vb', '{#1}}'],
    'gradient': ['OperatorApplication', '\\vnabla', '(', '['],
    'grad': ['OperatorApplication', '\\vnabla', '(', '['],
    'divergence': ['VectorOperator', '\\vnabla\\vdot', '(', '['],
    'div': ['VectorOperator', '\\vnabla\\vdot', '(', '['],
    'curl': ['VectorOperator', '\\vnabla\\crossproduct', '(', '['],
    'laplacian': ['OperatorApplication', '\\nabla^2', '(', '['],
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-expressions-macros', {
    'sin': 'Expression',
    'sinh': 'Expression',
    'arcsin': 'Expression',
    'asin': 'Expression',
    'cos': 'Expression',
    'cosh': 'Expression',
    'arccos': 'Expression',
    'acos': 'Expression',
    'tan': 'Expression',
    'tanh': 'Expression',
    'arctan': 'Expression',
    'atan': 'Expression',
    'csc': 'Expression',
    'csch': 'Expression',
    'arccsc': 'Expression',
    'acsc': 'Expression',
    'sec': 'Expression',
    'sech': 'Expression',
    'arcsec': 'Expression',
    'asec': 'Expression',
    'cot': 'Expression',
    'coth': 'Expression',
    'arccot': 'Expression',
    'acot': 'Expression',
    'exp': ['Expression', false],
    'log': 'Expression',
    'ln': 'Expression',
    'det': ['Expression', false],
    'Pr': ['Expression', false],
    'tr': ['Expression', false],
    'trace': ['Expression', false, 'tr'],
    'Tr': ['Expression', false],
    'Trace': ['Expression', false, 'Tr'],
    'rank': 'NamedFn',
    'erf': ['Expression', false],
    'Residue': ['Macro', '\\mathrm{Res}'],
    'Res': ['OperatorApplication', '\\Residue', '(', '[', '{'],
    'principalvalue': ['OperatorApplication', '{\\cal P}'],
    'pv': ['OperatorApplication', '{\\cal P}'],
    'PV': ['OperatorApplication', '{\\rm P.V.}'],
    'Re': ['OperatorApplication', '\\mathrm{Re}', '{'],
    'Im': ['OperatorApplication', '\\mathrm{Im}', '{'],
    'sine': ['NamedFn', 'sin'],
    'hypsine': ['NamedFn', 'sinh'],
    'arcsine': ['NamedFn', 'arcsin'],
    'asine': ['NamedFn', 'asin'],
    'cosine': ['NamedFn', 'cos'],
    'hypcosine': ['NamedFn', 'cosh'],
    'arccosine': ['NamedFn', 'arccos'],
    'acosine': ['NamedFn', 'acos'],
    'tangent': ['NamedFn', 'tan'],
    'hyptangent': ['NamedFn', 'tanh'],
    'arctangent': ['NamedFn', 'arctan'],
    'atangent': ['NamedFn', 'atan'],
    'cosecant': ['NamedFn', 'csc'],
    'hypcosecant': ['NamedFn', 'csch'],
    'arccosecant': ['NamedFn', 'arccsc'],
    'acosecant': ['NamedFn', 'acsc'],
    'secant': ['NamedFn', 'sec'],
    'hypsecant': ['NamedFn', 'sech'],
    'arcsecant': ['NamedFn', 'arcsec'],
    'asecant': ['NamedFn', 'asec'],
    'cotangent': ['NamedFn', 'cot'],
    'hypcotangent': ['NamedFn', 'coth'],
    'arccotangent': ['NamedFn', 'arccot'],
    'acotangent': ['NamedFn', 'acot'],
    'exponential': ['NamedFn', 'exp'],
    'logarithm': ['NamedFn', 'log'],
    'naturallogarithm': ['NamedFn', 'ln'],
    'determinant': ['NamedFn', 'det'],
    'Probability': ['NamedFn', 'Pr'],
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-quick-quad-macros', {
    'qqtext': 'Qqtext',
    'qq': 'Qqtext',
    'qcomma': ['Macro', '\\qqtext*{,}'],
    'qc': ['Macro', '\\qqtext*{,}'],
    'qcc': ['Qqtext', 'c.c.'],
    'qif': ['Qqtext', 'if'],
    'qthen': ['Qqtext', 'then'],
    'qelse': ['Qqtext', 'else'],
    'qotherwise': ['Qqtext', 'otherwise'],
    'qunless': ['Qqtext', 'unless'],
    'qgiven': ['Qqtext', 'given'],
    'qusing': ['Qqtext', 'using'],
    'qassume': ['Qqtext', 'assume'],
    'qsince': ['Qqtext', 'since'],
    'qlet': ['Qqtext', 'let'],
    'qfor': ['Qqtext', 'for'],
    'qall': ['Qqtext', 'all'],
    'qeven': ['Qqtext', 'even'],
    'qodd': ['Qqtext', 'odd'],
    'qinteger': ['Qqtext', 'integer'],
    'qand': ['Qqtext', 'and'],
    'qor': ['Qqtext', 'or'],
    'qas': ['Qqtext', 'as'],
    'qin': ['Qqtext', 'in'],
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-derivative-macros', {
    'diffd': 'DiffD',
    'flatfrac': ['Macro', '\\left.#1\\middle/#2\\right.', 2],
    'differential': ['Differential', '\\diffd'],
    'dd': ['Differential', '\\diffd'],
    'variation': ['Differential', '\\delta'],
    'var': ['Differential', '\\delta'],
    'derivative': ['Derivative', 2, '\\diffd'],
    'dv': ['Derivative', 2, '\\diffd'],
    'partialderivative': ['Derivative', 3, '\\partial'],
    'pderivative': ['Derivative', 3, '\\partial'],
    'pdv': ['Derivative', 3, '\\partial'],
    'functionalderivative': ['Derivative', 2, '\\delta'],
    'fderivative': ['Derivative', 2, '\\delta'],
    'fdv': ['Derivative', 2, '\\delta'],
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-bra-ket-macros', {
    'bra': 'Bra',
    'ket': 'Ket',
    'innerproduct': 'BraKet',
    'ip': 'BraKet',
    'braket': 'BraKet',
    'outerproduct': 'KetBra',
    'dyad': 'KetBra',
    'ketbra': 'KetBra',
    'op': 'KetBra',
    'expectationvalue': 'Expectation',
    'expval': 'Expectation',
    'ev': 'Expectation',
    'matrixelement': 'MatrixElement',
    'matrixel': 'MatrixElement',
    'mel': 'MatrixElement',
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.CommandMap('Physics-matrix-macros', {
    'matrixquantity': 'MatrixQuantity',
    'mqty': 'MatrixQuantity',
    'pmqty': ['Macro', '\\mqty(#1)', 1],
    'Pmqty': ['Macro', '\\mqty*(#1)', 1],
    'bmqty': ['Macro', '\\mqty[#1]', 1],
    'vmqty': ['Macro', '\\mqty|#1|', 1],
    'smallmatrixquantity': ['MatrixQuantity', true],
    'smqty': ['MatrixQuantity', true],
    'spmqty': ['Macro', '\\smqty(#1)', 1],
    'sPmqty': ['Macro', '\\smqty*(#1)', 1],
    'sbmqty': ['Macro', '\\smqty[#1]', 1],
    'svmqty': ['Macro', '\\smqty|#1|', 1],
    'matrixdeterminant': ['Macro', '\\vmqty{#1}', 1],
    'mdet': ['Macro', '\\vmqty{#1}', 1],
    'smdet': ['Macro', '\\svmqty{#1}', 1],
    'identitymatrix': 'IdentityMatrix',
    'imat': 'IdentityMatrix',
    'xmatrix': 'XMatrix',
    'xmat': 'XMatrix',
    'zeromatrix': ['Macro', '\\xmat{0}{#1}{#2}', 2],
    'zmat': ['Macro', '\\xmat{0}{#1}{#2}', 2],
    'paulimatrix': 'PauliMatrix',
    'pmat': 'PauliMatrix',
    'diagonalmatrix': 'DiagonalMatrix',
    'dmat': 'DiagonalMatrix',
    'antidiagonalmatrix': ['DiagonalMatrix', true],
    'admat': ['DiagonalMatrix', true]
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.EnvironmentMap('Physics-aux-envs', ParseMethods_js_1.default.environment, {
    smallmatrix: ['Array', null, null, null, 'c', '0.333em', '.2em', 'S', 1]
}, PhysicsMethods_js_1.default);
new SymbolMap_js_1.MacroMap('Physics-characters', {
    '|': ['AutoClose', MmlNode_js_1.TEXCLASS.ORD],
    ')': 'AutoClose',
    ']': 'AutoClose'
}, PhysicsMethods_js_1.default);
//# sourceMappingURL=PhysicsMappings.js.map

/***/ }),

/***/ 7157:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var MmlNode_js_1 = __webpack_require__(9007);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var NodeFactory_js_1 = __webpack_require__(8929);
var PhysicsMethods = {};
var pairs = {
    '(': ')',
    '[': ']',
    '{': '}',
    '|': '|',
};
var biggs = /^(b|B)i(g{1,2})$/;
PhysicsMethods.Quantity = function (parser, name, open, close, arg, named, variant) {
    if (open === void 0) { open = '('; }
    if (close === void 0) { close = ')'; }
    if (arg === void 0) { arg = false; }
    if (named === void 0) { named = ''; }
    if (variant === void 0) { variant = ''; }
    var star = arg ? parser.GetStar() : false;
    var next = parser.GetNext();
    var position = parser.i;
    var big = null;
    if (next === '\\') {
        parser.i++;
        big = parser.GetCS();
        if (!big.match(biggs)) {
            var empty = parser.create('node', 'mrow');
            parser.Push(ParseUtil_js_1.default.fenced(parser.configuration, open, empty, close));
            parser.i = position;
            return;
        }
        next = parser.GetNext();
    }
    var right = pairs[next];
    if (arg && next !== '{') {
        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
    }
    if (!right) {
        var empty = parser.create('node', 'mrow');
        parser.Push(ParseUtil_js_1.default.fenced(parser.configuration, open, empty, close));
        parser.i = position;
        return;
    }
    if (named) {
        var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, named);
        if (variant) {
            NodeUtil_js_1.default.setAttribute(mml, 'mathvariant', variant);
        }
        parser.Push(parser.itemFactory.create('fn', mml));
    }
    if (next === '{') {
        var argument = parser.GetArgument(name);
        next = arg ? open : '\\{';
        right = arg ? close : '\\}';
        argument = star ? next + ' ' + argument + ' ' + right :
            (big ?
                '\\' + big + 'l' + next + ' ' + argument + ' ' + '\\' + big + 'r' + right :
                '\\left' + next + ' ' + argument + ' ' + '\\right' + right);
        parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
        return;
    }
    if (arg) {
        next = open;
        right = close;
    }
    parser.i++;
    parser.Push(parser.itemFactory.create('auto open')
        .setProperties({ open: next, close: right, big: big }));
};
PhysicsMethods.Eval = function (parser, name) {
    var star = parser.GetStar();
    var next = parser.GetNext();
    if (next === '{') {
        var arg = parser.GetArgument(name);
        var replace = '\\left. ' +
            (star ? '\\smash{' + arg + '}' : arg) +
            ' ' + '\\vphantom{\\int}\\right|';
        parser.string = parser.string.slice(0, parser.i) + replace +
            parser.string.slice(parser.i);
        return;
    }
    if (next === '(' || next === '[') {
        parser.i++;
        parser.Push(parser.itemFactory.create('auto open')
            .setProperties({ open: next, close: '|',
            smash: star, right: '\\vphantom{\\int}' }));
        return;
    }
    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
};
PhysicsMethods.Commutator = function (parser, name, open, close) {
    if (open === void 0) { open = '['; }
    if (close === void 0) { close = ']'; }
    var star = parser.GetStar();
    var next = parser.GetNext();
    var big = null;
    if (next === '\\') {
        parser.i++;
        big = parser.GetCS();
        if (!big.match(biggs)) {
            throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
        }
        next = parser.GetNext();
    }
    if (next !== '{') {
        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
    }
    var arg1 = parser.GetArgument(name);
    var arg2 = parser.GetArgument(name);
    var argument = arg1 + ',' + arg2;
    argument = star ? open + ' ' + argument + ' ' + close :
        (big ?
            '\\' + big + 'l' + open + ' ' + argument + ' ' + '\\' + big + 'r' + close :
            '\\left' + open + ' ' + argument + ' ' + '\\right' + close);
    parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
};
var latinCap = [0x41, 0x5A];
var latinSmall = [0x61, 0x7A];
var greekCap = [0x391, 0x3A9];
var greekSmall = [0x3B1, 0x3C9];
var digits = [0x30, 0x39];
function inRange(value, range) {
    return (value >= range[0] && value <= range[1]);
}
function createVectorToken(factory, kind, def, text) {
    var parser = factory.configuration.parser;
    var token = NodeFactory_js_1.NodeFactory.createToken(factory, kind, def, text);
    var code = text.codePointAt(0);
    if (text.length === 1 && !parser.stack.env.font &&
        parser.stack.env.vectorFont &&
        (inRange(code, latinCap) || inRange(code, latinSmall) ||
            inRange(code, greekCap) || inRange(code, digits) ||
            (inRange(code, greekSmall) && parser.stack.env.vectorStar) ||
            NodeUtil_js_1.default.getAttribute(token, 'accent'))) {
        NodeUtil_js_1.default.setAttribute(token, 'mathvariant', parser.stack.env.vectorFont);
    }
    return token;
}
PhysicsMethods.VectorBold = function (parser, name) {
    var star = parser.GetStar();
    var arg = parser.GetArgument(name);
    var oldToken = parser.configuration.nodeFactory.get('token');
    var oldFont = parser.stack.env.font;
    delete parser.stack.env.font;
    parser.configuration.nodeFactory.set('token', createVectorToken);
    parser.stack.env.vectorFont = star ? 'bold-italic' : 'bold';
    parser.stack.env.vectorStar = star;
    var node = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
    if (oldFont) {
        parser.stack.env.font = oldFont;
    }
    delete parser.stack.env.vectorFont;
    delete parser.stack.env.vectorStar;
    parser.configuration.nodeFactory.set('token', oldToken);
    parser.Push(node);
};
PhysicsMethods.StarMacro = function (parser, name, argcount) {
    var parts = [];
    for (var _i = 3; _i < arguments.length; _i++) {
        parts[_i - 3] = arguments[_i];
    }
    var star = parser.GetStar();
    var args = [];
    if (argcount) {
        for (var i = args.length; i < argcount; i++) {
            args.push(parser.GetArgument(name));
        }
    }
    var macro = parts.join(star ? '*' : '');
    macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);
    parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));
    parser.i = 0;
    ParseUtil_js_1.default.checkMaxMacros(parser);
};
var vectorApplication = function (parser, kind, name, operator, fences) {
    var op = new TexParser_js_1.default(operator, parser.stack.env, parser.configuration).mml();
    parser.Push(parser.itemFactory.create(kind, op));
    var left = parser.GetNext();
    var right = pairs[left];
    if (!right) {
        return;
    }
    var lfence = '', rfence = '', arg = '';
    var enlarge = fences.indexOf(left) !== -1;
    if (left === '{') {
        arg = parser.GetArgument(name);
        lfence = enlarge ? '\\left\\{' : '';
        rfence = enlarge ? '\\right\\}' : '';
        var macro = lfence + ' ' + arg + ' ' + rfence;
        parser.string = macro + parser.string.slice(parser.i);
        parser.i = 0;
        return;
    }
    if (!enlarge) {
        return;
    }
    parser.i++;
    parser.Push(parser.itemFactory.create('auto open')
        .setProperties({ open: left, close: right }));
};
PhysicsMethods.OperatorApplication = function (parser, name, operator) {
    var fences = [];
    for (var _i = 3; _i < arguments.length; _i++) {
        fences[_i - 3] = arguments[_i];
    }
    vectorApplication(parser, 'fn', name, operator, fences);
};
PhysicsMethods.VectorOperator = function (parser, name, operator) {
    var fences = [];
    for (var _i = 3; _i < arguments.length; _i++) {
        fences[_i - 3] = arguments[_i];
    }
    vectorApplication(parser, 'mml', name, operator, fences);
};
PhysicsMethods.Expression = function (parser, name, opt, id) {
    if (opt === void 0) { opt = true; }
    if (id === void 0) { id = ''; }
    id = id || name.slice(1);
    var exp = opt ? parser.GetBrackets(name) : null;
    var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, id);
    if (exp) {
        var sup = new TexParser_js_1.default(exp, parser.stack.env, parser.configuration).mml();
        mml = parser.create('node', 'msup', [mml, sup]);
    }
    parser.Push(parser.itemFactory.create('fn', mml));
    if (parser.GetNext() !== '(') {
        return;
    }
    parser.i++;
    parser.Push(parser.itemFactory.create('auto open')
        .setProperties({ open: '(', close: ')' }));
};
PhysicsMethods.Qqtext = function (parser, name, text) {
    var star = parser.GetStar();
    var arg = text ? text : parser.GetArgument(name);
    var replace = (star ? '' : '\\quad') + '\\text{' + arg + '}\\quad ';
    parser.string = parser.string.slice(0, parser.i) + replace +
        parser.string.slice(parser.i);
};
PhysicsMethods.Differential = function (parser, name, op) {
    var optArg = parser.GetBrackets(name);
    var power = optArg != null ? '^{' + optArg + '}' : ' ';
    var parens = parser.GetNext() === '(';
    var braces = parser.GetNext() === '{';
    var macro = op + power;
    if (!(parens || braces)) {
        macro += parser.GetArgument(name, true) || '';
        var mml = new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml();
        parser.Push(mml);
        return;
    }
    if (braces) {
        macro += parser.GetArgument(name);
        var mml = new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml();
        parser.Push(parser.create('node', 'TeXAtom', [mml], { texClass: MmlNode_js_1.TEXCLASS.OP }));
        return;
    }
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
    parser.i++;
    parser.Push(parser.itemFactory.create('auto open')
        .setProperties({ open: '(', close: ')' }));
};
PhysicsMethods.Derivative = function (parser, name, argMax, op) {
    var star = parser.GetStar();
    var optArg = parser.GetBrackets(name);
    var argCounter = 1;
    var args = [];
    args.push(parser.GetArgument(name));
    while (parser.GetNext() === '{' && argCounter < argMax) {
        args.push(parser.GetArgument(name));
        argCounter++;
    }
    var ignore = false;
    var power1 = ' ';
    var power2 = ' ';
    if (argMax > 2 && args.length > 2) {
        power1 = '^{' + (args.length - 1) + '}';
        ignore = true;
    }
    else if (optArg != null) {
        if (argMax > 2 && args.length > 1) {
            ignore = true;
        }
        power1 = '^{' + optArg + '}';
        power2 = power1;
    }
    var frac = star ? '\\flatfrac' : '\\frac';
    var first = args.length > 1 ? args[0] : '';
    var second = args.length > 1 ? args[1] : args[0];
    var rest = '';
    for (var i = 2, arg = void 0; arg = args[i]; i++) {
        rest += op + ' ' + arg;
    }
    var macro = frac + '{' + op + power1 + first + '}' +
        '{' + op + ' ' + second + power2 + ' ' + rest + '}';
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
    if (parser.GetNext() === '(') {
        parser.i++;
        parser.Push(parser.itemFactory.create('auto open')
            .setProperties({ open: '(', close: ')', ignore: ignore }));
    }
};
PhysicsMethods.Bra = function (parser, name) {
    var starBra = parser.GetStar();
    var bra = parser.GetArgument(name);
    var ket = '';
    var hasKet = false;
    var starKet = false;
    if (parser.GetNext() === '\\') {
        var saveI = parser.i;
        parser.i++;
        var cs = parser.GetCS();
        var symbol = parser.lookup('macro', cs);
        if (symbol && symbol.symbol === 'ket') {
            hasKet = true;
            saveI = parser.i;
            starKet = parser.GetStar();
            if (parser.GetNext() === '{') {
                ket = parser.GetArgument(cs, true);
            }
            else {
                parser.i = saveI;
                starKet = false;
            }
        }
        else {
            parser.i = saveI;
        }
    }
    var macro = '';
    if (hasKet) {
        macro = (starBra || starKet) ?
            "\\langle{".concat(bra, "}\\vert{").concat(ket, "}\\rangle") :
            "\\left\\langle{".concat(bra, "}\\middle\\vert{").concat(ket, "}\\right\\rangle");
    }
    else {
        macro = (starBra || starKet) ?
            "\\langle{".concat(bra, "}\\vert") : "\\left\\langle{".concat(bra, "}\\right\\vert{").concat(ket, "}");
    }
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};
PhysicsMethods.Ket = function (parser, name) {
    var star = parser.GetStar();
    var ket = parser.GetArgument(name);
    var macro = star ? "\\vert{".concat(ket, "}\\rangle") :
        "\\left\\vert{".concat(ket, "}\\right\\rangle");
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};
PhysicsMethods.BraKet = function (parser, name) {
    var star = parser.GetStar();
    var bra = parser.GetArgument(name);
    var ket = null;
    if (parser.GetNext() === '{') {
        ket = parser.GetArgument(name, true);
    }
    var macro = '';
    if (ket == null) {
        macro = star ?
            "\\langle{".concat(bra, "}\\vert{").concat(bra, "}\\rangle") :
            "\\left\\langle{".concat(bra, "}\\middle\\vert{").concat(bra, "}\\right\\rangle");
    }
    else {
        macro = star ?
            "\\langle{".concat(bra, "}\\vert{").concat(ket, "}\\rangle") :
            "\\left\\langle{".concat(bra, "}\\middle\\vert{").concat(ket, "}\\right\\rangle");
    }
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};
PhysicsMethods.KetBra = function (parser, name) {
    var star = parser.GetStar();
    var ket = parser.GetArgument(name);
    var bra = null;
    if (parser.GetNext() === '{') {
        bra = parser.GetArgument(name, true);
    }
    var macro = '';
    if (bra == null) {
        macro = star ?
            "\\vert{".concat(ket, "}\\rangle\\!\\langle{").concat(ket, "}\\vert") :
            "\\left\\vert{".concat(ket, "}\\middle\\rangle\\!\\middle\\langle{").concat(ket, "}\\right\\vert");
    }
    else {
        macro = star ?
            "\\vert{".concat(ket, "}\\rangle\\!\\langle{").concat(bra, "}\\vert") :
            "\\left\\vert{".concat(ket, "}\\middle\\rangle\\!\\middle\\langle{").concat(bra, "}\\right\\vert");
    }
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};
function outputBraket(_a, star1, star2) {
    var _b = __read(_a, 3), arg1 = _b[0], arg2 = _b[1], arg3 = _b[2];
    return (star1 && star2) ?
        "\\left\\langle{".concat(arg1, "}\\middle\\vert{").concat(arg2, "}\\middle\\vert{").concat(arg3, "}\\right\\rangle") :
        (star1 ? "\\langle{".concat(arg1, "}\\vert{").concat(arg2, "}\\vert{").concat(arg3, "}\\rangle") :
            "\\left\\langle{".concat(arg1, "}\\right\\vert{").concat(arg2, "}\\left\\vert{").concat(arg3, "}\\right\\rangle"));
}
PhysicsMethods.Expectation = function (parser, name) {
    var star1 = parser.GetStar();
    var star2 = star1 && parser.GetStar();
    var arg1 = parser.GetArgument(name);
    var arg2 = null;
    if (parser.GetNext() === '{') {
        arg2 = parser.GetArgument(name, true);
    }
    var macro = (arg1 && arg2) ?
        outputBraket([arg2, arg1, arg2], star1, star2) :
        (star1 ? "\\langle {".concat(arg1, "} \\rangle") :
            "\\left\\langle {".concat(arg1, "} \\right\\rangle"));
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};
PhysicsMethods.MatrixElement = function (parser, name) {
    var star1 = parser.GetStar();
    var star2 = star1 && parser.GetStar();
    var arg1 = parser.GetArgument(name);
    var arg2 = parser.GetArgument(name);
    var arg3 = parser.GetArgument(name);
    var macro = outputBraket([arg1, arg2, arg3], star1, star2);
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};
PhysicsMethods.MatrixQuantity = function (parser, name, small) {
    var star = parser.GetStar();
    var next = parser.GetNext();
    var array = small ? 'smallmatrix' : 'array';
    var arg = '';
    var open = '';
    var close = '';
    switch (next) {
        case '{':
            arg = parser.GetArgument(name);
            break;
        case '(':
            parser.i++;
            open = star ? '\\lgroup' : '(';
            close = star ? '\\rgroup' : ')';
            arg = parser.GetUpTo(name, ')');
            break;
        case '[':
            parser.i++;
            open = '[';
            close = ']';
            arg = parser.GetUpTo(name, ']');
            break;
        case '|':
            parser.i++;
            open = '|';
            close = '|';
            arg = parser.GetUpTo(name, '|');
            break;
        default:
            open = '(';
            close = ')';
            break;
    }
    var macro = (open ? '\\left' : '') + open +
        '\\begin{' + array + '}{} ' + arg + '\\end{' + array + '}' +
        (open ? '\\right' : '') + close;
    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
};
PhysicsMethods.IdentityMatrix = function (parser, name) {
    var arg = parser.GetArgument(name);
    var size = parseInt(arg, 10);
    if (isNaN(size)) {
        throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
    }
    if (size <= 1) {
        parser.string = '1' + parser.string.slice(parser.i);
        parser.i = 0;
        return;
    }
    var zeros = Array(size).fill('0');
    var columns = [];
    for (var i = 0; i < size; i++) {
        var row = zeros.slice();
        row[i] = '1';
        columns.push(row.join(' & '));
    }
    parser.string = columns.join('\\\\ ') + parser.string.slice(parser.i);
    parser.i = 0;
};
PhysicsMethods.XMatrix = function (parser, name) {
    var star = parser.GetStar();
    var arg1 = parser.GetArgument(name);
    var arg2 = parser.GetArgument(name);
    var arg3 = parser.GetArgument(name);
    var n = parseInt(arg2, 10);
    var m = parseInt(arg3, 10);
    if (isNaN(n) || isNaN(m) || m.toString() !== arg3 || n.toString() !== arg2) {
        throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
    }
    n = n < 1 ? 1 : n;
    m = m < 1 ? 1 : m;
    if (!star) {
        var row = Array(m).fill(arg1).join(' & ');
        var matrix_1 = Array(n).fill(row).join('\\\\ ');
        parser.string = matrix_1 + parser.string.slice(parser.i);
        parser.i = 0;
        return;
    }
    var matrix = '';
    if (n === 1 && m === 1) {
        matrix = arg1;
    }
    else if (n === 1) {
        var row = [];
        for (var i = 1; i <= m; i++) {
            row.push("".concat(arg1, "_{").concat(i, "}"));
        }
        matrix = row.join(' & ');
    }
    else if (m === 1) {
        var row = [];
        for (var i = 1; i <= n; i++) {
            row.push("".concat(arg1, "_{").concat(i, "}"));
        }
        matrix = row.join('\\\\ ');
    }
    else {
        var rows = [];
        for (var i = 1; i <= n; i++) {
            var row = [];
            for (var j = 1; j <= m; j++) {
                row.push("".concat(arg1, "_{{").concat(i, "}{").concat(j, "}}"));
            }
            rows.push(row.join(' & '));
        }
        matrix = rows.join('\\\\ ');
    }
    parser.string = matrix + parser.string.slice(parser.i);
    parser.i = 0;
    return;
};
PhysicsMethods.PauliMatrix = function (parser, name) {
    var arg = parser.GetArgument(name);
    var matrix = arg.slice(1);
    switch (arg[0]) {
        case '0':
            matrix += ' 1 & 0\\\\ 0 & 1';
            break;
        case '1':
        case 'x':
            matrix += ' 0 & 1\\\\ 1 & 0';
            break;
        case '2':
        case 'y':
            matrix += ' 0 & -i\\\\ i & 0';
            break;
        case '3':
        case 'z':
            matrix += ' 1 & 0\\\\ 0 & -1';
            break;
        default:
    }
    parser.string = matrix + parser.string.slice(parser.i);
    parser.i = 0;
};
PhysicsMethods.DiagonalMatrix = function (parser, name, anti) {
    if (parser.GetNext() !== '{') {
        return;
    }
    var startI = parser.i;
    parser.GetArgument(name);
    var endI = parser.i;
    parser.i = startI + 1;
    var elements = [];
    var element = '';
    var currentI = parser.i;
    while (currentI < endI) {
        try {
            element = parser.GetUpTo(name, ',');
        }
        catch (e) {
            parser.i = endI;
            elements.push(parser.string.slice(currentI, endI - 1));
            break;
        }
        if (parser.i >= endI) {
            elements.push(parser.string.slice(currentI, endI));
            break;
        }
        currentI = parser.i;
        elements.push(element);
    }
    parser.string = makeDiagMatrix(elements, anti) + parser.string.slice(endI);
    parser.i = 0;
};
function makeDiagMatrix(elements, anti) {
    var length = elements.length;
    var matrix = [];
    for (var i = 0; i < length; i++) {
        matrix.push(Array(anti ? length - i : i + 1).join('&') +
            '\\mqty{' + elements[i] + '}');
    }
    return matrix.join('\\\\ ');
}
PhysicsMethods.AutoClose = function (parser, fence, _texclass) {
    var mo = parser.create('token', 'mo', { stretchy: false }, fence);
    var item = parser.itemFactory.create('mml', mo).
        setProperties({ autoclose: fence });
    parser.Push(item);
};
PhysicsMethods.Vnabla = function (parser, _name) {
    var argument = parser.options.physics.arrowdel ?
        '\\vec{\\gradientnabla}' : '{\\gradientnabla}';
    return parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
};
PhysicsMethods.DiffD = function (parser, _name) {
    var argument = parser.options.physics.italicdiff ? 'd' : '{\\rm d}';
    return parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
};
PhysicsMethods.Macro = BaseMethods_js_1.default.Macro;
PhysicsMethods.NamedFn = BaseMethods_js_1.default.NamedFn;
PhysicsMethods.Array = BaseMethods_js_1.default.Array;
exports["default"] = PhysicsMethods;
//# sourceMappingURL=PhysicsMethods.js.map

/***/ }),

/***/ 7741:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RequireConfiguration = exports.options = exports.RequireMethods = exports.RequireLoad = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var global_js_1 = __webpack_require__(9515);
var package_js_1 = __webpack_require__(265);
var loader_js_1 = __webpack_require__(235);
var mathjax_js_1 = __webpack_require__(5713);
var Options_js_1 = __webpack_require__(7233);
var MJCONFIG = global_js_1.MathJax.config;
function RegisterExtension(jax, name) {
    var _a;
    var require = jax.parseOptions.options.require;
    var required = jax.parseOptions.packageData.get('require').required;
    var extension = name.substr(require.prefix.length);
    if (required.indexOf(extension) < 0) {
        required.push(extension);
        RegisterDependencies(jax, loader_js_1.CONFIG.dependencies[name]);
        var handler = Configuration_js_1.ConfigurationHandler.get(extension);
        if (handler) {
            var options_1 = MJCONFIG[name] || {};
            if (handler.options && Object.keys(handler.options).length === 1 && handler.options[extension]) {
                options_1 = (_a = {}, _a[extension] = options_1, _a);
            }
            jax.configuration.add(extension, jax, options_1);
            var configured = jax.parseOptions.packageData.get('require').configured;
            if (handler.preprocessors.length && !configured.has(extension)) {
                configured.set(extension, true);
                mathjax_js_1.mathjax.retryAfter(Promise.resolve());
            }
        }
    }
}
function RegisterDependencies(jax, names) {
    var e_1, _a;
    if (names === void 0) { names = []; }
    var prefix = jax.parseOptions.options.require.prefix;
    try {
        for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
            var name_1 = names_1_1.value;
            if (name_1.substr(0, prefix.length) === prefix) {
                RegisterExtension(jax, name_1);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
function RequireLoad(parser, name) {
    var options = parser.options.require;
    var allow = options.allow;
    var extension = (name.substr(0, 1) === '[' ? '' : options.prefix) + name;
    var allowed = (allow.hasOwnProperty(extension) ? allow[extension] :
        allow.hasOwnProperty(name) ? allow[name] : options.defaultAllow);
    if (!allowed) {
        throw new TexError_js_1.default('BadRequire', 'Extension "%1" is not allowed to be loaded', extension);
    }
    if (package_js_1.Package.packages.has(extension)) {
        RegisterExtension(parser.configuration.packageData.get('require').jax, extension);
    }
    else {
        mathjax_js_1.mathjax.retryAfter(loader_js_1.Loader.load(extension));
    }
}
exports.RequireLoad = RequireLoad;
function config(_config, jax) {
    jax.parseOptions.packageData.set('require', {
        jax: jax,
        required: __spreadArray([], __read(jax.options.packages), false),
        configured: new Map()
    });
    var options = jax.parseOptions.options.require;
    var prefix = options.prefix;
    if (prefix.match(/[^_a-zA-Z0-9]/)) {
        throw Error('Illegal characters used in \\require prefix');
    }
    if (!loader_js_1.CONFIG.paths[prefix]) {
        loader_js_1.CONFIG.paths[prefix] = '[mathjax]/input/tex/extensions';
    }
    options.prefix = '[' + prefix + ']/';
}
exports.RequireMethods = {
    Require: function (parser, name) {
        var required = parser.GetArgument(name);
        if (required.match(/[^_a-zA-Z0-9]/) || required === '') {
            throw new TexError_js_1.default('BadPackageName', 'Argument for %1 is not a valid package name', name);
        }
        RequireLoad(parser, required);
    }
};
exports.options = {
    require: {
        allow: (0, Options_js_1.expandable)({
            base: false,
            'all-packages': false,
            autoload: false,
            configmacros: false,
            tagformat: false,
            setoptions: false
        }),
        defaultAllow: true,
        prefix: 'tex'
    }
};
new SymbolMap_js_1.CommandMap('require', { require: 'Require' }, exports.RequireMethods);
exports.RequireConfiguration = Configuration_js_1.Configuration.create('require', { handler: { macro: ['require'] }, config: config, options: exports.options });
//# sourceMappingURL=RequireConfiguration.js.map

/***/ }),

/***/ 9365:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetOptionsConfiguration = exports.SetOptionsUtil = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var Symbol_js_1 = __webpack_require__(8803);
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
var Options_js_1 = __webpack_require__(7233);
exports.SetOptionsUtil = {
    filterPackage: function (parser, extension) {
        if (extension !== 'tex' && !Configuration_js_1.ConfigurationHandler.get(extension)) {
            throw new TexError_js_1.default('NotAPackage', 'Not a defined package: %1', extension);
        }
        var config = parser.options.setoptions;
        var options = config.allowOptions[extension];
        if ((options === undefined && !config.allowPackageDefault) || options === false) {
            throw new TexError_js_1.default('PackageNotSettable', 'Options can\'t be set for package "%1"', extension);
        }
        return true;
    },
    filterOption: function (parser, extension, option) {
        var _a;
        var config = parser.options.setoptions;
        var options = config.allowOptions[extension] || {};
        var allow = (options.hasOwnProperty(option) && !(0, Options_js_1.isObject)(options[option]) ? options[option] : null);
        if (allow === false || (allow === null && !config.allowOptionsDefault)) {
            throw new TexError_js_1.default('OptionNotSettable', 'Option "%1" is not allowed to be set', option);
        }
        if (!((_a = (extension === 'tex' ? parser.options : parser.options[extension])) === null || _a === void 0 ? void 0 : _a.hasOwnProperty(option))) {
            if (extension === 'tex') {
                throw new TexError_js_1.default('InvalidTexOption', 'Invalid TeX option "%1"', option);
            }
            else {
                throw new TexError_js_1.default('InvalidOptionKey', 'Invalid option "%1" for package "%2"', option, extension);
            }
        }
        return true;
    },
    filterValue: function (_parser, _extension, _option, value) {
        return value;
    }
};
var setOptionsMap = new SymbolMap_js_1.CommandMap('setoptions', {
    setOptions: 'SetOptions'
}, {
    SetOptions: function (parser, name) {
        var e_1, _a;
        var extension = parser.GetBrackets(name) || 'tex';
        var options = ParseUtil_js_1.default.keyvalOptions(parser.GetArgument(name));
        var config = parser.options.setoptions;
        if (!config.filterPackage(parser, extension))
            return;
        try {
            for (var _b = __values(Object.keys(options)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (config.filterOption(parser, extension, key)) {
                    (extension === 'tex' ? parser.options : parser.options[extension])[key] =
                        config.filterValue(parser, extension, key, options[key]);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
});
function setoptionsConfig(_config, jax) {
    var require = jax.parseOptions.handlers.get('macro').lookup('require');
    if (require) {
        setOptionsMap.add('Require', new Symbol_js_1.Macro('Require', require._func));
        setOptionsMap.add('require', new Symbol_js_1.Macro('require', BaseMethods_js_1.default.Macro, ['\\Require{#2}\\setOptions[#2]{#1}', 2, '']));
    }
}
exports.SetOptionsConfiguration = Configuration_js_1.Configuration.create('setoptions', {
    handler: { macro: ['setoptions'] },
    config: setoptionsConfig,
    priority: 3,
    options: {
        setoptions: {
            filterPackage: exports.SetOptionsUtil.filterPackage,
            filterOption: exports.SetOptionsUtil.filterOption,
            filterValue: exports.SetOptionsUtil.filterValue,
            allowPackageDefault: true,
            allowOptionsDefault: true,
            allowOptions: (0, Options_js_1.expandable)({
                tex: {
                    FindTeX: false,
                    formatError: false,
                    package: false,
                    baseURL: false,
                    tags: false,
                    maxBuffer: false,
                    maxMaxros: false,
                    macros: false,
                    environments: false
                },
                setoptions: false,
                autoload: false,
                require: false,
                configmacros: false,
                tagformat: false
            })
        }
    }
});
//# sourceMappingURL=SetOptionsConfiguration.js.map

/***/ }),

/***/ 1527:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TagFormatConfiguration = exports.tagformatConfig = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var Tags_js_1 = __webpack_require__(6521);
var tagID = 0;
function tagformatConfig(config, jax) {
    var tags = jax.parseOptions.options.tags;
    if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {
        Tags_js_1.TagsFactory.add(tags, config.tags[tags]);
    }
    var TagClass = Tags_js_1.TagsFactory.create(jax.parseOptions.options.tags).constructor;
    var TagFormat = (function (_super) {
        __extends(TagFormat, _super);
        function TagFormat() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TagFormat.prototype.formatNumber = function (n) {
            return jax.parseOptions.options.tagformat.number(n);
        };
        TagFormat.prototype.formatTag = function (tag) {
            return jax.parseOptions.options.tagformat.tag(tag);
        };
        TagFormat.prototype.formatId = function (id) {
            return jax.parseOptions.options.tagformat.id(id);
        };
        TagFormat.prototype.formatUrl = function (id, base) {
            return jax.parseOptions.options.tagformat.url(id, base);
        };
        return TagFormat;
    }(TagClass));
    tagID++;
    var tagName = 'configTags-' + tagID;
    Tags_js_1.TagsFactory.add(tagName, TagFormat);
    jax.parseOptions.options.tags = tagName;
}
exports.tagformatConfig = tagformatConfig;
exports.TagFormatConfiguration = Configuration_js_1.Configuration.create('tagformat', {
    config: [tagformatConfig, 10],
    options: {
        tagformat: {
            number: function (n) { return n.toString(); },
            tag: function (tag) { return '(' + tag + ')'; },
            id: function (id) { return 'mjx-eqn:' + id.replace(/\s/g, '_'); },
            url: function (id, base) { return base + '#' + encodeURIComponent(id); },
        }
    }
});
//# sourceMappingURL=TagFormatConfiguration.js.map

/***/ }),

/***/ 2307:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextcompConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
__webpack_require__(9906);
exports.TextcompConfiguration = Configuration_js_1.Configuration.create('textcomp', {
    handler: { macro: ['textcomp-macros'] }
});
//# sourceMappingURL=TextcompConfiguration.js.map

/***/ }),

/***/ 9906:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var SymbolMap_js_1 = __webpack_require__(9140);
var TexConstants_js_1 = __webpack_require__(8317);
var TextMacrosMethods_js_1 = __webpack_require__(58);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var TextParser_js_1 = __webpack_require__(8728);
new SymbolMap_js_1.CommandMap('textcomp-macros', {
    'textasciicircum': ['Insert', '\u005E'],
    'textasciitilde': ['Insert', '\u007E'],
    'textasteriskcentered': ['Insert', '\u002A'],
    'textbackslash': ['Insert', '\u005C'],
    'textbar': ['Insert', '\u007C'],
    'textbraceleft': ['Insert', '\u007B'],
    'textbraceright': ['Insert', '\u007D'],
    'textbullet': ['Insert', '\u2022'],
    'textdagger': ['Insert', '\u2020'],
    'textdaggerdbl': ['Insert', '\u2021'],
    'textellipsis': ['Insert', '\u2026'],
    'textemdash': ['Insert', '\u2014'],
    'textendash': ['Insert', '\u2013'],
    'textexclamdown': ['Insert', '\u00A1'],
    'textgreater': ['Insert', '\u003E'],
    'textless': ['Insert', '\u003C'],
    'textordfeminine': ['Insert', '\u00AA'],
    'textordmasculine': ['Insert', '\u00BA'],
    'textparagraph': ['Insert', '\u00B6'],
    'textperiodcentered': ['Insert', '\u00B7'],
    'textquestiondown': ['Insert', '\u00BF'],
    'textquotedblleft': ['Insert', '\u201C'],
    'textquotedblright': ['Insert', '\u201D'],
    'textquoteleft': ['Insert', '\u2018'],
    'textquoteright': ['Insert', '\u2019'],
    'textsection': ['Insert', '\u00A7'],
    'textunderscore': ['Insert', '\u005F'],
    'textvisiblespace': ['Insert', '\u2423'],
    'textacutedbl': ['Insert', '\u02DD'],
    'textasciiacute': ['Insert', '\u00B4'],
    'textasciibreve': ['Insert', '\u02D8'],
    'textasciicaron': ['Insert', '\u02C7'],
    'textasciidieresis': ['Insert', '\u00A8'],
    'textasciimacron': ['Insert', '\u00AF'],
    'textgravedbl': ['Insert', '\u02F5'],
    'texttildelow': ['Insert', '\u02F7'],
    'textbaht': ['Insert', '\u0E3F'],
    'textcent': ['Insert', '\u00A2'],
    'textcolonmonetary': ['Insert', '\u20A1'],
    'textcurrency': ['Insert', '\u00A4'],
    'textdollar': ['Insert', '\u0024'],
    'textdong': ['Insert', '\u20AB'],
    'texteuro': ['Insert', '\u20AC'],
    'textflorin': ['Insert', '\u0192'],
    'textguarani': ['Insert', '\u20B2'],
    'textlira': ['Insert', '\u20A4'],
    'textnaira': ['Insert', '\u20A6'],
    'textpeso': ['Insert', '\u20B1'],
    'textsterling': ['Insert', '\u00A3'],
    'textwon': ['Insert', '\u20A9'],
    'textyen': ['Insert', '\u00A5'],
    'textcircledP': ['Insert', '\u2117'],
    'textcompwordmark': ['Insert', '\u200C'],
    'textcopyleft': ['Insert', "\uD83C\uDD2F"],
    'textcopyright': ['Insert', '\u00A9'],
    'textregistered': ['Insert', '\u00AE'],
    'textservicemark': ['Insert', '\u2120'],
    'texttrademark': ['Insert', '\u2122'],
    'textbardbl': ['Insert', '\u2016'],
    'textbigcircle': ['Insert', '\u25EF'],
    'textblank': ['Insert', '\u2422'],
    'textbrokenbar': ['Insert', '\u00A6'],
    'textdiscount': ['Insert', '\u2052'],
    'textestimated': ['Insert', '\u212E'],
    'textinterrobang': ['Insert', '\u203D'],
    'textinterrobangdown': ['Insert', '\u2E18'],
    'textmusicalnote': ['Insert', '\u266A'],
    'textnumero': ['Insert', '\u2116'],
    'textopenbullet': ['Insert', '\u25E6'],
    'textpertenthousand': ['Insert', '\u2031'],
    'textperthousand': ['Insert', '\u2030'],
    'textrecipe': ['Insert', '\u211E'],
    'textreferencemark': ['Insert', '\u203B'],
    'textlangle': ['Insert', '\u2329'],
    'textrangle': ['Insert', '\u232A'],
    'textlbrackdbl': ['Insert', '\u27E6'],
    'textrbrackdbl': ['Insert', '\u27E7'],
    'textlquill': ['Insert', '\u2045'],
    'textrquill': ['Insert', '\u2046'],
    'textcelsius': ['Insert', '\u2103'],
    'textdegree': ['Insert', '\u00B0'],
    'textdiv': ['Insert', '\u00F7'],
    'textdownarrow': ['Insert', '\u2193'],
    'textfractionsolidus': ['Insert', '\u2044'],
    'textleftarrow': ['Insert', '\u2190'],
    'textlnot': ['Insert', '\u00AC'],
    'textmho': ['Insert', '\u2127'],
    'textminus': ['Insert', '\u2212'],
    'textmu': ['Insert', '\u00B5'],
    'textohm': ['Insert', '\u2126'],
    'textonehalf': ['Insert', '\u00BD'],
    'textonequarter': ['Insert', '\u00BC'],
    'textonesuperior': ['Insert', '\u00B9'],
    'textpm': ['Insert', '\u00B1'],
    'textrightarrow': ['Insert', '\u2192'],
    'textsurd': ['Insert', '\u221A'],
    'textthreequarters': ['Insert', '\u00BE'],
    'textthreesuperior': ['Insert', '\u00B3'],
    'texttimes': ['Insert', '\u00D7'],
    'texttwosuperior': ['Insert', '\u00B2'],
    'textuparrow': ['Insert', '\u2191'],
    'textborn': ['Insert', '\u002A'],
    'textdied': ['Insert', '\u2020'],
    'textdivorced': ['Insert', '\u26AE'],
    'textmarried': ['Insert', '\u26AD'],
    'textcentoldstyle': ['Insert', '\u00A2', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textdollaroldstyle': ['Insert', '\u0024', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textzerooldstyle': ['Insert', '0', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textoneoldstyle': ['Insert', '1', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'texttwooldstyle': ['Insert', '2', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textthreeoldstyle': ['Insert', '3', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textfouroldstyle': ['Insert', '4', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textfiveoldstyle': ['Insert', '5', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textsixoldstyle': ['Insert', '6', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textsevenoldstyle': ['Insert', '7', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'texteightoldstyle': ['Insert', '8', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    'textnineoldstyle': ['Insert', '9', TexConstants_js_1.TexConstant.Variant.OLDSTYLE]
}, {
    Insert: function (parser, name, c, font) {
        if (parser instanceof TextParser_js_1.TextParser) {
            if (!font) {
                TextMacrosMethods_js_1.TextMacrosMethods.Insert(parser, name, c);
                return;
            }
            parser.saveText();
        }
        parser.Push(ParseUtil_js_1.default.internalText(parser, c, font ? { mathvariant: font } : {}));
    }
});
//# sourceMappingURL=TextcompMappings.js.map

/***/ }),

/***/ 2675:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextMacrosConfiguration = exports.TextBaseConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var ParseOptions_js_1 = __importDefault(__webpack_require__(8562));
var Tags_js_1 = __webpack_require__(6521);
var BaseItems_js_1 = __webpack_require__(1181);
var TextParser_js_1 = __webpack_require__(8728);
var TextMacrosMethods_js_1 = __webpack_require__(58);
__webpack_require__(8376);
exports.TextBaseConfiguration = Configuration_js_1.Configuration.create('text-base', {
    parser: 'text',
    handler: {
        character: ['command', 'text-special'],
        macro: ['text-macros']
    },
    fallback: {
        character: function (parser, c) {
            parser.text += c;
        },
        macro: function (parser, name) {
            var texParser = parser.texParser;
            var macro = texParser.lookup('macro', name);
            if (macro && macro._func !== TextMacrosMethods_js_1.TextMacrosMethods.Macro) {
                parser.Error('MathMacro', '%1 is only supported in math mode', '\\' + name);
            }
            texParser.parse('macro', [parser, name]);
        }
    },
    items: (_a = {},
        _a[BaseItems_js_1.StartItem.prototype.kind] = BaseItems_js_1.StartItem,
        _a[BaseItems_js_1.StopItem.prototype.kind] = BaseItems_js_1.StopItem,
        _a[BaseItems_js_1.MmlItem.prototype.kind] = BaseItems_js_1.MmlItem,
        _a[BaseItems_js_1.StyleItem.prototype.kind] = BaseItems_js_1.StyleItem,
        _a)
});
function internalMath(parser, text, level, mathvariant) {
    var config = parser.configuration.packageData.get('textmacros');
    if (!(parser instanceof TextParser_js_1.TextParser)) {
        config.texParser = parser;
    }
    return [(new TextParser_js_1.TextParser(text, mathvariant ? { mathvariant: mathvariant } : {}, config.parseOptions, level)).mml()];
}
exports.TextMacrosConfiguration = Configuration_js_1.Configuration.create('textmacros', {
    config: function (_config, jax) {
        var textConf = new Configuration_js_1.ParserConfiguration(jax.parseOptions.options.textmacros.packages, ['tex', 'text']);
        textConf.init();
        var parseOptions = new ParseOptions_js_1.default(textConf, []);
        parseOptions.options = jax.parseOptions.options;
        textConf.config(jax);
        Tags_js_1.TagsFactory.addTags(textConf.tags);
        parseOptions.tags = Tags_js_1.TagsFactory.getDefault();
        parseOptions.tags.configuration = parseOptions;
        parseOptions.packageData = jax.parseOptions.packageData;
        parseOptions.packageData.set('textmacros', { parseOptions: parseOptions, jax: jax, texParser: null });
        parseOptions.options.internalMath = internalMath;
    },
    preprocessors: [function (data) {
            var config = data.data.packageData.get('textmacros');
            config.parseOptions.nodeFactory.setMmlFactory(config.jax.mmlFactory);
        }],
    options: {
        textmacros: {
            packages: ['text-base']
        }
    }
});
//# sourceMappingURL=TextMacrosConfiguration.js.map

/***/ }),

/***/ 8376:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
var SymbolMap_js_1 = __webpack_require__(9140);
var TexConstants_js_1 = __webpack_require__(8317);
var TextMacrosMethods_js_1 = __webpack_require__(58);
var lengths_js_1 = __webpack_require__(6010);
new SymbolMap_js_1.MacroMap('text-special', {
    '$': 'Math',
    '%': 'Comment',
    '^': 'MathModeOnly',
    '_': 'MathModeOnly',
    '&': 'Misplaced',
    '#': 'Misplaced',
    '~': 'Tilde',
    ' ': 'Space',
    '\t': 'Space',
    '\r': 'Space',
    '\n': 'Space',
    '\u00A0': 'Tilde',
    '{': 'OpenBrace',
    '}': 'CloseBrace',
    '`': 'OpenQuote',
    '\'': 'CloseQuote'
}, TextMacrosMethods_js_1.TextMacrosMethods);
new SymbolMap_js_1.CommandMap('text-macros', {
    '(': 'Math',
    '$': 'SelfQuote',
    '_': 'SelfQuote',
    '%': 'SelfQuote',
    '{': 'SelfQuote',
    '}': 'SelfQuote',
    ' ': 'SelfQuote',
    '&': 'SelfQuote',
    '#': 'SelfQuote',
    '\\': 'SelfQuote',
    '\'': ['Accent', '\u00B4'],
    '\u2019': ['Accent', '\u00B4'],
    '`': ['Accent', '\u0060'],
    '\u2018': ['Accent', '\u0060'],
    '^': ['Accent', '^'],
    '\"': ['Accent', '\u00A8'],
    '~': ['Accent', '~'],
    '=': ['Accent', '\u00AF'],
    '.': ['Accent', '\u02D9'],
    'u': ['Accent', '\u02D8'],
    'v': ['Accent', '\u02C7'],
    emph: 'Emph',
    rm: ['SetFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
    mit: ['SetFont', TexConstants_js_1.TexConstant.Variant.ITALIC],
    oldstyle: ['SetFont', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
    cal: ['SetFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
    it: ['SetFont', '-tex-mathit'],
    bf: ['SetFont', TexConstants_js_1.TexConstant.Variant.BOLD],
    bbFont: ['SetFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
    scr: ['SetFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
    frak: ['SetFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
    sf: ['SetFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
    tt: ['SetFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
    tiny: ['SetSize', 0.5],
    Tiny: ['SetSize', 0.6],
    scriptsize: ['SetSize', 0.7],
    small: ['SetSize', 0.85],
    normalsize: ['SetSize', 1.0],
    large: ['SetSize', 1.2],
    Large: ['SetSize', 1.44],
    LARGE: ['SetSize', 1.73],
    huge: ['SetSize', 2.07],
    Huge: ['SetSize', 2.49],
    Bbb: ['Macro', '{\\bbFont #1}', 1],
    textnormal: ['Macro', '{\\rm #1}', 1],
    textup: ['Macro', '{\\rm #1}', 1],
    textrm: ['Macro', '{\\rm #1}', 1],
    textit: ['Macro', '{\\it #1}', 1],
    textbf: ['Macro', '{\\bf #1}', 1],
    textsf: ['Macro', '{\\sf #1}', 1],
    texttt: ['Macro', '{\\tt #1}', 1],
    dagger: ['Insert', '\u2020'],
    ddagger: ['Insert', '\u2021'],
    S: ['Insert', '\u00A7'],
    ',': ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],
    ':': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],
    '>': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],
    ';': ['Spacer', lengths_js_1.MATHSPACE.thickmathspace],
    '!': ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],
    enspace: ['Spacer', .5],
    quad: ['Spacer', 1],
    qquad: ['Spacer', 2],
    thinspace: ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],
    negthinspace: ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],
    hskip: 'Hskip',
    hspace: 'Hskip',
    kern: 'Hskip',
    mskip: 'Hskip',
    mspace: 'Hskip',
    mkern: 'Hskip',
    rule: 'rule',
    Rule: ['Rule'],
    Space: ['Rule', 'blank'],
    color: 'CheckAutoload',
    textcolor: 'CheckAutoload',
    colorbox: 'CheckAutoload',
    fcolorbox: 'CheckAutoload',
    href: 'CheckAutoload',
    style: 'CheckAutoload',
    class: 'CheckAutoload',
    cssId: 'CheckAutoload',
    unicode: 'CheckAutoload',
    ref: ['HandleRef', false],
    eqref: ['HandleRef', true],
}, TextMacrosMethods_js_1.TextMacrosMethods);
//# sourceMappingURL=TextMacrosMappings.js.map

/***/ }),

/***/ 58:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextMacrosMethods = void 0;
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var Retries_js_1 = __webpack_require__(4542);
var BaseMethods_js_1 = __importDefault(__webpack_require__(7693));
exports.TextMacrosMethods = {
    Comment: function (parser, _c) {
        while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\n') {
            parser.i++;
        }
        parser.i++;
    },
    Math: function (parser, open) {
        parser.saveText();
        var i = parser.i;
        var j, c;
        var braces = 0;
        while ((c = parser.GetNext())) {
            j = parser.i++;
            switch (c) {
                case '\\':
                    var cs = parser.GetCS();
                    if (cs === ')')
                        c = '\\(';
                case '$':
                    if (braces === 0 && open === c) {
                        var config = parser.texParser.configuration;
                        var mml = (new TexParser_js_1.default(parser.string.substr(i, j - i), parser.stack.env, config)).mml();
                        parser.PushMath(mml);
                        return;
                    }
                    break;
                case '{':
                    braces++;
                    break;
                case '}':
                    if (braces === 0) {
                        parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');
                    }
                    braces--;
                    break;
            }
        }
        parser.Error('MathNotTerminated', 'Math-mode is not properly terminated');
    },
    MathModeOnly: function (parser, c) {
        parser.Error('MathModeOnly', '\'%1\' allowed only in math mode', c);
    },
    Misplaced: function (parser, c) {
        parser.Error('Misplaced', '\'%1\' can not be used here', c);
    },
    OpenBrace: function (parser, _c) {
        var env = parser.stack.env;
        parser.envStack.push(env);
        parser.stack.env = Object.assign({}, env);
    },
    CloseBrace: function (parser, _c) {
        if (parser.envStack.length) {
            parser.saveText();
            parser.stack.env = parser.envStack.pop();
        }
        else {
            parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');
        }
    },
    OpenQuote: function (parser, c) {
        if (parser.string.charAt(parser.i) === c) {
            parser.text += '\u201C';
            parser.i++;
        }
        else {
            parser.text += '\u2018';
        }
    },
    CloseQuote: function (parser, c) {
        if (parser.string.charAt(parser.i) === c) {
            parser.text += '\u201D';
            parser.i++;
        }
        else {
            parser.text += '\u2019';
        }
    },
    Tilde: function (parser, _c) {
        parser.text += '\u00A0';
    },
    Space: function (parser, _c) {
        parser.text += ' ';
        while (parser.GetNext().match(/\s/))
            parser.i++;
    },
    SelfQuote: function (parser, name) {
        parser.text += name.substr(1);
    },
    Insert: function (parser, _name, c) {
        parser.text += c;
    },
    Accent: function (parser, name, c) {
        var base = parser.ParseArg(name);
        var accent = parser.create('token', 'mo', {}, c);
        parser.addAttributes(accent);
        parser.Push(parser.create('node', 'mover', [base, accent]));
    },
    Emph: function (parser, name) {
        var variant = (parser.stack.env.mathvariant === '-tex-mathit' ? 'normal' : '-tex-mathit');
        parser.Push(parser.ParseTextArg(name, { mathvariant: variant }));
    },
    SetFont: function (parser, _name, variant) {
        parser.saveText();
        parser.stack.env.mathvariant = variant;
    },
    SetSize: function (parser, _name, size) {
        parser.saveText();
        parser.stack.env.mathsize = size;
    },
    CheckAutoload: function (parser, name) {
        var autoload = parser.configuration.packageData.get('autoload');
        var texParser = parser.texParser;
        name = name.slice(1);
        var macro = texParser.lookup('macro', name);
        if (!macro || (autoload && macro._func === autoload.Autoload)) {
            texParser.parse('macro', [texParser, name]);
            if (!macro)
                return;
            (0, Retries_js_1.retryAfter)(Promise.resolve());
        }
        texParser.parse('macro', [parser, name]);
    },
    Macro: BaseMethods_js_1.default.Macro,
    Spacer: BaseMethods_js_1.default.Spacer,
    Hskip: BaseMethods_js_1.default.Hskip,
    rule: BaseMethods_js_1.default.rule,
    Rule: BaseMethods_js_1.default.Rule,
    HandleRef: BaseMethods_js_1.default.HandleRef
};
//# sourceMappingURL=TextMacrosMethods.js.map

/***/ }),

/***/ 8728:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextParser = void 0;
var TexParser_js_1 = __importDefault(__webpack_require__(8417));
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var MmlNode_js_1 = __webpack_require__(9007);
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var BaseItems_js_1 = __webpack_require__(1181);
var TextParser = (function (_super) {
    __extends(TextParser, _super);
    function TextParser(text, env, configuration, level) {
        var _this = _super.call(this, text, env, configuration) || this;
        _this.level = level;
        return _this;
    }
    Object.defineProperty(TextParser.prototype, "texParser", {
        get: function () {
            return this.configuration.packageData.get('textmacros').texParser;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TextParser.prototype, "tags", {
        get: function () {
            return this.texParser.tags;
        },
        enumerable: false,
        configurable: true
    });
    TextParser.prototype.mml = function () {
        return (this.level != null ?
            this.create('node', 'mstyle', this.nodes, { displaystyle: false, scriptlevel: this.level }) :
            this.nodes.length === 1 ? this.nodes[0] : this.create('node', 'mrow', this.nodes));
    };
    TextParser.prototype.Parse = function () {
        this.text = '';
        this.nodes = [];
        this.envStack = [];
        _super.prototype.Parse.call(this);
    };
    TextParser.prototype.saveText = function () {
        if (this.text) {
            var mathvariant = this.stack.env.mathvariant;
            var text = ParseUtil_js_1.default.internalText(this, this.text, mathvariant ? { mathvariant: mathvariant } : {});
            this.text = '';
            this.Push(text);
        }
    };
    TextParser.prototype.Push = function (mml) {
        if (this.text) {
            this.saveText();
        }
        if (mml instanceof BaseItems_js_1.StopItem) {
            return _super.prototype.Push.call(this, mml);
        }
        if (mml instanceof BaseItems_js_1.StyleItem) {
            this.stack.env.mathcolor = this.stack.env.color;
            return;
        }
        if (mml instanceof MmlNode_js_1.AbstractMmlNode) {
            this.addAttributes(mml);
            this.nodes.push(mml);
        }
    };
    TextParser.prototype.PushMath = function (mml) {
        var e_1, _a;
        var env = this.stack.env;
        if (!mml.isKind('TeXAtom')) {
            mml = this.create('node', 'TeXAtom', [mml]);
        }
        try {
            for (var _b = __values(['mathsize', 'mathcolor']), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_1 = _c.value;
                if (env[name_1] && !mml.attributes.getExplicit(name_1)) {
                    if (!mml.isToken && !mml.isKind('mstyle')) {
                        mml = this.create('node', 'mstyle', [mml]);
                    }
                    NodeUtil_js_1.default.setAttribute(mml, name_1, env[name_1]);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (mml.isInferred) {
            mml = this.create('node', 'mrow', mml.childNodes);
        }
        this.nodes.push(mml);
    };
    TextParser.prototype.addAttributes = function (mml) {
        var e_2, _a;
        var env = this.stack.env;
        if (!mml.isToken)
            return;
        try {
            for (var _b = __values(['mathsize', 'mathcolor', 'mathvariant']), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_2 = _c.value;
                if (env[name_2] && !mml.attributes.getExplicit(name_2)) {
                    NodeUtil_js_1.default.setAttribute(mml, name_2, env[name_2]);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    TextParser.prototype.ParseTextArg = function (name, env) {
        var text = this.GetArgument(name);
        env = Object.assign(Object.assign({}, this.stack.env), env);
        return (new TextParser(text, env, this.configuration)).mml();
    };
    TextParser.prototype.ParseArg = function (name) {
        return (new TextParser(this.GetArgument(name), this.stack.env, this.configuration)).mml();
    };
    TextParser.prototype.Error = function (id, message) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, id, message], __read(args), false)))();
    };
    return TextParser;
}(TexParser_js_1.default));
exports.TextParser = TextParser;
//# sourceMappingURL=TextParser.js.map

/***/ }),

/***/ 6841:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnicodeConfiguration = exports.UnicodeMethods = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
var SymbolMap_js_1 = __webpack_require__(9140);
var ParseUtil_js_1 = __importDefault(__webpack_require__(1130));
var NodeUtil_js_1 = __importDefault(__webpack_require__(1256));
var Entities_js_1 = __webpack_require__(5368);
exports.UnicodeMethods = {};
var UnicodeCache = {};
exports.UnicodeMethods.Unicode = function (parser, name) {
    var HD = parser.GetBrackets(name);
    var HDsplit = null;
    var font = null;
    if (HD) {
        if (HD.replace(/ /g, '').
            match(/^(\d+(\.\d*)?|\.\d+),(\d+(\.\d*)?|\.\d+)$/)) {
            HDsplit = HD.replace(/ /g, '').split(/,/);
            font = parser.GetBrackets(name);
        }
        else {
            font = HD;
        }
    }
    var n = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name)).replace(/^0x/, 'x');
    if (!n.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)) {
        throw new TexError_js_1.default('BadUnicode', 'Argument to \\unicode must be a number');
    }
    var N = parseInt(n.match(/^x/) ? '0' + n : n);
    if (!UnicodeCache[N]) {
        UnicodeCache[N] = [800, 200, font, N];
    }
    else if (!font) {
        font = UnicodeCache[N][2];
    }
    if (HDsplit) {
        UnicodeCache[N][0] = Math.floor(parseFloat(HDsplit[0]) * 1000);
        UnicodeCache[N][1] = Math.floor(parseFloat(HDsplit[1]) * 1000);
    }
    var variant = parser.stack.env.font;
    var def = {};
    if (font) {
        UnicodeCache[N][2] = def.fontfamily = font.replace(/'/g, '\'');
        if (variant) {
            if (variant.match(/bold/)) {
                def.fontweight = 'bold';
            }
            if (variant.match(/italic|-mathit/)) {
                def.fontstyle = 'italic';
            }
        }
    }
    else if (variant) {
        def.mathvariant = variant;
    }
    var node = parser.create('token', 'mtext', def, (0, Entities_js_1.numeric)(n));
    NodeUtil_js_1.default.setProperty(node, 'unicode', true);
    parser.Push(node);
};
new SymbolMap_js_1.CommandMap('unicode', { unicode: 'Unicode' }, exports.UnicodeMethods);
exports.UnicodeConfiguration = Configuration_js_1.Configuration.create('unicode', { handler: { macro: ['unicode'] } });
//# sourceMappingURL=UnicodeConfiguration.js.map

/***/ }),

/***/ 1442:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpgreekConfiguration = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var SymbolMap_js_1 = __webpack_require__(9140);
var TexConstants_js_1 = __webpack_require__(8317);
function mathchar0miNormal(parser, mchar) {
    var def = mchar.attributes || {};
    def.mathvariant = TexConstants_js_1.TexConstant.Variant.NORMAL;
    var node = parser.create('token', 'mi', def, mchar.char);
    parser.Push(node);
}
new SymbolMap_js_1.CharacterMap('upgreek', mathchar0miNormal, {
    upalpha: '\u03B1',
    upbeta: '\u03B2',
    upgamma: '\u03B3',
    updelta: '\u03B4',
    upepsilon: '\u03F5',
    upzeta: '\u03B6',
    upeta: '\u03B7',
    uptheta: '\u03B8',
    upiota: '\u03B9',
    upkappa: '\u03BA',
    uplambda: '\u03BB',
    upmu: '\u03BC',
    upnu: '\u03BD',
    upxi: '\u03BE',
    upomicron: '\u03BF',
    uppi: '\u03C0',
    uprho: '\u03C1',
    upsigma: '\u03C3',
    uptau: '\u03C4',
    upupsilon: '\u03C5',
    upphi: '\u03D5',
    upchi: '\u03C7',
    uppsi: '\u03C8',
    upomega: '\u03C9',
    upvarepsilon: '\u03B5',
    upvartheta: '\u03D1',
    upvarpi: '\u03D6',
    upvarrho: '\u03F1',
    upvarsigma: '\u03C2',
    upvarphi: '\u03C6',
    Upgamma: '\u0393',
    Updelta: '\u0394',
    Uptheta: '\u0398',
    Uplambda: '\u039B',
    Upxi: '\u039E',
    Uppi: '\u03A0',
    Upsigma: '\u03A3',
    Upupsilon: '\u03A5',
    Upphi: '\u03A6',
    Uppsi: '\u03A8',
    Upomega: '\u03A9'
});
exports.UpgreekConfiguration = Configuration_js_1.Configuration.create('upgreek', {
    handler: { macro: ['upgreek'] },
});
//# sourceMappingURL=UpgreekConfiguration.js.map

/***/ }),

/***/ 1247:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VerbConfiguration = exports.VerbMethods = void 0;
var Configuration_js_1 = __webpack_require__(9899);
var TexConstants_js_1 = __webpack_require__(8317);
var SymbolMap_js_1 = __webpack_require__(9140);
var TexError_js_1 = __importDefault(__webpack_require__(3971));
exports.VerbMethods = {};
exports.VerbMethods.Verb = function (parser, name) {
    var c = parser.GetNext();
    var start = ++parser.i;
    if (c === '') {
        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', name);
    }
    while (parser.i < parser.string.length &&
        parser.string.charAt(parser.i) !== c) {
        parser.i++;
    }
    if (parser.i === parser.string.length) {
        throw new TexError_js_1.default('NoClosingDelim', 'Can\'t find closing delimiter for %1', parser.currentCS);
    }
    var text = parser.string.slice(start, parser.i).replace(/ /g, '\u00A0');
    parser.i++;
    parser.Push(parser.create('token', 'mtext', { mathvariant: TexConstants_js_1.TexConstant.Variant.MONOSPACE }, text));
};
new SymbolMap_js_1.CommandMap('verb', { verb: 'Verb' }, exports.VerbMethods);
exports.VerbConfiguration = Configuration_js_1.Configuration.create('verb', { handler: { macro: ['verb'] } });
//# sourceMappingURL=VerbConfiguration.js.map

/***/ }),

/***/ 5713:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mathjax = void 0;
var version_js_1 = __webpack_require__(3282);
var HandlerList_js_1 = __webpack_require__(805);
var Retries_js_1 = __webpack_require__(4542);
exports.mathjax = {
    version: version_js_1.VERSION,
    handlers: new HandlerList_js_1.HandlerList(),
    document: function (document, options) {
        return exports.mathjax.handlers.document(document, options);
    },
    handleRetriesFor: Retries_js_1.handleRetriesFor,
    retryAfter: Retries_js_1.retryAfter,
    asyncLoad: null,
};
//# sourceMappingURL=mathjax.js.map

/***/ }),

/***/ 50:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTML = void 0;
var OutputJax_js_1 = __webpack_require__(3055);
var StyleList_js_1 = __webpack_require__(4139);
var WrapperFactory_js_1 = __webpack_require__(9261);
var Usage_js_1 = __webpack_require__(6797);
var tex_js_1 = __webpack_require__(2760);
var LENGTHS = __importStar(__webpack_require__(6010));
var string_js_1 = __webpack_require__(505);
var CHTML = (function (_super) {
    __extends(CHTML, _super);
    function CHTML(options) {
        if (options === void 0) { options = null; }
        var _this = _super.call(this, options, WrapperFactory_js_1.CHTMLWrapperFactory, tex_js_1.TeXFont) || this;
        _this.chtmlStyles = null;
        _this.font.adaptiveCSS(_this.options.adaptiveCSS);
        _this.wrapperUsage = new Usage_js_1.Usage();
        return _this;
    }
    CHTML.prototype.escaped = function (math, html) {
        this.setDocument(html);
        return this.html('span', {}, [this.text(math.math)]);
    };
    CHTML.prototype.styleSheet = function (html) {
        if (this.chtmlStyles) {
            if (this.options.adaptiveCSS) {
                var styles = new StyleList_js_1.CssStyles();
                this.addWrapperStyles(styles);
                this.updateFontStyles(styles);
                this.adaptor.insertRules(this.chtmlStyles, styles.getStyleRules());
            }
            return this.chtmlStyles;
        }
        var sheet = this.chtmlStyles = _super.prototype.styleSheet.call(this, html);
        this.adaptor.setAttribute(sheet, 'id', CHTML.STYLESHEETID);
        this.wrapperUsage.update();
        return sheet;
    };
    CHTML.prototype.updateFontStyles = function (styles) {
        styles.addStyles(this.font.updateStyles({}));
    };
    CHTML.prototype.addWrapperStyles = function (styles) {
        var e_1, _a;
        if (!this.options.adaptiveCSS) {
            _super.prototype.addWrapperStyles.call(this, styles);
            return;
        }
        try {
            for (var _b = __values(this.wrapperUsage.update()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var kind = _c.value;
                var wrapper = this.factory.getNodeClass(kind);
                wrapper && this.addClassStyles(wrapper, styles);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    CHTML.prototype.addClassStyles = function (wrapper, styles) {
        var _a;
        var CLASS = wrapper;
        if (CLASS.autoStyle && CLASS.kind !== 'unknown') {
            styles.addStyles((_a = {},
                _a['mjx-' + CLASS.kind] = {
                    display: 'inline-block',
                    'text-align': 'left'
                },
                _a));
        }
        this.wrapperUsage.add(CLASS.kind);
        _super.prototype.addClassStyles.call(this, wrapper, styles);
    };
    CHTML.prototype.processMath = function (math, parent) {
        this.factory.wrap(math).toCHTML(parent);
    };
    CHTML.prototype.clearCache = function () {
        this.cssStyles.clear();
        this.font.clearCache();
        this.wrapperUsage.clear();
        this.chtmlStyles = null;
    };
    CHTML.prototype.reset = function () {
        this.clearCache();
    };
    CHTML.prototype.unknownText = function (text, variant, width) {
        if (width === void 0) { width = null; }
        var styles = {};
        var scale = 100 / this.math.metrics.scale;
        if (scale !== 100) {
            styles['font-size'] = this.fixed(scale, 1) + '%';
            styles.padding = LENGTHS.em(75 / scale) + ' 0 ' + LENGTHS.em(20 / scale) + ' 0';
        }
        if (variant !== '-explicitFont') {
            var c = (0, string_js_1.unicodeChars)(text);
            if (c.length !== 1 || c[0] < 0x1D400 || c[0] > 0x1D7FF) {
                this.cssFontStyles(this.font.getCssFont(variant), styles);
            }
        }
        if (width !== null) {
            var metrics = this.math.metrics;
            styles.width = Math.round(width * metrics.em * metrics.scale) + 'px';
        }
        return this.html('mjx-utext', { variant: variant, style: styles }, [this.text(text)]);
    };
    CHTML.prototype.measureTextNode = function (textNode) {
        var adaptor = this.adaptor;
        var text = adaptor.clone(textNode);
        adaptor.setStyle(text, 'font-family', adaptor.getStyle(text, 'font-family').replace(/MJXZERO, /g, ''));
        var style = { position: 'absolute', 'white-space': 'nowrap' };
        var node = this.html('mjx-measure-text', { style: style }, [text]);
        adaptor.append(adaptor.parent(this.math.start.node), this.container);
        adaptor.append(this.container, node);
        var w = adaptor.nodeSize(text, this.math.metrics.em)[0] / this.math.metrics.scale;
        adaptor.remove(this.container);
        adaptor.remove(node);
        return { w: w, h: .75, d: .2 };
    };
    CHTML.NAME = 'CHTML';
    CHTML.OPTIONS = __assign(__assign({}, OutputJax_js_1.CommonOutputJax.OPTIONS), { adaptiveCSS: true, matchFontHeight: true });
    CHTML.commonStyles = {
        'mjx-container[jax="CHTML"]': { 'line-height': 0 },
        'mjx-container [space="1"]': { 'margin-left': '.111em' },
        'mjx-container [space="2"]': { 'margin-left': '.167em' },
        'mjx-container [space="3"]': { 'margin-left': '.222em' },
        'mjx-container [space="4"]': { 'margin-left': '.278em' },
        'mjx-container [space="5"]': { 'margin-left': '.333em' },
        'mjx-container [rspace="1"]': { 'margin-right': '.111em' },
        'mjx-container [rspace="2"]': { 'margin-right': '.167em' },
        'mjx-container [rspace="3"]': { 'margin-right': '.222em' },
        'mjx-container [rspace="4"]': { 'margin-right': '.278em' },
        'mjx-container [rspace="5"]': { 'margin-right': '.333em' },
        'mjx-container [size="s"]': { 'font-size': '70.7%' },
        'mjx-container [size="ss"]': { 'font-size': '50%' },
        'mjx-container [size="Tn"]': { 'font-size': '60%' },
        'mjx-container [size="sm"]': { 'font-size': '85%' },
        'mjx-container [size="lg"]': { 'font-size': '120%' },
        'mjx-container [size="Lg"]': { 'font-size': '144%' },
        'mjx-container [size="LG"]': { 'font-size': '173%' },
        'mjx-container [size="hg"]': { 'font-size': '207%' },
        'mjx-container [size="HG"]': { 'font-size': '249%' },
        'mjx-container [width="full"]': { width: '100%' },
        'mjx-box': { display: 'inline-block' },
        'mjx-block': { display: 'block' },
        'mjx-itable': { display: 'inline-table' },
        'mjx-row': { display: 'table-row' },
        'mjx-row > *': { display: 'table-cell' },
        'mjx-mtext': {
            display: 'inline-block'
        },
        'mjx-mstyle': {
            display: 'inline-block'
        },
        'mjx-merror': {
            display: 'inline-block',
            color: 'red',
            'background-color': 'yellow'
        },
        'mjx-mphantom': {
            visibility: 'hidden'
        },
        '_::-webkit-full-page-media, _:future, :root mjx-container': {
            'will-change': 'opacity'
        }
    };
    CHTML.STYLESHEETID = 'MJX-CHTML-styles';
    return CHTML;
}(OutputJax_js_1.CommonOutputJax));
exports.CHTML = CHTML;
//# sourceMappingURL=chtml.js.map

/***/ }),

/***/ 8042:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AddCSS = exports.CHTMLFontData = void 0;
var FontData_js_1 = __webpack_require__(5884);
var Usage_js_1 = __webpack_require__(6797);
var lengths_js_1 = __webpack_require__(6010);
__exportStar(__webpack_require__(5884), exports);
var CHTMLFontData = (function (_super) {
    __extends(CHTMLFontData, _super);
    function CHTMLFontData() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.charUsage = new Usage_js_1.Usage();
        _this.delimUsage = new Usage_js_1.Usage();
        return _this;
    }
    CHTMLFontData.charOptions = function (font, n) {
        return _super.charOptions.call(this, font, n);
    };
    CHTMLFontData.prototype.adaptiveCSS = function (adapt) {
        this.options.adaptiveCSS = adapt;
    };
    CHTMLFontData.prototype.clearCache = function () {
        if (this.options.adaptiveCSS) {
            this.charUsage.clear();
            this.delimUsage.clear();
        }
    };
    CHTMLFontData.prototype.createVariant = function (name, inherit, link) {
        if (inherit === void 0) { inherit = null; }
        if (link === void 0) { link = null; }
        _super.prototype.createVariant.call(this, name, inherit, link);
        var CLASS = this.constructor;
        this.variant[name].classes = CLASS.defaultVariantClasses[name];
        this.variant[name].letter = CLASS.defaultVariantLetters[name];
    };
    CHTMLFontData.prototype.defineChars = function (name, chars) {
        var e_1, _a;
        _super.prototype.defineChars.call(this, name, chars);
        var letter = this.variant[name].letter;
        try {
            for (var _b = __values(Object.keys(chars)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var n = _c.value;
                var options = CHTMLFontData.charOptions(chars, parseInt(n));
                if (options.f === undefined) {
                    options.f = letter;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Object.defineProperty(CHTMLFontData.prototype, "styles", {
        get: function () {
            var CLASS = this.constructor;
            var styles = __assign({}, CLASS.defaultStyles);
            this.addFontURLs(styles, CLASS.defaultFonts, this.options.fontURL);
            if (this.options.adaptiveCSS) {
                this.updateStyles(styles);
            }
            else {
                this.allStyles(styles);
            }
            return styles;
        },
        enumerable: false,
        configurable: true
    });
    CHTMLFontData.prototype.updateStyles = function (styles) {
        var e_2, _a, e_3, _b;
        try {
            for (var _c = __values(this.delimUsage.update()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var N = _d.value;
                this.addDelimiterStyles(styles, N, this.delimiters[N]);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _e = __values(this.charUsage.update()), _f = _e.next(); !_f.done; _f = _e.next()) {
                var _g = __read(_f.value, 2), name_1 = _g[0], N = _g[1];
                var variant = this.variant[name_1];
                this.addCharStyles(styles, variant.letter, N, variant.chars[N]);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return styles;
    };
    CHTMLFontData.prototype.allStyles = function (styles) {
        var e_4, _a, e_5, _b, e_6, _c;
        try {
            for (var _d = __values(Object.keys(this.delimiters)), _e = _d.next(); !_e.done; _e = _d.next()) {
                var n = _e.value;
                var N = parseInt(n);
                this.addDelimiterStyles(styles, N, this.delimiters[N]);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_4) throw e_4.error; }
        }
        try {
            for (var _f = __values(Object.keys(this.variant)), _g = _f.next(); !_g.done; _g = _f.next()) {
                var name_2 = _g.value;
                var variant = this.variant[name_2];
                var vletter = variant.letter;
                try {
                    for (var _h = (e_6 = void 0, __values(Object.keys(variant.chars))), _j = _h.next(); !_j.done; _j = _h.next()) {
                        var n = _j.value;
                        var N = parseInt(n);
                        var char = variant.chars[N];
                        if ((char[3] || {}).smp)
                            continue;
                        if (char.length < 4) {
                            char[3] = {};
                        }
                        this.addCharStyles(styles, vletter, N, char);
                    }
                }
                catch (e_6_1) { e_6 = { error: e_6_1 }; }
                finally {
                    try {
                        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                    }
                    finally { if (e_6) throw e_6.error; }
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_5) throw e_5.error; }
        }
    };
    CHTMLFontData.prototype.addFontURLs = function (styles, fonts, url) {
        var e_7, _a;
        try {
            for (var _b = __values(Object.keys(fonts)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_3 = _c.value;
                var font = __assign({}, fonts[name_3]);
                font.src = font.src.replace(/%%URL%%/, url);
                styles[name_3] = font;
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
    };
    CHTMLFontData.prototype.addDelimiterStyles = function (styles, n, data) {
        var c = this.charSelector(n);
        if (data.c && data.c !== n) {
            c = this.charSelector(data.c);
            styles['.mjx-stretched mjx-c' + c + '::before'] = {
                content: this.charContent(data.c)
            };
        }
        if (!data.stretch)
            return;
        if (data.dir === 1) {
            this.addDelimiterVStyles(styles, c, data);
        }
        else {
            this.addDelimiterHStyles(styles, c, data);
        }
    };
    CHTMLFontData.prototype.addDelimiterVStyles = function (styles, c, data) {
        var HDW = data.HDW;
        var _a = __read(data.stretch, 4), beg = _a[0], ext = _a[1], end = _a[2], mid = _a[3];
        var Hb = this.addDelimiterVPart(styles, c, 'beg', beg, HDW);
        this.addDelimiterVPart(styles, c, 'ext', ext, HDW);
        var He = this.addDelimiterVPart(styles, c, 'end', end, HDW);
        var css = {};
        if (mid) {
            var Hm = this.addDelimiterVPart(styles, c, 'mid', mid, HDW);
            css.height = '50%';
            styles['mjx-stretchy-v' + c + ' > mjx-mid'] = {
                'margin-top': this.em(-Hm / 2),
                'margin-bottom': this.em(-Hm / 2)
            };
        }
        if (Hb) {
            css['border-top-width'] = this.em0(Hb - .03);
        }
        if (He) {
            css['border-bottom-width'] = this.em0(He - .03);
            styles['mjx-stretchy-v' + c + ' > mjx-end'] = { 'margin-top': this.em(-He) };
        }
        if (Object.keys(css).length) {
            styles['mjx-stretchy-v' + c + ' > mjx-ext'] = css;
        }
    };
    CHTMLFontData.prototype.addDelimiterVPart = function (styles, c, part, n, HDW) {
        if (!n)
            return 0;
        var data = this.getDelimiterData(n);
        var dw = (HDW[2] - data[2]) / 2;
        var css = { content: this.charContent(n) };
        if (part !== 'ext') {
            css.padding = this.padding(data, dw);
        }
        else {
            css.width = this.em0(HDW[2]);
            if (dw) {
                css['padding-left'] = this.em0(dw);
            }
        }
        styles['mjx-stretchy-v' + c + ' mjx-' + part + ' mjx-c::before'] = css;
        return data[0] + data[1];
    };
    CHTMLFontData.prototype.addDelimiterHStyles = function (styles, c, data) {
        var _a = __read(data.stretch, 4), beg = _a[0], ext = _a[1], end = _a[2], mid = _a[3];
        var HDW = data.HDW;
        this.addDelimiterHPart(styles, c, 'beg', beg, HDW);
        this.addDelimiterHPart(styles, c, 'ext', ext, HDW);
        this.addDelimiterHPart(styles, c, 'end', end, HDW);
        if (mid) {
            this.addDelimiterHPart(styles, c, 'mid', mid, HDW);
            styles['mjx-stretchy-h' + c + ' > mjx-ext'] = { width: '50%' };
        }
    };
    CHTMLFontData.prototype.addDelimiterHPart = function (styles, c, part, n, HDW) {
        if (!n)
            return;
        var data = this.getDelimiterData(n);
        var options = data[3];
        var css = { content: (options && options.c ? '"' + options.c + '"' : this.charContent(n)) };
        css.padding = this.padding(HDW, 0, -HDW[2]);
        styles['mjx-stretchy-h' + c + ' mjx-' + part + ' mjx-c::before'] = css;
    };
    CHTMLFontData.prototype.addCharStyles = function (styles, vletter, n, data) {
        var options = data[3];
        var letter = (options.f !== undefined ? options.f : vletter);
        var selector = 'mjx-c' + this.charSelector(n) + (letter ? '.TEX-' + letter : '');
        styles[selector + '::before'] = {
            padding: this.padding(data, 0, options.ic || 0),
            content: (options.c != null ? '"' + options.c + '"' : this.charContent(n))
        };
    };
    CHTMLFontData.prototype.getDelimiterData = function (n) {
        return this.getChar('-smallop', n);
    };
    CHTMLFontData.prototype.em = function (n) {
        return (0, lengths_js_1.em)(n);
    };
    CHTMLFontData.prototype.em0 = function (n) {
        return (0, lengths_js_1.em)(Math.max(0, n));
    };
    CHTMLFontData.prototype.padding = function (_a, dw, ic) {
        var _b = __read(_a, 3), h = _b[0], d = _b[1], w = _b[2];
        if (dw === void 0) { dw = 0; }
        if (ic === void 0) { ic = 0; }
        return [h, w + ic, d, dw].map(this.em0).join(' ');
    };
    CHTMLFontData.prototype.charContent = function (n) {
        return '"' + (n >= 0x20 && n <= 0x7E && n !== 0x22 && n !== 0x27 && n !== 0x5C ?
            String.fromCharCode(n) : '\\' + n.toString(16).toUpperCase()) + '"';
    };
    CHTMLFontData.prototype.charSelector = function (n) {
        return '.mjx-c' + n.toString(16).toUpperCase();
    };
    CHTMLFontData.OPTIONS = __assign(__assign({}, FontData_js_1.FontData.OPTIONS), { fontURL: 'js/output/chtml/fonts/tex-woff-v2' });
    CHTMLFontData.JAX = 'CHTML';
    CHTMLFontData.defaultVariantClasses = {};
    CHTMLFontData.defaultVariantLetters = {};
    CHTMLFontData.defaultStyles = {
        'mjx-c::before': {
            display: 'block',
            width: 0
        }
    };
    CHTMLFontData.defaultFonts = {
        '@font-face /* 0 */': {
            'font-family': 'MJXZERO',
            src: 'url("%%URL%%/MathJax_Zero.woff") format("woff")'
        }
    };
    return CHTMLFontData;
}(FontData_js_1.FontData));
exports.CHTMLFontData = CHTMLFontData;
function AddCSS(font, options) {
    var e_8, _a;
    try {
        for (var _b = __values(Object.keys(options)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var c = _c.value;
            var n = parseInt(c);
            Object.assign(FontData_js_1.FontData.charOptions(font, n), options[n]);
        }
    }
    catch (e_8_1) { e_8 = { error: e_8_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_8) throw e_8.error; }
    }
    return font;
}
exports.AddCSS = AddCSS;
//# sourceMappingURL=FontData.js.map

/***/ }),

/***/ 8270:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Arrow = exports.DiagonalArrow = exports.DiagonalStrike = exports.Border2 = exports.Border = exports.RenderElement = void 0;
var Notation = __importStar(__webpack_require__(5552));
__exportStar(__webpack_require__(5552), exports);
var RenderElement = function (name, offset) {
    if (offset === void 0) { offset = ''; }
    return (function (node, _child) {
        var shape = node.adjustBorder(node.html('mjx-' + name));
        if (offset) {
            var d = node.getOffset(offset);
            if (node.thickness !== Notation.THICKNESS || d) {
                var transform = "translate".concat(offset, "(").concat(node.em(node.thickness / 2 - d), ")");
                node.adaptor.setStyle(shape, 'transform', transform);
            }
        }
        node.adaptor.append(node.chtml, shape);
    });
};
exports.RenderElement = RenderElement;
var Border = function (side) {
    return Notation.CommonBorder(function (node, child) {
        node.adaptor.setStyle(child, 'border-' + side, node.em(node.thickness) + ' solid');
    })(side);
};
exports.Border = Border;
var Border2 = function (name, side1, side2) {
    return Notation.CommonBorder2(function (node, child) {
        var border = node.em(node.thickness) + ' solid';
        node.adaptor.setStyle(child, 'border-' + side1, border);
        node.adaptor.setStyle(child, 'border-' + side2, border);
    })(name, side1, side2);
};
exports.Border2 = Border2;
var DiagonalStrike = function (name, neg) {
    return Notation.CommonDiagonalStrike(function (cname) { return function (node, _child) {
        var _a = node.getBBox(), w = _a.w, h = _a.h, d = _a.d;
        var _b = __read(node.getArgMod(w, h + d), 2), a = _b[0], W = _b[1];
        var t = neg * node.thickness / 2;
        var strike = node.adjustBorder(node.html(cname, { style: {
                width: node.em(W),
                transform: 'rotate(' + node.fixed(-neg * a) + 'rad) translateY(' + t + 'em)',
            } }));
        node.adaptor.append(node.chtml, strike);
    }; })(name);
};
exports.DiagonalStrike = DiagonalStrike;
var DiagonalArrow = function (name) {
    return Notation.CommonDiagonalArrow(function (node, arrow) {
        node.adaptor.append(node.chtml, arrow);
    })(name);
};
exports.DiagonalArrow = DiagonalArrow;
var Arrow = function (name) {
    return Notation.CommonArrow(function (node, arrow) {
        node.adaptor.append(node.chtml, arrow);
    })(name);
};
exports.Arrow = Arrow;
//# sourceMappingURL=Notation.js.map

/***/ }),

/***/ 6797:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Usage = void 0;
var Usage = (function () {
    function Usage() {
        this.used = new Set();
        this.needsUpdate = [];
    }
    Usage.prototype.add = function (item) {
        var name = JSON.stringify(item);
        if (!this.used.has(name)) {
            this.needsUpdate.push(item);
        }
        this.used.add(name);
    };
    Usage.prototype.has = function (item) {
        return this.used.has(JSON.stringify(item));
    };
    Usage.prototype.clear = function () {
        this.used.clear();
        this.needsUpdate = [];
    };
    Usage.prototype.update = function () {
        var update = this.needsUpdate;
        this.needsUpdate = [];
        return update;
    };
    return Usage;
}());
exports.Usage = Usage;
//# sourceMappingURL=Usage.js.map

/***/ }),

/***/ 5355:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLWrapper = exports.SPACE = exports.FONTSIZE = void 0;
var LENGTHS = __importStar(__webpack_require__(6010));
var Wrapper_js_1 = __webpack_require__(7519);
var BBox_js_1 = __webpack_require__(6469);
exports.FONTSIZE = {
    '70.7%': 's',
    '70%': 's',
    '50%': 'ss',
    '60%': 'Tn',
    '85%': 'sm',
    '120%': 'lg',
    '144%': 'Lg',
    '173%': 'LG',
    '207%': 'hg',
    '249%': 'HG'
};
exports.SPACE = (_a = {},
    _a[LENGTHS.em(2 / 18)] = '1',
    _a[LENGTHS.em(3 / 18)] = '2',
    _a[LENGTHS.em(4 / 18)] = '3',
    _a[LENGTHS.em(5 / 18)] = '4',
    _a[LENGTHS.em(6 / 18)] = '5',
    _a);
var CHTMLWrapper = (function (_super) {
    __extends(CHTMLWrapper, _super);
    function CHTMLWrapper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.chtml = null;
        return _this;
    }
    CHTMLWrapper.prototype.toCHTML = function (parent) {
        var e_1, _a;
        var chtml = this.standardCHTMLnode(parent);
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.toCHTML(chtml);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    CHTMLWrapper.prototype.standardCHTMLnode = function (parent) {
        this.markUsed();
        var chtml = this.createCHTMLnode(parent);
        this.handleStyles();
        this.handleVariant();
        this.handleScale();
        this.handleColor();
        this.handleSpace();
        this.handleAttributes();
        this.handlePWidth();
        return chtml;
    };
    CHTMLWrapper.prototype.markUsed = function () {
        this.jax.wrapperUsage.add(this.kind);
    };
    CHTMLWrapper.prototype.createCHTMLnode = function (parent) {
        var href = this.node.attributes.get('href');
        if (href) {
            parent = this.adaptor.append(parent, this.html('a', { href: href }));
        }
        this.chtml = this.adaptor.append(parent, this.html('mjx-' + this.node.kind));
        return this.chtml;
    };
    CHTMLWrapper.prototype.handleStyles = function () {
        if (!this.styles)
            return;
        var styles = this.styles.cssText;
        if (styles) {
            this.adaptor.setAttribute(this.chtml, 'style', styles);
            var family = this.styles.get('font-family');
            if (family) {
                this.adaptor.setStyle(this.chtml, 'font-family', 'MJXZERO, ' + family);
            }
        }
    };
    CHTMLWrapper.prototype.handleVariant = function () {
        if (this.node.isToken && this.variant !== '-explicitFont') {
            this.adaptor.setAttribute(this.chtml, 'class', (this.font.getVariant(this.variant) || this.font.getVariant('normal')).classes);
        }
    };
    CHTMLWrapper.prototype.handleScale = function () {
        this.setScale(this.chtml, this.bbox.rscale);
    };
    CHTMLWrapper.prototype.setScale = function (chtml, rscale) {
        var scale = (Math.abs(rscale - 1) < .001 ? 1 : rscale);
        if (chtml && scale !== 1) {
            var size = this.percent(scale);
            if (exports.FONTSIZE[size]) {
                this.adaptor.setAttribute(chtml, 'size', exports.FONTSIZE[size]);
            }
            else {
                this.adaptor.setStyle(chtml, 'fontSize', size);
            }
        }
        return chtml;
    };
    CHTMLWrapper.prototype.handleSpace = function () {
        var e_2, _a;
        try {
            for (var _b = __values([[this.bbox.L, 'space', 'marginLeft'],
                [this.bbox.R, 'rspace', 'marginRight']]), _c = _b.next(); !_c.done; _c = _b.next()) {
                var data = _c.value;
                var _d = __read(data, 3), dimen = _d[0], name_1 = _d[1], margin = _d[2];
                if (dimen) {
                    var space = this.em(dimen);
                    if (exports.SPACE[space]) {
                        this.adaptor.setAttribute(this.chtml, name_1, exports.SPACE[space]);
                    }
                    else {
                        this.adaptor.setStyle(this.chtml, margin, space);
                    }
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    CHTMLWrapper.prototype.handleColor = function () {
        var attributes = this.node.attributes;
        var mathcolor = attributes.getExplicit('mathcolor');
        var color = attributes.getExplicit('color');
        var mathbackground = attributes.getExplicit('mathbackground');
        var background = attributes.getExplicit('background');
        if (mathcolor || color) {
            this.adaptor.setStyle(this.chtml, 'color', mathcolor || color);
        }
        if (mathbackground || background) {
            this.adaptor.setStyle(this.chtml, 'backgroundColor', mathbackground || background);
        }
    };
    CHTMLWrapper.prototype.handleAttributes = function () {
        var e_3, _a, e_4, _b;
        var attributes = this.node.attributes;
        var defaults = attributes.getAllDefaults();
        var skip = CHTMLWrapper.skipAttributes;
        try {
            for (var _c = __values(attributes.getExplicitNames()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var name_2 = _d.value;
                if (skip[name_2] === false || (!(name_2 in defaults) && !skip[name_2] &&
                    !this.adaptor.hasAttribute(this.chtml, name_2))) {
                    this.adaptor.setAttribute(this.chtml, name_2, attributes.getExplicit(name_2));
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_3) throw e_3.error; }
        }
        if (attributes.get('class')) {
            var names = attributes.get('class').trim().split(/ +/);
            try {
                for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                    var name_3 = names_1_1.value;
                    this.adaptor.addClass(this.chtml, name_3);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (names_1_1 && !names_1_1.done && (_b = names_1.return)) _b.call(names_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    };
    CHTMLWrapper.prototype.handlePWidth = function () {
        if (this.bbox.pwidth) {
            if (this.bbox.pwidth === BBox_js_1.BBox.fullWidth) {
                this.adaptor.setAttribute(this.chtml, 'width', 'full');
            }
            else {
                this.adaptor.setStyle(this.chtml, 'width', this.bbox.pwidth);
            }
        }
    };
    CHTMLWrapper.prototype.setIndent = function (chtml, align, shift) {
        var adaptor = this.adaptor;
        if (align === 'center' || align === 'left') {
            var L = this.getBBox().L;
            adaptor.setStyle(chtml, 'margin-left', this.em(shift + L));
        }
        if (align === 'center' || align === 'right') {
            var R = this.getBBox().R;
            adaptor.setStyle(chtml, 'margin-right', this.em(-shift + R));
        }
    };
    CHTMLWrapper.prototype.drawBBox = function () {
        var _a = this.getBBox(), w = _a.w, h = _a.h, d = _a.d, R = _a.R;
        var box = this.html('mjx-box', { style: {
                opacity: .25, 'margin-left': this.em(-w - R)
            } }, [
            this.html('mjx-box', { style: {
                    height: this.em(h),
                    width: this.em(w),
                    'background-color': 'red'
                } }),
            this.html('mjx-box', { style: {
                    height: this.em(d),
                    width: this.em(w),
                    'margin-left': this.em(-w),
                    'vertical-align': this.em(-d),
                    'background-color': 'green'
                } })
        ]);
        var node = this.chtml || this.parent.chtml;
        var size = this.adaptor.getAttribute(node, 'size');
        if (size) {
            this.adaptor.setAttribute(box, 'size', size);
        }
        var fontsize = this.adaptor.getStyle(node, 'fontSize');
        if (fontsize) {
            this.adaptor.setStyle(box, 'fontSize', fontsize);
        }
        this.adaptor.append(this.adaptor.parent(node), box);
        this.adaptor.setStyle(node, 'backgroundColor', '#FFEE00');
    };
    CHTMLWrapper.prototype.html = function (type, def, content) {
        if (def === void 0) { def = {}; }
        if (content === void 0) { content = []; }
        return this.jax.html(type, def, content);
    };
    CHTMLWrapper.prototype.text = function (text) {
        return this.jax.text(text);
    };
    CHTMLWrapper.prototype.char = function (n) {
        return this.font.charSelector(n).substr(1);
    };
    CHTMLWrapper.kind = 'unknown';
    CHTMLWrapper.autoStyle = true;
    return CHTMLWrapper;
}(Wrapper_js_1.CommonWrapper));
exports.CHTMLWrapper = CHTMLWrapper;
//# sourceMappingURL=Wrapper.js.map

/***/ }),

/***/ 9261:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLWrapperFactory = void 0;
var WrapperFactory_js_1 = __webpack_require__(4420);
var Wrappers_js_1 = __webpack_require__(9086);
var CHTMLWrapperFactory = (function (_super) {
    __extends(CHTMLWrapperFactory, _super);
    function CHTMLWrapperFactory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLWrapperFactory.defaultNodes = Wrappers_js_1.CHTMLWrappers;
    return CHTMLWrapperFactory;
}(WrapperFactory_js_1.CommonWrapperFactory));
exports.CHTMLWrapperFactory = CHTMLWrapperFactory;
//# sourceMappingURL=WrapperFactory.js.map

/***/ }),

/***/ 9086:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLWrappers = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var math_js_1 = __webpack_require__(804);
var mi_js_1 = __webpack_require__(1653);
var mo_js_1 = __webpack_require__(6287);
var mn_js_1 = __webpack_require__(6460);
var ms_js_1 = __webpack_require__(4597);
var mtext_js_1 = __webpack_require__(1259);
var mspace_js_1 = __webpack_require__(2970);
var mpadded_js_1 = __webpack_require__(5964);
var menclose_js_1 = __webpack_require__(8147);
var mrow_js_1 = __webpack_require__(4798);
var mfenced_js_1 = __webpack_require__(2275);
var mfrac_js_1 = __webpack_require__(9063);
var msqrt_js_1 = __webpack_require__(5610);
var mroot_js_1 = __webpack_require__(8776);
var msubsup_js_1 = __webpack_require__(4300);
var munderover_js_1 = __webpack_require__(6590);
var mmultiscripts_js_1 = __webpack_require__(6781);
var mtable_js_1 = __webpack_require__(8002);
var mtr_js_1 = __webpack_require__(3571);
var mtd_js_1 = __webpack_require__(7056);
var maction_js_1 = __webpack_require__(8102);
var mglyph_js_1 = __webpack_require__(6911);
var semantics_js_1 = __webpack_require__(421);
var TeXAtom_js_1 = __webpack_require__(95);
var TextNode_js_1 = __webpack_require__(1148);
exports.CHTMLWrappers = (_a = {},
    _a[math_js_1.CHTMLmath.kind] = math_js_1.CHTMLmath,
    _a[mrow_js_1.CHTMLmrow.kind] = mrow_js_1.CHTMLmrow,
    _a[mrow_js_1.CHTMLinferredMrow.kind] = mrow_js_1.CHTMLinferredMrow,
    _a[mi_js_1.CHTMLmi.kind] = mi_js_1.CHTMLmi,
    _a[mo_js_1.CHTMLmo.kind] = mo_js_1.CHTMLmo,
    _a[mn_js_1.CHTMLmn.kind] = mn_js_1.CHTMLmn,
    _a[ms_js_1.CHTMLms.kind] = ms_js_1.CHTMLms,
    _a[mtext_js_1.CHTMLmtext.kind] = mtext_js_1.CHTMLmtext,
    _a[mspace_js_1.CHTMLmspace.kind] = mspace_js_1.CHTMLmspace,
    _a[mpadded_js_1.CHTMLmpadded.kind] = mpadded_js_1.CHTMLmpadded,
    _a[menclose_js_1.CHTMLmenclose.kind] = menclose_js_1.CHTMLmenclose,
    _a[mfrac_js_1.CHTMLmfrac.kind] = mfrac_js_1.CHTMLmfrac,
    _a[msqrt_js_1.CHTMLmsqrt.kind] = msqrt_js_1.CHTMLmsqrt,
    _a[mroot_js_1.CHTMLmroot.kind] = mroot_js_1.CHTMLmroot,
    _a[msubsup_js_1.CHTMLmsub.kind] = msubsup_js_1.CHTMLmsub,
    _a[msubsup_js_1.CHTMLmsup.kind] = msubsup_js_1.CHTMLmsup,
    _a[msubsup_js_1.CHTMLmsubsup.kind] = msubsup_js_1.CHTMLmsubsup,
    _a[munderover_js_1.CHTMLmunder.kind] = munderover_js_1.CHTMLmunder,
    _a[munderover_js_1.CHTMLmover.kind] = munderover_js_1.CHTMLmover,
    _a[munderover_js_1.CHTMLmunderover.kind] = munderover_js_1.CHTMLmunderover,
    _a[mmultiscripts_js_1.CHTMLmmultiscripts.kind] = mmultiscripts_js_1.CHTMLmmultiscripts,
    _a[mfenced_js_1.CHTMLmfenced.kind] = mfenced_js_1.CHTMLmfenced,
    _a[mtable_js_1.CHTMLmtable.kind] = mtable_js_1.CHTMLmtable,
    _a[mtr_js_1.CHTMLmtr.kind] = mtr_js_1.CHTMLmtr,
    _a[mtr_js_1.CHTMLmlabeledtr.kind] = mtr_js_1.CHTMLmlabeledtr,
    _a[mtd_js_1.CHTMLmtd.kind] = mtd_js_1.CHTMLmtd,
    _a[maction_js_1.CHTMLmaction.kind] = maction_js_1.CHTMLmaction,
    _a[mglyph_js_1.CHTMLmglyph.kind] = mglyph_js_1.CHTMLmglyph,
    _a[semantics_js_1.CHTMLsemantics.kind] = semantics_js_1.CHTMLsemantics,
    _a[semantics_js_1.CHTMLannotation.kind] = semantics_js_1.CHTMLannotation,
    _a[semantics_js_1.CHTMLannotationXML.kind] = semantics_js_1.CHTMLannotationXML,
    _a[semantics_js_1.CHTMLxml.kind] = semantics_js_1.CHTMLxml,
    _a[TeXAtom_js_1.CHTMLTeXAtom.kind] = TeXAtom_js_1.CHTMLTeXAtom,
    _a[TextNode_js_1.CHTMLTextNode.kind] = TextNode_js_1.CHTMLTextNode,
    _a[Wrapper_js_1.CHTMLWrapper.kind] = Wrapper_js_1.CHTMLWrapper,
    _a);
//# sourceMappingURL=Wrappers.js.map

/***/ }),

/***/ 95:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLTeXAtom = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var TeXAtom_js_1 = __webpack_require__(9800);
var TeXAtom_js_2 = __webpack_require__(3948);
var MmlNode_js_1 = __webpack_require__(9007);
var CHTMLTeXAtom = (function (_super) {
    __extends(CHTMLTeXAtom, _super);
    function CHTMLTeXAtom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLTeXAtom.prototype.toCHTML = function (parent) {
        _super.prototype.toCHTML.call(this, parent);
        this.adaptor.setAttribute(this.chtml, 'texclass', MmlNode_js_1.TEXCLASSNAMES[this.node.texClass]);
        if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {
            var bbox = this.childNodes[0].getBBox();
            var h = bbox.h, d = bbox.d;
            var a = this.font.params.axis_height;
            var dh = ((h + d) / 2 + a) - h;
            this.adaptor.setStyle(this.chtml, 'verticalAlign', this.em(dh));
        }
    };
    CHTMLTeXAtom.kind = TeXAtom_js_2.TeXAtom.prototype.kind;
    return CHTMLTeXAtom;
}((0, TeXAtom_js_1.CommonTeXAtomMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLTeXAtom = CHTMLTeXAtom;
//# sourceMappingURL=TeXAtom.js.map

/***/ }),

/***/ 1148:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLTextNode = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
var Wrapper_js_1 = __webpack_require__(5355);
var TextNode_js_1 = __webpack_require__(1160);
var CHTMLTextNode = (function (_super) {
    __extends(CHTMLTextNode, _super);
    function CHTMLTextNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLTextNode.prototype.toCHTML = function (parent) {
        var e_1, _a;
        this.markUsed();
        var adaptor = this.adaptor;
        var variant = this.parent.variant;
        var text = this.node.getText();
        if (text.length === 0)
            return;
        if (variant === '-explicitFont') {
            adaptor.append(parent, this.jax.unknownText(text, variant, this.getBBox().w));
        }
        else {
            var chars = this.remappedText(text, variant);
            try {
                for (var chars_1 = __values(chars), chars_1_1 = chars_1.next(); !chars_1_1.done; chars_1_1 = chars_1.next()) {
                    var n = chars_1_1.value;
                    var data = this.getVariantChar(variant, n)[3];
                    var font = (data.f ? ' TEX-' + data.f : '');
                    var node = (data.unknown ?
                        this.jax.unknownText(String.fromCodePoint(n), variant) :
                        this.html('mjx-c', { class: this.char(n) + font }));
                    adaptor.append(parent, node);
                    !data.unknown && this.font.charUsage.add([variant, n]);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (chars_1_1 && !chars_1_1.done && (_a = chars_1.return)) _a.call(chars_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    CHTMLTextNode.kind = MmlNode_js_1.TextNode.prototype.kind;
    CHTMLTextNode.autoStyle = false;
    CHTMLTextNode.styles = {
        'mjx-c': {
            display: 'inline-block'
        },
        'mjx-utext': {
            display: 'inline-block',
            padding: '.75em 0 .2em 0'
        }
    };
    return CHTMLTextNode;
}((0, TextNode_js_1.CommonTextNodeMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLTextNode = CHTMLTextNode;
//# sourceMappingURL=TextNode.js.map

/***/ }),

/***/ 8102:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmaction = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var maction_js_1 = __webpack_require__(1956);
var maction_js_2 = __webpack_require__(1956);
var maction_js_3 = __webpack_require__(9145);
var CHTMLmaction = (function (_super) {
    __extends(CHTMLmaction, _super);
    function CHTMLmaction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmaction.prototype.toCHTML = function (parent) {
        var chtml = this.standardCHTMLnode(parent);
        var child = this.selected;
        child.toCHTML(chtml);
        this.action(this, this.data);
    };
    CHTMLmaction.prototype.setEventHandler = function (type, handler) {
        this.chtml.addEventListener(type, handler);
    };
    CHTMLmaction.kind = maction_js_3.MmlMaction.prototype.kind;
    CHTMLmaction.styles = {
        'mjx-maction': {
            position: 'relative'
        },
        'mjx-maction > mjx-tool': {
            display: 'none',
            position: 'absolute',
            bottom: 0, right: 0,
            width: 0, height: 0,
            'z-index': 500
        },
        'mjx-tool > mjx-tip': {
            display: 'inline-block',
            padding: '.2em',
            border: '1px solid #888',
            'font-size': '70%',
            'background-color': '#F8F8F8',
            color: 'black',
            'box-shadow': '2px 2px 5px #AAAAAA'
        },
        'mjx-maction[toggle]': {
            cursor: 'pointer'
        },
        'mjx-status': {
            display: 'block',
            position: 'fixed',
            left: '1em',
            bottom: '1em',
            'min-width': '25%',
            padding: '.2em .4em',
            border: '1px solid #888',
            'font-size': '90%',
            'background-color': '#F8F8F8',
            color: 'black'
        }
    };
    CHTMLmaction.actions = new Map([
        ['toggle', [function (node, _data) {
                    node.adaptor.setAttribute(node.chtml, 'toggle', node.node.attributes.get('selection'));
                    var math = node.factory.jax.math;
                    var document = node.factory.jax.document;
                    var mml = node.node;
                    node.setEventHandler('click', function (event) {
                        if (!math.end.node) {
                            math.start.node = math.end.node = math.typesetRoot;
                            math.start.n = math.end.n = 0;
                        }
                        mml.nextToggleSelection();
                        math.rerender(document);
                        event.stopPropagation();
                    });
                }, {}]],
        ['tooltip', [function (node, data) {
                    var tip = node.childNodes[1];
                    if (!tip)
                        return;
                    if (tip.node.isKind('mtext')) {
                        var text = tip.node.getText();
                        node.adaptor.setAttribute(node.chtml, 'title', text);
                    }
                    else {
                        var adaptor_1 = node.adaptor;
                        var tool_1 = adaptor_1.append(node.chtml, node.html('mjx-tool', {
                            style: { bottom: node.em(-node.dy), right: node.em(-node.dx) }
                        }, [node.html('mjx-tip')]));
                        tip.toCHTML(adaptor_1.firstChild(tool_1));
                        node.setEventHandler('mouseover', function (event) {
                            data.stopTimers(node, data);
                            var timeout = setTimeout(function () { return adaptor_1.setStyle(tool_1, 'display', 'block'); }, data.postDelay);
                            data.hoverTimer.set(node, timeout);
                            event.stopPropagation();
                        });
                        node.setEventHandler('mouseout', function (event) {
                            data.stopTimers(node, data);
                            var timeout = setTimeout(function () { return adaptor_1.setStyle(tool_1, 'display', ''); }, data.clearDelay);
                            data.clearTimer.set(node, timeout);
                            event.stopPropagation();
                        });
                    }
                }, maction_js_2.TooltipData]],
        ['statusline', [function (node, data) {
                    var tip = node.childNodes[1];
                    if (!tip)
                        return;
                    if (tip.node.isKind('mtext')) {
                        var adaptor_2 = node.adaptor;
                        var text_1 = tip.node.getText();
                        adaptor_2.setAttribute(node.chtml, 'statusline', text_1);
                        node.setEventHandler('mouseover', function (event) {
                            if (data.status === null) {
                                var body = adaptor_2.body(adaptor_2.document);
                                data.status = adaptor_2.append(body, node.html('mjx-status', {}, [node.text(text_1)]));
                            }
                            event.stopPropagation();
                        });
                        node.setEventHandler('mouseout', function (event) {
                            if (data.status) {
                                adaptor_2.remove(data.status);
                                data.status = null;
                            }
                            event.stopPropagation();
                        });
                    }
                }, {
                    status: null
                }]]
    ]);
    return CHTMLmaction;
}((0, maction_js_1.CommonMactionMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmaction = CHTMLmaction;
//# sourceMappingURL=maction.js.map

/***/ }),

/***/ 804:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmath = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var math_js_1 = __webpack_require__(7490);
var math_js_2 = __webpack_require__(3233);
var BBox_js_1 = __webpack_require__(6469);
var CHTMLmath = (function (_super) {
    __extends(CHTMLmath, _super);
    function CHTMLmath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmath.prototype.toCHTML = function (parent) {
        _super.prototype.toCHTML.call(this, parent);
        var chtml = this.chtml;
        var adaptor = this.adaptor;
        var display = (this.node.attributes.get('display') === 'block');
        if (display) {
            adaptor.setAttribute(chtml, 'display', 'true');
            adaptor.setAttribute(parent, 'display', 'true');
            this.handleDisplay(parent);
        }
        else {
            this.handleInline(parent);
        }
        adaptor.addClass(chtml, 'MJX-TEX');
    };
    CHTMLmath.prototype.handleDisplay = function (parent) {
        var adaptor = this.adaptor;
        var _a = __read(this.getAlignShift(), 2), align = _a[0], shift = _a[1];
        if (align !== 'center') {
            adaptor.setAttribute(parent, 'justify', align);
        }
        if (this.bbox.pwidth === BBox_js_1.BBox.fullWidth) {
            adaptor.setAttribute(parent, 'width', 'full');
            if (this.jax.table) {
                var _b = this.jax.table.getOuterBBox(), L = _b.L, w = _b.w, R = _b.R;
                if (align === 'right') {
                    R = Math.max(R || -shift, -shift);
                }
                else if (align === 'left') {
                    L = Math.max(L || shift, shift);
                }
                else if (align === 'center') {
                    w += 2 * Math.abs(shift);
                }
                var W = this.em(Math.max(0, L + w + R));
                adaptor.setStyle(parent, 'min-width', W);
                adaptor.setStyle(this.jax.table.chtml, 'min-width', W);
            }
        }
        else {
            this.setIndent(this.chtml, align, shift);
        }
    };
    CHTMLmath.prototype.handleInline = function (parent) {
        var adaptor = this.adaptor;
        var margin = adaptor.getStyle(this.chtml, 'margin-right');
        if (margin) {
            adaptor.setStyle(this.chtml, 'margin-right', '');
            adaptor.setStyle(parent, 'margin-right', margin);
            adaptor.setStyle(parent, 'width', '0');
        }
    };
    CHTMLmath.prototype.setChildPWidths = function (recompute, w, clear) {
        if (w === void 0) { w = null; }
        if (clear === void 0) { clear = true; }
        return (this.parent ? _super.prototype.setChildPWidths.call(this, recompute, w, clear) : false);
    };
    CHTMLmath.kind = math_js_2.MmlMath.prototype.kind;
    CHTMLmath.styles = {
        'mjx-math': {
            'line-height': 0,
            'text-align': 'left',
            'text-indent': 0,
            'font-style': 'normal',
            'font-weight': 'normal',
            'font-size': '100%',
            'font-size-adjust': 'none',
            'letter-spacing': 'normal',
            'border-collapse': 'collapse',
            'word-wrap': 'normal',
            'word-spacing': 'normal',
            'white-space': 'nowrap',
            'direction': 'ltr',
            'padding': '1px 0'
        },
        'mjx-container[jax="CHTML"][display="true"]': {
            display: 'block',
            'text-align': 'center',
            margin: '1em 0'
        },
        'mjx-container[jax="CHTML"][display="true"][width="full"]': {
            display: 'flex'
        },
        'mjx-container[jax="CHTML"][display="true"] mjx-math': {
            padding: 0
        },
        'mjx-container[jax="CHTML"][justify="left"]': {
            'text-align': 'left'
        },
        'mjx-container[jax="CHTML"][justify="right"]': {
            'text-align': 'right'
        }
    };
    return CHTMLmath;
}((0, math_js_1.CommonMathMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmath = CHTMLmath;
//# sourceMappingURL=math.js.map

/***/ }),

/***/ 8147:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmenclose = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var menclose_js_1 = __webpack_require__(7313);
var Notation = __importStar(__webpack_require__(8270));
var menclose_js_2 = __webpack_require__(6661);
var lengths_js_1 = __webpack_require__(6010);
function Angle(x, y) {
    return Math.atan2(x, y).toFixed(3).replace(/\.?0+$/, '');
}
var ANGLE = Angle(Notation.ARROWDX, Notation.ARROWY);
var CHTMLmenclose = (function (_super) {
    __extends(CHTMLmenclose, _super);
    function CHTMLmenclose() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmenclose.prototype.toCHTML = function (parent) {
        var e_1, _a, e_2, _b;
        var adaptor = this.adaptor;
        var chtml = this.standardCHTMLnode(parent);
        var block = adaptor.append(chtml, this.html('mjx-box'));
        if (this.renderChild) {
            this.renderChild(this, block);
        }
        else {
            this.childNodes[0].toCHTML(block);
        }
        try {
            for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var name_1 = _d.value;
                var notation = this.notations[name_1];
                !notation.renderChild && notation.renderer(this, block);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var pbox = this.getPadding();
        try {
            for (var _e = __values(Notation.sideNames), _f = _e.next(); !_f.done; _f = _e.next()) {
                var name_2 = _f.value;
                var i = Notation.sideIndex[name_2];
                pbox[i] > 0 && adaptor.setStyle(block, 'padding-' + name_2, this.em(pbox[i]));
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    CHTMLmenclose.prototype.arrow = function (w, a, double, offset, dist) {
        if (offset === void 0) { offset = ''; }
        if (dist === void 0) { dist = 0; }
        var W = this.getBBox().w;
        var style = { width: this.em(w) };
        if (W !== w) {
            style.left = this.em((W - w) / 2);
        }
        if (a) {
            style.transform = 'rotate(' + this.fixed(a) + 'rad)';
        }
        var arrow = this.html('mjx-arrow', { style: style }, [
            this.html('mjx-aline'), this.html('mjx-rthead'), this.html('mjx-rbhead')
        ]);
        if (double) {
            this.adaptor.append(arrow, this.html('mjx-lthead'));
            this.adaptor.append(arrow, this.html('mjx-lbhead'));
            this.adaptor.setAttribute(arrow, 'double', 'true');
        }
        this.adjustArrow(arrow, double);
        this.moveArrow(arrow, offset, dist);
        return arrow;
    };
    CHTMLmenclose.prototype.adjustArrow = function (arrow, double) {
        var _this = this;
        var t = this.thickness;
        var head = this.arrowhead;
        if (head.x === Notation.ARROWX && head.y === Notation.ARROWY &&
            head.dx === Notation.ARROWDX && t === Notation.THICKNESS)
            return;
        var _a = __read([t * head.x, t * head.y].map(function (x) { return _this.em(x); }), 2), x = _a[0], y = _a[1];
        var a = Angle(head.dx, head.y);
        var _b = __read(this.adaptor.childNodes(arrow), 5), line = _b[0], rthead = _b[1], rbhead = _b[2], lthead = _b[3], lbhead = _b[4];
        this.adjustHead(rthead, [y, '0', '1px', x], a);
        this.adjustHead(rbhead, ['1px', '0', y, x], '-' + a);
        this.adjustHead(lthead, [y, x, '1px', '0'], '-' + a);
        this.adjustHead(lbhead, ['1px', x, y, '0'], a);
        this.adjustLine(line, t, head.x, double);
    };
    CHTMLmenclose.prototype.adjustHead = function (head, border, a) {
        if (head) {
            this.adaptor.setStyle(head, 'border-width', border.join(' '));
            this.adaptor.setStyle(head, 'transform', 'skewX(' + a + 'rad)');
        }
    };
    CHTMLmenclose.prototype.adjustLine = function (line, t, x, double) {
        this.adaptor.setStyle(line, 'borderTop', this.em(t) + ' solid');
        this.adaptor.setStyle(line, 'top', this.em(-t / 2));
        this.adaptor.setStyle(line, 'right', this.em(t * (x - 1)));
        if (double) {
            this.adaptor.setStyle(line, 'left', this.em(t * (x - 1)));
        }
    };
    CHTMLmenclose.prototype.moveArrow = function (arrow, offset, d) {
        if (!d)
            return;
        var transform = this.adaptor.getStyle(arrow, 'transform');
        this.adaptor.setStyle(arrow, 'transform', "translate".concat(offset, "(").concat(this.em(-d), ")").concat((transform ? ' ' + transform : '')));
    };
    CHTMLmenclose.prototype.adjustBorder = function (node) {
        if (this.thickness !== Notation.THICKNESS) {
            this.adaptor.setStyle(node, 'borderWidth', this.em(this.thickness));
        }
        return node;
    };
    CHTMLmenclose.prototype.adjustThickness = function (shape) {
        if (this.thickness !== Notation.THICKNESS) {
            this.adaptor.setStyle(shape, 'strokeWidth', this.fixed(this.thickness));
        }
        return shape;
    };
    CHTMLmenclose.prototype.fixed = function (m, n) {
        if (n === void 0) { n = 3; }
        if (Math.abs(m) < .0006) {
            return '0';
        }
        return m.toFixed(n).replace(/\.?0+$/, '');
    };
    CHTMLmenclose.prototype.em = function (m) {
        return _super.prototype.em.call(this, m);
    };
    CHTMLmenclose.kind = menclose_js_2.MmlMenclose.prototype.kind;
    CHTMLmenclose.styles = {
        'mjx-menclose': {
            position: 'relative'
        },
        'mjx-menclose > mjx-dstrike': {
            display: 'inline-block',
            left: 0, top: 0,
            position: 'absolute',
            'border-top': Notation.SOLID,
            'transform-origin': 'top left'
        },
        'mjx-menclose > mjx-ustrike': {
            display: 'inline-block',
            left: 0, bottom: 0,
            position: 'absolute',
            'border-top': Notation.SOLID,
            'transform-origin': 'bottom left'
        },
        'mjx-menclose > mjx-hstrike': {
            'border-top': Notation.SOLID,
            position: 'absolute',
            left: 0, right: 0, bottom: '50%',
            transform: 'translateY(' + (0, lengths_js_1.em)(Notation.THICKNESS / 2) + ')'
        },
        'mjx-menclose > mjx-vstrike': {
            'border-left': Notation.SOLID,
            position: 'absolute',
            top: 0, bottom: 0, right: '50%',
            transform: 'translateX(' + (0, lengths_js_1.em)(Notation.THICKNESS / 2) + ')'
        },
        'mjx-menclose > mjx-rbox': {
            position: 'absolute',
            top: 0, bottom: 0, right: 0, left: 0,
            'border': Notation.SOLID,
            'border-radius': (0, lengths_js_1.em)(Notation.THICKNESS + Notation.PADDING)
        },
        'mjx-menclose > mjx-cbox': {
            position: 'absolute',
            top: 0, bottom: 0, right: 0, left: 0,
            'border': Notation.SOLID,
            'border-radius': '50%'
        },
        'mjx-menclose > mjx-arrow': {
            position: 'absolute',
            left: 0, bottom: '50%', height: 0, width: 0
        },
        'mjx-menclose > mjx-arrow > *': {
            display: 'block',
            position: 'absolute',
            'transform-origin': 'bottom',
            'border-left': (0, lengths_js_1.em)(Notation.THICKNESS * Notation.ARROWX) + ' solid',
            'border-right': 0,
            'box-sizing': 'border-box'
        },
        'mjx-menclose > mjx-arrow > mjx-aline': {
            left: 0, top: (0, lengths_js_1.em)(-Notation.THICKNESS / 2),
            right: (0, lengths_js_1.em)(Notation.THICKNESS * (Notation.ARROWX - 1)), height: 0,
            'border-top': (0, lengths_js_1.em)(Notation.THICKNESS) + ' solid',
            'border-left': 0
        },
        'mjx-menclose > mjx-arrow[double] > mjx-aline': {
            left: (0, lengths_js_1.em)(Notation.THICKNESS * (Notation.ARROWX - 1)), height: 0,
        },
        'mjx-menclose > mjx-arrow > mjx-rthead': {
            transform: 'skewX(' + ANGLE + 'rad)',
            right: 0, bottom: '-1px',
            'border-bottom': '1px solid transparent',
            'border-top': (0, lengths_js_1.em)(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
        },
        'mjx-menclose > mjx-arrow > mjx-rbhead': {
            transform: 'skewX(-' + ANGLE + 'rad)',
            'transform-origin': 'top',
            right: 0, top: '-1px',
            'border-top': '1px solid transparent',
            'border-bottom': (0, lengths_js_1.em)(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
        },
        'mjx-menclose > mjx-arrow > mjx-lthead': {
            transform: 'skewX(-' + ANGLE + 'rad)',
            left: 0, bottom: '-1px',
            'border-left': 0,
            'border-right': (0, lengths_js_1.em)(Notation.THICKNESS * Notation.ARROWX) + ' solid',
            'border-bottom': '1px solid transparent',
            'border-top': (0, lengths_js_1.em)(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
        },
        'mjx-menclose > mjx-arrow > mjx-lbhead': {
            transform: 'skewX(' + ANGLE + 'rad)',
            'transform-origin': 'top',
            left: 0, top: '-1px',
            'border-left': 0,
            'border-right': (0, lengths_js_1.em)(Notation.THICKNESS * Notation.ARROWX) + ' solid',
            'border-top': '1px solid transparent',
            'border-bottom': (0, lengths_js_1.em)(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
        },
        'mjx-menclose > dbox': {
            position: 'absolute',
            top: 0, bottom: 0, left: (0, lengths_js_1.em)(-1.5 * Notation.PADDING),
            width: (0, lengths_js_1.em)(3 * Notation.PADDING),
            border: (0, lengths_js_1.em)(Notation.THICKNESS) + ' solid',
            'border-radius': '50%',
            'clip-path': 'inset(0 0 0 ' + (0, lengths_js_1.em)(1.5 * Notation.PADDING) + ')',
            'box-sizing': 'border-box'
        }
    };
    CHTMLmenclose.notations = new Map([
        Notation.Border('top'),
        Notation.Border('right'),
        Notation.Border('bottom'),
        Notation.Border('left'),
        Notation.Border2('actuarial', 'top', 'right'),
        Notation.Border2('madruwb', 'bottom', 'right'),
        Notation.DiagonalStrike('up', 1),
        Notation.DiagonalStrike('down', -1),
        ['horizontalstrike', {
                renderer: Notation.RenderElement('hstrike', 'Y'),
                bbox: function (node) { return [0, node.padding, 0, node.padding]; }
            }],
        ['verticalstrike', {
                renderer: Notation.RenderElement('vstrike', 'X'),
                bbox: function (node) { return [node.padding, 0, node.padding, 0]; }
            }],
        ['box', {
                renderer: function (node, child) {
                    node.adaptor.setStyle(child, 'border', node.em(node.thickness) + ' solid');
                },
                bbox: Notation.fullBBox,
                border: Notation.fullBorder,
                remove: 'left right top bottom'
            }],
        ['roundedbox', {
                renderer: Notation.RenderElement('rbox'),
                bbox: Notation.fullBBox
            }],
        ['circle', {
                renderer: Notation.RenderElement('cbox'),
                bbox: Notation.fullBBox
            }],
        ['phasorangle', {
                renderer: function (node, child) {
                    var _a = node.getBBox(), h = _a.h, d = _a.d;
                    var _b = __read(node.getArgMod(1.75 * node.padding, h + d), 2), a = _b[0], W = _b[1];
                    var t = node.thickness * Math.sin(a) * .9;
                    node.adaptor.setStyle(child, 'border-bottom', node.em(node.thickness) + ' solid');
                    var strike = node.adjustBorder(node.html('mjx-ustrike', { style: {
                            width: node.em(W),
                            transform: 'translateX(' + node.em(t) + ') rotate(' + node.fixed(-a) + 'rad)',
                        } }));
                    node.adaptor.append(node.chtml, strike);
                },
                bbox: function (node) {
                    var p = node.padding / 2;
                    var t = node.thickness;
                    return [2 * p, p, p + t, 3 * p + t];
                },
                border: function (node) { return [0, 0, node.thickness, 0]; },
                remove: 'bottom'
            }],
        Notation.Arrow('up'),
        Notation.Arrow('down'),
        Notation.Arrow('left'),
        Notation.Arrow('right'),
        Notation.Arrow('updown'),
        Notation.Arrow('leftright'),
        Notation.DiagonalArrow('updiagonal'),
        Notation.DiagonalArrow('northeast'),
        Notation.DiagonalArrow('southeast'),
        Notation.DiagonalArrow('northwest'),
        Notation.DiagonalArrow('southwest'),
        Notation.DiagonalArrow('northeastsouthwest'),
        Notation.DiagonalArrow('northwestsoutheast'),
        ['longdiv', {
                renderer: function (node, child) {
                    var adaptor = node.adaptor;
                    adaptor.setStyle(child, 'border-top', node.em(node.thickness) + ' solid');
                    var arc = adaptor.append(node.chtml, node.html('dbox'));
                    var t = node.thickness;
                    var p = node.padding;
                    if (t !== Notation.THICKNESS) {
                        adaptor.setStyle(arc, 'border-width', node.em(t));
                    }
                    if (p !== Notation.PADDING) {
                        adaptor.setStyle(arc, 'left', node.em(-1.5 * p));
                        adaptor.setStyle(arc, 'width', node.em(3 * p));
                        adaptor.setStyle(arc, 'clip-path', 'inset(0 0 0 ' + node.em(1.5 * p) + ')');
                    }
                },
                bbox: function (node) {
                    var p = node.padding;
                    var t = node.thickness;
                    return [p + t, p, p, 2 * p + t / 2];
                }
            }],
        ['radical', {
                renderer: function (node, child) {
                    node.msqrt.toCHTML(child);
                    var TRBL = node.sqrtTRBL();
                    node.adaptor.setStyle(node.msqrt.chtml, 'margin', TRBL.map(function (x) { return node.em(-x); }).join(' '));
                },
                init: function (node) {
                    node.msqrt = node.createMsqrt(node.childNodes[0]);
                },
                bbox: function (node) { return node.sqrtTRBL(); },
                renderChild: true
            }]
    ]);
    return CHTMLmenclose;
}((0, menclose_js_1.CommonMencloseMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmenclose = CHTMLmenclose;
//# sourceMappingURL=menclose.js.map

/***/ }),

/***/ 2275:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmfenced = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mfenced_js_1 = __webpack_require__(7555);
var mfenced_js_2 = __webpack_require__(5410);
var CHTMLmfenced = (function (_super) {
    __extends(CHTMLmfenced, _super);
    function CHTMLmfenced() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmfenced.prototype.toCHTML = function (parent) {
        var chtml = this.standardCHTMLnode(parent);
        this.mrow.toCHTML(chtml);
    };
    CHTMLmfenced.kind = mfenced_js_2.MmlMfenced.prototype.kind;
    return CHTMLmfenced;
}((0, mfenced_js_1.CommonMfencedMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmfenced = CHTMLmfenced;
//# sourceMappingURL=mfenced.js.map

/***/ }),

/***/ 9063:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmfrac = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mfrac_js_1 = __webpack_require__(2688);
var mfrac_js_2 = __webpack_require__(6850);
var CHTMLmfrac = (function (_super) {
    __extends(CHTMLmfrac, _super);
    function CHTMLmfrac() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmfrac.prototype.toCHTML = function (parent) {
        this.standardCHTMLnode(parent);
        var _a = this.node.attributes.getList('linethickness', 'bevelled'), linethickness = _a.linethickness, bevelled = _a.bevelled;
        var display = this.isDisplay();
        if (bevelled) {
            this.makeBevelled(display);
        }
        else {
            var thickness = this.length2em(String(linethickness), .06);
            if (thickness === 0) {
                this.makeAtop(display);
            }
            else {
                this.makeFraction(display, thickness);
            }
        }
    };
    CHTMLmfrac.prototype.makeFraction = function (display, t) {
        var _a = this.node.attributes.getList('numalign', 'denomalign'), numalign = _a.numalign, denomalign = _a.denomalign;
        var withDelims = this.node.getProperty('withDelims');
        var attr = (display ? { type: 'd' } : {});
        var fattr = (withDelims ? __assign(__assign({}, attr), { delims: 'true' }) : __assign({}, attr));
        var nattr = (numalign !== 'center' ? { align: numalign } : {});
        var dattr = (denomalign !== 'center' ? { align: denomalign } : {});
        var dsattr = __assign({}, attr), nsattr = __assign({}, attr);
        var tex = this.font.params;
        if (t !== .06) {
            var a = tex.axis_height;
            var tEm = this.em(t);
            var _b = this.getTUV(display, t), T = _b.T, u = _b.u, v = _b.v;
            var m = (display ? this.em(3 * t) : tEm) + ' -.1em';
            attr.style = { height: tEm, 'border-top': tEm + ' solid', margin: m };
            var nh = this.em(Math.max(0, u));
            nsattr.style = { height: nh, 'vertical-align': '-' + nh };
            dsattr.style = { height: this.em(Math.max(0, v)) };
            fattr.style = { 'vertical-align': this.em(a - T) };
        }
        var num, den;
        this.adaptor.append(this.chtml, this.html('mjx-frac', fattr, [
            num = this.html('mjx-num', nattr, [this.html('mjx-nstrut', nsattr)]),
            this.html('mjx-dbox', {}, [
                this.html('mjx-dtable', {}, [
                    this.html('mjx-line', attr),
                    this.html('mjx-row', {}, [
                        den = this.html('mjx-den', dattr, [this.html('mjx-dstrut', dsattr)])
                    ])
                ])
            ])
        ]));
        this.childNodes[0].toCHTML(num);
        this.childNodes[1].toCHTML(den);
    };
    CHTMLmfrac.prototype.makeAtop = function (display) {
        var _a = this.node.attributes.getList('numalign', 'denomalign'), numalign = _a.numalign, denomalign = _a.denomalign;
        var withDelims = this.node.getProperty('withDelims');
        var attr = (display ? { type: 'd', atop: true } : { atop: true });
        var fattr = (withDelims ? __assign(__assign({}, attr), { delims: true }) : __assign({}, attr));
        var nattr = (numalign !== 'center' ? { align: numalign } : {});
        var dattr = (denomalign !== 'center' ? { align: denomalign } : {});
        var _b = this.getUVQ(display), v = _b.v, q = _b.q;
        nattr.style = { 'padding-bottom': this.em(q) };
        fattr.style = { 'vertical-align': this.em(-v) };
        var num, den;
        this.adaptor.append(this.chtml, this.html('mjx-frac', fattr, [
            num = this.html('mjx-num', nattr),
            den = this.html('mjx-den', dattr)
        ]));
        this.childNodes[0].toCHTML(num);
        this.childNodes[1].toCHTML(den);
    };
    CHTMLmfrac.prototype.makeBevelled = function (display) {
        var adaptor = this.adaptor;
        adaptor.setAttribute(this.chtml, 'bevelled', 'ture');
        var num = adaptor.append(this.chtml, this.html('mjx-num'));
        this.childNodes[0].toCHTML(num);
        this.bevel.toCHTML(this.chtml);
        var den = adaptor.append(this.chtml, this.html('mjx-den'));
        this.childNodes[1].toCHTML(den);
        var _a = this.getBevelData(display), u = _a.u, v = _a.v, delta = _a.delta, nbox = _a.nbox, dbox = _a.dbox;
        if (u) {
            adaptor.setStyle(num, 'verticalAlign', this.em(u / nbox.scale));
        }
        if (v) {
            adaptor.setStyle(den, 'verticalAlign', this.em(v / dbox.scale));
        }
        var dx = this.em(-delta / 2);
        adaptor.setStyle(this.bevel.chtml, 'marginLeft', dx);
        adaptor.setStyle(this.bevel.chtml, 'marginRight', dx);
    };
    CHTMLmfrac.kind = mfrac_js_2.MmlMfrac.prototype.kind;
    CHTMLmfrac.styles = {
        'mjx-frac': {
            display: 'inline-block',
            'vertical-align': '0.17em',
            padding: '0 .22em'
        },
        'mjx-frac[type="d"]': {
            'vertical-align': '.04em'
        },
        'mjx-frac[delims]': {
            padding: '0 .1em'
        },
        'mjx-frac[atop]': {
            padding: '0 .12em'
        },
        'mjx-frac[atop][delims]': {
            padding: '0'
        },
        'mjx-dtable': {
            display: 'inline-table',
            width: '100%'
        },
        'mjx-dtable > *': {
            'font-size': '2000%'
        },
        'mjx-dbox': {
            display: 'block',
            'font-size': '5%'
        },
        'mjx-num': {
            display: 'block',
            'text-align': 'center'
        },
        'mjx-den': {
            display: 'block',
            'text-align': 'center'
        },
        'mjx-mfrac[bevelled] > mjx-num': {
            display: 'inline-block'
        },
        'mjx-mfrac[bevelled] > mjx-den': {
            display: 'inline-block'
        },
        'mjx-den[align="right"], mjx-num[align="right"]': {
            'text-align': 'right'
        },
        'mjx-den[align="left"], mjx-num[align="left"]': {
            'text-align': 'left'
        },
        'mjx-nstrut': {
            display: 'inline-block',
            height: '.054em',
            width: 0,
            'vertical-align': '-.054em'
        },
        'mjx-nstrut[type="d"]': {
            height: '.217em',
            'vertical-align': '-.217em',
        },
        'mjx-dstrut': {
            display: 'inline-block',
            height: '.505em',
            width: 0
        },
        'mjx-dstrut[type="d"]': {
            height: '.726em',
        },
        'mjx-line': {
            display: 'block',
            'box-sizing': 'border-box',
            'min-height': '1px',
            height: '.06em',
            'border-top': '.06em solid',
            margin: '.06em -.1em',
            overflow: 'hidden'
        },
        'mjx-line[type="d"]': {
            margin: '.18em -.1em'
        }
    };
    return CHTMLmfrac;
}((0, mfrac_js_1.CommonMfracMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmfrac = CHTMLmfrac;
//# sourceMappingURL=mfrac.js.map

/***/ }),

/***/ 6911:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmglyph = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mglyph_js_1 = __webpack_require__(5636);
var mglyph_js_2 = __webpack_require__(3985);
var CHTMLmglyph = (function (_super) {
    __extends(CHTMLmglyph, _super);
    function CHTMLmglyph() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmglyph.prototype.toCHTML = function (parent) {
        var chtml = this.standardCHTMLnode(parent);
        if (this.charWrapper) {
            this.charWrapper.toCHTML(chtml);
            return;
        }
        var _a = this.node.attributes.getList('src', 'alt'), src = _a.src, alt = _a.alt;
        var styles = {
            width: this.em(this.width),
            height: this.em(this.height)
        };
        if (this.valign) {
            styles.verticalAlign = this.em(this.valign);
        }
        var img = this.html('img', { src: src, style: styles, alt: alt, title: alt });
        this.adaptor.append(chtml, img);
    };
    CHTMLmglyph.kind = mglyph_js_2.MmlMglyph.prototype.kind;
    CHTMLmglyph.styles = {
        'mjx-mglyph > img': {
            display: 'inline-block',
            border: 0,
            padding: 0
        }
    };
    return CHTMLmglyph;
}((0, mglyph_js_1.CommonMglyphMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmglyph = CHTMLmglyph;
//# sourceMappingURL=mglyph.js.map

/***/ }),

/***/ 1653:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmi = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mi_js_1 = __webpack_require__(5723);
var mi_js_2 = __webpack_require__(450);
var CHTMLmi = (function (_super) {
    __extends(CHTMLmi, _super);
    function CHTMLmi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmi.kind = mi_js_2.MmlMi.prototype.kind;
    return CHTMLmi;
}((0, mi_js_1.CommonMiMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmi = CHTMLmi;
//# sourceMappingURL=mi.js.map

/***/ }),

/***/ 6781:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmmultiscripts = void 0;
var msubsup_js_1 = __webpack_require__(4300);
var mmultiscripts_js_1 = __webpack_require__(8009);
var mmultiscripts_js_2 = __webpack_require__(6405);
var string_js_1 = __webpack_require__(505);
var CHTMLmmultiscripts = (function (_super) {
    __extends(CHTMLmmultiscripts, _super);
    function CHTMLmmultiscripts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmmultiscripts.prototype.toCHTML = function (parent) {
        var chtml = this.standardCHTMLnode(parent);
        var data = this.scriptData;
        var scriptalign = this.node.getProperty('scriptalign') || 'right left';
        var _a = __read((0, string_js_1.split)(scriptalign + ' ' + scriptalign), 2), preAlign = _a[0], postAlign = _a[1];
        var sub = this.combinePrePost(data.sub, data.psub);
        var sup = this.combinePrePost(data.sup, data.psup);
        var _b = __read(this.getUVQ(sub, sup), 2), u = _b[0], v = _b[1];
        if (data.numPrescripts) {
            var scripts = this.addScripts(u, -v, true, data.psub, data.psup, this.firstPrescript, data.numPrescripts);
            preAlign !== 'right' && this.adaptor.setAttribute(scripts, 'script-align', preAlign);
        }
        this.childNodes[0].toCHTML(chtml);
        if (data.numScripts) {
            var scripts = this.addScripts(u, -v, false, data.sub, data.sup, 1, data.numScripts);
            postAlign !== 'left' && this.adaptor.setAttribute(scripts, 'script-align', postAlign);
        }
    };
    CHTMLmmultiscripts.prototype.addScripts = function (u, v, isPre, sub, sup, i, n) {
        var adaptor = this.adaptor;
        var q = (u - sup.d) + (v - sub.h);
        var U = (u < 0 && v === 0 ? sub.h + u : u);
        var rowdef = (q > 0 ? { style: { height: this.em(q) } } : {});
        var tabledef = (U ? { style: { 'vertical-align': this.em(U) } } : {});
        var supRow = this.html('mjx-row');
        var sepRow = this.html('mjx-row', rowdef);
        var subRow = this.html('mjx-row');
        var name = 'mjx-' + (isPre ? 'pre' : '') + 'scripts';
        var m = i + 2 * n;
        while (i < m) {
            this.childNodes[i++].toCHTML(adaptor.append(subRow, this.html('mjx-cell')));
            this.childNodes[i++].toCHTML(adaptor.append(supRow, this.html('mjx-cell')));
        }
        return adaptor.append(this.chtml, this.html(name, tabledef, [supRow, sepRow, subRow]));
    };
    CHTMLmmultiscripts.kind = mmultiscripts_js_2.MmlMmultiscripts.prototype.kind;
    CHTMLmmultiscripts.styles = {
        'mjx-prescripts': {
            display: 'inline-table',
            'padding-left': '.05em'
        },
        'mjx-scripts': {
            display: 'inline-table',
            'padding-right': '.05em'
        },
        'mjx-prescripts > mjx-row > mjx-cell': {
            'text-align': 'right'
        },
        '[script-align="left"] > mjx-row > mjx-cell': {
            'text-align': 'left'
        },
        '[script-align="center"] > mjx-row > mjx-cell': {
            'text-align': 'center'
        },
        '[script-align="right"] > mjx-row > mjx-cell': {
            'text-align': 'right'
        }
    };
    return CHTMLmmultiscripts;
}((0, mmultiscripts_js_1.CommonMmultiscriptsMixin)(msubsup_js_1.CHTMLmsubsup)));
exports.CHTMLmmultiscripts = CHTMLmmultiscripts;
//# sourceMappingURL=mmultiscripts.js.map

/***/ }),

/***/ 6460:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmn = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mn_js_1 = __webpack_require__(5023);
var mn_js_2 = __webpack_require__(3050);
var CHTMLmn = (function (_super) {
    __extends(CHTMLmn, _super);
    function CHTMLmn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmn.kind = mn_js_2.MmlMn.prototype.kind;
    return CHTMLmn;
}((0, mn_js_1.CommonMnMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmn = CHTMLmn;
//# sourceMappingURL=mn.js.map

/***/ }),

/***/ 6287:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmo = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mo_js_1 = __webpack_require__(7096);
var mo_js_2 = __webpack_require__(2756);
var CHTMLmo = (function (_super) {
    __extends(CHTMLmo, _super);
    function CHTMLmo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmo.prototype.toCHTML = function (parent) {
        var e_1, _a;
        var attributes = this.node.attributes;
        var symmetric = attributes.get('symmetric') && this.stretch.dir !== 2;
        var stretchy = this.stretch.dir !== 0;
        if (stretchy && this.size === null) {
            this.getStretchedVariant([]);
        }
        var chtml = this.standardCHTMLnode(parent);
        if (stretchy && this.size < 0) {
            this.stretchHTML(chtml);
        }
        else {
            if (symmetric || attributes.get('largeop')) {
                var u = this.em(this.getCenterOffset());
                if (u !== '0') {
                    this.adaptor.setStyle(chtml, 'verticalAlign', u);
                }
            }
            if (this.node.getProperty('mathaccent')) {
                this.adaptor.setStyle(chtml, 'width', '0');
                this.adaptor.setStyle(chtml, 'margin-left', this.em(this.getAccentOffset()));
            }
            try {
                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    child.toCHTML(chtml);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    CHTMLmo.prototype.stretchHTML = function (chtml) {
        var c = this.getText().codePointAt(0);
        this.font.delimUsage.add(c);
        this.childNodes[0].markUsed();
        var delim = this.stretch;
        var stretch = delim.stretch;
        var content = [];
        if (stretch[0]) {
            content.push(this.html('mjx-beg', {}, [this.html('mjx-c')]));
        }
        content.push(this.html('mjx-ext', {}, [this.html('mjx-c')]));
        if (stretch.length === 4) {
            content.push(this.html('mjx-mid', {}, [this.html('mjx-c')]), this.html('mjx-ext', {}, [this.html('mjx-c')]));
        }
        if (stretch[2]) {
            content.push(this.html('mjx-end', {}, [this.html('mjx-c')]));
        }
        var styles = {};
        var _a = this.bbox, h = _a.h, d = _a.d, w = _a.w;
        if (delim.dir === 1) {
            content.push(this.html('mjx-mark'));
            styles.height = this.em(h + d);
            styles.verticalAlign = this.em(-d);
        }
        else {
            styles.width = this.em(w);
        }
        var dir = mo_js_1.DirectionVH[delim.dir];
        var properties = { class: this.char(delim.c || c), style: styles };
        var html = this.html('mjx-stretchy-' + dir, properties, content);
        this.adaptor.append(chtml, html);
    };
    CHTMLmo.kind = mo_js_2.MmlMo.prototype.kind;
    CHTMLmo.styles = {
        'mjx-stretchy-h': {
            display: 'inline-table',
            width: '100%'
        },
        'mjx-stretchy-h > *': {
            display: 'table-cell',
            width: 0
        },
        'mjx-stretchy-h > * > mjx-c': {
            display: 'inline-block',
            transform: 'scalex(1.0000001)'
        },
        'mjx-stretchy-h > * > mjx-c::before': {
            display: 'inline-block',
            width: 'initial'
        },
        'mjx-stretchy-h > mjx-ext': {
            '/* IE */ overflow': 'hidden',
            '/* others */ overflow': 'clip visible',
            width: '100%'
        },
        'mjx-stretchy-h > mjx-ext > mjx-c::before': {
            transform: 'scalex(500)'
        },
        'mjx-stretchy-h > mjx-ext > mjx-c': {
            width: 0
        },
        'mjx-stretchy-h > mjx-beg > mjx-c': {
            'margin-right': '-.1em'
        },
        'mjx-stretchy-h > mjx-end > mjx-c': {
            'margin-left': '-.1em'
        },
        'mjx-stretchy-v': {
            display: 'inline-block'
        },
        'mjx-stretchy-v > *': {
            display: 'block'
        },
        'mjx-stretchy-v > mjx-beg': {
            height: 0
        },
        'mjx-stretchy-v > mjx-end > mjx-c': {
            display: 'block'
        },
        'mjx-stretchy-v > * > mjx-c': {
            transform: 'scaley(1.0000001)',
            'transform-origin': 'left center',
            overflow: 'hidden'
        },
        'mjx-stretchy-v > mjx-ext': {
            display: 'block',
            height: '100%',
            'box-sizing': 'border-box',
            border: '0px solid transparent',
            '/* IE */ overflow': 'hidden',
            '/* others */ overflow': 'visible clip',
        },
        'mjx-stretchy-v > mjx-ext > mjx-c::before': {
            width: 'initial',
            'box-sizing': 'border-box'
        },
        'mjx-stretchy-v > mjx-ext > mjx-c': {
            transform: 'scaleY(500) translateY(.075em)',
            overflow: 'visible'
        },
        'mjx-mark': {
            display: 'inline-block',
            height: '0px'
        }
    };
    return CHTMLmo;
}((0, mo_js_1.CommonMoMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmo = CHTMLmo;
//# sourceMappingURL=mo.js.map

/***/ }),

/***/ 5964:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmpadded = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mpadded_js_1 = __webpack_require__(6898);
var mpadded_js_2 = __webpack_require__(7238);
var CHTMLmpadded = (function (_super) {
    __extends(CHTMLmpadded, _super);
    function CHTMLmpadded() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmpadded.prototype.toCHTML = function (parent) {
        var e_1, _a;
        var chtml = this.standardCHTMLnode(parent);
        var content = [];
        var style = {};
        var _b = __read(this.getDimens(), 9), W = _b[2], dh = _b[3], dd = _b[4], dw = _b[5], x = _b[6], y = _b[7], dx = _b[8];
        if (dw) {
            style.width = this.em(W + dw);
        }
        if (dh || dd) {
            style.margin = this.em(dh) + ' 0 ' + this.em(dd);
        }
        if (x + dx || y) {
            style.position = 'relative';
            var rbox = this.html('mjx-rbox', {
                style: { left: this.em(x + dx), top: this.em(-y), 'max-width': style.width }
            });
            if (x + dx && this.childNodes[0].getBBox().pwidth) {
                this.adaptor.setAttribute(rbox, 'width', 'full');
                this.adaptor.setStyle(rbox, 'left', this.em(x));
            }
            content.push(rbox);
        }
        chtml = this.adaptor.append(chtml, this.html('mjx-block', { style: style }, content));
        try {
            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
                var child = _d.value;
                child.toCHTML(content[0] || chtml);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    CHTMLmpadded.kind = mpadded_js_2.MmlMpadded.prototype.kind;
    CHTMLmpadded.styles = {
        'mjx-mpadded': {
            display: 'inline-block'
        },
        'mjx-rbox': {
            display: 'inline-block',
            position: 'relative'
        }
    };
    return CHTMLmpadded;
}((0, mpadded_js_1.CommonMpaddedMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmpadded = CHTMLmpadded;
//# sourceMappingURL=mpadded.js.map

/***/ }),

/***/ 8776:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmroot = void 0;
var msqrt_js_1 = __webpack_require__(5610);
var mroot_js_1 = __webpack_require__(6991);
var mroot_js_2 = __webpack_require__(6145);
var CHTMLmroot = (function (_super) {
    __extends(CHTMLmroot, _super);
    function CHTMLmroot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmroot.prototype.addRoot = function (ROOT, root, sbox, H) {
        root.toCHTML(ROOT);
        var _a = __read(this.getRootDimens(sbox, H), 3), x = _a[0], h = _a[1], dx = _a[2];
        this.adaptor.setStyle(ROOT, 'verticalAlign', this.em(h));
        this.adaptor.setStyle(ROOT, 'width', this.em(x));
        if (dx) {
            this.adaptor.setStyle(this.adaptor.firstChild(ROOT), 'paddingLeft', this.em(dx));
        }
    };
    CHTMLmroot.kind = mroot_js_2.MmlMroot.prototype.kind;
    return CHTMLmroot;
}((0, mroot_js_1.CommonMrootMixin)(msqrt_js_1.CHTMLmsqrt)));
exports.CHTMLmroot = CHTMLmroot;
//# sourceMappingURL=mroot.js.map

/***/ }),

/***/ 4798:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLinferredMrow = exports.CHTMLmrow = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mrow_js_1 = __webpack_require__(8411);
var mrow_js_2 = __webpack_require__(8411);
var mrow_js_3 = __webpack_require__(9878);
var CHTMLmrow = (function (_super) {
    __extends(CHTMLmrow, _super);
    function CHTMLmrow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmrow.prototype.toCHTML = function (parent) {
        var e_1, _a;
        var chtml = (this.node.isInferred ? (this.chtml = parent) : this.standardCHTMLnode(parent));
        var hasNegative = false;
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.toCHTML(chtml);
                if (child.bbox.w < 0) {
                    hasNegative = true;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (hasNegative) {
            var w = this.getBBox().w;
            if (w) {
                this.adaptor.setStyle(chtml, 'width', this.em(Math.max(0, w)));
                if (w < 0) {
                    this.adaptor.setStyle(chtml, 'marginRight', this.em(w));
                }
            }
        }
    };
    CHTMLmrow.kind = mrow_js_3.MmlMrow.prototype.kind;
    return CHTMLmrow;
}((0, mrow_js_1.CommonMrowMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmrow = CHTMLmrow;
var CHTMLinferredMrow = (function (_super) {
    __extends(CHTMLinferredMrow, _super);
    function CHTMLinferredMrow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLinferredMrow.kind = mrow_js_3.MmlInferredMrow.prototype.kind;
    return CHTMLinferredMrow;
}((0, mrow_js_2.CommonInferredMrowMixin)(CHTMLmrow)));
exports.CHTMLinferredMrow = CHTMLinferredMrow;
//# sourceMappingURL=mrow.js.map

/***/ }),

/***/ 4597:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLms = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var ms_js_1 = __webpack_require__(4126);
var ms_js_2 = __webpack_require__(7265);
var CHTMLms = (function (_super) {
    __extends(CHTMLms, _super);
    function CHTMLms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLms.kind = ms_js_2.MmlMs.prototype.kind;
    return CHTMLms;
}((0, ms_js_1.CommonMsMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLms = CHTMLms;
//# sourceMappingURL=ms.js.map

/***/ }),

/***/ 2970:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmspace = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mspace_js_1 = __webpack_require__(258);
var mspace_js_2 = __webpack_require__(6030);
var CHTMLmspace = (function (_super) {
    __extends(CHTMLmspace, _super);
    function CHTMLmspace() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmspace.prototype.toCHTML = function (parent) {
        var chtml = this.standardCHTMLnode(parent);
        var _a = this.getBBox(), w = _a.w, h = _a.h, d = _a.d;
        if (w < 0) {
            this.adaptor.setStyle(chtml, 'marginRight', this.em(w));
            w = 0;
        }
        if (w) {
            this.adaptor.setStyle(chtml, 'width', this.em(w));
        }
        h = Math.max(0, h + d);
        if (h) {
            this.adaptor.setStyle(chtml, 'height', this.em(Math.max(0, h)));
        }
        if (d) {
            this.adaptor.setStyle(chtml, 'verticalAlign', this.em(-d));
        }
    };
    CHTMLmspace.kind = mspace_js_2.MmlMspace.prototype.kind;
    return CHTMLmspace;
}((0, mspace_js_1.CommonMspaceMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmspace = CHTMLmspace;
//# sourceMappingURL=mspace.js.map

/***/ }),

/***/ 5610:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmsqrt = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var msqrt_js_1 = __webpack_require__(4093);
var msqrt_js_2 = __webpack_require__(7131);
var CHTMLmsqrt = (function (_super) {
    __extends(CHTMLmsqrt, _super);
    function CHTMLmsqrt() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmsqrt.prototype.toCHTML = function (parent) {
        var surd = this.childNodes[this.surd];
        var base = this.childNodes[this.base];
        var sbox = surd.getBBox();
        var bbox = base.getOuterBBox();
        var _a = __read(this.getPQ(sbox), 2), q = _a[1];
        var t = this.font.params.rule_thickness;
        var H = bbox.h + q + t;
        var CHTML = this.standardCHTMLnode(parent);
        var SURD, BASE, ROOT, root;
        if (this.root != null) {
            ROOT = this.adaptor.append(CHTML, this.html('mjx-root'));
            root = this.childNodes[this.root];
        }
        var SQRT = this.adaptor.append(CHTML, this.html('mjx-sqrt', {}, [
            SURD = this.html('mjx-surd'),
            BASE = this.html('mjx-box', { style: { paddingTop: this.em(q) } })
        ]));
        this.addRoot(ROOT, root, sbox, H);
        surd.toCHTML(SURD);
        base.toCHTML(BASE);
        if (surd.size < 0) {
            this.adaptor.addClass(SQRT, 'mjx-tall');
        }
    };
    CHTMLmsqrt.prototype.addRoot = function (_ROOT, _root, _sbox, _H) {
    };
    CHTMLmsqrt.kind = msqrt_js_2.MmlMsqrt.prototype.kind;
    CHTMLmsqrt.styles = {
        'mjx-root': {
            display: 'inline-block',
            'white-space': 'nowrap'
        },
        'mjx-surd': {
            display: 'inline-block',
            'vertical-align': 'top'
        },
        'mjx-sqrt': {
            display: 'inline-block',
            'padding-top': '.07em'
        },
        'mjx-sqrt > mjx-box': {
            'border-top': '.07em solid'
        },
        'mjx-sqrt.mjx-tall > mjx-box': {
            'padding-left': '.3em',
            'margin-left': '-.3em'
        }
    };
    return CHTMLmsqrt;
}((0, msqrt_js_1.CommonMsqrtMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmsqrt = CHTMLmsqrt;
//# sourceMappingURL=msqrt.js.map

/***/ }),

/***/ 4300:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmsubsup = exports.CHTMLmsup = exports.CHTMLmsub = void 0;
var scriptbase_js_1 = __webpack_require__(8650);
var msubsup_js_1 = __webpack_require__(905);
var msubsup_js_2 = __webpack_require__(905);
var msubsup_js_3 = __webpack_require__(905);
var msubsup_js_4 = __webpack_require__(4461);
var CHTMLmsub = (function (_super) {
    __extends(CHTMLmsub, _super);
    function CHTMLmsub() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmsub.kind = msubsup_js_4.MmlMsub.prototype.kind;
    return CHTMLmsub;
}((0, msubsup_js_1.CommonMsubMixin)(scriptbase_js_1.CHTMLscriptbase)));
exports.CHTMLmsub = CHTMLmsub;
var CHTMLmsup = (function (_super) {
    __extends(CHTMLmsup, _super);
    function CHTMLmsup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmsup.kind = msubsup_js_4.MmlMsup.prototype.kind;
    return CHTMLmsup;
}((0, msubsup_js_2.CommonMsupMixin)(scriptbase_js_1.CHTMLscriptbase)));
exports.CHTMLmsup = CHTMLmsup;
var CHTMLmsubsup = (function (_super) {
    __extends(CHTMLmsubsup, _super);
    function CHTMLmsubsup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmsubsup.prototype.toCHTML = function (parent) {
        var adaptor = this.adaptor;
        var chtml = this.standardCHTMLnode(parent);
        var _a = __read([this.baseChild, this.supChild, this.subChild], 3), base = _a[0], sup = _a[1], sub = _a[2];
        var _b = __read(this.getUVQ(), 3), v = _b[1], q = _b[2];
        var style = { 'vertical-align': this.em(v) };
        base.toCHTML(chtml);
        var stack = adaptor.append(chtml, this.html('mjx-script', { style: style }));
        sup.toCHTML(stack);
        adaptor.append(stack, this.html('mjx-spacer', { style: { 'margin-top': this.em(q) } }));
        sub.toCHTML(stack);
        var ic = this.getAdjustedIc();
        if (ic) {
            adaptor.setStyle(sup.chtml, 'marginLeft', this.em(ic / sup.bbox.rscale));
        }
        if (this.baseRemoveIc) {
            adaptor.setStyle(stack, 'marginLeft', this.em(-this.baseIc));
        }
    };
    CHTMLmsubsup.kind = msubsup_js_4.MmlMsubsup.prototype.kind;
    CHTMLmsubsup.styles = {
        'mjx-script': {
            display: 'inline-block',
            'padding-right': '.05em',
            'padding-left': '.033em'
        },
        'mjx-script > mjx-spacer': {
            display: 'block'
        }
    };
    return CHTMLmsubsup;
}((0, msubsup_js_3.CommonMsubsupMixin)(scriptbase_js_1.CHTMLscriptbase)));
exports.CHTMLmsubsup = CHTMLmsubsup;
//# sourceMappingURL=msubsup.js.map

/***/ }),

/***/ 8002:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmtable = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mtable_js_1 = __webpack_require__(6237);
var mtable_js_2 = __webpack_require__(1349);
var string_js_1 = __webpack_require__(505);
var CHTMLmtable = (function (_super) {
    __extends(CHTMLmtable, _super);
    function CHTMLmtable(factory, node, parent) {
        if (parent === void 0) { parent = null; }
        var _this = _super.call(this, factory, node, parent) || this;
        _this.itable = _this.html('mjx-itable');
        _this.labels = _this.html('mjx-itable');
        return _this;
    }
    CHTMLmtable.prototype.getAlignShift = function () {
        var data = _super.prototype.getAlignShift.call(this);
        if (!this.isTop) {
            data[1] = 0;
        }
        return data;
    };
    CHTMLmtable.prototype.toCHTML = function (parent) {
        var e_1, _a;
        var chtml = this.standardCHTMLnode(parent);
        this.adaptor.append(chtml, this.html('mjx-table', {}, [this.itable]));
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.toCHTML(this.itable);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.padRows();
        this.handleColumnSpacing();
        this.handleColumnLines();
        this.handleColumnWidths();
        this.handleRowSpacing();
        this.handleRowLines();
        this.handleRowHeights();
        this.handleFrame();
        this.handleWidth();
        this.handleLabels();
        this.handleAlign();
        this.handleJustify();
        this.shiftColor();
    };
    CHTMLmtable.prototype.shiftColor = function () {
        var adaptor = this.adaptor;
        var color = adaptor.getStyle(this.chtml, 'backgroundColor');
        if (color) {
            adaptor.setStyle(this.chtml, 'backgroundColor', '');
            adaptor.setStyle(this.itable, 'backgroundColor', color);
        }
    };
    CHTMLmtable.prototype.padRows = function () {
        var e_2, _a;
        var adaptor = this.adaptor;
        try {
            for (var _b = __values(adaptor.childNodes(this.itable)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var row = _c.value;
                while (adaptor.childNodes(row).length < this.numCols) {
                    adaptor.append(row, this.html('mjx-mtd', { 'extra': true }));
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    CHTMLmtable.prototype.handleColumnSpacing = function () {
        var e_3, _a, e_4, _b;
        var scale = (this.childNodes[0] ? 1 / this.childNodes[0].getBBox().rscale : 1);
        var spacing = this.getEmHalfSpacing(this.fSpace[0], this.cSpace, scale);
        var frame = this.frame;
        try {
            for (var _c = __values(this.tableRows), _d = _c.next(); !_d.done; _d = _c.next()) {
                var row = _d.value;
                var i = 0;
                try {
                    for (var _e = (e_4 = void 0, __values(row.tableCells)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var cell = _f.value;
                        var lspace = spacing[i++];
                        var rspace = spacing[i];
                        var styleNode = (cell ? cell.chtml : this.adaptor.childNodes(row.chtml)[i]);
                        if ((i > 1 && lspace !== '0.4em') || (frame && i === 1)) {
                            this.adaptor.setStyle(styleNode, 'paddingLeft', lspace);
                        }
                        if ((i < this.numCols && rspace !== '0.4em') || (frame && i === this.numCols)) {
                            this.adaptor.setStyle(styleNode, 'paddingRight', rspace);
                        }
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    CHTMLmtable.prototype.handleColumnLines = function () {
        var e_5, _a, e_6, _b;
        if (this.node.attributes.get('columnlines') === 'none')
            return;
        var lines = this.getColumnAttributes('columnlines');
        try {
            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
                var row = _d.value;
                var i = 0;
                try {
                    for (var _e = (e_6 = void 0, __values(this.adaptor.childNodes(row.chtml).slice(1))), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var cell = _f.value;
                        var line = lines[i++];
                        if (line === 'none')
                            continue;
                        this.adaptor.setStyle(cell, 'borderLeft', '.07em ' + line);
                    }
                }
                catch (e_6_1) { e_6 = { error: e_6_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_6) throw e_6.error; }
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_5) throw e_5.error; }
        }
    };
    CHTMLmtable.prototype.handleColumnWidths = function () {
        var e_7, _a, e_8, _b;
        try {
            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
                var row = _d.value;
                var i = 0;
                try {
                    for (var _e = (e_8 = void 0, __values(this.adaptor.childNodes(row.chtml))), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var cell = _f.value;
                        var w = this.cWidths[i++];
                        if (w !== null) {
                            var width = (typeof w === 'number' ? this.em(w) : w);
                            this.adaptor.setStyle(cell, 'width', width);
                            this.adaptor.setStyle(cell, 'maxWidth', width);
                            this.adaptor.setStyle(cell, 'minWidth', width);
                        }
                    }
                }
                catch (e_8_1) { e_8 = { error: e_8_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_8) throw e_8.error; }
                }
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_7) throw e_7.error; }
        }
    };
    CHTMLmtable.prototype.handleRowSpacing = function () {
        var e_9, _a, e_10, _b;
        var scale = (this.childNodes[0] ? 1 / this.childNodes[0].getBBox().rscale : 1);
        var spacing = this.getEmHalfSpacing(this.fSpace[1], this.rSpace, scale);
        var frame = this.frame;
        var i = 0;
        try {
            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
                var row = _d.value;
                var tspace = spacing[i++];
                var bspace = spacing[i];
                try {
                    for (var _e = (e_10 = void 0, __values(row.childNodes)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var cell = _f.value;
                        if ((i > 1 && tspace !== '0.215em') || (frame && i === 1)) {
                            this.adaptor.setStyle(cell.chtml, 'paddingTop', tspace);
                        }
                        if ((i < this.numRows && bspace !== '0.215em') || (frame && i === this.numRows)) {
                            this.adaptor.setStyle(cell.chtml, 'paddingBottom', bspace);
                        }
                    }
                }
                catch (e_10_1) { e_10 = { error: e_10_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_10) throw e_10.error; }
                }
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_9) throw e_9.error; }
        }
    };
    CHTMLmtable.prototype.handleRowLines = function () {
        var e_11, _a, e_12, _b;
        if (this.node.attributes.get('rowlines') === 'none')
            return;
        var lines = this.getRowAttributes('rowlines');
        var i = 0;
        try {
            for (var _c = __values(this.childNodes.slice(1)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var row = _d.value;
                var line = lines[i++];
                if (line === 'none')
                    continue;
                try {
                    for (var _e = (e_12 = void 0, __values(this.adaptor.childNodes(row.chtml))), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var cell = _f.value;
                        this.adaptor.setStyle(cell, 'borderTop', '.07em ' + line);
                    }
                }
                catch (e_12_1) { e_12 = { error: e_12_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_12) throw e_12.error; }
                }
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_11) throw e_11.error; }
        }
    };
    CHTMLmtable.prototype.handleRowHeights = function () {
        if (this.node.attributes.get('equalrows')) {
            this.handleEqualRows();
        }
    };
    CHTMLmtable.prototype.handleEqualRows = function () {
        var space = this.getRowHalfSpacing();
        var _a = this.getTableData(), H = _a.H, D = _a.D, NH = _a.NH, ND = _a.ND;
        var HD = this.getEqualRowHeight();
        for (var i = 0; i < this.numRows; i++) {
            var row = this.childNodes[i];
            this.setRowHeight(row, HD + space[i] + space[i + 1] + this.rLines[i]);
            if (HD !== NH[i] + ND[i]) {
                this.setRowBaseline(row, HD, (HD - H[i] + D[i]) / 2);
            }
        }
    };
    CHTMLmtable.prototype.setRowHeight = function (row, HD) {
        this.adaptor.setStyle(row.chtml, 'height', this.em(HD));
    };
    CHTMLmtable.prototype.setRowBaseline = function (row, HD, D) {
        var e_13, _a;
        var ralign = row.node.attributes.get('rowalign');
        try {
            for (var _b = __values(row.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var cell = _c.value;
                if (this.setCellBaseline(cell, ralign, HD, D))
                    break;
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_13) throw e_13.error; }
        }
    };
    CHTMLmtable.prototype.setCellBaseline = function (cell, ralign, HD, D) {
        var calign = cell.node.attributes.get('rowalign');
        if (calign === 'baseline' || calign === 'axis') {
            var adaptor = this.adaptor;
            var child = adaptor.lastChild(cell.chtml);
            adaptor.setStyle(child, 'height', this.em(HD));
            adaptor.setStyle(child, 'verticalAlign', this.em(-D));
            var row = cell.parent;
            if ((!row.node.isKind('mlabeledtr') || cell !== row.childNodes[0]) &&
                (ralign === 'baseline' || ralign === 'axis')) {
                return true;
            }
        }
        return false;
    };
    CHTMLmtable.prototype.handleFrame = function () {
        if (this.frame && this.fLine) {
            this.adaptor.setStyle(this.itable, 'border', '.07em ' + this.node.attributes.get('frame'));
        }
    };
    CHTMLmtable.prototype.handleWidth = function () {
        var adaptor = this.adaptor;
        var _a = this.getBBox(), w = _a.w, L = _a.L, R = _a.R;
        adaptor.setStyle(this.chtml, 'minWidth', this.em(L + w + R));
        var W = this.node.attributes.get('width');
        if ((0, string_js_1.isPercent)(W)) {
            adaptor.setStyle(this.chtml, 'width', '');
            adaptor.setAttribute(this.chtml, 'width', 'full');
        }
        else if (!this.hasLabels) {
            if (W === 'auto')
                return;
            W = this.em(this.length2em(W) + 2 * this.fLine);
        }
        var table = adaptor.firstChild(this.chtml);
        adaptor.setStyle(table, 'width', W);
        adaptor.setStyle(table, 'minWidth', this.em(w));
        if (L || R) {
            adaptor.setStyle(this.chtml, 'margin', '');
            var style = (this.node.attributes.get('data-width-includes-label') ? 'padding' : 'margin');
            if (L === R) {
                adaptor.setStyle(table, style, '0 ' + this.em(R));
            }
            else {
                adaptor.setStyle(table, style, '0 ' + this.em(R) + ' 0 ' + this.em(L));
            }
        }
        adaptor.setAttribute(this.itable, 'width', 'full');
    };
    CHTMLmtable.prototype.handleAlign = function () {
        var _a = __read(this.getAlignmentRow(), 2), align = _a[0], row = _a[1];
        if (row === null) {
            if (align !== 'axis') {
                this.adaptor.setAttribute(this.chtml, 'align', align);
            }
        }
        else {
            var y = this.getVerticalPosition(row, align);
            this.adaptor.setAttribute(this.chtml, 'align', 'top');
            this.adaptor.setStyle(this.chtml, 'verticalAlign', this.em(y));
        }
    };
    CHTMLmtable.prototype.handleJustify = function () {
        var align = this.getAlignShift()[0];
        if (align !== 'center') {
            this.adaptor.setAttribute(this.chtml, 'justify', align);
        }
    };
    CHTMLmtable.prototype.handleLabels = function () {
        if (!this.hasLabels)
            return;
        var labels = this.labels;
        var attributes = this.node.attributes;
        var adaptor = this.adaptor;
        var side = attributes.get('side');
        adaptor.setAttribute(this.chtml, 'side', side);
        adaptor.setAttribute(labels, 'align', side);
        adaptor.setStyle(labels, side, '0');
        var _a = __read(this.addLabelPadding(side), 2), align = _a[0], shift = _a[1];
        if (shift) {
            var table = adaptor.firstChild(this.chtml);
            this.setIndent(table, align, shift);
        }
        this.updateRowHeights();
        this.addLabelSpacing();
    };
    CHTMLmtable.prototype.addLabelPadding = function (side) {
        var _a = __read(this.getPadAlignShift(side), 3), align = _a[1], shift = _a[2];
        var styles = {};
        if (side === 'right' && !this.node.attributes.get('data-width-includes-label')) {
            var W = this.node.attributes.get('width');
            var _b = this.getBBox(), w = _b.w, L = _b.L, R = _b.R;
            styles.style = {
                width: ((0, string_js_1.isPercent)(W) ? 'calc(' + W + ' + ' + this.em(L + R) + ')' : this.em(L + w + R))
            };
        }
        this.adaptor.append(this.chtml, this.html('mjx-labels', styles, [this.labels]));
        return [align, shift];
    };
    CHTMLmtable.prototype.updateRowHeights = function () {
        var _a = this.getTableData(), H = _a.H, D = _a.D, NH = _a.NH, ND = _a.ND;
        var space = this.getRowHalfSpacing();
        for (var i = 0; i < this.numRows; i++) {
            var row = this.childNodes[i];
            this.setRowHeight(row, H[i] + D[i] + space[i] + space[i + 1] + this.rLines[i]);
            if (H[i] !== NH[i] || D[i] !== ND[i]) {
                this.setRowBaseline(row, H[i] + D[i], D[i]);
            }
            else if (row.node.isKind('mlabeledtr')) {
                this.setCellBaseline(row.childNodes[0], '', H[i] + D[i], D[i]);
            }
        }
    };
    CHTMLmtable.prototype.addLabelSpacing = function () {
        var adaptor = this.adaptor;
        var equal = this.node.attributes.get('equalrows');
        var _a = this.getTableData(), H = _a.H, D = _a.D;
        var HD = (equal ? this.getEqualRowHeight() : 0);
        var space = this.getRowHalfSpacing();
        var h = this.fLine;
        var current = adaptor.firstChild(this.labels);
        for (var i = 0; i < this.numRows; i++) {
            var row = this.childNodes[i];
            if (row.node.isKind('mlabeledtr')) {
                h && adaptor.insert(this.html('mjx-mtr', { style: { height: this.em(h) } }), current);
                adaptor.setStyle(current, 'height', this.em((equal ? HD : H[i] + D[i]) + space[i] + space[i + 1]));
                current = adaptor.next(current);
                h = this.rLines[i];
            }
            else {
                h += space[i] + (equal ? HD : H[i] + D[i]) + space[i + 1] + this.rLines[i];
            }
        }
    };
    CHTMLmtable.kind = mtable_js_2.MmlMtable.prototype.kind;
    CHTMLmtable.styles = {
        'mjx-mtable': {
            'vertical-align': '.25em',
            'text-align': 'center',
            'position': 'relative',
            'box-sizing': 'border-box',
            'border-spacing': 0,
            'border-collapse': 'collapse'
        },
        'mjx-mstyle[size="s"] mjx-mtable': {
            'vertical-align': '.354em'
        },
        'mjx-labels': {
            position: 'absolute',
            left: 0,
            top: 0
        },
        'mjx-table': {
            'display': 'inline-block',
            'vertical-align': '-.5ex',
            'box-sizing': 'border-box'
        },
        'mjx-table > mjx-itable': {
            'vertical-align': 'middle',
            'text-align': 'left',
            'box-sizing': 'border-box'
        },
        'mjx-labels > mjx-itable': {
            position: 'absolute',
            top: 0
        },
        'mjx-mtable[justify="left"]': {
            'text-align': 'left'
        },
        'mjx-mtable[justify="right"]': {
            'text-align': 'right'
        },
        'mjx-mtable[justify="left"][side="left"]': {
            'padding-right': '0 ! important'
        },
        'mjx-mtable[justify="left"][side="right"]': {
            'padding-left': '0 ! important'
        },
        'mjx-mtable[justify="right"][side="left"]': {
            'padding-right': '0 ! important'
        },
        'mjx-mtable[justify="right"][side="right"]': {
            'padding-left': '0 ! important'
        },
        'mjx-mtable[align]': {
            'vertical-align': 'baseline'
        },
        'mjx-mtable[align="top"] > mjx-table': {
            'vertical-align': 'top'
        },
        'mjx-mtable[align="bottom"] > mjx-table': {
            'vertical-align': 'bottom'
        },
        'mjx-mtable[side="right"] mjx-labels': {
            'min-width': '100%'
        }
    };
    return CHTMLmtable;
}((0, mtable_js_1.CommonMtableMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmtable = CHTMLmtable;
//# sourceMappingURL=mtable.js.map

/***/ }),

/***/ 7056:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmtd = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mtd_js_1 = __webpack_require__(5164);
var mtd_js_2 = __webpack_require__(4359);
var CHTMLmtd = (function (_super) {
    __extends(CHTMLmtd, _super);
    function CHTMLmtd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmtd.prototype.toCHTML = function (parent) {
        _super.prototype.toCHTML.call(this, parent);
        var ralign = this.node.attributes.get('rowalign');
        var calign = this.node.attributes.get('columnalign');
        var palign = this.parent.node.attributes.get('rowalign');
        if (ralign !== palign) {
            this.adaptor.setAttribute(this.chtml, 'rowalign', ralign);
        }
        if (calign !== 'center' &&
            (this.parent.kind !== 'mlabeledtr' || this !== this.parent.childNodes[0] ||
                calign !== this.parent.parent.node.attributes.get('side'))) {
            this.adaptor.setStyle(this.chtml, 'textAlign', calign);
        }
        if (this.parent.parent.node.getProperty('useHeight')) {
            this.adaptor.append(this.chtml, this.html('mjx-tstrut'));
        }
    };
    CHTMLmtd.kind = mtd_js_2.MmlMtd.prototype.kind;
    CHTMLmtd.styles = {
        'mjx-mtd': {
            display: 'table-cell',
            'text-align': 'center',
            'padding': '.215em .4em'
        },
        'mjx-mtd:first-child': {
            'padding-left': 0
        },
        'mjx-mtd:last-child': {
            'padding-right': 0
        },
        'mjx-mtable > * > mjx-itable > *:first-child > mjx-mtd': {
            'padding-top': 0
        },
        'mjx-mtable > * > mjx-itable > *:last-child > mjx-mtd': {
            'padding-bottom': 0
        },
        'mjx-tstrut': {
            display: 'inline-block',
            height: '1em',
            'vertical-align': '-.25em'
        },
        'mjx-labels[align="left"] > mjx-mtr > mjx-mtd': {
            'text-align': 'left'
        },
        'mjx-labels[align="right"] > mjx-mtr > mjx-mtd': {
            'text-align': 'right'
        },
        'mjx-mtd[extra]': {
            padding: 0
        },
        'mjx-mtd[rowalign="top"]': {
            'vertical-align': 'top'
        },
        'mjx-mtd[rowalign="center"]': {
            'vertical-align': 'middle'
        },
        'mjx-mtd[rowalign="bottom"]': {
            'vertical-align': 'bottom'
        },
        'mjx-mtd[rowalign="baseline"]': {
            'vertical-align': 'baseline'
        },
        'mjx-mtd[rowalign="axis"]': {
            'vertical-align': '.25em'
        }
    };
    return CHTMLmtd;
}((0, mtd_js_1.CommonMtdMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmtd = CHTMLmtd;
//# sourceMappingURL=mtd.js.map

/***/ }),

/***/ 1259:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmtext = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mtext_js_1 = __webpack_require__(6319);
var mtext_js_2 = __webpack_require__(4770);
var CHTMLmtext = (function (_super) {
    __extends(CHTMLmtext, _super);
    function CHTMLmtext() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmtext.kind = mtext_js_2.MmlMtext.prototype.kind;
    return CHTMLmtext;
}((0, mtext_js_1.CommonMtextMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmtext = CHTMLmtext;
//# sourceMappingURL=mtext.js.map

/***/ }),

/***/ 3571:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmlabeledtr = exports.CHTMLmtr = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var mtr_js_1 = __webpack_require__(5766);
var mtr_js_2 = __webpack_require__(5766);
var mtr_js_3 = __webpack_require__(5022);
var CHTMLmtr = (function (_super) {
    __extends(CHTMLmtr, _super);
    function CHTMLmtr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmtr.prototype.toCHTML = function (parent) {
        _super.prototype.toCHTML.call(this, parent);
        var align = this.node.attributes.get('rowalign');
        if (align !== 'baseline') {
            this.adaptor.setAttribute(this.chtml, 'rowalign', align);
        }
    };
    CHTMLmtr.kind = mtr_js_3.MmlMtr.prototype.kind;
    CHTMLmtr.styles = {
        'mjx-mtr': {
            display: 'table-row',
        },
        'mjx-mtr[rowalign="top"] > mjx-mtd': {
            'vertical-align': 'top'
        },
        'mjx-mtr[rowalign="center"] > mjx-mtd': {
            'vertical-align': 'middle'
        },
        'mjx-mtr[rowalign="bottom"] > mjx-mtd': {
            'vertical-align': 'bottom'
        },
        'mjx-mtr[rowalign="baseline"] > mjx-mtd': {
            'vertical-align': 'baseline'
        },
        'mjx-mtr[rowalign="axis"] > mjx-mtd': {
            'vertical-align': '.25em'
        }
    };
    return CHTMLmtr;
}((0, mtr_js_1.CommonMtrMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLmtr = CHTMLmtr;
var CHTMLmlabeledtr = (function (_super) {
    __extends(CHTMLmlabeledtr, _super);
    function CHTMLmlabeledtr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmlabeledtr.prototype.toCHTML = function (parent) {
        _super.prototype.toCHTML.call(this, parent);
        var child = this.adaptor.firstChild(this.chtml);
        if (child) {
            this.adaptor.remove(child);
            var align = this.node.attributes.get('rowalign');
            var attr = (align !== 'baseline' && align !== 'axis' ? { rowalign: align } : {});
            var row = this.html('mjx-mtr', attr, [child]);
            this.adaptor.append(this.parent.labels, row);
        }
    };
    CHTMLmlabeledtr.prototype.markUsed = function () {
        _super.prototype.markUsed.call(this);
        this.jax.wrapperUsage.add(CHTMLmtr.kind);
    };
    CHTMLmlabeledtr.kind = mtr_js_3.MmlMlabeledtr.prototype.kind;
    CHTMLmlabeledtr.styles = {
        'mjx-mlabeledtr': {
            display: 'table-row'
        },
        'mjx-mlabeledtr[rowalign="top"] > mjx-mtd': {
            'vertical-align': 'top'
        },
        'mjx-mlabeledtr[rowalign="center"] > mjx-mtd': {
            'vertical-align': 'middle'
        },
        'mjx-mlabeledtr[rowalign="bottom"] > mjx-mtd': {
            'vertical-align': 'bottom'
        },
        'mjx-mlabeledtr[rowalign="baseline"] > mjx-mtd': {
            'vertical-align': 'baseline'
        },
        'mjx-mlabeledtr[rowalign="axis"] > mjx-mtd': {
            'vertical-align': '.25em'
        }
    };
    return CHTMLmlabeledtr;
}((0, mtr_js_2.CommonMlabeledtrMixin)(CHTMLmtr)));
exports.CHTMLmlabeledtr = CHTMLmlabeledtr;
//# sourceMappingURL=mtr.js.map

/***/ }),

/***/ 6590:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLmunderover = exports.CHTMLmover = exports.CHTMLmunder = void 0;
var msubsup_js_1 = __webpack_require__(4300);
var munderover_js_1 = __webpack_require__(1971);
var munderover_js_2 = __webpack_require__(1971);
var munderover_js_3 = __webpack_require__(1971);
var munderover_js_4 = __webpack_require__(5184);
var CHTMLmunder = (function (_super) {
    __extends(CHTMLmunder, _super);
    function CHTMLmunder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmunder.prototype.toCHTML = function (parent) {
        if (this.hasMovableLimits()) {
            _super.prototype.toCHTML.call(this, parent);
            this.adaptor.setAttribute(this.chtml, 'limits', 'false');
            return;
        }
        this.chtml = this.standardCHTMLnode(parent);
        var base = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-row')), this.html('mjx-base'));
        var under = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-row')), this.html('mjx-under'));
        this.baseChild.toCHTML(base);
        this.scriptChild.toCHTML(under);
        var basebox = this.baseChild.getOuterBBox();
        var underbox = this.scriptChild.getOuterBBox();
        var k = this.getUnderKV(basebox, underbox)[0];
        var delta = (this.isLineBelow ? 0 : this.getDelta(true));
        this.adaptor.setStyle(under, 'paddingTop', this.em(k));
        this.setDeltaW([base, under], this.getDeltaW([basebox, underbox], [0, -delta]));
        this.adjustUnderDepth(under, underbox);
    };
    CHTMLmunder.kind = munderover_js_4.MmlMunder.prototype.kind;
    CHTMLmunder.styles = {
        'mjx-over': {
            'text-align': 'left'
        },
        'mjx-munder:not([limits="false"])': {
            display: 'inline-table',
        },
        'mjx-munder > mjx-row': {
            'text-align': 'left'
        },
        'mjx-under': {
            'padding-bottom': '.1em'
        }
    };
    return CHTMLmunder;
}((0, munderover_js_1.CommonMunderMixin)(msubsup_js_1.CHTMLmsub)));
exports.CHTMLmunder = CHTMLmunder;
var CHTMLmover = (function (_super) {
    __extends(CHTMLmover, _super);
    function CHTMLmover() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmover.prototype.toCHTML = function (parent) {
        if (this.hasMovableLimits()) {
            _super.prototype.toCHTML.call(this, parent);
            this.adaptor.setAttribute(this.chtml, 'limits', 'false');
            return;
        }
        this.chtml = this.standardCHTMLnode(parent);
        var over = this.adaptor.append(this.chtml, this.html('mjx-over'));
        var base = this.adaptor.append(this.chtml, this.html('mjx-base'));
        this.scriptChild.toCHTML(over);
        this.baseChild.toCHTML(base);
        var overbox = this.scriptChild.getOuterBBox();
        var basebox = this.baseChild.getOuterBBox();
        this.adjustBaseHeight(base, basebox);
        var k = this.getOverKU(basebox, overbox)[0];
        var delta = (this.isLineAbove ? 0 : this.getDelta());
        this.adaptor.setStyle(over, 'paddingBottom', this.em(k));
        this.setDeltaW([base, over], this.getDeltaW([basebox, overbox], [0, delta]));
        this.adjustOverDepth(over, overbox);
    };
    CHTMLmover.kind = munderover_js_4.MmlMover.prototype.kind;
    CHTMLmover.styles = {
        'mjx-mover:not([limits="false"])': {
            'padding-top': '.1em'
        },
        'mjx-mover:not([limits="false"]) > *': {
            display: 'block',
            'text-align': 'left'
        }
    };
    return CHTMLmover;
}((0, munderover_js_2.CommonMoverMixin)(msubsup_js_1.CHTMLmsup)));
exports.CHTMLmover = CHTMLmover;
var CHTMLmunderover = (function (_super) {
    __extends(CHTMLmunderover, _super);
    function CHTMLmunderover() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLmunderover.prototype.toCHTML = function (parent) {
        if (this.hasMovableLimits()) {
            _super.prototype.toCHTML.call(this, parent);
            this.adaptor.setAttribute(this.chtml, 'limits', 'false');
            return;
        }
        this.chtml = this.standardCHTMLnode(parent);
        var over = this.adaptor.append(this.chtml, this.html('mjx-over'));
        var table = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-box')), this.html('mjx-munder'));
        var base = this.adaptor.append(this.adaptor.append(table, this.html('mjx-row')), this.html('mjx-base'));
        var under = this.adaptor.append(this.adaptor.append(table, this.html('mjx-row')), this.html('mjx-under'));
        this.overChild.toCHTML(over);
        this.baseChild.toCHTML(base);
        this.underChild.toCHTML(under);
        var overbox = this.overChild.getOuterBBox();
        var basebox = this.baseChild.getOuterBBox();
        var underbox = this.underChild.getOuterBBox();
        this.adjustBaseHeight(base, basebox);
        var ok = this.getOverKU(basebox, overbox)[0];
        var uk = this.getUnderKV(basebox, underbox)[0];
        var delta = this.getDelta();
        this.adaptor.setStyle(over, 'paddingBottom', this.em(ok));
        this.adaptor.setStyle(under, 'paddingTop', this.em(uk));
        this.setDeltaW([base, under, over], this.getDeltaW([basebox, underbox, overbox], [0, this.isLineBelow ? 0 : -delta, this.isLineAbove ? 0 : delta]));
        this.adjustOverDepth(over, overbox);
        this.adjustUnderDepth(under, underbox);
    };
    CHTMLmunderover.prototype.markUsed = function () {
        _super.prototype.markUsed.call(this);
        this.jax.wrapperUsage.add(msubsup_js_1.CHTMLmsubsup.kind);
    };
    CHTMLmunderover.kind = munderover_js_4.MmlMunderover.prototype.kind;
    CHTMLmunderover.styles = {
        'mjx-munderover:not([limits="false"])': {
            'padding-top': '.1em'
        },
        'mjx-munderover:not([limits="false"]) > *': {
            display: 'block'
        },
    };
    return CHTMLmunderover;
}((0, munderover_js_3.CommonMunderoverMixin)(msubsup_js_1.CHTMLmsubsup)));
exports.CHTMLmunderover = CHTMLmunderover;
//# sourceMappingURL=munderover.js.map

/***/ }),

/***/ 8650:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLscriptbase = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var scriptbase_js_1 = __webpack_require__(167);
var CHTMLscriptbase = (function (_super) {
    __extends(CHTMLscriptbase, _super);
    function CHTMLscriptbase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLscriptbase.prototype.toCHTML = function (parent) {
        this.chtml = this.standardCHTMLnode(parent);
        var _a = __read(this.getOffset(), 2), x = _a[0], v = _a[1];
        var dx = x - (this.baseRemoveIc ? this.baseIc : 0);
        var style = { 'vertical-align': this.em(v) };
        if (dx) {
            style['margin-left'] = this.em(dx);
        }
        this.baseChild.toCHTML(this.chtml);
        this.scriptChild.toCHTML(this.adaptor.append(this.chtml, this.html('mjx-script', { style: style })));
    };
    CHTMLscriptbase.prototype.setDeltaW = function (nodes, dx) {
        for (var i = 0; i < dx.length; i++) {
            if (dx[i]) {
                this.adaptor.setStyle(nodes[i], 'paddingLeft', this.em(dx[i]));
            }
        }
    };
    CHTMLscriptbase.prototype.adjustOverDepth = function (over, overbox) {
        if (overbox.d >= 0)
            return;
        this.adaptor.setStyle(over, 'marginBottom', this.em(overbox.d * overbox.rscale));
    };
    CHTMLscriptbase.prototype.adjustUnderDepth = function (under, underbox) {
        var e_1, _a;
        if (underbox.d >= 0)
            return;
        var adaptor = this.adaptor;
        var v = this.em(underbox.d);
        var box = this.html('mjx-box', { style: { 'margin-bottom': v, 'vertical-align': v } });
        try {
            for (var _b = __values(adaptor.childNodes(adaptor.firstChild(under))), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                adaptor.append(box, child);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        adaptor.append(adaptor.firstChild(under), box);
    };
    CHTMLscriptbase.prototype.adjustBaseHeight = function (base, basebox) {
        if (this.node.attributes.get('accent')) {
            var minH = this.font.params.x_height * basebox.scale;
            if (basebox.h < minH) {
                this.adaptor.setStyle(base, 'paddingTop', this.em(minH - basebox.h));
                basebox.h = minH;
            }
        }
    };
    CHTMLscriptbase.kind = 'scriptbase';
    return CHTMLscriptbase;
}((0, scriptbase_js_1.CommonScriptbaseMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLscriptbase = CHTMLscriptbase;
//# sourceMappingURL=scriptbase.js.map

/***/ }),

/***/ 421:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHTMLxml = exports.CHTMLannotationXML = exports.CHTMLannotation = exports.CHTMLsemantics = void 0;
var Wrapper_js_1 = __webpack_require__(5355);
var semantics_js_1 = __webpack_require__(5806);
var semantics_js_2 = __webpack_require__(9102);
var MmlNode_js_1 = __webpack_require__(9007);
var CHTMLsemantics = (function (_super) {
    __extends(CHTMLsemantics, _super);
    function CHTMLsemantics() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLsemantics.prototype.toCHTML = function (parent) {
        var chtml = this.standardCHTMLnode(parent);
        if (this.childNodes.length) {
            this.childNodes[0].toCHTML(chtml);
        }
    };
    CHTMLsemantics.kind = semantics_js_2.MmlSemantics.prototype.kind;
    return CHTMLsemantics;
}((0, semantics_js_1.CommonSemanticsMixin)(Wrapper_js_1.CHTMLWrapper)));
exports.CHTMLsemantics = CHTMLsemantics;
var CHTMLannotation = (function (_super) {
    __extends(CHTMLannotation, _super);
    function CHTMLannotation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLannotation.prototype.toCHTML = function (parent) {
        _super.prototype.toCHTML.call(this, parent);
    };
    CHTMLannotation.prototype.computeBBox = function () {
        return this.bbox;
    };
    CHTMLannotation.kind = semantics_js_2.MmlAnnotation.prototype.kind;
    return CHTMLannotation;
}(Wrapper_js_1.CHTMLWrapper));
exports.CHTMLannotation = CHTMLannotation;
var CHTMLannotationXML = (function (_super) {
    __extends(CHTMLannotationXML, _super);
    function CHTMLannotationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLannotationXML.kind = semantics_js_2.MmlAnnotationXML.prototype.kind;
    CHTMLannotationXML.styles = {
        'mjx-annotation-xml': {
            'font-family': 'initial',
            'line-height': 'normal'
        }
    };
    return CHTMLannotationXML;
}(Wrapper_js_1.CHTMLWrapper));
exports.CHTMLannotationXML = CHTMLannotationXML;
var CHTMLxml = (function (_super) {
    __extends(CHTMLxml, _super);
    function CHTMLxml() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CHTMLxml.prototype.toCHTML = function (parent) {
        this.chtml = this.adaptor.append(parent, this.adaptor.clone(this.node.getXML()));
    };
    CHTMLxml.prototype.computeBBox = function (bbox, _recompute) {
        if (_recompute === void 0) { _recompute = false; }
        var _a = this.jax.measureXMLnode(this.node.getXML()), w = _a.w, h = _a.h, d = _a.d;
        bbox.w = w;
        bbox.h = h;
        bbox.d = d;
    };
    CHTMLxml.prototype.getStyles = function () { };
    CHTMLxml.prototype.getScale = function () { };
    CHTMLxml.prototype.getVariant = function () { };
    CHTMLxml.kind = MmlNode_js_1.XMLNode.prototype.kind;
    CHTMLxml.autoStyle = false;
    return CHTMLxml;
}(Wrapper_js_1.CHTMLWrapper));
exports.CHTMLxml = CHTMLxml;
//# sourceMappingURL=semantics.js.map

/***/ }),

/***/ 2760:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TeXFont = void 0;
var FontData_js_1 = __webpack_require__(8042);
var tex_js_1 = __webpack_require__(5920);
var bold_italic_js_1 = __webpack_require__(4005);
var bold_js_1 = __webpack_require__(1015);
var double_struck_js_1 = __webpack_require__(4515);
var fraktur_bold_js_1 = __webpack_require__(6555);
var fraktur_js_1 = __webpack_require__(2183);
var italic_js_1 = __webpack_require__(3490);
var largeop_js_1 = __webpack_require__(9056);
var monospace_js_1 = __webpack_require__(3019);
var normal_js_1 = __webpack_require__(2713);
var sans_serif_bold_italic_js_1 = __webpack_require__(7517);
var sans_serif_bold_js_1 = __webpack_require__(4182);
var sans_serif_italic_js_1 = __webpack_require__(2679);
var sans_serif_js_1 = __webpack_require__(5469);
var script_bold_js_1 = __webpack_require__(7563);
var script_js_1 = __webpack_require__(9409);
var smallop_js_1 = __webpack_require__(775);
var tex_calligraphic_bold_js_1 = __webpack_require__(9551);
var tex_calligraphic_js_1 = __webpack_require__(7907);
var tex_mathit_js_1 = __webpack_require__(9659);
var tex_oldstyle_bold_js_1 = __webpack_require__(98);
var tex_oldstyle_js_1 = __webpack_require__(6275);
var tex_size3_js_1 = __webpack_require__(6530);
var tex_size4_js_1 = __webpack_require__(4409);
var tex_variant_js_1 = __webpack_require__(5292);
var delimiters_js_1 = __webpack_require__(9124);
var TeXFont = (function (_super) {
    __extends(TeXFont, _super);
    function TeXFont() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TeXFont.defaultCssFamilyPrefix = 'MJXZERO';
    TeXFont.defaultVariantClasses = {
        'normal': 'mjx-n',
        'bold': 'mjx-b',
        'italic': 'mjx-i',
        'bold-italic': 'mjx-b mjx-i',
        'double-struck': 'mjx-ds mjx-b',
        'fraktur': 'mjx-fr',
        'bold-fraktur': 'mjx-fr mjx-b',
        'script': 'mjx-sc mjx-i',
        'bold-script': 'mjx-sc mjx-b mjx-i',
        'sans-serif': 'mjx-ss',
        'bold-sans-serif': 'mjx-ss mjx-b',
        'sans-serif-italic': 'mjx-ss mjx-i',
        'sans-serif-bold-italic': 'mjx-ss mjx-b mjx-i',
        'monospace': 'mjx-ty',
        '-smallop': 'mjx-sop',
        '-largeop': 'mjx-lop',
        '-size3': 'mjx-s3',
        '-size4': 'mjx-s4',
        '-tex-calligraphic': 'mjx-cal mjx-i',
        '-tex-bold-calligraphic': 'mjx-cal mjx-b',
        '-tex-mathit': 'mjx-mit mjx-i',
        '-tex-oldstyle': 'mjx-os',
        '-tex-bold-oldstyle': 'mjx-os mjx-b',
        '-tex-variant': 'mjx-var'
    };
    TeXFont.defaultVariantLetters = {
        'normal': '',
        'bold': 'B',
        'italic': 'MI',
        'bold-italic': 'BI',
        'double-struck': 'A',
        'fraktur': 'FR',
        'bold-fraktur': 'FRB',
        'script': 'SC',
        'bold-script': 'SCB',
        'sans-serif': 'SS',
        'bold-sans-serif': 'SSB',
        'sans-serif-italic': 'SSI',
        'sans-serif-bold-italic': 'SSBI',
        'monospace': 'T',
        '-smallop': 'S1',
        '-largeop': 'S2',
        '-size3': 'S3',
        '-size4': 'S4',
        '-tex-calligraphic': 'C',
        '-tex-bold-calligraphic': 'CB',
        '-tex-mathit': 'MI',
        '-tex-oldstyle': 'C',
        '-tex-bold-oldstyle': 'CB',
        '-tex-variant': 'A'
    };
    TeXFont.defaultDelimiters = delimiters_js_1.delimiters;
    TeXFont.defaultChars = {
        'normal': normal_js_1.normal,
        'bold': bold_js_1.bold,
        'italic': italic_js_1.italic,
        'bold-italic': bold_italic_js_1.boldItalic,
        'double-struck': double_struck_js_1.doubleStruck,
        'fraktur': fraktur_js_1.fraktur,
        'bold-fraktur': fraktur_bold_js_1.frakturBold,
        'script': script_js_1.script,
        'bold-script': script_bold_js_1.scriptBold,
        'sans-serif': sans_serif_js_1.sansSerif,
        'bold-sans-serif': sans_serif_bold_js_1.sansSerifBold,
        'sans-serif-italic': sans_serif_italic_js_1.sansSerifItalic,
        'sans-serif-bold-italic': sans_serif_bold_italic_js_1.sansSerifBoldItalic,
        'monospace': monospace_js_1.monospace,
        '-smallop': smallop_js_1.smallop,
        '-largeop': largeop_js_1.largeop,
        '-size3': tex_size3_js_1.texSize3,
        '-size4': tex_size4_js_1.texSize4,
        '-tex-calligraphic': tex_calligraphic_js_1.texCalligraphic,
        '-tex-bold-calligraphic': tex_calligraphic_bold_js_1.texCalligraphicBold,
        '-tex-mathit': tex_mathit_js_1.texMathit,
        '-tex-oldstyle': tex_oldstyle_js_1.texOldstyle,
        '-tex-bold-oldstyle': tex_oldstyle_bold_js_1.texOldstyleBold,
        '-tex-variant': tex_variant_js_1.texVariant
    };
    TeXFont.defaultStyles = __assign(__assign({}, FontData_js_1.CHTMLFontData.defaultStyles), { '.MJX-TEX': {
            'font-family': 'MJXZERO, MJXTEX'
        }, '.TEX-B': {
            'font-family': 'MJXZERO, MJXTEX-B'
        }, '.TEX-I': {
            'font-family': 'MJXZERO, MJXTEX-I'
        }, '.TEX-MI': {
            'font-family': 'MJXZERO, MJXTEX-MI'
        }, '.TEX-BI': {
            'font-family': 'MJXZERO, MJXTEX-BI'
        }, '.TEX-S1': {
            'font-family': 'MJXZERO, MJXTEX-S1'
        }, '.TEX-S2': {
            'font-family': 'MJXZERO, MJXTEX-S2'
        }, '.TEX-S3': {
            'font-family': 'MJXZERO, MJXTEX-S3'
        }, '.TEX-S4': {
            'font-family': 'MJXZERO, MJXTEX-S4'
        }, '.TEX-A': {
            'font-family': 'MJXZERO, MJXTEX-A'
        }, '.TEX-C': {
            'font-family': 'MJXZERO, MJXTEX-C'
        }, '.TEX-CB': {
            'font-family': 'MJXZERO, MJXTEX-CB'
        }, '.TEX-FR': {
            'font-family': 'MJXZERO, MJXTEX-FR'
        }, '.TEX-FRB': {
            'font-family': 'MJXZERO, MJXTEX-FRB'
        }, '.TEX-SS': {
            'font-family': 'MJXZERO, MJXTEX-SS'
        }, '.TEX-SSB': {
            'font-family': 'MJXZERO, MJXTEX-SSB'
        }, '.TEX-SSI': {
            'font-family': 'MJXZERO, MJXTEX-SSI'
        }, '.TEX-SC': {
            'font-family': 'MJXZERO, MJXTEX-SC'
        }, '.TEX-T': {
            'font-family': 'MJXZERO, MJXTEX-T'
        }, '.TEX-V': {
            'font-family': 'MJXZERO, MJXTEX-V'
        }, '.TEX-VB': {
            'font-family': 'MJXZERO, MJXTEX-VB'
        }, 'mjx-stretchy-v mjx-c, mjx-stretchy-h mjx-c': {
            'font-family': 'MJXZERO, MJXTEX-S1, MJXTEX-S4, MJXTEX, MJXTEX-A ! important'
        } });
    TeXFont.defaultFonts = __assign(__assign({}, FontData_js_1.CHTMLFontData.defaultFonts), { '@font-face /* 1 */': {
            'font-family': 'MJXTEX',
            src: 'url("%%URL%%/MathJax_Main-Regular.woff") format("woff")'
        }, '@font-face /* 2 */': {
            'font-family': 'MJXTEX-B',
            src: 'url("%%URL%%/MathJax_Main-Bold.woff") format("woff")'
        }, '@font-face /* 3 */': {
            'font-family': 'MJXTEX-I',
            src: 'url("%%URL%%/MathJax_Math-Italic.woff") format("woff")'
        }, '@font-face /* 4 */': {
            'font-family': 'MJXTEX-MI',
            src: 'url("%%URL%%/MathJax_Main-Italic.woff") format("woff")'
        }, '@font-face /* 5 */': {
            'font-family': 'MJXTEX-BI',
            src: 'url("%%URL%%/MathJax_Math-BoldItalic.woff") format("woff")'
        }, '@font-face /* 6 */': {
            'font-family': 'MJXTEX-S1',
            src: 'url("%%URL%%/MathJax_Size1-Regular.woff") format("woff")'
        }, '@font-face /* 7 */': {
            'font-family': 'MJXTEX-S2',
            src: 'url("%%URL%%/MathJax_Size2-Regular.woff") format("woff")'
        }, '@font-face /* 8 */': {
            'font-family': 'MJXTEX-S3',
            src: 'url("%%URL%%/MathJax_Size3-Regular.woff") format("woff")'
        }, '@font-face /* 9 */': {
            'font-family': 'MJXTEX-S4',
            src: 'url("%%URL%%/MathJax_Size4-Regular.woff") format("woff")'
        }, '@font-face /* 10 */': {
            'font-family': 'MJXTEX-A',
            src: 'url("%%URL%%/MathJax_AMS-Regular.woff") format("woff")'
        }, '@font-face /* 11 */': {
            'font-family': 'MJXTEX-C',
            src: 'url("%%URL%%/MathJax_Calligraphic-Regular.woff") format("woff")'
        }, '@font-face /* 12 */': {
            'font-family': 'MJXTEX-CB',
            src: 'url("%%URL%%/MathJax_Calligraphic-Bold.woff") format("woff")'
        }, '@font-face /* 13 */': {
            'font-family': 'MJXTEX-FR',
            src: 'url("%%URL%%/MathJax_Fraktur-Regular.woff") format("woff")'
        }, '@font-face /* 14 */': {
            'font-family': 'MJXTEX-FRB',
            src: 'url("%%URL%%/MathJax_Fraktur-Bold.woff") format("woff")'
        }, '@font-face /* 15 */': {
            'font-family': 'MJXTEX-SS',
            src: 'url("%%URL%%/MathJax_SansSerif-Regular.woff") format("woff")'
        }, '@font-face /* 16 */': {
            'font-family': 'MJXTEX-SSB',
            src: 'url("%%URL%%/MathJax_SansSerif-Bold.woff") format("woff")'
        }, '@font-face /* 17 */': {
            'font-family': 'MJXTEX-SSI',
            src: 'url("%%URL%%/MathJax_SansSerif-Italic.woff") format("woff")'
        }, '@font-face /* 18 */': {
            'font-family': 'MJXTEX-SC',
            src: 'url("%%URL%%/MathJax_Script-Regular.woff") format("woff")'
        }, '@font-face /* 19 */': {
            'font-family': 'MJXTEX-T',
            src: 'url("%%URL%%/MathJax_Typewriter-Regular.woff") format("woff")'
        }, '@font-face /* 20 */': {
            'font-family': 'MJXTEX-V',
            src: 'url("%%URL%%/MathJax_Vector-Regular.woff") format("woff")'
        }, '@font-face /* 21 */': {
            'font-family': 'MJXTEX-VB',
            src: 'url("%%URL%%/MathJax_Vector-Bold.woff") format("woff")'
        } });
    return TeXFont;
}((0, tex_js_1.CommonTeXFontMixin)(FontData_js_1.CHTMLFontData)));
exports.TeXFont = TeXFont;
//# sourceMappingURL=tex.js.map

/***/ }),

/***/ 4005:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.boldItalic = void 0;
var FontData_js_1 = __webpack_require__(8042);
var bold_italic_js_1 = __webpack_require__(5887);
exports.boldItalic = (0, FontData_js_1.AddCSS)(bold_italic_js_1.boldItalic, {
    0x131: { f: 'B' },
    0x237: { f: 'B' },
    0x2044: { c: '/' },
    0x2206: { c: '\\394' },
    0x29F8: { c: '/' },
});
//# sourceMappingURL=bold-italic.js.map

/***/ }),

/***/ 1015:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bold = void 0;
var FontData_js_1 = __webpack_require__(8042);
var bold_js_1 = __webpack_require__(1103);
exports.bold = (0, FontData_js_1.AddCSS)(bold_js_1.bold, {
    0xB7: { c: '\\22C5' },
    0x131: { f: '' },
    0x237: { f: '' },
    0x2B9: { c: '\\2032' },
    0x2002: { c: '' },
    0x2003: { c: '' },
    0x2004: { c: '' },
    0x2005: { c: '' },
    0x2006: { c: '' },
    0x2009: { c: '' },
    0x200A: { c: '' },
    0x2015: { c: '\\2014' },
    0x2016: { c: '\\2225' },
    0x2017: { c: '_' },
    0x2022: { c: '\\2219' },
    0x2033: { c: '\\2032\\2032' },
    0x2034: { c: '\\2032\\2032\\2032' },
    0x203E: { c: '\\2C9' },
    0x2044: { c: '/' },
    0x2057: { c: '\\2032\\2032\\2032\\2032' },
    0x20D7: { c: '\\2192', f: 'VB' },
    0x219A: { c: '\\2190\\338' },
    0x219B: { c: '\\2192\\338' },
    0x21AE: { c: '\\2194\\338' },
    0x21CD: { c: '\\21D0\\338' },
    0x21CE: { c: '\\21D4\\338' },
    0x21CF: { c: '\\21D2\\338' },
    0x2204: { c: '\\2203\\338' },
    0x2206: { c: '\\394' },
    0x220C: { c: '\\220B\\338' },
    0x2224: { c: '\\2223\\338' },
    0x2226: { c: '\\2225\\338' },
    0x2241: { c: '\\223C\\338' },
    0x2244: { c: '\\2243\\338' },
    0x2247: { c: '\\2245\\338' },
    0x2249: { c: '\\2248\\338' },
    0x2262: { c: '\\2261\\338' },
    0x226D: { c: '\\224D\\338' },
    0x226E: { c: '<\\338' },
    0x226F: { c: '>\\338' },
    0x2270: { c: '\\2264\\338' },
    0x2271: { c: '\\2265\\338' },
    0x2280: { c: '\\227A\\338' },
    0x2281: { c: '\\227B\\338' },
    0x2284: { c: '\\2282\\338' },
    0x2285: { c: '\\2283\\338' },
    0x2288: { c: '\\2286\\338' },
    0x2289: { c: '\\2287\\338' },
    0x22AC: { c: '\\22A2\\338' },
    0x22AD: { c: '\\22A8\\338' },
    0x22E2: { c: '\\2291\\338' },
    0x22E3: { c: '\\2292\\338' },
    0x2329: { c: '\\27E8' },
    0x232A: { c: '\\27E9' },
    0x25B5: { c: '\\25B3' },
    0x25BF: { c: '\\25BD' },
    0x2758: { c: '\\2223' },
    0x29F8: { c: '/', f: 'BI' },
    0x2A2F: { c: '\\D7' },
    0x3008: { c: '\\27E8' },
    0x3009: { c: '\\27E9' },
});
//# sourceMappingURL=bold.js.map

/***/ }),

/***/ 4515:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.doubleStruck = void 0;
var double_struck_js_1 = __webpack_require__(6001);
Object.defineProperty(exports, "doubleStruck", ({ enumerable: true, get: function () { return double_struck_js_1.doubleStruck; } }));
//# sourceMappingURL=double-struck.js.map

/***/ }),

/***/ 6555:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.frakturBold = void 0;
var FontData_js_1 = __webpack_require__(8042);
var fraktur_bold_js_1 = __webpack_require__(3696);
exports.frakturBold = (0, FontData_js_1.AddCSS)(fraktur_bold_js_1.frakturBold, {
    0x2044: { c: '/' },
});
//# sourceMappingURL=fraktur-bold.js.map

/***/ }),

/***/ 2183:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fraktur = void 0;
var FontData_js_1 = __webpack_require__(8042);
var fraktur_js_1 = __webpack_require__(9587);
exports.fraktur = (0, FontData_js_1.AddCSS)(fraktur_js_1.fraktur, {
    0x2044: { c: '/' },
});
//# sourceMappingURL=fraktur.js.map

/***/ }),

/***/ 3490:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.italic = void 0;
var FontData_js_1 = __webpack_require__(8042);
var italic_js_1 = __webpack_require__(8348);
exports.italic = (0, FontData_js_1.AddCSS)(italic_js_1.italic, {
    0x2F: { f: 'I' },
    0x3DD: { c: '\\E008', f: 'A' },
    0x2015: { c: '\\2014' },
    0x2017: { c: '_' },
    0x2044: { c: '/', f: 'I' },
    0x2206: { c: '\\394', f: 'I' },
    0x29F8: { c: '/', f: 'I' },
});
//# sourceMappingURL=italic.js.map

/***/ }),

/***/ 9056:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.largeop = void 0;
var FontData_js_1 = __webpack_require__(8042);
var largeop_js_1 = __webpack_require__(1376);
exports.largeop = (0, FontData_js_1.AddCSS)(largeop_js_1.largeop, {
    0x2016: { f: 'S1' },
    0x2044: { c: '/' },
    0x2191: { f: 'S1' },
    0x2193: { f: 'S1' },
    0x21D1: { f: 'S1' },
    0x21D3: { f: 'S1' },
    0x2223: { f: 'S1' },
    0x2225: { f: 'S1' },
    0x2329: { c: '\\27E8' },
    0x232A: { c: '\\27E9' },
    0x23D0: { f: 'S1' },
    0x2758: { c: '\\2223', f: 'S1' },
    0x2A0C: { c: '\\222C\\222C' },
    0x3008: { c: '\\27E8' },
    0x3009: { c: '\\27E9' },
});
//# sourceMappingURL=largeop.js.map

/***/ }),

/***/ 3019:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.monospace = void 0;
var FontData_js_1 = __webpack_require__(8042);
var monospace_js_1 = __webpack_require__(1439);
exports.monospace = (0, FontData_js_1.AddCSS)(monospace_js_1.monospace, {
    0x2B9: { c: '\\2032' },
    0x391: { c: 'A' },
    0x392: { c: 'B' },
    0x395: { c: 'E' },
    0x396: { c: 'Z' },
    0x397: { c: 'H' },
    0x399: { c: 'I' },
    0x39A: { c: 'K' },
    0x39C: { c: 'M' },
    0x39D: { c: 'N' },
    0x39F: { c: 'O' },
    0x3A1: { c: 'P' },
    0x3A4: { c: 'T' },
    0x3A7: { c: 'X' },
    0x2017: { c: '_' },
    0x2033: { c: '\\2032\\2032' },
    0x2034: { c: '\\2032\\2032\\2032' },
    0x2044: { c: '/' },
    0x2057: { c: '\\2032\\2032\\2032\\2032' },
    0x2206: { c: '\\394' },
});
//# sourceMappingURL=monospace.js.map

/***/ }),

/***/ 2713:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normal = void 0;
var FontData_js_1 = __webpack_require__(8042);
var normal_js_1 = __webpack_require__(331);
exports.normal = (0, FontData_js_1.AddCSS)(normal_js_1.normal, {
    0xA3: { f: 'MI' },
    0xA5: { f: 'A' },
    0xAE: { f: 'A' },
    0xB7: { c: '\\22C5' },
    0xF0: { f: 'A' },
    0x2B9: { c: '\\2032' },
    0x391: { c: 'A' },
    0x392: { c: 'B' },
    0x395: { c: 'E' },
    0x396: { c: 'Z' },
    0x397: { c: 'H' },
    0x399: { c: 'I' },
    0x39A: { c: 'K' },
    0x39C: { c: 'M' },
    0x39D: { c: 'N' },
    0x39F: { c: 'O' },
    0x3A1: { c: 'P' },
    0x3A4: { c: 'T' },
    0x3A7: { c: 'X' },
    0x2000: { c: '' },
    0x2001: { c: '' },
    0x2002: { c: '' },
    0x2003: { c: '' },
    0x2004: { c: '' },
    0x2005: { c: '' },
    0x2006: { c: '' },
    0x2009: { c: '' },
    0x200A: { c: '' },
    0x200B: { c: '' },
    0x200C: { c: '' },
    0x2015: { c: '\\2014' },
    0x2016: { c: '\\2225' },
    0x2017: { c: '_' },
    0x2022: { c: '\\2219' },
    0x2033: { c: '\\2032\\2032' },
    0x2034: { c: '\\2032\\2032\\2032' },
    0x2035: { f: 'A' },
    0x2036: { c: '\\2035\\2035', f: 'A' },
    0x2037: { c: '\\2035\\2035\\2035', f: 'A' },
    0x203E: { c: '\\2C9' },
    0x2044: { c: '/' },
    0x2057: { c: '\\2032\\2032\\2032\\2032' },
    0x2060: { c: '' },
    0x2061: { c: '' },
    0x2062: { c: '' },
    0x2063: { c: '' },
    0x2064: { c: '' },
    0x20D7: { c: '\\2192', f: 'V' },
    0x2102: { c: 'C', f: 'A' },
    0x210B: { c: 'H', f: 'SC' },
    0x210C: { c: 'H', f: 'FR' },
    0x210D: { c: 'H', f: 'A' },
    0x210E: { c: 'h', f: 'I' },
    0x210F: { f: 'A' },
    0x2110: { c: 'I', f: 'SC' },
    0x2111: { c: 'I', f: 'FR' },
    0x2112: { c: 'L', f: 'SC' },
    0x2115: { c: 'N', f: 'A' },
    0x2119: { c: 'P', f: 'A' },
    0x211A: { c: 'Q', f: 'A' },
    0x211B: { c: 'R', f: 'SC' },
    0x211C: { c: 'R', f: 'FR' },
    0x211D: { c: 'R', f: 'A' },
    0x2124: { c: 'Z', f: 'A' },
    0x2126: { c: '\\3A9' },
    0x2127: { f: 'A' },
    0x2128: { c: 'Z', f: 'FR' },
    0x212C: { c: 'B', f: 'SC' },
    0x212D: { c: 'C', f: 'FR' },
    0x2130: { c: 'E', f: 'SC' },
    0x2131: { c: 'F', f: 'SC' },
    0x2132: { f: 'A' },
    0x2133: { c: 'M', f: 'SC' },
    0x2136: { f: 'A' },
    0x2137: { f: 'A' },
    0x2138: { f: 'A' },
    0x2141: { f: 'A' },
    0x219A: { f: 'A' },
    0x219B: { f: 'A' },
    0x219E: { f: 'A' },
    0x21A0: { f: 'A' },
    0x21A2: { f: 'A' },
    0x21A3: { f: 'A' },
    0x21AB: { f: 'A' },
    0x21AC: { f: 'A' },
    0x21AD: { f: 'A' },
    0x21AE: { f: 'A' },
    0x21B0: { f: 'A' },
    0x21B1: { f: 'A' },
    0x21B6: { f: 'A' },
    0x21B7: { f: 'A' },
    0x21BA: { f: 'A' },
    0x21BB: { f: 'A' },
    0x21BE: { f: 'A' },
    0x21BF: { f: 'A' },
    0x21C2: { f: 'A' },
    0x21C3: { f: 'A' },
    0x21C4: { f: 'A' },
    0x21C6: { f: 'A' },
    0x21C7: { f: 'A' },
    0x21C8: { f: 'A' },
    0x21C9: { f: 'A' },
    0x21CA: { f: 'A' },
    0x21CB: { f: 'A' },
    0x21CD: { f: 'A' },
    0x21CE: { f: 'A' },
    0x21CF: { f: 'A' },
    0x21DA: { f: 'A' },
    0x21DB: { f: 'A' },
    0x21DD: { f: 'A' },
    0x21E0: { f: 'A' },
    0x21E2: { f: 'A' },
    0x2201: { f: 'A' },
    0x2204: { c: '\\2203\\338' },
    0x2206: { c: '\\394' },
    0x220C: { c: '\\220B\\338' },
    0x220D: { f: 'A' },
    0x220F: { f: 'S1' },
    0x2210: { f: 'S1' },
    0x2211: { f: 'S1' },
    0x2214: { f: 'A' },
    0x2221: { f: 'A' },
    0x2222: { f: 'A' },
    0x2224: { f: 'A' },
    0x2226: { f: 'A' },
    0x222C: { f: 'S1' },
    0x222D: { f: 'S1' },
    0x222E: { f: 'S1' },
    0x2234: { f: 'A' },
    0x2235: { f: 'A' },
    0x223D: { f: 'A' },
    0x2241: { f: 'A' },
    0x2242: { f: 'A' },
    0x2244: { c: '\\2243\\338' },
    0x2247: { c: '\\2246', f: 'A' },
    0x2249: { c: '\\2248\\338' },
    0x224A: { f: 'A' },
    0x224E: { f: 'A' },
    0x224F: { f: 'A' },
    0x2251: { f: 'A' },
    0x2252: { f: 'A' },
    0x2253: { f: 'A' },
    0x2256: { f: 'A' },
    0x2257: { f: 'A' },
    0x225C: { f: 'A' },
    0x2262: { c: '\\2261\\338' },
    0x2266: { f: 'A' },
    0x2267: { f: 'A' },
    0x2268: { f: 'A' },
    0x2269: { f: 'A' },
    0x226C: { f: 'A' },
    0x226D: { c: '\\224D\\338' },
    0x226E: { f: 'A' },
    0x226F: { f: 'A' },
    0x2270: { f: 'A' },
    0x2271: { f: 'A' },
    0x2272: { f: 'A' },
    0x2273: { f: 'A' },
    0x2274: { c: '\\2272\\338' },
    0x2275: { c: '\\2273\\338' },
    0x2276: { f: 'A' },
    0x2277: { f: 'A' },
    0x2278: { c: '\\2276\\338' },
    0x2279: { c: '\\2277\\338' },
    0x227C: { f: 'A' },
    0x227D: { f: 'A' },
    0x227E: { f: 'A' },
    0x227F: { f: 'A' },
    0x2280: { f: 'A' },
    0x2281: { f: 'A' },
    0x2284: { c: '\\2282\\338' },
    0x2285: { c: '\\2283\\338' },
    0x2288: { f: 'A' },
    0x2289: { f: 'A' },
    0x228A: { f: 'A' },
    0x228B: { f: 'A' },
    0x228F: { f: 'A' },
    0x2290: { f: 'A' },
    0x229A: { f: 'A' },
    0x229B: { f: 'A' },
    0x229D: { f: 'A' },
    0x229E: { f: 'A' },
    0x229F: { f: 'A' },
    0x22A0: { f: 'A' },
    0x22A1: { f: 'A' },
    0x22A9: { f: 'A' },
    0x22AA: { f: 'A' },
    0x22AC: { f: 'A' },
    0x22AD: { f: 'A' },
    0x22AE: { f: 'A' },
    0x22AF: { f: 'A' },
    0x22B2: { f: 'A' },
    0x22B3: { f: 'A' },
    0x22B4: { f: 'A' },
    0x22B5: { f: 'A' },
    0x22B8: { f: 'A' },
    0x22BA: { f: 'A' },
    0x22BB: { f: 'A' },
    0x22BC: { f: 'A' },
    0x22C0: { f: 'S1' },
    0x22C1: { f: 'S1' },
    0x22C2: { f: 'S1' },
    0x22C3: { f: 'S1' },
    0x22C7: { f: 'A' },
    0x22C9: { f: 'A' },
    0x22CA: { f: 'A' },
    0x22CB: { f: 'A' },
    0x22CC: { f: 'A' },
    0x22CD: { f: 'A' },
    0x22CE: { f: 'A' },
    0x22CF: { f: 'A' },
    0x22D0: { f: 'A' },
    0x22D1: { f: 'A' },
    0x22D2: { f: 'A' },
    0x22D3: { f: 'A' },
    0x22D4: { f: 'A' },
    0x22D6: { f: 'A' },
    0x22D7: { f: 'A' },
    0x22D8: { f: 'A' },
    0x22D9: { f: 'A' },
    0x22DA: { f: 'A' },
    0x22DB: { f: 'A' },
    0x22DE: { f: 'A' },
    0x22DF: { f: 'A' },
    0x22E0: { f: 'A' },
    0x22E1: { f: 'A' },
    0x22E2: { c: '\\2291\\338' },
    0x22E3: { c: '\\2292\\338' },
    0x22E6: { f: 'A' },
    0x22E7: { f: 'A' },
    0x22E8: { f: 'A' },
    0x22E9: { f: 'A' },
    0x22EA: { f: 'A' },
    0x22EB: { f: 'A' },
    0x22EC: { f: 'A' },
    0x22ED: { f: 'A' },
    0x2305: { c: '\\22BC', f: 'A' },
    0x2306: { c: '\\2A5E', f: 'A' },
    0x231C: { c: '\\250C', f: 'A' },
    0x231D: { c: '\\2510', f: 'A' },
    0x231E: { c: '\\2514', f: 'A' },
    0x231F: { c: '\\2518', f: 'A' },
    0x2329: { c: '\\27E8' },
    0x232A: { c: '\\27E9' },
    0x23D0: { f: 'S1' },
    0x24C8: { f: 'A' },
    0x250C: { f: 'A' },
    0x2510: { f: 'A' },
    0x2514: { f: 'A' },
    0x2518: { f: 'A' },
    0x2571: { f: 'A' },
    0x2572: { f: 'A' },
    0x25A0: { f: 'A' },
    0x25A1: { f: 'A' },
    0x25AA: { c: '\\25A0', f: 'A' },
    0x25B2: { f: 'A' },
    0x25B4: { c: '\\25B2', f: 'A' },
    0x25B5: { c: '\\25B3' },
    0x25B6: { f: 'A' },
    0x25B8: { c: '\\25B6', f: 'A' },
    0x25BC: { f: 'A' },
    0x25BE: { c: '\\25BC', f: 'A' },
    0x25BF: { c: '\\25BD' },
    0x25C0: { f: 'A' },
    0x25C2: { c: '\\25C0', f: 'A' },
    0x25CA: { f: 'A' },
    0x25FB: { c: '\\25A1', f: 'A' },
    0x25FC: { c: '\\25A0', f: 'A' },
    0x2605: { f: 'A' },
    0x2713: { f: 'A' },
    0x2720: { f: 'A' },
    0x2758: { c: '\\2223' },
    0x29EB: { f: 'A' },
    0x29F8: { c: '/', f: 'I' },
    0x2A00: { f: 'S1' },
    0x2A01: { f: 'S1' },
    0x2A02: { f: 'S1' },
    0x2A04: { f: 'S1' },
    0x2A06: { f: 'S1' },
    0x2A0C: { c: '\\222C\\222C', f: 'S1' },
    0x2A2F: { c: '\\D7' },
    0x2A5E: { f: 'A' },
    0x2A7D: { f: 'A' },
    0x2A7E: { f: 'A' },
    0x2A85: { f: 'A' },
    0x2A86: { f: 'A' },
    0x2A87: { f: 'A' },
    0x2A88: { f: 'A' },
    0x2A89: { f: 'A' },
    0x2A8A: { f: 'A' },
    0x2A8B: { f: 'A' },
    0x2A8C: { f: 'A' },
    0x2A95: { f: 'A' },
    0x2A96: { f: 'A' },
    0x2AB5: { f: 'A' },
    0x2AB6: { f: 'A' },
    0x2AB7: { f: 'A' },
    0x2AB8: { f: 'A' },
    0x2AB9: { f: 'A' },
    0x2ABA: { f: 'A' },
    0x2AC5: { f: 'A' },
    0x2AC6: { f: 'A' },
    0x2ACB: { f: 'A' },
    0x2ACC: { f: 'A' },
    0x3008: { c: '\\27E8' },
    0x3009: { c: '\\27E9' },
    0xE006: { f: 'A' },
    0xE007: { f: 'A' },
    0xE008: { f: 'A' },
    0xE009: { f: 'A' },
    0xE00C: { f: 'A' },
    0xE00D: { f: 'A' },
    0xE00E: { f: 'A' },
    0xE00F: { f: 'A' },
    0xE010: { f: 'A' },
    0xE011: { f: 'A' },
    0xE016: { f: 'A' },
    0xE017: { f: 'A' },
    0xE018: { f: 'A' },
    0xE019: { f: 'A' },
    0xE01A: { f: 'A' },
    0xE01B: { f: 'A' },
    0x1D400: { c: 'A', f: 'B' },
    0x1D401: { c: 'B', f: 'B' },
    0x1D402: { c: 'C', f: 'B' },
    0x1D403: { c: 'D', f: 'B' },
    0x1D404: { c: 'E', f: 'B' },
    0x1D405: { c: 'F', f: 'B' },
    0x1D406: { c: 'G', f: 'B' },
    0x1D407: { c: 'H', f: 'B' },
    0x1D408: { c: 'I', f: 'B' },
    0x1D409: { c: 'J', f: 'B' },
    0x1D40A: { c: 'K', f: 'B' },
    0x1D40B: { c: 'L', f: 'B' },
    0x1D40C: { c: 'M', f: 'B' },
    0x1D40D: { c: 'N', f: 'B' },
    0x1D40E: { c: 'O', f: 'B' },
    0x1D40F: { c: 'P', f: 'B' },
    0x1D410: { c: 'Q', f: 'B' },
    0x1D411: { c: 'R', f: 'B' },
    0x1D412: { c: 'S', f: 'B' },
    0x1D413: { c: 'T', f: 'B' },
    0x1D414: { c: 'U', f: 'B' },
    0x1D415: { c: 'V', f: 'B' },
    0x1D416: { c: 'W', f: 'B' },
    0x1D417: { c: 'X', f: 'B' },
    0x1D418: { c: 'Y', f: 'B' },
    0x1D419: { c: 'Z', f: 'B' },
    0x1D41A: { c: 'a', f: 'B' },
    0x1D41B: { c: 'b', f: 'B' },
    0x1D41C: { c: 'c', f: 'B' },
    0x1D41D: { c: 'd', f: 'B' },
    0x1D41E: { c: 'e', f: 'B' },
    0x1D41F: { c: 'f', f: 'B' },
    0x1D420: { c: 'g', f: 'B' },
    0x1D421: { c: 'h', f: 'B' },
    0x1D422: { c: 'i', f: 'B' },
    0x1D423: { c: 'j', f: 'B' },
    0x1D424: { c: 'k', f: 'B' },
    0x1D425: { c: 'l', f: 'B' },
    0x1D426: { c: 'm', f: 'B' },
    0x1D427: { c: 'n', f: 'B' },
    0x1D428: { c: 'o', f: 'B' },
    0x1D429: { c: 'p', f: 'B' },
    0x1D42A: { c: 'q', f: 'B' },
    0x1D42B: { c: 'r', f: 'B' },
    0x1D42C: { c: 's', f: 'B' },
    0x1D42D: { c: 't', f: 'B' },
    0x1D42E: { c: 'u', f: 'B' },
    0x1D42F: { c: 'v', f: 'B' },
    0x1D430: { c: 'w', f: 'B' },
    0x1D431: { c: 'x', f: 'B' },
    0x1D432: { c: 'y', f: 'B' },
    0x1D433: { c: 'z', f: 'B' },
    0x1D434: { c: 'A', f: 'I' },
    0x1D435: { c: 'B', f: 'I' },
    0x1D436: { c: 'C', f: 'I' },
    0x1D437: { c: 'D', f: 'I' },
    0x1D438: { c: 'E', f: 'I' },
    0x1D439: { c: 'F', f: 'I' },
    0x1D43A: { c: 'G', f: 'I' },
    0x1D43B: { c: 'H', f: 'I' },
    0x1D43C: { c: 'I', f: 'I' },
    0x1D43D: { c: 'J', f: 'I' },
    0x1D43E: { c: 'K', f: 'I' },
    0x1D43F: { c: 'L', f: 'I' },
    0x1D440: { c: 'M', f: 'I' },
    0x1D441: { c: 'N', f: 'I' },
    0x1D442: { c: 'O', f: 'I' },
    0x1D443: { c: 'P', f: 'I' },
    0x1D444: { c: 'Q', f: 'I' },
    0x1D445: { c: 'R', f: 'I' },
    0x1D446: { c: 'S', f: 'I' },
    0x1D447: { c: 'T', f: 'I' },
    0x1D448: { c: 'U', f: 'I' },
    0x1D449: { c: 'V', f: 'I' },
    0x1D44A: { c: 'W', f: 'I' },
    0x1D44B: { c: 'X', f: 'I' },
    0x1D44C: { c: 'Y', f: 'I' },
    0x1D44D: { c: 'Z', f: 'I' },
    0x1D44E: { c: 'a', f: 'I' },
    0x1D44F: { c: 'b', f: 'I' },
    0x1D450: { c: 'c', f: 'I' },
    0x1D451: { c: 'd', f: 'I' },
    0x1D452: { c: 'e', f: 'I' },
    0x1D453: { c: 'f', f: 'I' },
    0x1D454: { c: 'g', f: 'I' },
    0x1D456: { c: 'i', f: 'I' },
    0x1D457: { c: 'j', f: 'I' },
    0x1D458: { c: 'k', f: 'I' },
    0x1D459: { c: 'l', f: 'I' },
    0x1D45A: { c: 'm', f: 'I' },
    0x1D45B: { c: 'n', f: 'I' },
    0x1D45C: { c: 'o', f: 'I' },
    0x1D45D: { c: 'p', f: 'I' },
    0x1D45E: { c: 'q', f: 'I' },
    0x1D45F: { c: 'r', f: 'I' },
    0x1D460: { c: 's', f: 'I' },
    0x1D461: { c: 't', f: 'I' },
    0x1D462: { c: 'u', f: 'I' },
    0x1D463: { c: 'v', f: 'I' },
    0x1D464: { c: 'w', f: 'I' },
    0x1D465: { c: 'x', f: 'I' },
    0x1D466: { c: 'y', f: 'I' },
    0x1D467: { c: 'z', f: 'I' },
    0x1D468: { c: 'A', f: 'BI' },
    0x1D469: { c: 'B', f: 'BI' },
    0x1D46A: { c: 'C', f: 'BI' },
    0x1D46B: { c: 'D', f: 'BI' },
    0x1D46C: { c: 'E', f: 'BI' },
    0x1D46D: { c: 'F', f: 'BI' },
    0x1D46E: { c: 'G', f: 'BI' },
    0x1D46F: { c: 'H', f: 'BI' },
    0x1D470: { c: 'I', f: 'BI' },
    0x1D471: { c: 'J', f: 'BI' },
    0x1D472: { c: 'K', f: 'BI' },
    0x1D473: { c: 'L', f: 'BI' },
    0x1D474: { c: 'M', f: 'BI' },
    0x1D475: { c: 'N', f: 'BI' },
    0x1D476: { c: 'O', f: 'BI' },
    0x1D477: { c: 'P', f: 'BI' },
    0x1D478: { c: 'Q', f: 'BI' },
    0x1D479: { c: 'R', f: 'BI' },
    0x1D47A: { c: 'S', f: 'BI' },
    0x1D47B: { c: 'T', f: 'BI' },
    0x1D47C: { c: 'U', f: 'BI' },
    0x1D47D: { c: 'V', f: 'BI' },
    0x1D47E: { c: 'W', f: 'BI' },
    0x1D47F: { c: 'X', f: 'BI' },
    0x1D480: { c: 'Y', f: 'BI' },
    0x1D481: { c: 'Z', f: 'BI' },
    0x1D482: { c: 'a', f: 'BI' },
    0x1D483: { c: 'b', f: 'BI' },
    0x1D484: { c: 'c', f: 'BI' },
    0x1D485: { c: 'd', f: 'BI' },
    0x1D486: { c: 'e', f: 'BI' },
    0x1D487: { c: 'f', f: 'BI' },
    0x1D488: { c: 'g', f: 'BI' },
    0x1D489: { c: 'h', f: 'BI' },
    0x1D48A: { c: 'i', f: 'BI' },
    0x1D48B: { c: 'j', f: 'BI' },
    0x1D48C: { c: 'k', f: 'BI' },
    0x1D48D: { c: 'l', f: 'BI' },
    0x1D48E: { c: 'm', f: 'BI' },
    0x1D48F: { c: 'n', f: 'BI' },
    0x1D490: { c: 'o', f: 'BI' },
    0x1D491: { c: 'p', f: 'BI' },
    0x1D492: { c: 'q', f: 'BI' },
    0x1D493: { c: 'r', f: 'BI' },
    0x1D494: { c: 's', f: 'BI' },
    0x1D495: { c: 't', f: 'BI' },
    0x1D496: { c: 'u', f: 'BI' },
    0x1D497: { c: 'v', f: 'BI' },
    0x1D498: { c: 'w', f: 'BI' },
    0x1D499: { c: 'x', f: 'BI' },
    0x1D49A: { c: 'y', f: 'BI' },
    0x1D49B: { c: 'z', f: 'BI' },
    0x1D49C: { c: 'A', f: 'SC' },
    0x1D49E: { c: 'C', f: 'SC' },
    0x1D49F: { c: 'D', f: 'SC' },
    0x1D4A2: { c: 'G', f: 'SC' },
    0x1D4A5: { c: 'J', f: 'SC' },
    0x1D4A6: { c: 'K', f: 'SC' },
    0x1D4A9: { c: 'N', f: 'SC' },
    0x1D4AA: { c: 'O', f: 'SC' },
    0x1D4AB: { c: 'P', f: 'SC' },
    0x1D4AC: { c: 'Q', f: 'SC' },
    0x1D4AE: { c: 'S', f: 'SC' },
    0x1D4AF: { c: 'T', f: 'SC' },
    0x1D4B0: { c: 'U', f: 'SC' },
    0x1D4B1: { c: 'V', f: 'SC' },
    0x1D4B2: { c: 'W', f: 'SC' },
    0x1D4B3: { c: 'X', f: 'SC' },
    0x1D4B4: { c: 'Y', f: 'SC' },
    0x1D4B5: { c: 'Z', f: 'SC' },
    0x1D504: { c: 'A', f: 'FR' },
    0x1D505: { c: 'B', f: 'FR' },
    0x1D507: { c: 'D', f: 'FR' },
    0x1D508: { c: 'E', f: 'FR' },
    0x1D509: { c: 'F', f: 'FR' },
    0x1D50A: { c: 'G', f: 'FR' },
    0x1D50D: { c: 'J', f: 'FR' },
    0x1D50E: { c: 'K', f: 'FR' },
    0x1D50F: { c: 'L', f: 'FR' },
    0x1D510: { c: 'M', f: 'FR' },
    0x1D511: { c: 'N', f: 'FR' },
    0x1D512: { c: 'O', f: 'FR' },
    0x1D513: { c: 'P', f: 'FR' },
    0x1D514: { c: 'Q', f: 'FR' },
    0x1D516: { c: 'S', f: 'FR' },
    0x1D517: { c: 'T', f: 'FR' },
    0x1D518: { c: 'U', f: 'FR' },
    0x1D519: { c: 'V', f: 'FR' },
    0x1D51A: { c: 'W', f: 'FR' },
    0x1D51B: { c: 'X', f: 'FR' },
    0x1D51C: { c: 'Y', f: 'FR' },
    0x1D51E: { c: 'a', f: 'FR' },
    0x1D51F: { c: 'b', f: 'FR' },
    0x1D520: { c: 'c', f: 'FR' },
    0x1D521: { c: 'd', f: 'FR' },
    0x1D522: { c: 'e', f: 'FR' },
    0x1D523: { c: 'f', f: 'FR' },
    0x1D524: { c: 'g', f: 'FR' },
    0x1D525: { c: 'h', f: 'FR' },
    0x1D526: { c: 'i', f: 'FR' },
    0x1D527: { c: 'j', f: 'FR' },
    0x1D528: { c: 'k', f: 'FR' },
    0x1D529: { c: 'l', f: 'FR' },
    0x1D52A: { c: 'm', f: 'FR' },
    0x1D52B: { c: 'n', f: 'FR' },
    0x1D52C: { c: 'o', f: 'FR' },
    0x1D52D: { c: 'p', f: 'FR' },
    0x1D52E: { c: 'q', f: 'FR' },
    0x1D52F: { c: 'r', f: 'FR' },
    0x1D530: { c: 's', f: 'FR' },
    0x1D531: { c: 't', f: 'FR' },
    0x1D532: { c: 'u', f: 'FR' },
    0x1D533: { c: 'v', f: 'FR' },
    0x1D534: { c: 'w', f: 'FR' },
    0x1D535: { c: 'x', f: 'FR' },
    0x1D536: { c: 'y', f: 'FR' },
    0x1D537: { c: 'z', f: 'FR' },
    0x1D538: { c: 'A', f: 'A' },
    0x1D539: { c: 'B', f: 'A' },
    0x1D53B: { c: 'D', f: 'A' },
    0x1D53C: { c: 'E', f: 'A' },
    0x1D53D: { c: 'F', f: 'A' },
    0x1D53E: { c: 'G', f: 'A' },
    0x1D540: { c: 'I', f: 'A' },
    0x1D541: { c: 'J', f: 'A' },
    0x1D542: { c: 'K', f: 'A' },
    0x1D543: { c: 'L', f: 'A' },
    0x1D544: { c: 'M', f: 'A' },
    0x1D546: { c: 'O', f: 'A' },
    0x1D54A: { c: 'S', f: 'A' },
    0x1D54B: { c: 'T', f: 'A' },
    0x1D54C: { c: 'U', f: 'A' },
    0x1D54D: { c: 'V', f: 'A' },
    0x1D54E: { c: 'W', f: 'A' },
    0x1D54F: { c: 'X', f: 'A' },
    0x1D550: { c: 'Y', f: 'A' },
    0x1D56C: { c: 'A', f: 'FRB' },
    0x1D56D: { c: 'B', f: 'FRB' },
    0x1D56E: { c: 'C', f: 'FRB' },
    0x1D56F: { c: 'D', f: 'FRB' },
    0x1D570: { c: 'E', f: 'FRB' },
    0x1D571: { c: 'F', f: 'FRB' },
    0x1D572: { c: 'G', f: 'FRB' },
    0x1D573: { c: 'H', f: 'FRB' },
    0x1D574: { c: 'I', f: 'FRB' },
    0x1D575: { c: 'J', f: 'FRB' },
    0x1D576: { c: 'K', f: 'FRB' },
    0x1D577: { c: 'L', f: 'FRB' },
    0x1D578: { c: 'M', f: 'FRB' },
    0x1D579: { c: 'N', f: 'FRB' },
    0x1D57A: { c: 'O', f: 'FRB' },
    0x1D57B: { c: 'P', f: 'FRB' },
    0x1D57C: { c: 'Q', f: 'FRB' },
    0x1D57D: { c: 'R', f: 'FRB' },
    0x1D57E: { c: 'S', f: 'FRB' },
    0x1D57F: { c: 'T', f: 'FRB' },
    0x1D580: { c: 'U', f: 'FRB' },
    0x1D581: { c: 'V', f: 'FRB' },
    0x1D582: { c: 'W', f: 'FRB' },
    0x1D583: { c: 'X', f: 'FRB' },
    0x1D584: { c: 'Y', f: 'FRB' },
    0x1D585: { c: 'Z', f: 'FRB' },
    0x1D586: { c: 'a', f: 'FRB' },
    0x1D587: { c: 'b', f: 'FRB' },
    0x1D588: { c: 'c', f: 'FRB' },
    0x1D589: { c: 'd', f: 'FRB' },
    0x1D58A: { c: 'e', f: 'FRB' },
    0x1D58B: { c: 'f', f: 'FRB' },
    0x1D58C: { c: 'g', f: 'FRB' },
    0x1D58D: { c: 'h', f: 'FRB' },
    0x1D58E: { c: 'i', f: 'FRB' },
    0x1D58F: { c: 'j', f: 'FRB' },
    0x1D590: { c: 'k', f: 'FRB' },
    0x1D591: { c: 'l', f: 'FRB' },
    0x1D592: { c: 'm', f: 'FRB' },
    0x1D593: { c: 'n', f: 'FRB' },
    0x1D594: { c: 'o', f: 'FRB' },
    0x1D595: { c: 'p', f: 'FRB' },
    0x1D596: { c: 'q', f: 'FRB' },
    0x1D597: { c: 'r', f: 'FRB' },
    0x1D598: { c: 's', f: 'FRB' },
    0x1D599: { c: 't', f: 'FRB' },
    0x1D59A: { c: 'u', f: 'FRB' },
    0x1D59B: { c: 'v', f: 'FRB' },
    0x1D59C: { c: 'w', f: 'FRB' },
    0x1D59D: { c: 'x', f: 'FRB' },
    0x1D59E: { c: 'y', f: 'FRB' },
    0x1D59F: { c: 'z', f: 'FRB' },
    0x1D5A0: { c: 'A', f: 'SS' },
    0x1D5A1: { c: 'B', f: 'SS' },
    0x1D5A2: { c: 'C', f: 'SS' },
    0x1D5A3: { c: 'D', f: 'SS' },
    0x1D5A4: { c: 'E', f: 'SS' },
    0x1D5A5: { c: 'F', f: 'SS' },
    0x1D5A6: { c: 'G', f: 'SS' },
    0x1D5A7: { c: 'H', f: 'SS' },
    0x1D5A8: { c: 'I', f: 'SS' },
    0x1D5A9: { c: 'J', f: 'SS' },
    0x1D5AA: { c: 'K', f: 'SS' },
    0x1D5AB: { c: 'L', f: 'SS' },
    0x1D5AC: { c: 'M', f: 'SS' },
    0x1D5AD: { c: 'N', f: 'SS' },
    0x1D5AE: { c: 'O', f: 'SS' },
    0x1D5AF: { c: 'P', f: 'SS' },
    0x1D5B0: { c: 'Q', f: 'SS' },
    0x1D5B1: { c: 'R', f: 'SS' },
    0x1D5B2: { c: 'S', f: 'SS' },
    0x1D5B3: { c: 'T', f: 'SS' },
    0x1D5B4: { c: 'U', f: 'SS' },
    0x1D5B5: { c: 'V', f: 'SS' },
    0x1D5B6: { c: 'W', f: 'SS' },
    0x1D5B7: { c: 'X', f: 'SS' },
    0x1D5B8: { c: 'Y', f: 'SS' },
    0x1D5B9: { c: 'Z', f: 'SS' },
    0x1D5BA: { c: 'a', f: 'SS' },
    0x1D5BB: { c: 'b', f: 'SS' },
    0x1D5BC: { c: 'c', f: 'SS' },
    0x1D5BD: { c: 'd', f: 'SS' },
    0x1D5BE: { c: 'e', f: 'SS' },
    0x1D5BF: { c: 'f', f: 'SS' },
    0x1D5C0: { c: 'g', f: 'SS' },
    0x1D5C1: { c: 'h', f: 'SS' },
    0x1D5C2: { c: 'i', f: 'SS' },
    0x1D5C3: { c: 'j', f: 'SS' },
    0x1D5C4: { c: 'k', f: 'SS' },
    0x1D5C5: { c: 'l', f: 'SS' },
    0x1D5C6: { c: 'm', f: 'SS' },
    0x1D5C7: { c: 'n', f: 'SS' },
    0x1D5C8: { c: 'o', f: 'SS' },
    0x1D5C9: { c: 'p', f: 'SS' },
    0x1D5CA: { c: 'q', f: 'SS' },
    0x1D5CB: { c: 'r', f: 'SS' },
    0x1D5CC: { c: 's', f: 'SS' },
    0x1D5CD: { c: 't', f: 'SS' },
    0x1D5CE: { c: 'u', f: 'SS' },
    0x1D5CF: { c: 'v', f: 'SS' },
    0x1D5D0: { c: 'w', f: 'SS' },
    0x1D5D1: { c: 'x', f: 'SS' },
    0x1D5D2: { c: 'y', f: 'SS' },
    0x1D5D3: { c: 'z', f: 'SS' },
    0x1D5D4: { c: 'A', f: 'SSB' },
    0x1D5D5: { c: 'B', f: 'SSB' },
    0x1D5D6: { c: 'C', f: 'SSB' },
    0x1D5D7: { c: 'D', f: 'SSB' },
    0x1D5D8: { c: 'E', f: 'SSB' },
    0x1D5D9: { c: 'F', f: 'SSB' },
    0x1D5DA: { c: 'G', f: 'SSB' },
    0x1D5DB: { c: 'H', f: 'SSB' },
    0x1D5DC: { c: 'I', f: 'SSB' },
    0x1D5DD: { c: 'J', f: 'SSB' },
    0x1D5DE: { c: 'K', f: 'SSB' },
    0x1D5DF: { c: 'L', f: 'SSB' },
    0x1D5E0: { c: 'M', f: 'SSB' },
    0x1D5E1: { c: 'N', f: 'SSB' },
    0x1D5E2: { c: 'O', f: 'SSB' },
    0x1D5E3: { c: 'P', f: 'SSB' },
    0x1D5E4: { c: 'Q', f: 'SSB' },
    0x1D5E5: { c: 'R', f: 'SSB' },
    0x1D5E6: { c: 'S', f: 'SSB' },
    0x1D5E7: { c: 'T', f: 'SSB' },
    0x1D5E8: { c: 'U', f: 'SSB' },
    0x1D5E9: { c: 'V', f: 'SSB' },
    0x1D5EA: { c: 'W', f: 'SSB' },
    0x1D5EB: { c: 'X', f: 'SSB' },
    0x1D5EC: { c: 'Y', f: 'SSB' },
    0x1D5ED: { c: 'Z', f: 'SSB' },
    0x1D5EE: { c: 'a', f: 'SSB' },
    0x1D5EF: { c: 'b', f: 'SSB' },
    0x1D5F0: { c: 'c', f: 'SSB' },
    0x1D5F1: { c: 'd', f: 'SSB' },
    0x1D5F2: { c: 'e', f: 'SSB' },
    0x1D5F3: { c: 'f', f: 'SSB' },
    0x1D5F4: { c: 'g', f: 'SSB' },
    0x1D5F5: { c: 'h', f: 'SSB' },
    0x1D5F6: { c: 'i', f: 'SSB' },
    0x1D5F7: { c: 'j', f: 'SSB' },
    0x1D5F8: { c: 'k', f: 'SSB' },
    0x1D5F9: { c: 'l', f: 'SSB' },
    0x1D5FA: { c: 'm', f: 'SSB' },
    0x1D5FB: { c: 'n', f: 'SSB' },
    0x1D5FC: { c: 'o', f: 'SSB' },
    0x1D5FD: { c: 'p', f: 'SSB' },
    0x1D5FE: { c: 'q', f: 'SSB' },
    0x1D5FF: { c: 'r', f: 'SSB' },
    0x1D600: { c: 's', f: 'SSB' },
    0x1D601: { c: 't', f: 'SSB' },
    0x1D602: { c: 'u', f: 'SSB' },
    0x1D603: { c: 'v', f: 'SSB' },
    0x1D604: { c: 'w', f: 'SSB' },
    0x1D605: { c: 'x', f: 'SSB' },
    0x1D606: { c: 'y', f: 'SSB' },
    0x1D607: { c: 'z', f: 'SSB' },
    0x1D608: { c: 'A', f: 'SSI' },
    0x1D609: { c: 'B', f: 'SSI' },
    0x1D60A: { c: 'C', f: 'SSI' },
    0x1D60B: { c: 'D', f: 'SSI' },
    0x1D60C: { c: 'E', f: 'SSI' },
    0x1D60D: { c: 'F', f: 'SSI' },
    0x1D60E: { c: 'G', f: 'SSI' },
    0x1D60F: { c: 'H', f: 'SSI' },
    0x1D610: { c: 'I', f: 'SSI' },
    0x1D611: { c: 'J', f: 'SSI' },
    0x1D612: { c: 'K', f: 'SSI' },
    0x1D613: { c: 'L', f: 'SSI' },
    0x1D614: { c: 'M', f: 'SSI' },
    0x1D615: { c: 'N', f: 'SSI' },
    0x1D616: { c: 'O', f: 'SSI' },
    0x1D617: { c: 'P', f: 'SSI' },
    0x1D618: { c: 'Q', f: 'SSI' },
    0x1D619: { c: 'R', f: 'SSI' },
    0x1D61A: { c: 'S', f: 'SSI' },
    0x1D61B: { c: 'T', f: 'SSI' },
    0x1D61C: { c: 'U', f: 'SSI' },
    0x1D61D: { c: 'V', f: 'SSI' },
    0x1D61E: { c: 'W', f: 'SSI' },
    0x1D61F: { c: 'X', f: 'SSI' },
    0x1D620: { c: 'Y', f: 'SSI' },
    0x1D621: { c: 'Z', f: 'SSI' },
    0x1D622: { c: 'a', f: 'SSI' },
    0x1D623: { c: 'b', f: 'SSI' },
    0x1D624: { c: 'c', f: 'SSI' },
    0x1D625: { c: 'd', f: 'SSI' },
    0x1D626: { c: 'e', f: 'SSI' },
    0x1D627: { c: 'f', f: 'SSI' },
    0x1D628: { c: 'g', f: 'SSI' },
    0x1D629: { c: 'h', f: 'SSI' },
    0x1D62A: { c: 'i', f: 'SSI' },
    0x1D62B: { c: 'j', f: 'SSI' },
    0x1D62C: { c: 'k', f: 'SSI' },
    0x1D62D: { c: 'l', f: 'SSI' },
    0x1D62E: { c: 'm', f: 'SSI' },
    0x1D62F: { c: 'n', f: 'SSI' },
    0x1D630: { c: 'o', f: 'SSI' },
    0x1D631: { c: 'p', f: 'SSI' },
    0x1D632: { c: 'q', f: 'SSI' },
    0x1D633: { c: 'r', f: 'SSI' },
    0x1D634: { c: 's', f: 'SSI' },
    0x1D635: { c: 't', f: 'SSI' },
    0x1D636: { c: 'u', f: 'SSI' },
    0x1D637: { c: 'v', f: 'SSI' },
    0x1D638: { c: 'w', f: 'SSI' },
    0x1D639: { c: 'x', f: 'SSI' },
    0x1D63A: { c: 'y', f: 'SSI' },
    0x1D63B: { c: 'z', f: 'SSI' },
    0x1D670: { c: 'A', f: 'T' },
    0x1D671: { c: 'B', f: 'T' },
    0x1D672: { c: 'C', f: 'T' },
    0x1D673: { c: 'D', f: 'T' },
    0x1D674: { c: 'E', f: 'T' },
    0x1D675: { c: 'F', f: 'T' },
    0x1D676: { c: 'G', f: 'T' },
    0x1D677: { c: 'H', f: 'T' },
    0x1D678: { c: 'I', f: 'T' },
    0x1D679: { c: 'J', f: 'T' },
    0x1D67A: { c: 'K', f: 'T' },
    0x1D67B: { c: 'L', f: 'T' },
    0x1D67C: { c: 'M', f: 'T' },
    0x1D67D: { c: 'N', f: 'T' },
    0x1D67E: { c: 'O', f: 'T' },
    0x1D67F: { c: 'P', f: 'T' },
    0x1D680: { c: 'Q', f: 'T' },
    0x1D681: { c: 'R', f: 'T' },
    0x1D682: { c: 'S', f: 'T' },
    0x1D683: { c: 'T', f: 'T' },
    0x1D684: { c: 'U', f: 'T' },
    0x1D685: { c: 'V', f: 'T' },
    0x1D686: { c: 'W', f: 'T' },
    0x1D687: { c: 'X', f: 'T' },
    0x1D688: { c: 'Y', f: 'T' },
    0x1D689: { c: 'Z', f: 'T' },
    0x1D68A: { c: 'a', f: 'T' },
    0x1D68B: { c: 'b', f: 'T' },
    0x1D68C: { c: 'c', f: 'T' },
    0x1D68D: { c: 'd', f: 'T' },
    0x1D68E: { c: 'e', f: 'T' },
    0x1D68F: { c: 'f', f: 'T' },
    0x1D690: { c: 'g', f: 'T' },
    0x1D691: { c: 'h', f: 'T' },
    0x1D692: { c: 'i', f: 'T' },
    0x1D693: { c: 'j', f: 'T' },
    0x1D694: { c: 'k', f: 'T' },
    0x1D695: { c: 'l', f: 'T' },
    0x1D696: { c: 'm', f: 'T' },
    0x1D697: { c: 'n', f: 'T' },
    0x1D698: { c: 'o', f: 'T' },
    0x1D699: { c: 'p', f: 'T' },
    0x1D69A: { c: 'q', f: 'T' },
    0x1D69B: { c: 'r', f: 'T' },
    0x1D69C: { c: 's', f: 'T' },
    0x1D69D: { c: 't', f: 'T' },
    0x1D69E: { c: 'u', f: 'T' },
    0x1D69F: { c: 'v', f: 'T' },
    0x1D6A0: { c: 'w', f: 'T' },
    0x1D6A1: { c: 'x', f: 'T' },
    0x1D6A2: { c: 'y', f: 'T' },
    0x1D6A3: { c: 'z', f: 'T' },
    0x1D6A8: { c: 'A', f: 'B' },
    0x1D6A9: { c: 'B', f: 'B' },
    0x1D6AA: { c: '\\393', f: 'B' },
    0x1D6AB: { c: '\\394', f: 'B' },
    0x1D6AC: { c: 'E', f: 'B' },
    0x1D6AD: { c: 'Z', f: 'B' },
    0x1D6AE: { c: 'H', f: 'B' },
    0x1D6AF: { c: '\\398', f: 'B' },
    0x1D6B0: { c: 'I', f: 'B' },
    0x1D6B1: { c: 'K', f: 'B' },
    0x1D6B2: { c: '\\39B', f: 'B' },
    0x1D6B3: { c: 'M', f: 'B' },
    0x1D6B4: { c: 'N', f: 'B' },
    0x1D6B5: { c: '\\39E', f: 'B' },
    0x1D6B6: { c: 'O', f: 'B' },
    0x1D6B7: { c: '\\3A0', f: 'B' },
    0x1D6B8: { c: 'P', f: 'B' },
    0x1D6BA: { c: '\\3A3', f: 'B' },
    0x1D6BB: { c: 'T', f: 'B' },
    0x1D6BC: { c: '\\3A5', f: 'B' },
    0x1D6BD: { c: '\\3A6', f: 'B' },
    0x1D6BE: { c: 'X', f: 'B' },
    0x1D6BF: { c: '\\3A8', f: 'B' },
    0x1D6C0: { c: '\\3A9', f: 'B' },
    0x1D6C1: { c: '\\2207', f: 'B' },
    0x1D6E2: { c: 'A', f: 'I' },
    0x1D6E3: { c: 'B', f: 'I' },
    0x1D6E4: { c: '\\393', f: 'I' },
    0x1D6E5: { c: '\\394', f: 'I' },
    0x1D6E6: { c: 'E', f: 'I' },
    0x1D6E7: { c: 'Z', f: 'I' },
    0x1D6E8: { c: 'H', f: 'I' },
    0x1D6E9: { c: '\\398', f: 'I' },
    0x1D6EA: { c: 'I', f: 'I' },
    0x1D6EB: { c: 'K', f: 'I' },
    0x1D6EC: { c: '\\39B', f: 'I' },
    0x1D6ED: { c: 'M', f: 'I' },
    0x1D6EE: { c: 'N', f: 'I' },
    0x1D6EF: { c: '\\39E', f: 'I' },
    0x1D6F0: { c: 'O', f: 'I' },
    0x1D6F1: { c: '\\3A0', f: 'I' },
    0x1D6F2: { c: 'P', f: 'I' },
    0x1D6F4: { c: '\\3A3', f: 'I' },
    0x1D6F5: { c: 'T', f: 'I' },
    0x1D6F6: { c: '\\3A5', f: 'I' },
    0x1D6F7: { c: '\\3A6', f: 'I' },
    0x1D6F8: { c: 'X', f: 'I' },
    0x1D6F9: { c: '\\3A8', f: 'I' },
    0x1D6FA: { c: '\\3A9', f: 'I' },
    0x1D6FC: { c: '\\3B1', f: 'I' },
    0x1D6FD: { c: '\\3B2', f: 'I' },
    0x1D6FE: { c: '\\3B3', f: 'I' },
    0x1D6FF: { c: '\\3B4', f: 'I' },
    0x1D700: { c: '\\3B5', f: 'I' },
    0x1D701: { c: '\\3B6', f: 'I' },
    0x1D702: { c: '\\3B7', f: 'I' },
    0x1D703: { c: '\\3B8', f: 'I' },
    0x1D704: { c: '\\3B9', f: 'I' },
    0x1D705: { c: '\\3BA', f: 'I' },
    0x1D706: { c: '\\3BB', f: 'I' },
    0x1D707: { c: '\\3BC', f: 'I' },
    0x1D708: { c: '\\3BD', f: 'I' },
    0x1D709: { c: '\\3BE', f: 'I' },
    0x1D70A: { c: '\\3BF', f: 'I' },
    0x1D70B: { c: '\\3C0', f: 'I' },
    0x1D70C: { c: '\\3C1', f: 'I' },
    0x1D70D: { c: '\\3C2', f: 'I' },
    0x1D70E: { c: '\\3C3', f: 'I' },
    0x1D70F: { c: '\\3C4', f: 'I' },
    0x1D710: { c: '\\3C5', f: 'I' },
    0x1D711: { c: '\\3C6', f: 'I' },
    0x1D712: { c: '\\3C7', f: 'I' },
    0x1D713: { c: '\\3C8', f: 'I' },
    0x1D714: { c: '\\3C9', f: 'I' },
    0x1D715: { c: '\\2202' },
    0x1D716: { c: '\\3F5', f: 'I' },
    0x1D717: { c: '\\3D1', f: 'I' },
    0x1D718: { c: '\\E009', f: 'A' },
    0x1D719: { c: '\\3D5', f: 'I' },
    0x1D71A: { c: '\\3F1', f: 'I' },
    0x1D71B: { c: '\\3D6', f: 'I' },
    0x1D71C: { c: 'A', f: 'BI' },
    0x1D71D: { c: 'B', f: 'BI' },
    0x1D71E: { c: '\\393', f: 'BI' },
    0x1D71F: { c: '\\394', f: 'BI' },
    0x1D720: { c: 'E', f: 'BI' },
    0x1D721: { c: 'Z', f: 'BI' },
    0x1D722: { c: 'H', f: 'BI' },
    0x1D723: { c: '\\398', f: 'BI' },
    0x1D724: { c: 'I', f: 'BI' },
    0x1D725: { c: 'K', f: 'BI' },
    0x1D726: { c: '\\39B', f: 'BI' },
    0x1D727: { c: 'M', f: 'BI' },
    0x1D728: { c: 'N', f: 'BI' },
    0x1D729: { c: '\\39E', f: 'BI' },
    0x1D72A: { c: 'O', f: 'BI' },
    0x1D72B: { c: '\\3A0', f: 'BI' },
    0x1D72C: { c: 'P', f: 'BI' },
    0x1D72E: { c: '\\3A3', f: 'BI' },
    0x1D72F: { c: 'T', f: 'BI' },
    0x1D730: { c: '\\3A5', f: 'BI' },
    0x1D731: { c: '\\3A6', f: 'BI' },
    0x1D732: { c: 'X', f: 'BI' },
    0x1D733: { c: '\\3A8', f: 'BI' },
    0x1D734: { c: '\\3A9', f: 'BI' },
    0x1D736: { c: '\\3B1', f: 'BI' },
    0x1D737: { c: '\\3B2', f: 'BI' },
    0x1D738: { c: '\\3B3', f: 'BI' },
    0x1D739: { c: '\\3B4', f: 'BI' },
    0x1D73A: { c: '\\3B5', f: 'BI' },
    0x1D73B: { c: '\\3B6', f: 'BI' },
    0x1D73C: { c: '\\3B7', f: 'BI' },
    0x1D73D: { c: '\\3B8', f: 'BI' },
    0x1D73E: { c: '\\3B9', f: 'BI' },
    0x1D73F: { c: '\\3BA', f: 'BI' },
    0x1D740: { c: '\\3BB', f: 'BI' },
    0x1D741: { c: '\\3BC', f: 'BI' },
    0x1D742: { c: '\\3BD', f: 'BI' },
    0x1D743: { c: '\\3BE', f: 'BI' },
    0x1D744: { c: '\\3BF', f: 'BI' },
    0x1D745: { c: '\\3C0', f: 'BI' },
    0x1D746: { c: '\\3C1', f: 'BI' },
    0x1D747: { c: '\\3C2', f: 'BI' },
    0x1D748: { c: '\\3C3', f: 'BI' },
    0x1D749: { c: '\\3C4', f: 'BI' },
    0x1D74A: { c: '\\3C5', f: 'BI' },
    0x1D74B: { c: '\\3C6', f: 'BI' },
    0x1D74C: { c: '\\3C7', f: 'BI' },
    0x1D74D: { c: '\\3C8', f: 'BI' },
    0x1D74E: { c: '\\3C9', f: 'BI' },
    0x1D74F: { c: '\\2202', f: 'B' },
    0x1D750: { c: '\\3F5', f: 'BI' },
    0x1D751: { c: '\\3D1', f: 'BI' },
    0x1D752: { c: '\\E009', f: 'A' },
    0x1D753: { c: '\\3D5', f: 'BI' },
    0x1D754: { c: '\\3F1', f: 'BI' },
    0x1D755: { c: '\\3D6', f: 'BI' },
    0x1D756: { c: 'A', f: 'SSB' },
    0x1D757: { c: 'B', f: 'SSB' },
    0x1D758: { c: '\\393', f: 'SSB' },
    0x1D759: { c: '\\394', f: 'SSB' },
    0x1D75A: { c: 'E', f: 'SSB' },
    0x1D75B: { c: 'Z', f: 'SSB' },
    0x1D75C: { c: 'H', f: 'SSB' },
    0x1D75D: { c: '\\398', f: 'SSB' },
    0x1D75E: { c: 'I', f: 'SSB' },
    0x1D75F: { c: 'K', f: 'SSB' },
    0x1D760: { c: '\\39B', f: 'SSB' },
    0x1D761: { c: 'M', f: 'SSB' },
    0x1D762: { c: 'N', f: 'SSB' },
    0x1D763: { c: '\\39E', f: 'SSB' },
    0x1D764: { c: 'O', f: 'SSB' },
    0x1D765: { c: '\\3A0', f: 'SSB' },
    0x1D766: { c: 'P', f: 'SSB' },
    0x1D768: { c: '\\3A3', f: 'SSB' },
    0x1D769: { c: 'T', f: 'SSB' },
    0x1D76A: { c: '\\3A5', f: 'SSB' },
    0x1D76B: { c: '\\3A6', f: 'SSB' },
    0x1D76C: { c: 'X', f: 'SSB' },
    0x1D76D: { c: '\\3A8', f: 'SSB' },
    0x1D76E: { c: '\\3A9', f: 'SSB' },
    0x1D7CE: { c: '0', f: 'B' },
    0x1D7CF: { c: '1', f: 'B' },
    0x1D7D0: { c: '2', f: 'B' },
    0x1D7D1: { c: '3', f: 'B' },
    0x1D7D2: { c: '4', f: 'B' },
    0x1D7D3: { c: '5', f: 'B' },
    0x1D7D4: { c: '6', f: 'B' },
    0x1D7D5: { c: '7', f: 'B' },
    0x1D7D6: { c: '8', f: 'B' },
    0x1D7D7: { c: '9', f: 'B' },
    0x1D7E2: { c: '0', f: 'SS' },
    0x1D7E3: { c: '1', f: 'SS' },
    0x1D7E4: { c: '2', f: 'SS' },
    0x1D7E5: { c: '3', f: 'SS' },
    0x1D7E6: { c: '4', f: 'SS' },
    0x1D7E7: { c: '5', f: 'SS' },
    0x1D7E8: { c: '6', f: 'SS' },
    0x1D7E9: { c: '7', f: 'SS' },
    0x1D7EA: { c: '8', f: 'SS' },
    0x1D7EB: { c: '9', f: 'SS' },
    0x1D7EC: { c: '0', f: 'SSB' },
    0x1D7ED: { c: '1', f: 'SSB' },
    0x1D7EE: { c: '2', f: 'SSB' },
    0x1D7EF: { c: '3', f: 'SSB' },
    0x1D7F0: { c: '4', f: 'SSB' },
    0x1D7F1: { c: '5', f: 'SSB' },
    0x1D7F2: { c: '6', f: 'SSB' },
    0x1D7F3: { c: '7', f: 'SSB' },
    0x1D7F4: { c: '8', f: 'SSB' },
    0x1D7F5: { c: '9', f: 'SSB' },
    0x1D7F6: { c: '0', f: 'T' },
    0x1D7F7: { c: '1', f: 'T' },
    0x1D7F8: { c: '2', f: 'T' },
    0x1D7F9: { c: '3', f: 'T' },
    0x1D7FA: { c: '4', f: 'T' },
    0x1D7FB: { c: '5', f: 'T' },
    0x1D7FC: { c: '6', f: 'T' },
    0x1D7FD: { c: '7', f: 'T' },
    0x1D7FE: { c: '8', f: 'T' },
    0x1D7FF: { c: '9', f: 'T' },
});
//# sourceMappingURL=normal.js.map

/***/ }),

/***/ 7517:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sansSerifBoldItalic = void 0;
var FontData_js_1 = __webpack_require__(8042);
var sans_serif_bold_italic_js_1 = __webpack_require__(4886);
exports.sansSerifBoldItalic = (0, FontData_js_1.AddCSS)(sans_serif_bold_italic_js_1.sansSerifBoldItalic, {
    0x131: { f: 'SSB' },
    0x237: { f: 'SSB' },
});
//# sourceMappingURL=sans-serif-bold-italic.js.map

/***/ }),

/***/ 4182:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sansSerifBold = void 0;
var FontData_js_1 = __webpack_require__(8042);
var sans_serif_bold_js_1 = __webpack_require__(4471);
exports.sansSerifBold = (0, FontData_js_1.AddCSS)(sans_serif_bold_js_1.sansSerifBold, {
    0x2015: { c: '\\2014' },
    0x2017: { c: '_' },
    0x2044: { c: '/' },
    0x2206: { c: '\\394' },
});
//# sourceMappingURL=sans-serif-bold.js.map

/***/ }),

/***/ 2679:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sansSerifItalic = void 0;
var FontData_js_1 = __webpack_require__(8042);
var sans_serif_italic_js_1 = __webpack_require__(5181);
exports.sansSerifItalic = (0, FontData_js_1.AddCSS)(sans_serif_italic_js_1.sansSerifItalic, {
    0x391: { c: 'A' },
    0x392: { c: 'B' },
    0x395: { c: 'E' },
    0x396: { c: 'Z' },
    0x397: { c: 'H' },
    0x399: { c: 'I' },
    0x39A: { c: 'K' },
    0x39C: { c: 'M' },
    0x39D: { c: 'N' },
    0x39F: { c: 'O' },
    0x3A1: { c: 'P' },
    0x3A4: { c: 'T' },
    0x3A7: { c: 'X' },
    0x2015: { c: '\\2014' },
    0x2017: { c: '_' },
    0x2044: { c: '/' },
    0x2206: { c: '\\394' },
});
//# sourceMappingURL=sans-serif-italic.js.map

/***/ }),

/***/ 5469:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sansSerif = void 0;
var FontData_js_1 = __webpack_require__(8042);
var sans_serif_js_1 = __webpack_require__(3526);
exports.sansSerif = (0, FontData_js_1.AddCSS)(sans_serif_js_1.sansSerif, {
    0x391: { c: 'A' },
    0x392: { c: 'B' },
    0x395: { c: 'E' },
    0x396: { c: 'Z' },
    0x397: { c: 'H' },
    0x399: { c: 'I' },
    0x39A: { c: 'K' },
    0x39C: { c: 'M' },
    0x39D: { c: 'N' },
    0x39F: { c: 'O' },
    0x3A1: { c: 'P' },
    0x3A4: { c: 'T' },
    0x3A7: { c: 'X' },
    0x2015: { c: '\\2014' },
    0x2017: { c: '_' },
    0x2044: { c: '/' },
    0x2206: { c: '\\394' },
});
//# sourceMappingURL=sans-serif.js.map

/***/ }),

/***/ 7563:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scriptBold = void 0;
var script_bold_js_1 = __webpack_require__(5649);
Object.defineProperty(exports, "scriptBold", ({ enumerable: true, get: function () { return script_bold_js_1.scriptBold; } }));
//# sourceMappingURL=script-bold.js.map

/***/ }),

/***/ 9409:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.script = void 0;
var script_js_1 = __webpack_require__(7153);
Object.defineProperty(exports, "script", ({ enumerable: true, get: function () { return script_js_1.script; } }));
//# sourceMappingURL=script.js.map

/***/ }),

/***/ 775:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.smallop = void 0;
var FontData_js_1 = __webpack_require__(8042);
var smallop_js_1 = __webpack_require__(5745);
exports.smallop = (0, FontData_js_1.AddCSS)(smallop_js_1.smallop, {
    0x2044: { c: '/' },
    0x2329: { c: '\\27E8' },
    0x232A: { c: '\\27E9' },
    0x2758: { c: '\\2223' },
    0x2A0C: { c: '\\222C\\222C' },
    0x3008: { c: '\\27E8' },
    0x3009: { c: '\\27E9' },
});
//# sourceMappingURL=smallop.js.map

/***/ }),

/***/ 9551:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texCalligraphicBold = void 0;
var FontData_js_1 = __webpack_require__(8042);
var tex_calligraphic_bold_js_1 = __webpack_require__(1411);
exports.texCalligraphicBold = (0, FontData_js_1.AddCSS)(tex_calligraphic_bold_js_1.texCalligraphicBold, {
    0x131: { f: 'B' },
    0x237: { f: 'B' },
});
//# sourceMappingURL=tex-calligraphic-bold.js.map

/***/ }),

/***/ 7907:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texCalligraphic = void 0;
var tex_calligraphic_js_1 = __webpack_require__(6384);
Object.defineProperty(exports, "texCalligraphic", ({ enumerable: true, get: function () { return tex_calligraphic_js_1.texCalligraphic; } }));
//# sourceMappingURL=tex-calligraphic.js.map

/***/ }),

/***/ 9659:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texMathit = void 0;
var tex_mathit_js_1 = __webpack_require__(6041);
Object.defineProperty(exports, "texMathit", ({ enumerable: true, get: function () { return tex_mathit_js_1.texMathit; } }));
//# sourceMappingURL=tex-mathit.js.map

/***/ }),

/***/ 98:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texOldstyleBold = void 0;
var tex_oldstyle_bold_js_1 = __webpack_require__(8199);
Object.defineProperty(exports, "texOldstyleBold", ({ enumerable: true, get: function () { return tex_oldstyle_bold_js_1.texOldstyleBold; } }));
//# sourceMappingURL=tex-oldstyle-bold.js.map

/***/ }),

/***/ 6275:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texOldstyle = void 0;
var tex_oldstyle_js_1 = __webpack_require__(9848);
Object.defineProperty(exports, "texOldstyle", ({ enumerable: true, get: function () { return tex_oldstyle_js_1.texOldstyle; } }));
//# sourceMappingURL=tex-oldstyle.js.map

/***/ }),

/***/ 6530:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texSize3 = void 0;
var FontData_js_1 = __webpack_require__(8042);
var tex_size3_js_1 = __webpack_require__(7906);
exports.texSize3 = (0, FontData_js_1.AddCSS)(tex_size3_js_1.texSize3, {
    0x2044: { c: '/' },
    0x2329: { c: '\\27E8' },
    0x232A: { c: '\\27E9' },
    0x3008: { c: '\\27E8' },
    0x3009: { c: '\\27E9' },
});
//# sourceMappingURL=tex-size3.js.map

/***/ }),

/***/ 4409:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texSize4 = void 0;
var FontData_js_1 = __webpack_require__(8042);
var tex_size4_js_1 = __webpack_require__(2644);
exports.texSize4 = (0, FontData_js_1.AddCSS)(tex_size4_js_1.texSize4, {
    0x2044: { c: '/' },
    0x2329: { c: '\\27E8' },
    0x232A: { c: '\\27E9' },
    0x3008: { c: '\\27E8' },
    0x3009: { c: '\\27E9' },
    0xE155: { c: '\\E153\\E152' },
    0xE156: { c: '\\E151\\E150' },
});
//# sourceMappingURL=tex-size4.js.map

/***/ }),

/***/ 5292:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texVariant = void 0;
var FontData_js_1 = __webpack_require__(8042);
var tex_variant_js_1 = __webpack_require__(4926);
exports.texVariant = (0, FontData_js_1.AddCSS)(tex_variant_js_1.texVariant, {
    0x3F0: { c: '\\E009' },
    0x210F: { f: '' },
    0x2224: { c: '\\E006' },
    0x2226: { c: '\\E007' },
    0x2268: { c: '\\E00C' },
    0x2269: { c: '\\E00D' },
    0x2270: { c: '\\E011' },
    0x2271: { c: '\\E00E' },
    0x2288: { c: '\\E016' },
    0x2289: { c: '\\E018' },
    0x228A: { c: '\\E01A' },
    0x228B: { c: '\\E01B' },
    0x2A87: { c: '\\E010' },
    0x2A88: { c: '\\E00F' },
    0x2ACB: { c: '\\E017' },
    0x2ACC: { c: '\\E019' },
});
//# sourceMappingURL=tex-variant.js.map

/***/ }),

/***/ 5884:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FontData = exports.NOSTRETCH = exports.H = exports.V = void 0;
var Options_js_1 = __webpack_require__(7233);
exports.V = 1;
exports.H = 2;
exports.NOSTRETCH = { dir: 0 };
var FontData = (function () {
    function FontData(options) {
        var e_1, _a, e_2, _b;
        if (options === void 0) { options = null; }
        this.variant = {};
        this.delimiters = {};
        this.cssFontMap = {};
        this.remapChars = {};
        this.skewIcFactor = .75;
        var CLASS = this.constructor;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);
        this.params = __assign({}, CLASS.defaultParams);
        this.sizeVariants = __spreadArray([], __read(CLASS.defaultSizeVariants), false);
        this.stretchVariants = __spreadArray([], __read(CLASS.defaultStretchVariants), false);
        this.cssFontMap = __assign({}, CLASS.defaultCssFonts);
        try {
            for (var _c = __values(Object.keys(this.cssFontMap)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var name_1 = _d.value;
                if (this.cssFontMap[name_1][0] === 'unknown') {
                    this.cssFontMap[name_1][0] = this.options.unknownFamily;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.cssFamilyPrefix = CLASS.defaultCssFamilyPrefix;
        this.createVariants(CLASS.defaultVariants);
        this.defineDelimiters(CLASS.defaultDelimiters);
        try {
            for (var _e = __values(Object.keys(CLASS.defaultChars)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var name_2 = _f.value;
                this.defineChars(name_2, CLASS.defaultChars[name_2]);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
        this.defineRemap('accent', CLASS.defaultAccentMap);
        this.defineRemap('mo', CLASS.defaultMoMap);
        this.defineRemap('mn', CLASS.defaultMnMap);
    }
    FontData.charOptions = function (font, n) {
        var char = font[n];
        if (char.length === 3) {
            char[3] = {};
        }
        return char[3];
    };
    Object.defineProperty(FontData.prototype, "styles", {
        get: function () {
            return this._styles;
        },
        set: function (style) {
            this._styles = style;
        },
        enumerable: false,
        configurable: true
    });
    FontData.prototype.createVariant = function (name, inherit, link) {
        if (inherit === void 0) { inherit = null; }
        if (link === void 0) { link = null; }
        var variant = {
            linked: [],
            chars: (inherit ? Object.create(this.variant[inherit].chars) : {})
        };
        if (link && this.variant[link]) {
            Object.assign(variant.chars, this.variant[link].chars);
            this.variant[link].linked.push(variant.chars);
            variant.chars = Object.create(variant.chars);
        }
        this.remapSmpChars(variant.chars, name);
        this.variant[name] = variant;
    };
    FontData.prototype.remapSmpChars = function (chars, name) {
        var e_3, _a, e_4, _b;
        var CLASS = this.constructor;
        if (CLASS.VariantSmp[name]) {
            var SmpRemap = CLASS.SmpRemap;
            var SmpGreek = [null, null, CLASS.SmpRemapGreekU, CLASS.SmpRemapGreekL];
            try {
                for (var _c = __values(CLASS.SmpRanges), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var _e = __read(_d.value, 3), i = _e[0], lo = _e[1], hi = _e[2];
                    var base = CLASS.VariantSmp[name][i];
                    if (!base)
                        continue;
                    for (var n = lo; n <= hi; n++) {
                        if (n === 0x3A2)
                            continue;
                        var smp = base + n - lo;
                        chars[n] = this.smpChar(SmpRemap[smp] || smp);
                    }
                    if (SmpGreek[i]) {
                        try {
                            for (var _f = (e_4 = void 0, __values(Object.keys(SmpGreek[i]).map(function (x) { return parseInt(x); }))), _g = _f.next(); !_g.done; _g = _f.next()) {
                                var n = _g.value;
                                chars[n] = this.smpChar(base + SmpGreek[i][n]);
                            }
                        }
                        catch (e_4_1) { e_4 = { error: e_4_1 }; }
                        finally {
                            try {
                                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                            }
                            finally { if (e_4) throw e_4.error; }
                        }
                    }
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (name === 'bold') {
            chars[0x3DC] = this.smpChar(0x1D7CA);
            chars[0x3DD] = this.smpChar(0x1D7CB);
        }
    };
    FontData.prototype.smpChar = function (n) {
        return [, , , { smp: n }];
    };
    FontData.prototype.createVariants = function (variants) {
        var e_5, _a;
        try {
            for (var variants_1 = __values(variants), variants_1_1 = variants_1.next(); !variants_1_1.done; variants_1_1 = variants_1.next()) {
                var variant = variants_1_1.value;
                this.createVariant(variant[0], variant[1], variant[2]);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (variants_1_1 && !variants_1_1.done && (_a = variants_1.return)) _a.call(variants_1);
            }
            finally { if (e_5) throw e_5.error; }
        }
    };
    FontData.prototype.defineChars = function (name, chars) {
        var e_6, _a;
        var variant = this.variant[name];
        Object.assign(variant.chars, chars);
        try {
            for (var _b = __values(variant.linked), _c = _b.next(); !_c.done; _c = _b.next()) {
                var link = _c.value;
                Object.assign(link, chars);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_6) throw e_6.error; }
        }
    };
    FontData.prototype.defineDelimiters = function (delims) {
        Object.assign(this.delimiters, delims);
    };
    FontData.prototype.defineRemap = function (name, remap) {
        if (!this.remapChars.hasOwnProperty(name)) {
            this.remapChars[name] = {};
        }
        Object.assign(this.remapChars[name], remap);
    };
    FontData.prototype.getDelimiter = function (n) {
        return this.delimiters[n];
    };
    FontData.prototype.getSizeVariant = function (n, i) {
        if (this.delimiters[n].variants) {
            i = this.delimiters[n].variants[i];
        }
        return this.sizeVariants[i];
    };
    FontData.prototype.getStretchVariant = function (n, i) {
        return this.stretchVariants[this.delimiters[n].stretchv ? this.delimiters[n].stretchv[i] : 0];
    };
    FontData.prototype.getChar = function (name, n) {
        return this.variant[name].chars[n];
    };
    FontData.prototype.getVariant = function (name) {
        return this.variant[name];
    };
    FontData.prototype.getCssFont = function (variant) {
        return this.cssFontMap[variant] || ['serif', false, false];
    };
    FontData.prototype.getFamily = function (family) {
        return (this.cssFamilyPrefix ? this.cssFamilyPrefix + ', ' + family : family);
    };
    FontData.prototype.getRemappedChar = function (name, c) {
        var map = this.remapChars[name] || {};
        return map[c];
    };
    FontData.OPTIONS = {
        unknownFamily: 'serif'
    };
    FontData.JAX = 'common';
    FontData.NAME = '';
    FontData.defaultVariants = [
        ['normal'],
        ['bold', 'normal'],
        ['italic', 'normal'],
        ['bold-italic', 'italic', 'bold'],
        ['double-struck', 'bold'],
        ['fraktur', 'normal'],
        ['bold-fraktur', 'bold', 'fraktur'],
        ['script', 'italic'],
        ['bold-script', 'bold-italic', 'script'],
        ['sans-serif', 'normal'],
        ['bold-sans-serif', 'bold', 'sans-serif'],
        ['sans-serif-italic', 'italic', 'sans-serif'],
        ['sans-serif-bold-italic', 'bold-italic', 'bold-sans-serif'],
        ['monospace', 'normal']
    ];
    FontData.defaultCssFonts = {
        normal: ['unknown', false, false],
        bold: ['unknown', false, true],
        italic: ['unknown', true, false],
        'bold-italic': ['unknown', true, true],
        'double-struck': ['unknown', false, true],
        fraktur: ['unknown', false, false],
        'bold-fraktur': ['unknown', false, true],
        script: ['cursive', false, false],
        'bold-script': ['cursive', false, true],
        'sans-serif': ['sans-serif', false, false],
        'bold-sans-serif': ['sans-serif', false, true],
        'sans-serif-italic': ['sans-serif', true, false],
        'sans-serif-bold-italic': ['sans-serif', true, true],
        monospace: ['monospace', false, false]
    };
    FontData.defaultCssFamilyPrefix = '';
    FontData.VariantSmp = {
        bold: [0x1D400, 0x1D41A, 0x1D6A8, 0x1D6C2, 0x1D7CE],
        italic: [0x1D434, 0x1D44E, 0x1D6E2, 0x1D6FC],
        'bold-italic': [0x1D468, 0x1D482, 0x1D71C, 0x1D736],
        script: [0x1D49C, 0x1D4B6],
        'bold-script': [0x1D4D0, 0x1D4EA],
        fraktur: [0x1D504, 0x1D51E],
        'double-struck': [0x1D538, 0x1D552, , , 0x1D7D8],
        'bold-fraktur': [0x1D56C, 0x1D586],
        'sans-serif': [0x1D5A0, 0x1D5BA, , , 0x1D7E2],
        'bold-sans-serif': [0x1D5D4, 0x1D5EE, 0x1D756, 0x1D770, 0x1D7EC],
        'sans-serif-italic': [0x1D608, 0x1D622],
        'sans-serif-bold-italic': [0x1D63C, 0x1D656, 0x1D790, 0x1D7AA],
        'monospace': [0x1D670, 0x1D68A, , , 0x1D7F6]
    };
    FontData.SmpRanges = [
        [0, 0x41, 0x5A],
        [1, 0x61, 0x7A],
        [2, 0x391, 0x3A9],
        [3, 0x3B1, 0x3C9],
        [4, 0x30, 0x39]
    ];
    FontData.SmpRemap = {
        0x1D455: 0x210E,
        0x1D49D: 0x212C,
        0x1D4A0: 0x2130,
        0x1D4A1: 0x2131,
        0x1D4A3: 0x210B,
        0x1D4A4: 0x2110,
        0x1D4A7: 0x2112,
        0x1D4A8: 0x2133,
        0x1D4AD: 0x211B,
        0x1D4BA: 0x212F,
        0x1D4BC: 0x210A,
        0x1D4C4: 0x2134,
        0x1D506: 0x212D,
        0x1D50B: 0x210C,
        0x1D50C: 0x2111,
        0x1D515: 0x211C,
        0x1D51D: 0x2128,
        0x1D53A: 0x2102,
        0x1D53F: 0x210D,
        0x1D545: 0x2115,
        0x1D547: 0x2119,
        0x1D548: 0x211A,
        0x1D549: 0x211D,
        0x1D551: 0x2124,
    };
    FontData.SmpRemapGreekU = {
        0x2207: 0x19,
        0x03F4: 0x11
    };
    FontData.SmpRemapGreekL = {
        0x3D1: 0x1B,
        0x3D5: 0x1D,
        0x3D6: 0x1F,
        0x3F0: 0x1C,
        0x3F1: 0x1E,
        0x3F5: 0x1A,
        0x2202: 0x19
    };
    FontData.defaultAccentMap = {
        0x0300: '\u02CB',
        0x0301: '\u02CA',
        0x0302: '\u02C6',
        0x0303: '\u02DC',
        0x0304: '\u02C9',
        0x0306: '\u02D8',
        0x0307: '\u02D9',
        0x0308: '\u00A8',
        0x030A: '\u02DA',
        0x030C: '\u02C7',
        0x2192: '\u20D7',
        0x2032: '\'',
        0x2033: '\'\'',
        0x2034: '\'\'\'',
        0x2035: '`',
        0x2036: '``',
        0x2037: '```',
        0x2057: '\'\'\'\'',
        0x20D0: '\u21BC',
        0x20D1: '\u21C0',
        0x20D6: '\u2190',
        0x20E1: '\u2194',
        0x20F0: '*',
        0x20DB: '...',
        0x20DC: '....',
        0x20EC: '\u21C1',
        0x20ED: '\u21BD',
        0x20EE: '\u2190',
        0x20EF: '\u2192'
    };
    FontData.defaultMoMap = {
        0x002D: '\u2212'
    };
    FontData.defaultMnMap = {
        0x002D: '\u2212'
    };
    FontData.defaultParams = {
        x_height: .442,
        quad: 1,
        num1: .676,
        num2: .394,
        num3: .444,
        denom1: .686,
        denom2: .345,
        sup1: .413,
        sup2: .363,
        sup3: .289,
        sub1: .15,
        sub2: .247,
        sup_drop: .386,
        sub_drop: .05,
        delim1: 2.39,
        delim2: 1.0,
        axis_height: .25,
        rule_thickness: .06,
        big_op_spacing1: .111,
        big_op_spacing2: .167,
        big_op_spacing3: .2,
        big_op_spacing4: .6,
        big_op_spacing5: .1,
        surd_height: .075,
        scriptspace: .05,
        nulldelimiterspace: .12,
        delimiterfactor: 901,
        delimitershortfall: .3,
        min_rule_thickness: 1.25,
        separation_factor: 1.75,
        extra_ic: .033
    };
    FontData.defaultDelimiters = {};
    FontData.defaultChars = {};
    FontData.defaultSizeVariants = [];
    FontData.defaultStretchVariants = [];
    return FontData;
}());
exports.FontData = FontData;
//# sourceMappingURL=FontData.js.map

/***/ }),

/***/ 5552:
/***/ (function(__unused_webpack_module, exports) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonArrow = exports.CommonDiagonalArrow = exports.CommonDiagonalStrike = exports.CommonBorder2 = exports.CommonBorder = exports.arrowBBox = exports.diagonalArrowDef = exports.arrowDef = exports.arrowBBoxW = exports.arrowBBoxHD = exports.arrowHead = exports.fullBorder = exports.fullPadding = exports.fullBBox = exports.sideNames = exports.sideIndex = exports.SOLID = exports.PADDING = exports.THICKNESS = exports.ARROWY = exports.ARROWDX = exports.ARROWX = void 0;
exports.ARROWX = 4, exports.ARROWDX = 1, exports.ARROWY = 2;
exports.THICKNESS = .067;
exports.PADDING = .2;
exports.SOLID = exports.THICKNESS + 'em solid';
exports.sideIndex = { top: 0, right: 1, bottom: 2, left: 3 };
exports.sideNames = Object.keys(exports.sideIndex);
exports.fullBBox = (function (node) { return new Array(4).fill(node.thickness + node.padding); });
exports.fullPadding = (function (node) { return new Array(4).fill(node.padding); });
exports.fullBorder = (function (node) { return new Array(4).fill(node.thickness); });
var arrowHead = function (node) {
    return Math.max(node.padding, node.thickness * (node.arrowhead.x + node.arrowhead.dx + 1));
};
exports.arrowHead = arrowHead;
var arrowBBoxHD = function (node, TRBL) {
    if (node.childNodes[0]) {
        var _a = node.childNodes[0].getBBox(), h = _a.h, d = _a.d;
        TRBL[0] = TRBL[2] = Math.max(0, node.thickness * node.arrowhead.y - (h + d) / 2);
    }
    return TRBL;
};
exports.arrowBBoxHD = arrowBBoxHD;
var arrowBBoxW = function (node, TRBL) {
    if (node.childNodes[0]) {
        var w = node.childNodes[0].getBBox().w;
        TRBL[1] = TRBL[3] = Math.max(0, node.thickness * node.arrowhead.y - w / 2);
    }
    return TRBL;
};
exports.arrowBBoxW = arrowBBoxW;
exports.arrowDef = {
    up: [-Math.PI / 2, false, true, 'verticalstrike'],
    down: [Math.PI / 2, false, true, 'verticakstrike'],
    right: [0, false, false, 'horizontalstrike'],
    left: [Math.PI, false, false, 'horizontalstrike'],
    updown: [Math.PI / 2, true, true, 'verticalstrike uparrow downarrow'],
    leftright: [0, true, false, 'horizontalstrike leftarrow rightarrow']
};
exports.diagonalArrowDef = {
    updiagonal: [-1, 0, false, 'updiagonalstrike northeastarrow'],
    northeast: [-1, 0, false, 'updiagonalstrike updiagonalarrow'],
    southeast: [1, 0, false, 'downdiagonalstrike'],
    northwest: [1, Math.PI, false, 'downdiagonalstrike'],
    southwest: [-1, Math.PI, false, 'updiagonalstrike'],
    northeastsouthwest: [-1, 0, true, 'updiagonalstrike northeastarrow updiagonalarrow southwestarrow'],
    northwestsoutheast: [1, 0, true, 'downdiagonalstrike northwestarrow southeastarrow']
};
exports.arrowBBox = {
    up: function (node) { return (0, exports.arrowBBoxW)(node, [(0, exports.arrowHead)(node), 0, node.padding, 0]); },
    down: function (node) { return (0, exports.arrowBBoxW)(node, [node.padding, 0, (0, exports.arrowHead)(node), 0]); },
    right: function (node) { return (0, exports.arrowBBoxHD)(node, [0, (0, exports.arrowHead)(node), 0, node.padding]); },
    left: function (node) { return (0, exports.arrowBBoxHD)(node, [0, node.padding, 0, (0, exports.arrowHead)(node)]); },
    updown: function (node) { return (0, exports.arrowBBoxW)(node, [(0, exports.arrowHead)(node), 0, (0, exports.arrowHead)(node), 0]); },
    leftright: function (node) { return (0, exports.arrowBBoxHD)(node, [0, (0, exports.arrowHead)(node), 0, (0, exports.arrowHead)(node)]); }
};
var CommonBorder = function (render) {
    return function (side) {
        var i = exports.sideIndex[side];
        return [side, {
                renderer: render,
                bbox: function (node) {
                    var bbox = [0, 0, 0, 0];
                    bbox[i] = node.thickness + node.padding;
                    return bbox;
                },
                border: function (node) {
                    var bbox = [0, 0, 0, 0];
                    bbox[i] = node.thickness;
                    return bbox;
                }
            }];
    };
};
exports.CommonBorder = CommonBorder;
var CommonBorder2 = function (render) {
    return function (name, side1, side2) {
        var i1 = exports.sideIndex[side1];
        var i2 = exports.sideIndex[side2];
        return [name, {
                renderer: render,
                bbox: function (node) {
                    var t = node.thickness + node.padding;
                    var bbox = [0, 0, 0, 0];
                    bbox[i1] = bbox[i2] = t;
                    return bbox;
                },
                border: function (node) {
                    var bbox = [0, 0, 0, 0];
                    bbox[i1] = bbox[i2] = node.thickness;
                    return bbox;
                },
                remove: side1 + ' ' + side2
            }];
    };
};
exports.CommonBorder2 = CommonBorder2;
var CommonDiagonalStrike = function (render) {
    return function (name) {
        var cname = 'mjx-' + name.charAt(0) + 'strike';
        return [name + 'diagonalstrike', {
                renderer: render(cname),
                bbox: exports.fullBBox
            }];
    };
};
exports.CommonDiagonalStrike = CommonDiagonalStrike;
var CommonDiagonalArrow = function (render) {
    return function (name) {
        var _a = __read(exports.diagonalArrowDef[name], 4), c = _a[0], pi = _a[1], double = _a[2], remove = _a[3];
        return [name + 'arrow', {
                renderer: function (node, _child) {
                    var _a = __read(node.arrowAW(), 2), a = _a[0], W = _a[1];
                    var arrow = node.arrow(W, c * (a - pi), double);
                    render(node, arrow);
                },
                bbox: function (node) {
                    var _a = node.arrowData(), a = _a.a, x = _a.x, y = _a.y;
                    var _b = __read([node.arrowhead.x, node.arrowhead.y, node.arrowhead.dx], 3), ax = _b[0], ay = _b[1], adx = _b[2];
                    var _c = __read(node.getArgMod(ax + adx, ay), 2), b = _c[0], ar = _c[1];
                    var dy = y + (b > a ? node.thickness * ar * Math.sin(b - a) : 0);
                    var dx = x + (b > Math.PI / 2 - a ? node.thickness * ar * Math.sin(b + a - Math.PI / 2) : 0);
                    return [dy, dx, dy, dx];
                },
                remove: remove
            }];
    };
};
exports.CommonDiagonalArrow = CommonDiagonalArrow;
var CommonArrow = function (render) {
    return function (name) {
        var _a = __read(exports.arrowDef[name], 4), angle = _a[0], double = _a[1], isVertical = _a[2], remove = _a[3];
        return [name + 'arrow', {
                renderer: function (node, _child) {
                    var _a = node.getBBox(), w = _a.w, h = _a.h, d = _a.d;
                    var _b = __read((isVertical ? [h + d, 'X'] : [w, 'Y']), 2), W = _b[0], offset = _b[1];
                    var dd = node.getOffset(offset);
                    var arrow = node.arrow(W, angle, double, offset, dd);
                    render(node, arrow);
                },
                bbox: exports.arrowBBox[name],
                remove: remove
            }];
    };
};
exports.CommonArrow = CommonArrow;
//# sourceMappingURL=Notation.js.map

/***/ }),

/***/ 3055:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonOutputJax = void 0;
var OutputJax_js_1 = __webpack_require__(2975);
var MathItem_js_1 = __webpack_require__(4474);
var Options_js_1 = __webpack_require__(7233);
var lengths_js_1 = __webpack_require__(6010);
var Styles_js_1 = __webpack_require__(8054);
var StyleList_js_1 = __webpack_require__(4139);
var CommonOutputJax = (function (_super) {
    __extends(CommonOutputJax, _super);
    function CommonOutputJax(options, defaultFactory, defaultFont) {
        if (options === void 0) { options = null; }
        if (defaultFactory === void 0) { defaultFactory = null; }
        if (defaultFont === void 0) { defaultFont = null; }
        var _this = this;
        var _a = __read((0, Options_js_1.separateOptions)(options, defaultFont.OPTIONS), 2), jaxOptions = _a[0], fontOptions = _a[1];
        _this = _super.call(this, jaxOptions) || this;
        _this.factory = _this.options.wrapperFactory ||
            new defaultFactory();
        _this.factory.jax = _this;
        _this.cssStyles = _this.options.cssStyles || new StyleList_js_1.CssStyles();
        _this.font = _this.options.font || new defaultFont(fontOptions);
        _this.unknownCache = new Map();
        return _this;
    }
    CommonOutputJax.prototype.typeset = function (math, html) {
        this.setDocument(html);
        var node = this.createNode();
        this.toDOM(math, node, html);
        return node;
    };
    CommonOutputJax.prototype.createNode = function () {
        var jax = this.constructor.NAME;
        return this.html('mjx-container', { 'class': 'MathJax', jax: jax });
    };
    CommonOutputJax.prototype.setScale = function (node) {
        var scale = this.math.metrics.scale * this.options.scale;
        if (scale !== 1) {
            this.adaptor.setStyle(node, 'fontSize', (0, lengths_js_1.percent)(scale));
        }
    };
    CommonOutputJax.prototype.toDOM = function (math, node, html) {
        if (html === void 0) { html = null; }
        this.setDocument(html);
        this.math = math;
        this.pxPerEm = math.metrics.ex / this.font.params.x_height;
        math.root.setTeXclass(null);
        this.setScale(node);
        this.nodeMap = new Map();
        this.container = node;
        this.processMath(math.root, node);
        this.nodeMap = null;
        this.executeFilters(this.postFilters, math, html, node);
    };
    CommonOutputJax.prototype.getBBox = function (math, html) {
        this.setDocument(html);
        this.math = math;
        math.root.setTeXclass(null);
        this.nodeMap = new Map();
        var bbox = this.factory.wrap(math.root).getOuterBBox();
        this.nodeMap = null;
        return bbox;
    };
    CommonOutputJax.prototype.getMetrics = function (html) {
        var e_1, _a;
        this.setDocument(html);
        var adaptor = this.adaptor;
        var maps = this.getMetricMaps(html);
        try {
            for (var _b = __values(html.math), _c = _b.next(); !_c.done; _c = _b.next()) {
                var math = _c.value;
                var parent_1 = adaptor.parent(math.start.node);
                if (math.state() < MathItem_js_1.STATE.METRICS && parent_1) {
                    var map = maps[math.display ? 1 : 0];
                    var _d = map.get(parent_1), em = _d.em, ex = _d.ex, containerWidth = _d.containerWidth, lineWidth = _d.lineWidth, scale = _d.scale, family = _d.family;
                    math.setMetrics(em, ex, containerWidth, lineWidth, scale);
                    if (this.options.mtextInheritFont) {
                        math.outputData.mtextFamily = family;
                    }
                    if (this.options.merrorInheritFont) {
                        math.outputData.merrorFamily = family;
                    }
                    math.state(MathItem_js_1.STATE.METRICS);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    CommonOutputJax.prototype.getMetricsFor = function (node, display) {
        var getFamily = (this.options.mtextInheritFont || this.options.merrorInheritFont);
        var test = this.getTestElement(node, display);
        var metrics = this.measureMetrics(test, getFamily);
        this.adaptor.remove(test);
        return metrics;
    };
    CommonOutputJax.prototype.getMetricMaps = function (html) {
        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e;
        var adaptor = this.adaptor;
        var domMaps = [new Map(), new Map()];
        try {
            for (var _f = __values(html.math), _g = _f.next(); !_g.done; _g = _f.next()) {
                var math = _g.value;
                var node = adaptor.parent(math.start.node);
                if (node && math.state() < MathItem_js_1.STATE.METRICS) {
                    var map = domMaps[math.display ? 1 : 0];
                    if (!map.has(node)) {
                        map.set(node, this.getTestElement(node, math.display));
                    }
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
            }
            finally { if (e_2) throw e_2.error; }
        }
        var getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;
        var maps = [new Map(), new Map()];
        try {
            for (var _h = __values(maps.keys()), _j = _h.next(); !_j.done; _j = _h.next()) {
                var i = _j.value;
                try {
                    for (var _k = (e_4 = void 0, __values(domMaps[i].keys())), _l = _k.next(); !_l.done; _l = _k.next()) {
                        var node = _l.value;
                        maps[i].set(node, this.measureMetrics(domMaps[i].get(node), getFamily));
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            for (var _m = __values(maps.keys()), _o = _m.next(); !_o.done; _o = _m.next()) {
                var i = _o.value;
                try {
                    for (var _p = (e_6 = void 0, __values(domMaps[i].values())), _q = _p.next(); !_q.done; _q = _p.next()) {
                        var node = _q.value;
                        adaptor.remove(node);
                    }
                }
                catch (e_6_1) { e_6 = { error: e_6_1 }; }
                finally {
                    try {
                        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);
                    }
                    finally { if (e_6) throw e_6.error; }
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
            }
            finally { if (e_5) throw e_5.error; }
        }
        return maps;
    };
    CommonOutputJax.prototype.getTestElement = function (node, display) {
        var adaptor = this.adaptor;
        if (!this.testInline) {
            this.testInline = this.html('mjx-test', { style: {
                    display: 'inline-block',
                    width: '100%',
                    'font-style': 'normal',
                    'font-weight': 'normal',
                    'font-size': '100%',
                    'font-size-adjust': 'none',
                    'text-indent': 0,
                    'text-transform': 'none',
                    'letter-spacing': 'normal',
                    'word-spacing': 'normal',
                    overflow: 'hidden',
                    height: '1px',
                    'margin-right': '-1px'
                } }, [
                this.html('mjx-left-box', { style: {
                        display: 'inline-block',
                        width: 0,
                        'float': 'left'
                    } }),
                this.html('mjx-ex-box', { style: {
                        position: 'absolute',
                        overflow: 'hidden',
                        width: '1px', height: '60ex'
                    } }),
                this.html('mjx-right-box', { style: {
                        display: 'inline-block',
                        width: 0,
                        'float': 'right'
                    } })
            ]);
            this.testDisplay = adaptor.clone(this.testInline);
            adaptor.setStyle(this.testDisplay, 'display', 'table');
            adaptor.setStyle(this.testDisplay, 'margin-right', '');
            adaptor.setStyle(adaptor.firstChild(this.testDisplay), 'display', 'none');
            var right = adaptor.lastChild(this.testDisplay);
            adaptor.setStyle(right, 'display', 'table-cell');
            adaptor.setStyle(right, 'width', '10000em');
            adaptor.setStyle(right, 'float', '');
        }
        return adaptor.append(node, adaptor.clone(display ? this.testDisplay : this.testInline));
    };
    CommonOutputJax.prototype.measureMetrics = function (node, getFamily) {
        var adaptor = this.adaptor;
        var family = (getFamily ? adaptor.fontFamily(node) : '');
        var em = adaptor.fontSize(node);
        var _a = __read(adaptor.nodeSize(adaptor.childNode(node, 1)), 2), w = _a[0], h = _a[1];
        var ex = (w ? h / 60 : em * this.options.exFactor);
        var containerWidth = (!w ? 1000000 : adaptor.getStyle(node, 'display') === 'table' ?
            adaptor.nodeSize(adaptor.lastChild(node))[0] - 1 :
            adaptor.nodeBBox(adaptor.lastChild(node)).left -
                adaptor.nodeBBox(adaptor.firstChild(node)).left - 2);
        var scale = Math.max(this.options.minScale, this.options.matchFontHeight ? ex / this.font.params.x_height / em : 1);
        var lineWidth = 1000000;
        return { em: em, ex: ex, containerWidth: containerWidth, lineWidth: lineWidth, scale: scale, family: family };
    };
    CommonOutputJax.prototype.styleSheet = function (html) {
        var e_7, _a;
        this.setDocument(html);
        this.cssStyles.clear();
        this.cssStyles.addStyles(this.constructor.commonStyles);
        if ('getStyles' in html) {
            try {
                for (var _b = __values(html.getStyles()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var styles = _c.value;
                    this.cssStyles.addStyles(styles);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        this.addWrapperStyles(this.cssStyles);
        this.addFontStyles(this.cssStyles);
        var sheet = this.html('style', { id: 'MJX-styles' }, [this.text('\n' + this.cssStyles.cssText + '\n')]);
        return sheet;
    };
    CommonOutputJax.prototype.addFontStyles = function (styles) {
        styles.addStyles(this.font.styles);
    };
    CommonOutputJax.prototype.addWrapperStyles = function (styles) {
        var e_8, _a;
        try {
            for (var _b = __values(this.factory.getKinds()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var kind = _c.value;
                this.addClassStyles(this.factory.getNodeClass(kind), styles);
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_8) throw e_8.error; }
        }
    };
    CommonOutputJax.prototype.addClassStyles = function (CLASS, styles) {
        styles.addStyles(CLASS.styles);
    };
    CommonOutputJax.prototype.setDocument = function (html) {
        if (html) {
            this.document = html;
            this.adaptor.document = html.document;
        }
    };
    CommonOutputJax.prototype.html = function (type, def, content, ns) {
        if (def === void 0) { def = {}; }
        if (content === void 0) { content = []; }
        return this.adaptor.node(type, def, content, ns);
    };
    CommonOutputJax.prototype.text = function (text) {
        return this.adaptor.text(text);
    };
    CommonOutputJax.prototype.fixed = function (m, n) {
        if (n === void 0) { n = 3; }
        if (Math.abs(m) < .0006) {
            return '0';
        }
        return m.toFixed(n).replace(/\.?0+$/, '');
    };
    CommonOutputJax.prototype.measureText = function (text, variant, font) {
        if (font === void 0) { font = ['', false, false]; }
        var node = this.unknownText(text, variant);
        if (variant === '-explicitFont') {
            var styles = this.cssFontStyles(font);
            this.adaptor.setAttributes(node, { style: styles });
        }
        return this.measureTextNodeWithCache(node, text, variant, font);
    };
    CommonOutputJax.prototype.measureTextNodeWithCache = function (text, chars, variant, font) {
        if (font === void 0) { font = ['', false, false]; }
        if (variant === '-explicitFont') {
            variant = [font[0], font[1] ? 'T' : 'F', font[2] ? 'T' : 'F', ''].join('-');
        }
        if (!this.unknownCache.has(variant)) {
            this.unknownCache.set(variant, new Map());
        }
        var map = this.unknownCache.get(variant);
        var cached = map.get(chars);
        if (cached)
            return cached;
        var bbox = this.measureTextNode(text);
        map.set(chars, bbox);
        return bbox;
    };
    CommonOutputJax.prototype.measureXMLnode = function (xml) {
        var adaptor = this.adaptor;
        var content = this.html('mjx-xml-block', { style: { display: 'inline-block' } }, [adaptor.clone(xml)]);
        var base = this.html('mjx-baseline', { style: { display: 'inline-block', width: 0, height: 0 } });
        var style = {
            position: 'absolute',
            display: 'inline-block',
            'font-family': 'initial',
            'line-height': 'normal'
        };
        var node = this.html('mjx-measure-xml', { style: style }, [base, content]);
        adaptor.append(adaptor.parent(this.math.start.node), this.container);
        adaptor.append(this.container, node);
        var em = this.math.metrics.em * this.math.metrics.scale;
        var _a = adaptor.nodeBBox(content), left = _a.left, right = _a.right, bottom = _a.bottom, top = _a.top;
        var w = (right - left) / em;
        var h = (adaptor.nodeBBox(base).top - top) / em;
        var d = (bottom - top) / em - h;
        adaptor.remove(this.container);
        adaptor.remove(node);
        return { w: w, h: h, d: d };
    };
    CommonOutputJax.prototype.cssFontStyles = function (font, styles) {
        if (styles === void 0) { styles = {}; }
        var _a = __read(font, 3), family = _a[0], italic = _a[1], bold = _a[2];
        styles['font-family'] = this.font.getFamily(family);
        if (italic)
            styles['font-style'] = 'italic';
        if (bold)
            styles['font-weight'] = 'bold';
        return styles;
    };
    CommonOutputJax.prototype.getFontData = function (styles) {
        if (!styles) {
            styles = new Styles_js_1.Styles();
        }
        return [this.font.getFamily(styles.get('font-family')),
            styles.get('font-style') === 'italic',
            styles.get('font-weight') === 'bold'];
    };
    CommonOutputJax.NAME = 'Common';
    CommonOutputJax.OPTIONS = __assign(__assign({}, OutputJax_js_1.AbstractOutputJax.OPTIONS), { scale: 1, minScale: .5, mtextInheritFont: false, merrorInheritFont: false, mtextFont: '', merrorFont: 'serif', mathmlSpacing: false, skipAttributes: {}, exFactor: .5, displayAlign: 'center', displayIndent: '0', wrapperFactory: null, font: null, cssStyles: null });
    CommonOutputJax.commonStyles = {};
    return CommonOutputJax;
}(OutputJax_js_1.AbstractOutputJax));
exports.CommonOutputJax = CommonOutputJax;
//# sourceMappingURL=OutputJax.js.map

/***/ }),

/***/ 7519:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonWrapper = void 0;
var Wrapper_js_1 = __webpack_require__(8912);
var MmlNode_js_1 = __webpack_require__(9007);
var string_js_1 = __webpack_require__(505);
var LENGTHS = __importStar(__webpack_require__(6010));
var Styles_js_1 = __webpack_require__(8054);
var BBox_js_1 = __webpack_require__(6469);
var FontData_js_1 = __webpack_require__(5884);
var SMALLSIZE = 2 / 18;
function MathMLSpace(script, size) {
    return (script ? size < SMALLSIZE ? 0 : SMALLSIZE : size);
}
var CommonWrapper = (function (_super) {
    __extends(CommonWrapper, _super);
    function CommonWrapper(factory, node, parent) {
        if (parent === void 0) { parent = null; }
        var _this = _super.call(this, factory, node) || this;
        _this.parent = null;
        _this.removedStyles = null;
        _this.styles = null;
        _this.variant = '';
        _this.bboxComputed = false;
        _this.stretch = FontData_js_1.NOSTRETCH;
        _this.font = null;
        _this.parent = parent;
        _this.font = factory.jax.font;
        _this.bbox = BBox_js_1.BBox.zero();
        _this.getStyles();
        _this.getVariant();
        _this.getScale();
        _this.getSpace();
        _this.childNodes = node.childNodes.map(function (child) {
            var wrapped = _this.wrap(child);
            if (wrapped.bbox.pwidth && (node.notParent || node.isKind('math'))) {
                _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
            }
            return wrapped;
        });
        return _this;
    }
    Object.defineProperty(CommonWrapper.prototype, "jax", {
        get: function () {
            return this.factory.jax;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommonWrapper.prototype, "adaptor", {
        get: function () {
            return this.factory.jax.adaptor;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommonWrapper.prototype, "metrics", {
        get: function () {
            return this.factory.jax.math.metrics;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommonWrapper.prototype, "fixesPWidth", {
        get: function () {
            return !this.node.notParent && !this.node.isToken;
        },
        enumerable: false,
        configurable: true
    });
    CommonWrapper.prototype.wrap = function (node, parent) {
        if (parent === void 0) { parent = null; }
        var wrapped = this.factory.wrap(node, parent || this);
        if (parent) {
            parent.childNodes.push(wrapped);
        }
        this.jax.nodeMap.set(node, wrapped);
        return wrapped;
    };
    CommonWrapper.prototype.getBBox = function (save) {
        if (save === void 0) { save = true; }
        if (this.bboxComputed) {
            return this.bbox;
        }
        var bbox = (save ? this.bbox : BBox_js_1.BBox.zero());
        this.computeBBox(bbox);
        this.bboxComputed = save;
        return bbox;
    };
    CommonWrapper.prototype.getOuterBBox = function (save) {
        var e_1, _a;
        if (save === void 0) { save = true; }
        var bbox = this.getBBox(save);
        if (!this.styles)
            return bbox;
        var obox = new BBox_js_1.BBox();
        Object.assign(obox, bbox);
        try {
            for (var _b = __values(BBox_js_1.BBox.StyleAdjust), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), name_1 = _d[0], side = _d[1];
                var x = this.styles.get(name_1);
                if (x) {
                    obox[side] += this.length2em(x, 1, obox.rscale);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return obox;
    };
    CommonWrapper.prototype.computeBBox = function (bbox, recompute) {
        var e_2, _a;
        if (recompute === void 0) { recompute = false; }
        bbox.empty();
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                bbox.append(child.getOuterBBox());
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        bbox.clean();
        if (this.fixesPWidth && this.setChildPWidths(recompute)) {
            this.computeBBox(bbox, true);
        }
    };
    CommonWrapper.prototype.setChildPWidths = function (recompute, w, clear) {
        var e_3, _a;
        if (w === void 0) { w = null; }
        if (clear === void 0) { clear = true; }
        if (recompute) {
            return false;
        }
        if (clear) {
            this.bbox.pwidth = '';
        }
        var changed = false;
        try {
            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                var cbox = child.getOuterBBox();
                if (cbox.pwidth && child.setChildPWidths(recompute, w === null ? cbox.w : w, clear)) {
                    changed = true;
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return changed;
    };
    CommonWrapper.prototype.invalidateBBox = function () {
        if (this.bboxComputed) {
            this.bboxComputed = false;
            if (this.parent) {
                this.parent.invalidateBBox();
            }
        }
    };
    CommonWrapper.prototype.copySkewIC = function (bbox) {
        var first = this.childNodes[0];
        if (first === null || first === void 0 ? void 0 : first.bbox.sk) {
            bbox.sk = first.bbox.sk;
        }
        if (first === null || first === void 0 ? void 0 : first.bbox.dx) {
            bbox.dx = first.bbox.dx;
        }
        var last = this.childNodes[this.childNodes.length - 1];
        if (last === null || last === void 0 ? void 0 : last.bbox.ic) {
            bbox.ic = last.bbox.ic;
            bbox.w += bbox.ic;
        }
    };
    CommonWrapper.prototype.getStyles = function () {
        var styleString = this.node.attributes.getExplicit('style');
        if (!styleString)
            return;
        var style = this.styles = new Styles_js_1.Styles(styleString);
        for (var i = 0, m = CommonWrapper.removeStyles.length; i < m; i++) {
            var id = CommonWrapper.removeStyles[i];
            if (style.get(id)) {
                if (!this.removedStyles)
                    this.removedStyles = {};
                this.removedStyles[id] = style.get(id);
                style.set(id, '');
            }
        }
    };
    CommonWrapper.prototype.getVariant = function () {
        if (!this.node.isToken)
            return;
        var attributes = this.node.attributes;
        var variant = attributes.get('mathvariant');
        if (!attributes.getExplicit('mathvariant')) {
            var values = attributes.getList('fontfamily', 'fontweight', 'fontstyle');
            if (this.removedStyles) {
                var style = this.removedStyles;
                if (style.fontFamily)
                    values.family = style.fontFamily;
                if (style.fontWeight)
                    values.weight = style.fontWeight;
                if (style.fontStyle)
                    values.style = style.fontStyle;
            }
            if (values.fontfamily)
                values.family = values.fontfamily;
            if (values.fontweight)
                values.weight = values.fontweight;
            if (values.fontstyle)
                values.style = values.fontstyle;
            if (values.weight && values.weight.match(/^\d+$/)) {
                values.weight = (parseInt(values.weight) > 600 ? 'bold' : 'normal');
            }
            if (values.family) {
                variant = this.explicitVariant(values.family, values.weight, values.style);
            }
            else {
                if (this.node.getProperty('variantForm'))
                    variant = '-tex-variant';
                variant = (CommonWrapper.BOLDVARIANTS[values.weight] || {})[variant] || variant;
                variant = (CommonWrapper.ITALICVARIANTS[values.style] || {})[variant] || variant;
            }
        }
        this.variant = variant;
    };
    CommonWrapper.prototype.explicitVariant = function (fontFamily, fontWeight, fontStyle) {
        var style = this.styles;
        if (!style)
            style = this.styles = new Styles_js_1.Styles();
        style.set('fontFamily', fontFamily);
        if (fontWeight)
            style.set('fontWeight', fontWeight);
        if (fontStyle)
            style.set('fontStyle', fontStyle);
        return '-explicitFont';
    };
    CommonWrapper.prototype.getScale = function () {
        var scale = 1, parent = this.parent;
        var pscale = (parent ? parent.bbox.scale : 1);
        var attributes = this.node.attributes;
        var scriptlevel = Math.min(attributes.get('scriptlevel'), 2);
        var fontsize = attributes.get('fontsize');
        var mathsize = (this.node.isToken || this.node.isKind('mstyle') ?
            attributes.get('mathsize') : attributes.getInherited('mathsize'));
        if (scriptlevel !== 0) {
            scale = Math.pow(attributes.get('scriptsizemultiplier'), scriptlevel);
            var scriptminsize = this.length2em(attributes.get('scriptminsize'), .8, 1);
            if (scale < scriptminsize)
                scale = scriptminsize;
        }
        if (this.removedStyles && this.removedStyles.fontSize && !fontsize) {
            fontsize = this.removedStyles.fontSize;
        }
        if (fontsize && !attributes.getExplicit('mathsize')) {
            mathsize = fontsize;
        }
        if (mathsize !== '1') {
            scale *= this.length2em(mathsize, 1, 1);
        }
        this.bbox.scale = scale;
        this.bbox.rscale = scale / pscale;
    };
    CommonWrapper.prototype.getSpace = function () {
        var isTop = this.isTopEmbellished();
        var hasSpacing = this.node.hasSpacingAttributes();
        if (this.jax.options.mathmlSpacing || hasSpacing) {
            isTop && this.getMathMLSpacing();
        }
        else {
            this.getTeXSpacing(isTop, hasSpacing);
        }
    };
    CommonWrapper.prototype.getMathMLSpacing = function () {
        var node = this.node.coreMO();
        var child = node.coreParent();
        var parent = child.parent;
        if (!parent || !parent.isKind('mrow') || parent.childNodes.length === 1)
            return;
        var attributes = node.attributes;
        var isScript = (attributes.get('scriptlevel') > 0);
        this.bbox.L = (attributes.isSet('lspace') ?
            Math.max(0, this.length2em(attributes.get('lspace'))) :
            MathMLSpace(isScript, node.lspace));
        this.bbox.R = (attributes.isSet('rspace') ?
            Math.max(0, this.length2em(attributes.get('rspace'))) :
            MathMLSpace(isScript, node.rspace));
        var n = parent.childIndex(child);
        if (n === 0)
            return;
        var prev = parent.childNodes[n - 1];
        if (!prev.isEmbellished)
            return;
        var bbox = this.jax.nodeMap.get(prev).getBBox();
        if (bbox.R) {
            this.bbox.L = Math.max(0, this.bbox.L - bbox.R);
        }
    };
    CommonWrapper.prototype.getTeXSpacing = function (isTop, hasSpacing) {
        if (!hasSpacing) {
            var space = this.node.texSpacing();
            if (space) {
                this.bbox.L = this.length2em(space);
            }
        }
        if (isTop || hasSpacing) {
            var attributes = this.node.coreMO().attributes;
            if (attributes.isSet('lspace')) {
                this.bbox.L = Math.max(0, this.length2em(attributes.get('lspace')));
            }
            if (attributes.isSet('rspace')) {
                this.bbox.R = Math.max(0, this.length2em(attributes.get('rspace')));
            }
        }
    };
    CommonWrapper.prototype.isTopEmbellished = function () {
        return (this.node.isEmbellished &&
            !(this.node.parent && this.node.parent.isEmbellished));
    };
    CommonWrapper.prototype.core = function () {
        return this.jax.nodeMap.get(this.node.core());
    };
    CommonWrapper.prototype.coreMO = function () {
        return this.jax.nodeMap.get(this.node.coreMO());
    };
    CommonWrapper.prototype.getText = function () {
        var e_4, _a;
        var text = '';
        if (this.node.isToken) {
            try {
                for (var _b = __values(this.node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    if (child instanceof MmlNode_js_1.TextNode) {
                        text += child.getText();
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        return text;
    };
    CommonWrapper.prototype.canStretch = function (direction) {
        this.stretch = FontData_js_1.NOSTRETCH;
        if (this.node.isEmbellished) {
            var core = this.core();
            if (core && core.node !== this.node) {
                if (core.canStretch(direction)) {
                    this.stretch = core.stretch;
                }
            }
        }
        return this.stretch.dir !== 0;
    };
    CommonWrapper.prototype.getAlignShift = function () {
        var _a;
        var _b = (_a = this.node.attributes).getList.apply(_a, __spreadArray([], __read(MmlNode_js_1.indentAttributes), false)), indentalign = _b.indentalign, indentshift = _b.indentshift, indentalignfirst = _b.indentalignfirst, indentshiftfirst = _b.indentshiftfirst;
        if (indentalignfirst !== 'indentalign') {
            indentalign = indentalignfirst;
        }
        if (indentalign === 'auto') {
            indentalign = this.jax.options.displayAlign;
        }
        if (indentshiftfirst !== 'indentshift') {
            indentshift = indentshiftfirst;
        }
        if (indentshift === 'auto') {
            indentshift = this.jax.options.displayIndent;
            if (indentalign === 'right' && !indentshift.match(/^\s*0[a-z]*\s*$/)) {
                indentshift = ('-' + indentshift.trim()).replace(/^--/, '');
            }
        }
        var shift = this.length2em(indentshift, this.metrics.containerWidth);
        return [indentalign, shift];
    };
    CommonWrapper.prototype.getAlignX = function (W, bbox, align) {
        return (align === 'right' ? W - (bbox.w + bbox.R) * bbox.rscale :
            align === 'left' ? bbox.L * bbox.rscale :
                (W - bbox.w * bbox.rscale) / 2);
    };
    CommonWrapper.prototype.getAlignY = function (H, D, h, d, align) {
        return (align === 'top' ? H - h :
            align === 'bottom' ? d - D :
                align === 'center' ? ((H - h) - (D - d)) / 2 :
                    0);
    };
    CommonWrapper.prototype.getWrapWidth = function (i) {
        return this.childNodes[i].getBBox().w;
    };
    CommonWrapper.prototype.getChildAlign = function (_i) {
        return 'left';
    };
    CommonWrapper.prototype.percent = function (m) {
        return LENGTHS.percent(m);
    };
    CommonWrapper.prototype.em = function (m) {
        return LENGTHS.em(m);
    };
    CommonWrapper.prototype.px = function (m, M) {
        if (M === void 0) { M = -LENGTHS.BIGDIMEN; }
        return LENGTHS.px(m, M, this.metrics.em);
    };
    CommonWrapper.prototype.length2em = function (length, size, scale) {
        if (size === void 0) { size = 1; }
        if (scale === void 0) { scale = null; }
        if (scale === null) {
            scale = this.bbox.scale;
        }
        return LENGTHS.length2em(length, size, scale, this.jax.pxPerEm);
    };
    CommonWrapper.prototype.unicodeChars = function (text, name) {
        if (name === void 0) { name = this.variant; }
        var chars = (0, string_js_1.unicodeChars)(text);
        var variant = this.font.getVariant(name);
        if (variant && variant.chars) {
            var map_1 = variant.chars;
            chars = chars.map(function (n) { return ((map_1[n] || [])[3] || {}).smp || n; });
        }
        return chars;
    };
    CommonWrapper.prototype.remapChars = function (chars) {
        return chars;
    };
    CommonWrapper.prototype.mmlText = function (text) {
        return this.node.factory.create('text').setText(text);
    };
    CommonWrapper.prototype.mmlNode = function (kind, properties, children) {
        if (properties === void 0) { properties = {}; }
        if (children === void 0) { children = []; }
        return this.node.factory.create(kind, properties, children);
    };
    CommonWrapper.prototype.createMo = function (text) {
        var mmlFactory = this.node.factory;
        var textNode = mmlFactory.create('text').setText(text);
        var mml = mmlFactory.create('mo', { stretchy: true }, [textNode]);
        mml.inheritAttributesFrom(this.node);
        var node = this.wrap(mml);
        node.parent = this;
        return node;
    };
    CommonWrapper.prototype.getVariantChar = function (variant, n) {
        var char = this.font.getChar(variant, n) || [0, 0, 0, { unknown: true }];
        if (char.length === 3) {
            char[3] = {};
        }
        return char;
    };
    CommonWrapper.kind = 'unknown';
    CommonWrapper.styles = {};
    CommonWrapper.removeStyles = [
        'fontSize', 'fontFamily', 'fontWeight',
        'fontStyle', 'fontVariant', 'font'
    ];
    CommonWrapper.skipAttributes = {
        fontfamily: true, fontsize: true, fontweight: true, fontstyle: true,
        color: true, background: true,
        'class': true, href: true, style: true,
        xmlns: true
    };
    CommonWrapper.BOLDVARIANTS = {
        bold: {
            normal: 'bold',
            italic: 'bold-italic',
            fraktur: 'bold-fraktur',
            script: 'bold-script',
            'sans-serif': 'bold-sans-serif',
            'sans-serif-italic': 'sans-serif-bold-italic'
        },
        normal: {
            bold: 'normal',
            'bold-italic': 'italic',
            'bold-fraktur': 'fraktur',
            'bold-script': 'script',
            'bold-sans-serif': 'sans-serif',
            'sans-serif-bold-italic': 'sans-serif-italic'
        }
    };
    CommonWrapper.ITALICVARIANTS = {
        italic: {
            normal: 'italic',
            bold: 'bold-italic',
            'sans-serif': 'sans-serif-italic',
            'bold-sans-serif': 'sans-serif-bold-italic'
        },
        normal: {
            italic: 'normal',
            'bold-italic': 'bold',
            'sans-serif-italic': 'sans-serif',
            'sans-serif-bold-italic': 'bold-sans-serif'
        }
    };
    return CommonWrapper;
}(Wrapper_js_1.AbstractWrapper));
exports.CommonWrapper = CommonWrapper;
//# sourceMappingURL=Wrapper.js.map

/***/ }),

/***/ 4420:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonWrapperFactory = void 0;
var WrapperFactory_js_1 = __webpack_require__(3811);
var CommonWrapperFactory = (function (_super) {
    __extends(CommonWrapperFactory, _super);
    function CommonWrapperFactory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.jax = null;
        return _this;
    }
    Object.defineProperty(CommonWrapperFactory.prototype, "Wrappers", {
        get: function () {
            return this.node;
        },
        enumerable: false,
        configurable: true
    });
    CommonWrapperFactory.defaultNodes = {};
    return CommonWrapperFactory;
}(WrapperFactory_js_1.AbstractWrapperFactory));
exports.CommonWrapperFactory = CommonWrapperFactory;
//# sourceMappingURL=WrapperFactory.js.map

/***/ }),

/***/ 9800:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonTeXAtomMixin = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
function CommonTeXAtomMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            _super.prototype.computeBBox.call(this, bbox, recompute);
            if (this.childNodes[0] && this.childNodes[0].bbox.ic) {
                bbox.ic = this.childNodes[0].bbox.ic;
            }
            if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {
                var h = bbox.h, d = bbox.d;
                var a = this.font.params.axis_height;
                var dh = ((h + d) / 2 + a) - h;
                bbox.h += dh;
                bbox.d -= dh;
            }
        };
        return class_1;
    }(Base));
}
exports.CommonTeXAtomMixin = CommonTeXAtomMixin;
//# sourceMappingURL=TeXAtom.js.map

/***/ }),

/***/ 1160:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonTextNodeMixin = void 0;
function CommonTextNodeMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function (bbox, _recompute) {
            var e_1, _a;
            if (_recompute === void 0) { _recompute = false; }
            var variant = this.parent.variant;
            var text = this.node.getText();
            if (variant === '-explicitFont') {
                var font = this.jax.getFontData(this.parent.styles);
                var _b = this.jax.measureText(text, variant, font), w = _b.w, h = _b.h, d = _b.d;
                bbox.h = h;
                bbox.d = d;
                bbox.w = w;
            }
            else {
                var chars = this.remappedText(text, variant);
                bbox.empty();
                try {
                    for (var chars_1 = __values(chars), chars_1_1 = chars_1.next(); !chars_1_1.done; chars_1_1 = chars_1.next()) {
                        var char = chars_1_1.value;
                        var _c = __read(this.getVariantChar(variant, char), 4), h = _c[0], d = _c[1], w = _c[2], data = _c[3];
                        if (data.unknown) {
                            var cbox = this.jax.measureText(String.fromCodePoint(char), variant);
                            w = cbox.w;
                            h = cbox.h;
                            d = cbox.d;
                        }
                        bbox.w += w;
                        if (h > bbox.h)
                            bbox.h = h;
                        if (d > bbox.d)
                            bbox.d = d;
                        bbox.ic = data.ic || 0;
                        bbox.sk = data.sk || 0;
                        bbox.dx = data.dx || 0;
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (chars_1_1 && !chars_1_1.done && (_a = chars_1.return)) _a.call(chars_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                if (chars.length > 1) {
                    bbox.sk = 0;
                }
                bbox.clean();
            }
        };
        class_1.prototype.remappedText = function (text, variant) {
            var c = this.parent.stretch.c;
            return (c ? [c] : this.parent.remapChars(this.unicodeChars(text, variant)));
        };
        class_1.prototype.getStyles = function () { };
        class_1.prototype.getVariant = function () { };
        class_1.prototype.getScale = function () { };
        class_1.prototype.getSpace = function () { };
        return class_1;
    }(Base));
}
exports.CommonTextNodeMixin = CommonTextNodeMixin;
//# sourceMappingURL=TextNode.js.map

/***/ }),

/***/ 1956:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMactionMixin = exports.TooltipData = void 0;
var string_js_1 = __webpack_require__(505);
exports.TooltipData = {
    dx: '.2em',
    dy: '.1em',
    postDelay: 600,
    clearDelay: 100,
    hoverTimer: new Map(),
    clearTimer: new Map(),
    stopTimers: function (node, data) {
        if (data.clearTimer.has(node)) {
            clearTimeout(data.clearTimer.get(node));
            data.clearTimer.delete(node);
        }
        if (data.hoverTimer.has(node)) {
            clearTimeout(data.hoverTimer.get(node));
            data.hoverTimer.delete(node);
        }
    }
};
function CommonMactionMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            var actions = _this.constructor.actions;
            var action = _this.node.attributes.get('actiontype');
            var _a = __read(actions.get(action) || [(function (_node, _data) { }), {}], 2), handler = _a[0], data = _a[1];
            _this.action = handler;
            _this.data = data;
            _this.getParameters();
            return _this;
        }
        Object.defineProperty(class_1.prototype, "selected", {
            get: function () {
                var selection = this.node.attributes.get('selection');
                var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;
                return this.childNodes[i] || this.wrap(this.node.selected);
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.getParameters = function () {
            var offsets = this.node.attributes.get('data-offsets');
            var _a = __read((0, string_js_1.split)(offsets || ''), 2), dx = _a[0], dy = _a[1];
            this.dx = this.length2em(dx || exports.TooltipData.dx);
            this.dy = this.length2em(dy || exports.TooltipData.dy);
        };
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            bbox.updateFrom(this.selected.getOuterBBox());
            this.selected.setChildPWidths(recompute);
        };
        return class_1;
    }(Base));
}
exports.CommonMactionMixin = CommonMactionMixin;
//# sourceMappingURL=maction.js.map

/***/ }),

/***/ 7490:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMathMixin = void 0;
function CommonMathMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getWrapWidth = function (_i) {
            return (this.parent ? this.getBBox().w : this.metrics.containerWidth / this.jax.pxPerEm);
        };
        return class_1;
    }(Base));
}
exports.CommonMathMixin = CommonMathMixin;
//# sourceMappingURL=math.js.map

/***/ }),

/***/ 7313:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMencloseMixin = void 0;
var Notation = __importStar(__webpack_require__(5552));
var string_js_1 = __webpack_require__(505);
function CommonMencloseMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.notations = {};
            _this.renderChild = null;
            _this.msqrt = null;
            _this.padding = Notation.PADDING;
            _this.thickness = Notation.THICKNESS;
            _this.arrowhead = { x: Notation.ARROWX, y: Notation.ARROWY, dx: Notation.ARROWDX };
            _this.TRBL = [0, 0, 0, 0];
            _this.getParameters();
            _this.getNotations();
            _this.removeRedundantNotations();
            _this.initializeNotations();
            _this.TRBL = _this.getBBoxExtenders();
            return _this;
        }
        class_1.prototype.getParameters = function () {
            var attributes = this.node.attributes;
            var padding = attributes.get('data-padding');
            if (padding !== undefined) {
                this.padding = this.length2em(padding, Notation.PADDING);
            }
            var thickness = attributes.get('data-thickness');
            if (thickness !== undefined) {
                this.thickness = this.length2em(thickness, Notation.THICKNESS);
            }
            var arrowhead = attributes.get('data-arrowhead');
            if (arrowhead !== undefined) {
                var _b = __read((0, string_js_1.split)(arrowhead), 3), x = _b[0], y = _b[1], dx = _b[2];
                this.arrowhead = {
                    x: (x ? parseFloat(x) : Notation.ARROWX),
                    y: (y ? parseFloat(y) : Notation.ARROWY),
                    dx: (dx ? parseFloat(dx) : Notation.ARROWDX)
                };
            }
        };
        class_1.prototype.getNotations = function () {
            var e_1, _b;
            var Notations = this.constructor.notations;
            try {
                for (var _c = __values((0, string_js_1.split)(this.node.attributes.get('notation'))), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var name_1 = _d.value;
                    var notation = Notations.get(name_1);
                    if (notation) {
                        this.notations[name_1] = notation;
                        if (notation.renderChild) {
                            this.renderChild = notation.renderer;
                        }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_1) throw e_1.error; }
            }
        };
        class_1.prototype.removeRedundantNotations = function () {
            var e_2, _b, e_3, _c;
            try {
                for (var _d = __values(Object.keys(this.notations)), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var name_2 = _e.value;
                    if (this.notations[name_2]) {
                        var remove = this.notations[name_2].remove || '';
                        try {
                            for (var _f = (e_3 = void 0, __values(remove.split(/ /))), _g = _f.next(); !_g.done; _g = _f.next()) {
                                var notation = _g.value;
                                delete this.notations[notation];
                            }
                        }
                        catch (e_3_1) { e_3 = { error: e_3_1 }; }
                        finally {
                            try {
                                if (_g && !_g.done && (_c = _f.return)) _c.call(_f);
                            }
                            finally { if (e_3) throw e_3.error; }
                        }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_b = _d.return)) _b.call(_d);
                }
                finally { if (e_2) throw e_2.error; }
            }
        };
        class_1.prototype.initializeNotations = function () {
            var e_4, _b;
            try {
                for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var name_3 = _d.value;
                    var init = this.notations[name_3].init;
                    init && init(this);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_4) throw e_4.error; }
            }
        };
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            var _b = __read(this.TRBL, 4), T = _b[0], R = _b[1], B = _b[2], L = _b[3];
            var child = this.childNodes[0].getBBox();
            bbox.combine(child, L, 0);
            bbox.h += T;
            bbox.d += B;
            bbox.w += R;
            this.setChildPWidths(recompute);
        };
        class_1.prototype.getBBoxExtenders = function () {
            var e_5, _b;
            var TRBL = [0, 0, 0, 0];
            try {
                for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var name_4 = _d.value;
                    this.maximizeEntries(TRBL, this.notations[name_4].bbox(this));
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_5) throw e_5.error; }
            }
            return TRBL;
        };
        class_1.prototype.getPadding = function () {
            var e_6, _b;
            var _this = this;
            var BTRBL = [0, 0, 0, 0];
            try {
                for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var name_5 = _d.value;
                    var border = this.notations[name_5].border;
                    if (border) {
                        this.maximizeEntries(BTRBL, border(this));
                    }
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_6) throw e_6.error; }
            }
            return [0, 1, 2, 3].map(function (i) { return _this.TRBL[i] - BTRBL[i]; });
        };
        class_1.prototype.maximizeEntries = function (X, Y) {
            for (var i = 0; i < X.length; i++) {
                if (X[i] < Y[i]) {
                    X[i] = Y[i];
                }
            }
        };
        class_1.prototype.getOffset = function (direction) {
            var _b = __read(this.TRBL, 4), T = _b[0], R = _b[1], B = _b[2], L = _b[3];
            var d = (direction === 'X' ? R - L : B - T) / 2;
            return (Math.abs(d) > .001 ? d : 0);
        };
        class_1.prototype.getArgMod = function (w, h) {
            return [Math.atan2(h, w), Math.sqrt(w * w + h * h)];
        };
        class_1.prototype.arrow = function (_w, _a, _double, _offset, _dist) {
            if (_offset === void 0) { _offset = ''; }
            if (_dist === void 0) { _dist = 0; }
            return null;
        };
        class_1.prototype.arrowData = function () {
            var _b = __read([this.padding, this.thickness], 2), p = _b[0], t = _b[1];
            var r = t * (this.arrowhead.x + Math.max(1, this.arrowhead.dx));
            var _c = this.childNodes[0].getBBox(), h = _c.h, d = _c.d, w = _c.w;
            var H = h + d;
            var R = Math.sqrt(H * H + w * w);
            var x = Math.max(p, r * w / R);
            var y = Math.max(p, r * H / R);
            var _d = __read(this.getArgMod(w + 2 * x, H + 2 * y), 2), a = _d[0], W = _d[1];
            return { a: a, W: W, x: x, y: y };
        };
        class_1.prototype.arrowAW = function () {
            var _b = this.childNodes[0].getBBox(), h = _b.h, d = _b.d, w = _b.w;
            var _c = __read(this.TRBL, 4), T = _c[0], R = _c[1], B = _c[2], L = _c[3];
            return this.getArgMod(L + w + R, T + h + d + B);
        };
        class_1.prototype.createMsqrt = function (child) {
            var mmlFactory = this.node.factory;
            var mml = mmlFactory.create('msqrt');
            mml.inheritAttributesFrom(this.node);
            mml.childNodes[0] = child.node;
            var node = this.wrap(mml);
            node.parent = this;
            return node;
        };
        class_1.prototype.sqrtTRBL = function () {
            var bbox = this.msqrt.getBBox();
            var cbox = this.msqrt.childNodes[0].getBBox();
            return [bbox.h - cbox.h, 0, bbox.d - cbox.d, bbox.w - cbox.w];
        };
        return class_1;
    }(Base));
}
exports.CommonMencloseMixin = CommonMencloseMixin;
//# sourceMappingURL=menclose.js.map

/***/ }),

/***/ 7555:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMfencedMixin = void 0;
function CommonMfencedMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.mrow = null;
            _this.createMrow();
            _this.addMrowChildren();
            return _this;
        }
        class_1.prototype.createMrow = function () {
            var mmlFactory = this.node.factory;
            var mrow = mmlFactory.create('inferredMrow');
            mrow.inheritAttributesFrom(this.node);
            this.mrow = this.wrap(mrow);
            this.mrow.parent = this;
        };
        class_1.prototype.addMrowChildren = function () {
            var e_1, _a;
            var mfenced = this.node;
            var mrow = this.mrow;
            this.addMo(mfenced.open);
            if (this.childNodes.length) {
                mrow.childNodes.push(this.childNodes[0]);
            }
            var i = 0;
            try {
                for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    this.addMo(mfenced.separators[i++]);
                    mrow.childNodes.push(child);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.addMo(mfenced.close);
            mrow.stretchChildren();
        };
        class_1.prototype.addMo = function (node) {
            if (!node)
                return;
            var mo = this.wrap(node);
            this.mrow.childNodes.push(mo);
            mo.parent = this.mrow;
        };
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            bbox.updateFrom(this.mrow.getOuterBBox());
            this.setChildPWidths(recompute);
        };
        return class_1;
    }(Base));
}
exports.CommonMfencedMixin = CommonMfencedMixin;
//# sourceMappingURL=mfenced.js.map

/***/ }),

/***/ 2688:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMfracMixin = void 0;
function CommonMfracMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.bevel = null;
            _this.pad = (_this.node.getProperty('withDelims') ? 0 : _this.font.params.nulldelimiterspace);
            if (_this.node.attributes.get('bevelled')) {
                var H = _this.getBevelData(_this.isDisplay()).H;
                var bevel = _this.bevel = _this.createMo('/');
                bevel.node.attributes.set('symmetric', true);
                bevel.canStretch(1);
                bevel.getStretchedVariant([H], true);
            }
            return _this;
        }
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            bbox.empty();
            var _a = this.node.attributes.getList('linethickness', 'bevelled'), linethickness = _a.linethickness, bevelled = _a.bevelled;
            var display = this.isDisplay();
            var w = null;
            if (bevelled) {
                this.getBevelledBBox(bbox, display);
            }
            else {
                var thickness = this.length2em(String(linethickness), .06);
                w = -2 * this.pad;
                if (thickness === 0) {
                    this.getAtopBBox(bbox, display);
                }
                else {
                    this.getFractionBBox(bbox, display, thickness);
                    w -= .2;
                }
                w += bbox.w;
            }
            bbox.clean();
            this.setChildPWidths(recompute, w);
        };
        class_1.prototype.getFractionBBox = function (bbox, display, t) {
            var nbox = this.childNodes[0].getOuterBBox();
            var dbox = this.childNodes[1].getOuterBBox();
            var tex = this.font.params;
            var a = tex.axis_height;
            var _a = this.getTUV(display, t), T = _a.T, u = _a.u, v = _a.v;
            bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));
            bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));
            bbox.w += 2 * this.pad + .2;
        };
        class_1.prototype.getTUV = function (display, t) {
            var tex = this.font.params;
            var a = tex.axis_height;
            var T = (display ? 3.5 : 1.5) * t;
            return { T: (display ? 3.5 : 1.5) * t,
                u: (display ? tex.num1 : tex.num2) - a - T,
                v: (display ? tex.denom1 : tex.denom2) + a - T };
        };
        class_1.prototype.getAtopBBox = function (bbox, display) {
            var _a = this.getUVQ(display), u = _a.u, v = _a.v, nbox = _a.nbox, dbox = _a.dbox;
            bbox.combine(nbox, 0, u);
            bbox.combine(dbox, 0, -v);
            bbox.w += 2 * this.pad;
        };
        class_1.prototype.getUVQ = function (display) {
            var nbox = this.childNodes[0].getOuterBBox();
            var dbox = this.childNodes[1].getOuterBBox();
            var tex = this.font.params;
            var _a = __read((display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2]), 2), u = _a[0], v = _a[1];
            var p = (display ? 7 : 3) * tex.rule_thickness;
            var q = (u - nbox.d * nbox.scale) - (dbox.h * dbox.scale - v);
            if (q < p) {
                u += (p - q) / 2;
                v += (p - q) / 2;
                q = p;
            }
            return { u: u, v: v, q: q, nbox: nbox, dbox: dbox };
        };
        class_1.prototype.getBevelledBBox = function (bbox, display) {
            var _a = this.getBevelData(display), u = _a.u, v = _a.v, delta = _a.delta, nbox = _a.nbox, dbox = _a.dbox;
            var lbox = this.bevel.getOuterBBox();
            bbox.combine(nbox, 0, u);
            bbox.combine(lbox, bbox.w - delta / 2, 0);
            bbox.combine(dbox, bbox.w - delta / 2, v);
        };
        class_1.prototype.getBevelData = function (display) {
            var nbox = this.childNodes[0].getOuterBBox();
            var dbox = this.childNodes[1].getOuterBBox();
            var delta = (display ? .4 : .15);
            var H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;
            var a = this.font.params.axis_height;
            var u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;
            var v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;
            return { H: H, delta: delta, u: u, v: v, nbox: nbox, dbox: dbox };
        };
        class_1.prototype.canStretch = function (_direction) {
            return false;
        };
        class_1.prototype.isDisplay = function () {
            var _a = this.node.attributes.getList('displaystyle', 'scriptlevel'), displaystyle = _a.displaystyle, scriptlevel = _a.scriptlevel;
            return displaystyle && scriptlevel === 0;
        };
        class_1.prototype.getWrapWidth = function (i) {
            var attributes = this.node.attributes;
            if (attributes.get('bevelled')) {
                return this.childNodes[i].getOuterBBox().w;
            }
            var w = this.getBBox().w;
            var thickness = this.length2em(attributes.get('linethickness'));
            return w - (thickness ? .2 : 0) - 2 * this.pad;
        };
        class_1.prototype.getChildAlign = function (i) {
            var attributes = this.node.attributes;
            return (attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]));
        };
        return class_1;
    }(Base));
}
exports.CommonMfracMixin = CommonMfracMixin;
//# sourceMappingURL=mfrac.js.map

/***/ }),

/***/ 5636:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMglyphMixin = void 0;
function CommonMglyphMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.getParameters();
            return _this;
        }
        class_1.prototype.getParameters = function () {
            var _a = this.node.attributes.getList('width', 'height', 'valign', 'src', 'index'), width = _a.width, height = _a.height, valign = _a.valign, src = _a.src, index = _a.index;
            if (src) {
                this.width = (width === 'auto' ? 1 : this.length2em(width));
                this.height = (height === 'auto' ? 1 : this.length2em(height));
                this.valign = this.length2em(valign || '0');
            }
            else {
                var text = String.fromCodePoint(parseInt(index));
                var mmlFactory = this.node.factory;
                this.charWrapper = this.wrap(mmlFactory.create('text').setText(text));
                this.charWrapper.parent = this;
            }
        };
        class_1.prototype.computeBBox = function (bbox, _recompute) {
            if (_recompute === void 0) { _recompute = false; }
            if (this.charWrapper) {
                bbox.updateFrom(this.charWrapper.getBBox());
            }
            else {
                bbox.w = this.width;
                bbox.h = this.height + this.valign;
                bbox.d = -this.valign;
            }
        };
        return class_1;
    }(Base));
}
exports.CommonMglyphMixin = CommonMglyphMixin;
//# sourceMappingURL=mglyph.js.map

/***/ }),

/***/ 5723:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMiMixin = void 0;
function CommonMiMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function (bbox, _recompute) {
            if (_recompute === void 0) { _recompute = false; }
            _super.prototype.computeBBox.call(this, bbox);
            this.copySkewIC(bbox);
        };
        return class_1;
    }(Base));
}
exports.CommonMiMixin = CommonMiMixin;
//# sourceMappingURL=mi.js.map

/***/ }),

/***/ 8009:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMmultiscriptsMixin = exports.ScriptNames = exports.NextScript = void 0;
var BBox_js_1 = __webpack_require__(6469);
exports.NextScript = {
    base: 'subList',
    subList: 'supList',
    supList: 'subList',
    psubList: 'psupList',
    psupList: 'psubList',
};
exports.ScriptNames = ['sup', 'sup', 'psup', 'psub'];
function CommonMmultiscriptsMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.scriptData = null;
            _this.firstPrescript = 0;
            _this.getScriptData();
            return _this;
        }
        class_1.prototype.combinePrePost = function (pre, post) {
            var bbox = new BBox_js_1.BBox(pre);
            bbox.combine(post, 0, 0);
            return bbox;
        };
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            var scriptspace = this.font.params.scriptspace;
            var data = this.scriptData;
            var sub = this.combinePrePost(data.sub, data.psub);
            var sup = this.combinePrePost(data.sup, data.psup);
            var _a = __read(this.getUVQ(sub, sup), 2), u = _a[0], v = _a[1];
            bbox.empty();
            if (data.numPrescripts) {
                bbox.combine(data.psup, scriptspace, u);
                bbox.combine(data.psub, scriptspace, v);
            }
            bbox.append(data.base);
            if (data.numScripts) {
                var w = bbox.w;
                bbox.combine(data.sup, w, u);
                bbox.combine(data.sub, w, v);
                bbox.w += scriptspace;
            }
            bbox.clean();
            this.setChildPWidths(recompute);
        };
        class_1.prototype.getScriptData = function () {
            var data = this.scriptData = {
                base: null, sub: BBox_js_1.BBox.empty(), sup: BBox_js_1.BBox.empty(), psub: BBox_js_1.BBox.empty(), psup: BBox_js_1.BBox.empty(),
                numPrescripts: 0, numScripts: 0
            };
            var lists = this.getScriptBBoxLists();
            this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);
            this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);
            data.base = lists.base[0];
            data.numPrescripts = lists.psubList.length;
            data.numScripts = lists.subList.length;
        };
        class_1.prototype.getScriptBBoxLists = function () {
            var e_1, _a;
            var lists = {
                base: [], subList: [], supList: [], psubList: [], psupList: []
            };
            var script = 'base';
            try {
                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    if (child.node.isKind('mprescripts')) {
                        script = 'psubList';
                    }
                    else {
                        lists[script].push(child.getOuterBBox());
                        script = exports.NextScript[script];
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.firstPrescript = lists.subList.length + lists.supList.length + 2;
            this.padLists(lists.subList, lists.supList);
            this.padLists(lists.psubList, lists.psupList);
            return lists;
        };
        class_1.prototype.padLists = function (list1, list2) {
            if (list1.length > list2.length) {
                list2.push(BBox_js_1.BBox.empty());
            }
        };
        class_1.prototype.combineBBoxLists = function (bbox1, bbox2, list1, list2) {
            for (var i = 0; i < list1.length; i++) {
                var _a = __read(this.getScaledWHD(list1[i]), 3), w1 = _a[0], h1 = _a[1], d1 = _a[2];
                var _b = __read(this.getScaledWHD(list2[i]), 3), w2 = _b[0], h2 = _b[1], d2 = _b[2];
                var w = Math.max(w1, w2);
                bbox1.w += w;
                bbox2.w += w;
                if (h1 > bbox1.h)
                    bbox1.h = h1;
                if (d1 > bbox1.d)
                    bbox1.d = d1;
                if (h2 > bbox2.h)
                    bbox2.h = h2;
                if (d2 > bbox2.d)
                    bbox2.d = d2;
            }
        };
        class_1.prototype.getScaledWHD = function (bbox) {
            var w = bbox.w, h = bbox.h, d = bbox.d, rscale = bbox.rscale;
            return [w * rscale, h * rscale, d * rscale];
        };
        class_1.prototype.getUVQ = function (subbox, supbox) {
            var _a;
            if (!this.UVQ) {
                var _b = __read([0, 0, 0], 3), u = _b[0], v = _b[1], q = _b[2];
                if (subbox.h === 0 && subbox.d === 0) {
                    u = this.getU();
                }
                else if (supbox.h === 0 && supbox.d === 0) {
                    u = -this.getV();
                }
                else {
                    _a = __read(_super.prototype.getUVQ.call(this, subbox, supbox), 3), u = _a[0], v = _a[1], q = _a[2];
                }
                this.UVQ = [u, v, q];
            }
            return this.UVQ;
        };
        return class_1;
    }(Base));
}
exports.CommonMmultiscriptsMixin = CommonMmultiscriptsMixin;
//# sourceMappingURL=mmultiscripts.js.map

/***/ }),

/***/ 5023:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMnMixin = void 0;
function CommonMnMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.remapChars = function (chars) {
            if (chars.length) {
                var text = this.font.getRemappedChar('mn', chars[0]);
                if (text) {
                    var c = this.unicodeChars(text, this.variant);
                    if (c.length === 1) {
                        chars[0] = c[0];
                    }
                    else {
                        chars = c.concat(chars.slice(1));
                    }
                }
            }
            return chars;
        };
        return class_1;
    }(Base));
}
exports.CommonMnMixin = CommonMnMixin;
//# sourceMappingURL=mn.js.map

/***/ }),

/***/ 7096:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMoMixin = exports.DirectionVH = void 0;
var BBox_js_1 = __webpack_require__(6469);
var string_js_1 = __webpack_require__(505);
var FontData_js_1 = __webpack_require__(5884);
exports.DirectionVH = (_a = {},
    _a[1] = 'v',
    _a[2] = 'h',
    _a);
function CommonMoMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.size = null;
            _this.isAccent = _this.node.isAccent;
            return _this;
        }
        class_1.prototype.computeBBox = function (bbox, _recompute) {
            if (_recompute === void 0) { _recompute = false; }
            this.protoBBox(bbox);
            if (this.node.attributes.get('symmetric') &&
                this.stretch.dir !== 2) {
                var d = this.getCenterOffset(bbox);
                bbox.h += d;
                bbox.d -= d;
            }
            if (this.node.getProperty('mathaccent') &&
                (this.stretch.dir === 0 || this.size >= 0)) {
                bbox.w = 0;
            }
        };
        class_1.prototype.protoBBox = function (bbox) {
            var stretchy = (this.stretch.dir !== 0);
            if (stretchy && this.size === null) {
                this.getStretchedVariant([0]);
            }
            if (stretchy && this.size < 0)
                return;
            _super.prototype.computeBBox.call(this, bbox);
            this.copySkewIC(bbox);
        };
        class_1.prototype.getAccentOffset = function () {
            var bbox = BBox_js_1.BBox.empty();
            this.protoBBox(bbox);
            return -bbox.w / 2;
        };
        class_1.prototype.getCenterOffset = function (bbox) {
            if (bbox === void 0) { bbox = null; }
            if (!bbox) {
                bbox = BBox_js_1.BBox.empty();
                _super.prototype.computeBBox.call(this, bbox);
            }
            return ((bbox.h + bbox.d) / 2 + this.font.params.axis_height) - bbox.h;
        };
        class_1.prototype.getVariant = function () {
            if (this.node.attributes.get('largeop')) {
                this.variant = (this.node.attributes.get('displaystyle') ? '-largeop' : '-smallop');
                return;
            }
            if (!this.node.attributes.getExplicit('mathvariant') &&
                this.node.getProperty('pseudoscript') === false) {
                this.variant = '-tex-variant';
                return;
            }
            _super.prototype.getVariant.call(this);
        };
        class_1.prototype.canStretch = function (direction) {
            if (this.stretch.dir !== 0) {
                return this.stretch.dir === direction;
            }
            var attributes = this.node.attributes;
            if (!attributes.get('stretchy'))
                return false;
            var c = this.getText();
            if (Array.from(c).length !== 1)
                return false;
            var delim = this.font.getDelimiter(c.codePointAt(0));
            this.stretch = (delim && delim.dir === direction ? delim : FontData_js_1.NOSTRETCH);
            return this.stretch.dir !== 0;
        };
        class_1.prototype.getStretchedVariant = function (WH, exact) {
            var e_1, _a;
            if (exact === void 0) { exact = false; }
            if (this.stretch.dir !== 0) {
                var D = this.getWH(WH);
                var min = this.getSize('minsize', 0);
                var max = this.getSize('maxsize', Infinity);
                var mathaccent = this.node.getProperty('mathaccent');
                D = Math.max(min, Math.min(max, D));
                var df = this.font.params.delimiterfactor / 1000;
                var ds = this.font.params.delimitershortfall;
                var m = (min || exact ? D : mathaccent ? Math.min(D / df, D + ds) : Math.max(D * df, D - ds));
                var delim = this.stretch;
                var c = delim.c || this.getText().codePointAt(0);
                var i = 0;
                if (delim.sizes) {
                    try {
                        for (var _b = __values(delim.sizes), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var d = _c.value;
                            if (d >= m) {
                                if (mathaccent && i) {
                                    i--;
                                }
                                this.variant = this.font.getSizeVariant(c, i);
                                this.size = i;
                                if (delim.schar && delim.schar[i]) {
                                    this.stretch = __assign(__assign({}, this.stretch), { c: delim.schar[i] });
                                }
                                return;
                            }
                            i++;
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                if (delim.stretch) {
                    this.size = -1;
                    this.invalidateBBox();
                    this.getStretchBBox(WH, this.checkExtendedHeight(D, delim), delim);
                }
                else {
                    this.variant = this.font.getSizeVariant(c, i - 1);
                    this.size = i - 1;
                }
            }
        };
        class_1.prototype.getSize = function (name, value) {
            var attributes = this.node.attributes;
            if (attributes.isSet(name)) {
                value = this.length2em(attributes.get(name), 1, 1);
            }
            return value;
        };
        class_1.prototype.getWH = function (WH) {
            if (WH.length === 0)
                return 0;
            if (WH.length === 1)
                return WH[0];
            var _a = __read(WH, 2), H = _a[0], D = _a[1];
            var a = this.font.params.axis_height;
            return (this.node.attributes.get('symmetric') ? 2 * Math.max(H - a, D + a) : H + D);
        };
        class_1.prototype.getStretchBBox = function (WHD, D, C) {
            var _a;
            if (C.hasOwnProperty('min') && C.min > D) {
                D = C.min;
            }
            var _b = __read(C.HDW, 3), h = _b[0], d = _b[1], w = _b[2];
            if (this.stretch.dir === 1) {
                _a = __read(this.getBaseline(WHD, D, C), 2), h = _a[0], d = _a[1];
            }
            else {
                w = D;
            }
            this.bbox.h = h;
            this.bbox.d = d;
            this.bbox.w = w;
        };
        class_1.prototype.getBaseline = function (WHD, HD, C) {
            var hasWHD = (WHD.length === 2 && WHD[0] + WHD[1] === HD);
            var symmetric = this.node.attributes.get('symmetric');
            var _a = __read((hasWHD ? WHD : [HD, 0]), 2), H = _a[0], D = _a[1];
            var _b = __read([H + D, 0], 2), h = _b[0], d = _b[1];
            if (symmetric) {
                var a = this.font.params.axis_height;
                if (hasWHD) {
                    h = 2 * Math.max(H - a, D + a);
                }
                d = h / 2 - a;
            }
            else if (hasWHD) {
                d = D;
            }
            else {
                var _c = __read((C.HDW || [.75, .25]), 2), ch = _c[0], cd = _c[1];
                d = cd * (h / (ch + cd));
            }
            return [h - d, d];
        };
        class_1.prototype.checkExtendedHeight = function (D, C) {
            if (C.fullExt) {
                var _a = __read(C.fullExt, 2), extSize = _a[0], endSize = _a[1];
                var n = Math.ceil(Math.max(0, D - endSize) / extSize);
                D = endSize + n * extSize;
            }
            return D;
        };
        class_1.prototype.remapChars = function (chars) {
            var primes = this.node.getProperty('primes');
            if (primes) {
                return (0, string_js_1.unicodeChars)(primes);
            }
            if (chars.length === 1) {
                var parent_1 = this.node.coreParent().parent;
                var isAccent = this.isAccent && !parent_1.isKind('mrow');
                var map = (isAccent ? 'accent' : 'mo');
                var text = this.font.getRemappedChar(map, chars[0]);
                if (text) {
                    chars = this.unicodeChars(text, this.variant);
                }
            }
            return chars;
        };
        return class_1;
    }(Base));
}
exports.CommonMoMixin = CommonMoMixin;
//# sourceMappingURL=mo.js.map

/***/ }),

/***/ 6898:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMpaddedMixin = void 0;
function CommonMpaddedMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getDimens = function () {
            var values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');
            var bbox = this.childNodes[0].getBBox();
            var w = bbox.w, h = bbox.h, d = bbox.d;
            var W = w, H = h, D = d, x = 0, y = 0, dx = 0;
            if (values.width !== '')
                w = this.dimen(values.width, bbox, 'w', 0);
            if (values.height !== '')
                h = this.dimen(values.height, bbox, 'h', 0);
            if (values.depth !== '')
                d = this.dimen(values.depth, bbox, 'd', 0);
            if (values.voffset !== '')
                y = this.dimen(values.voffset, bbox);
            if (values.lspace !== '')
                x = this.dimen(values.lspace, bbox);
            var align = this.node.attributes.get('data-align');
            if (align) {
                dx = this.getAlignX(w, bbox, align);
            }
            return [H, D, W, h - H, d - D, w - W, x, y, dx];
        };
        class_1.prototype.dimen = function (length, bbox, d, m) {
            if (d === void 0) { d = ''; }
            if (m === void 0) { m = null; }
            length = String(length);
            var match = length.match(/width|height|depth/);
            var size = (match ? bbox[match[0].charAt(0)] :
                (d ? bbox[d] : 0));
            var dimen = (this.length2em(length, size) || 0);
            if (length.match(/^[-+]/) && d) {
                dimen += size;
            }
            if (m != null) {
                dimen = Math.max(m, dimen);
            }
            return dimen;
        };
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            var _a = __read(this.getDimens(), 6), H = _a[0], D = _a[1], W = _a[2], dh = _a[3], dd = _a[4], dw = _a[5];
            bbox.w = W + dw;
            bbox.h = H + dh;
            bbox.d = D + dd;
            this.setChildPWidths(recompute, bbox.w);
        };
        class_1.prototype.getWrapWidth = function (_i) {
            return this.getBBox().w;
        };
        class_1.prototype.getChildAlign = function (_i) {
            return this.node.attributes.get('data-align') || 'left';
        };
        return class_1;
    }(Base));
}
exports.CommonMpaddedMixin = CommonMpaddedMixin;
//# sourceMappingURL=mpadded.js.map

/***/ }),

/***/ 6991:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMrootMixin = void 0;
function CommonMrootMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_1.prototype, "surd", {
            get: function () {
                return 2;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "root", {
            get: function () {
                return 1;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.combineRootBBox = function (BBOX, sbox, H) {
            var bbox = this.childNodes[this.root].getOuterBBox();
            var h = this.getRootDimens(sbox, H)[1];
            BBOX.combine(bbox, 0, h);
        };
        class_1.prototype.getRootDimens = function (sbox, H) {
            var surd = this.childNodes[this.surd];
            var bbox = this.childNodes[this.root].getOuterBBox();
            var offset = (surd.size < 0 ? .5 : .6) * sbox.w;
            var w = bbox.w, rscale = bbox.rscale;
            var W = Math.max(w, offset / rscale);
            var dx = Math.max(0, W - w);
            var h = this.rootHeight(bbox, sbox, surd.size, H);
            var x = W * rscale - offset;
            return [x, h, dx];
        };
        class_1.prototype.rootHeight = function (rbox, sbox, size, H) {
            var h = sbox.h + sbox.d;
            var b = (size < 0 ? 1.9 : .55 * h) - (h - H);
            return b + Math.max(0, rbox.d * rbox.rscale);
        };
        return class_1;
    }(Base));
}
exports.CommonMrootMixin = CommonMrootMixin;
//# sourceMappingURL=mroot.js.map

/***/ }),

/***/ 8411:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonInferredMrowMixin = exports.CommonMrowMixin = void 0;
var BBox_js_1 = __webpack_require__(6469);
function CommonMrowMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var e_1, _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.stretchChildren();
            try {
                for (var _b = __values(_this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    if (child.bbox.pwidth) {
                        _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
                        break;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return _this;
        }
        Object.defineProperty(class_1.prototype, "fixesPWidth", {
            get: function () {
                return false;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.stretchChildren = function () {
            var e_2, _a, e_3, _b, e_4, _c;
            var stretchy = [];
            try {
                for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var child = _e.value;
                    if (child.canStretch(1)) {
                        stretchy.push(child);
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_2) throw e_2.error; }
            }
            var count = stretchy.length;
            var nodeCount = this.childNodes.length;
            if (count && nodeCount > 1) {
                var H = 0, D = 0;
                var all = (count > 1 && count === nodeCount);
                try {
                    for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {
                        var child = _g.value;
                        var noStretch = (child.stretch.dir === 0);
                        if (all || noStretch) {
                            var _h = child.getOuterBBox(noStretch), h = _h.h, d = _h.d, rscale = _h.rscale;
                            h *= rscale;
                            d *= rscale;
                            if (h > H)
                                H = h;
                            if (d > D)
                                D = d;
                        }
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
                try {
                    for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
                        var child = stretchy_1_1.value;
                        child.coreMO().getStretchedVariant([H, D]);
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            }
        };
        return class_1;
    }(Base));
}
exports.CommonMrowMixin = CommonMrowMixin;
function CommonInferredMrowMixin(Base) {
    return (function (_super) {
        __extends(class_2, _super);
        function class_2() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_2.prototype.getScale = function () {
            this.bbox.scale = this.parent.bbox.scale;
            this.bbox.rscale = 1;
        };
        return class_2;
    }(Base));
}
exports.CommonInferredMrowMixin = CommonInferredMrowMixin;
//# sourceMappingURL=mrow.js.map

/***/ }),

/***/ 4126:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMsMixin = void 0;
function CommonMsMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            var attributes = _this.node.attributes;
            var quotes = attributes.getList('lquote', 'rquote');
            if (_this.variant !== 'monospace') {
                if (!attributes.isSet('lquote') && quotes.lquote === '"')
                    quotes.lquote = '\u201C';
                if (!attributes.isSet('rquote') && quotes.rquote === '"')
                    quotes.rquote = '\u201D';
            }
            _this.childNodes.unshift(_this.createText(quotes.lquote));
            _this.childNodes.push(_this.createText(quotes.rquote));
            return _this;
        }
        class_1.prototype.createText = function (text) {
            var node = this.wrap(this.mmlText(text));
            node.parent = this;
            return node;
        };
        return class_1;
    }(Base));
}
exports.CommonMsMixin = CommonMsMixin;
//# sourceMappingURL=ms.js.map

/***/ }),

/***/ 258:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMspaceMixin = void 0;
function CommonMspaceMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function (bbox, _recompute) {
            if (_recompute === void 0) { _recompute = false; }
            var attributes = this.node.attributes;
            bbox.w = this.length2em(attributes.get('width'), 0);
            bbox.h = this.length2em(attributes.get('height'), 0);
            bbox.d = this.length2em(attributes.get('depth'), 0);
        };
        class_1.prototype.handleVariant = function () {
        };
        return class_1;
    }(Base));
}
exports.CommonMspaceMixin = CommonMspaceMixin;
//# sourceMappingURL=mspace.js.map

/***/ }),

/***/ 4093:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMsqrtMixin = void 0;
var BBox_js_1 = __webpack_require__(6469);
function CommonMsqrtMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            var surd = _this.createMo('\u221A');
            surd.canStretch(1);
            var _a = _this.childNodes[_this.base].getOuterBBox(), h = _a.h, d = _a.d;
            var t = _this.font.params.rule_thickness;
            var p = (_this.node.attributes.get('displaystyle') ? _this.font.params.x_height : t);
            _this.surdH = h + d + 2 * t + p / 4;
            surd.getStretchedVariant([_this.surdH - d, d], true);
            return _this;
        }
        Object.defineProperty(class_1.prototype, "base", {
            get: function () {
                return 0;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "surd", {
            get: function () {
                return 1;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "root", {
            get: function () {
                return null;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.createMo = function (text) {
            var node = _super.prototype.createMo.call(this, text);
            this.childNodes.push(node);
            return node;
        };
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            var surdbox = this.childNodes[this.surd].getBBox();
            var basebox = new BBox_js_1.BBox(this.childNodes[this.base].getOuterBBox());
            var q = this.getPQ(surdbox)[1];
            var t = this.font.params.rule_thickness;
            var H = basebox.h + q + t;
            var _a = __read(this.getRootDimens(surdbox, H), 1), x = _a[0];
            bbox.h = H + t;
            this.combineRootBBox(bbox, surdbox, H);
            bbox.combine(surdbox, x, H - surdbox.h);
            bbox.combine(basebox, x + surdbox.w, 0);
            bbox.clean();
            this.setChildPWidths(recompute);
        };
        class_1.prototype.combineRootBBox = function (_bbox, _sbox, _H) {
        };
        class_1.prototype.getPQ = function (sbox) {
            var t = this.font.params.rule_thickness;
            var p = (this.node.attributes.get('displaystyle') ? this.font.params.x_height : t);
            var q = (sbox.h + sbox.d > this.surdH ?
                ((sbox.h + sbox.d) - (this.surdH - 2 * t - p / 2)) / 2 :
                t + p / 4);
            return [p, q];
        };
        class_1.prototype.getRootDimens = function (_sbox, _H) {
            return [0, 0, 0, 0];
        };
        return class_1;
    }(Base));
}
exports.CommonMsqrtMixin = CommonMsqrtMixin;
//# sourceMappingURL=msqrt.js.map

/***/ }),

/***/ 905:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMsubsupMixin = exports.CommonMsupMixin = exports.CommonMsubMixin = void 0;
function CommonMsubMixin(Base) {
    var _a;
    return _a = (function (_super) {
            __extends(class_1, _super);
            function class_1() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            Object.defineProperty(class_1.prototype, "scriptChild", {
                get: function () {
                    return this.childNodes[this.node.sub];
                },
                enumerable: false,
                configurable: true
            });
            class_1.prototype.getOffset = function () {
                return [0, -this.getV()];
            };
            return class_1;
        }(Base)),
        _a.useIC = false,
        _a;
}
exports.CommonMsubMixin = CommonMsubMixin;
function CommonMsupMixin(Base) {
    return (function (_super) {
        __extends(class_2, _super);
        function class_2() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_2.prototype, "scriptChild", {
            get: function () {
                return this.childNodes[this.node.sup];
            },
            enumerable: false,
            configurable: true
        });
        class_2.prototype.getOffset = function () {
            var x = this.getAdjustedIc() - (this.baseRemoveIc ? 0 : this.baseIc);
            return [x, this.getU()];
        };
        return class_2;
    }(Base));
}
exports.CommonMsupMixin = CommonMsupMixin;
function CommonMsubsupMixin(Base) {
    var _a;
    return _a = (function (_super) {
            __extends(class_3, _super);
            function class_3() {
                var _this = _super !== null && _super.apply(this, arguments) || this;
                _this.UVQ = null;
                return _this;
            }
            Object.defineProperty(class_3.prototype, "subChild", {
                get: function () {
                    return this.childNodes[this.node.sub];
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(class_3.prototype, "supChild", {
                get: function () {
                    return this.childNodes[this.node.sup];
                },
                enumerable: false,
                configurable: true
            });
            class_3.prototype.computeBBox = function (bbox, recompute) {
                if (recompute === void 0) { recompute = false; }
                var basebox = this.baseChild.getOuterBBox();
                var _a = __read([this.subChild.getOuterBBox(), this.supChild.getOuterBBox()], 2), subbox = _a[0], supbox = _a[1];
                bbox.empty();
                bbox.append(basebox);
                var w = this.getBaseWidth();
                var x = this.getAdjustedIc();
                var _b = __read(this.getUVQ(), 2), u = _b[0], v = _b[1];
                bbox.combine(subbox, w, v);
                bbox.combine(supbox, w + x, u);
                bbox.w += this.font.params.scriptspace;
                bbox.clean();
                this.setChildPWidths(recompute);
            };
            class_3.prototype.getUVQ = function (subbox, supbox) {
                if (subbox === void 0) { subbox = this.subChild.getOuterBBox(); }
                if (supbox === void 0) { supbox = this.supChild.getOuterBBox(); }
                var basebox = this.baseCore.getOuterBBox();
                if (this.UVQ)
                    return this.UVQ;
                var tex = this.font.params;
                var t = 3 * tex.rule_thickness;
                var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub2);
                var drop = this.baseCharZero(basebox.d * this.baseScale + tex.sub_drop * subbox.rscale);
                var _a = __read([this.getU(), Math.max(drop, subscriptshift)], 2), u = _a[0], v = _a[1];
                var q = (u - supbox.d * supbox.rscale) - (subbox.h * subbox.rscale - v);
                if (q < t) {
                    v += t - q;
                    var p = (4 / 5) * tex.x_height - (u - supbox.d * supbox.rscale);
                    if (p > 0) {
                        u += p;
                        v -= p;
                    }
                }
                u = Math.max(this.length2em(this.node.attributes.get('superscriptshift'), u), u);
                v = Math.max(this.length2em(this.node.attributes.get('subscriptshift'), v), v);
                q = (u - supbox.d * supbox.rscale) - (subbox.h * subbox.rscale - v);
                this.UVQ = [u, -v, q];
                return this.UVQ;
            };
            return class_3;
        }(Base)),
        _a.useIC = false,
        _a;
}
exports.CommonMsubsupMixin = CommonMsubsupMixin;
//# sourceMappingURL=msubsup.js.map

/***/ }),

/***/ 6237:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMtableMixin = void 0;
var BBox_js_1 = __webpack_require__(6469);
var string_js_1 = __webpack_require__(505);
var numeric_js_1 = __webpack_require__(7875);
function CommonMtableMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.numCols = 0;
            _this.numRows = 0;
            _this.data = null;
            _this.pwidthCells = [];
            _this.pWidth = 0;
            _this.numCols = (0, numeric_js_1.max)(_this.tableRows.map(function (row) { return row.numCells; }));
            _this.numRows = _this.childNodes.length;
            _this.hasLabels = _this.childNodes.reduce(function (value, row) { return value || row.node.isKind('mlabeledtr'); }, false);
            _this.findContainer();
            _this.isTop = !_this.container || (_this.container.node.isKind('math') && !_this.container.parent);
            if (_this.isTop) {
                _this.jax.table = _this;
            }
            _this.getPercentageWidth();
            var attributes = _this.node.attributes;
            _this.frame = attributes.get('frame') !== 'none';
            _this.fLine = (_this.frame && attributes.get('frame') ? .07 : 0);
            _this.fSpace = (_this.frame ? _this.convertLengths(_this.getAttributeArray('framespacing')) : [0, 0]);
            _this.cSpace = _this.convertLengths(_this.getColumnAttributes('columnspacing'));
            _this.rSpace = _this.convertLengths(_this.getRowAttributes('rowspacing'));
            _this.cLines = _this.getColumnAttributes('columnlines').map(function (x) { return (x === 'none' ? 0 : .07); });
            _this.rLines = _this.getRowAttributes('rowlines').map(function (x) { return (x === 'none' ? 0 : .07); });
            _this.cWidths = _this.getColumnWidths();
            _this.stretchRows();
            _this.stretchColumns();
            return _this;
        }
        Object.defineProperty(class_1.prototype, "tableRows", {
            get: function () {
                return this.childNodes;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.findContainer = function () {
            var node = this;
            var parent = node.parent;
            while (parent && (parent.node.notParent || parent.node.isKind('mrow'))) {
                node = parent;
                parent = parent.parent;
            }
            this.container = parent;
            this.containerI = node.node.childPosition();
        };
        class_1.prototype.getPercentageWidth = function () {
            if (this.hasLabels) {
                this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
            }
            else {
                var width = this.node.attributes.get('width');
                if ((0, string_js_1.isPercent)(width)) {
                    this.bbox.pwidth = width;
                }
            }
        };
        class_1.prototype.stretchRows = function () {
            var equal = this.node.attributes.get('equalrows');
            var HD = (equal ? this.getEqualRowHeight() : 0);
            var _a = (equal ? this.getTableData() : { H: [0], D: [0] }), H = _a.H, D = _a.D;
            var rows = this.tableRows;
            for (var i = 0; i < this.numRows; i++) {
                var hd = (equal ? [(HD + H[i] - D[i]) / 2, (HD - H[i] + D[i]) / 2] : null);
                rows[i].stretchChildren(hd);
            }
        };
        class_1.prototype.stretchColumns = function () {
            for (var i = 0; i < this.numCols; i++) {
                var width = (typeof this.cWidths[i] === 'number' ? this.cWidths[i] : null);
                this.stretchColumn(i, width);
            }
        };
        class_1.prototype.stretchColumn = function (i, W) {
            var e_1, _a, e_2, _b, e_3, _c;
            var stretchy = [];
            try {
                for (var _d = __values(this.tableRows), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var row = _e.value;
                    var cell = row.getChild(i);
                    if (cell) {
                        var child = cell.childNodes[0];
                        if (child.stretch.dir === 0 &&
                            child.canStretch(2)) {
                            stretchy.push(child);
                        }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_1) throw e_1.error; }
            }
            var count = stretchy.length;
            var nodeCount = this.childNodes.length;
            if (count && nodeCount > 1) {
                if (W === null) {
                    W = 0;
                    var all = (count > 1 && count === nodeCount);
                    try {
                        for (var _f = __values(this.tableRows), _g = _f.next(); !_g.done; _g = _f.next()) {
                            var row = _g.value;
                            var cell = row.getChild(i);
                            if (cell) {
                                var child = cell.childNodes[0];
                                var noStretch = (child.stretch.dir === 0);
                                if (all || noStretch) {
                                    var w = child.getBBox(noStretch).w;
                                    if (w > W) {
                                        W = w;
                                    }
                                }
                            }
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                }
                try {
                    for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
                        var child = stretchy_1_1.value;
                        child.coreMO().getStretchedVariant([W]);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
        };
        class_1.prototype.getTableData = function () {
            if (this.data) {
                return this.data;
            }
            var H = new Array(this.numRows).fill(0);
            var D = new Array(this.numRows).fill(0);
            var W = new Array(this.numCols).fill(0);
            var NH = new Array(this.numRows);
            var ND = new Array(this.numRows);
            var LW = [0];
            var rows = this.tableRows;
            for (var j = 0; j < rows.length; j++) {
                var M = 0;
                var row = rows[j];
                var align = row.node.attributes.get('rowalign');
                for (var i = 0; i < row.numCells; i++) {
                    var cell = row.getChild(i);
                    M = this.updateHDW(cell, i, j, align, H, D, W, M);
                    this.recordPWidthCell(cell, i);
                }
                NH[j] = H[j];
                ND[j] = D[j];
                if (row.labeled) {
                    M = this.updateHDW(row.childNodes[0], 0, j, align, H, D, LW, M);
                }
                this.extendHD(j, H, D, M);
                this.extendHD(j, NH, ND, M);
            }
            var L = LW[0];
            this.data = { H: H, D: D, W: W, NH: NH, ND: ND, L: L };
            return this.data;
        };
        class_1.prototype.updateHDW = function (cell, i, j, align, H, D, W, M) {
            var _a = cell.getBBox(), h = _a.h, d = _a.d, w = _a.w;
            var scale = cell.parent.bbox.rscale;
            if (cell.parent.bbox.rscale !== 1) {
                h *= scale;
                d *= scale;
                w *= scale;
            }
            if (this.node.getProperty('useHeight')) {
                if (h < .75)
                    h = .75;
                if (d < .25)
                    d = .25;
            }
            var m = 0;
            align = cell.node.attributes.get('rowalign') || align;
            if (align !== 'baseline' && align !== 'axis') {
                m = h + d;
                h = d = 0;
            }
            if (h > H[j])
                H[j] = h;
            if (d > D[j])
                D[j] = d;
            if (m > M)
                M = m;
            if (W && w > W[i])
                W[i] = w;
            return M;
        };
        class_1.prototype.extendHD = function (i, H, D, M) {
            var d = (M - (H[i] + D[i])) / 2;
            if (d < .00001)
                return;
            H[i] += d;
            D[i] += d;
        };
        class_1.prototype.recordPWidthCell = function (cell, i) {
            if (cell.childNodes[0] && cell.childNodes[0].getBBox().pwidth) {
                this.pwidthCells.push([cell, i]);
            }
        };
        class_1.prototype.computeBBox = function (bbox, _recompute) {
            if (_recompute === void 0) { _recompute = false; }
            var _a = this.getTableData(), H = _a.H, D = _a.D;
            var height, width;
            if (this.node.attributes.get('equalrows')) {
                var HD = this.getEqualRowHeight();
                height = (0, numeric_js_1.sum)([].concat(this.rLines, this.rSpace)) + HD * this.numRows;
            }
            else {
                height = (0, numeric_js_1.sum)(H.concat(D, this.rLines, this.rSpace));
            }
            height += 2 * (this.fLine + this.fSpace[1]);
            var CW = this.getComputedWidths();
            width = (0, numeric_js_1.sum)(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);
            var w = this.node.attributes.get('width');
            if (w !== 'auto') {
                width = Math.max(this.length2em(w, 0) + 2 * this.fLine, width);
            }
            var _b = __read(this.getBBoxHD(height), 2), h = _b[0], d = _b[1];
            bbox.h = h;
            bbox.d = d;
            bbox.w = width;
            var _c = __read(this.getBBoxLR(), 2), L = _c[0], R = _c[1];
            bbox.L = L;
            bbox.R = R;
            if (!(0, string_js_1.isPercent)(w)) {
                this.setColumnPWidths();
            }
        };
        class_1.prototype.setChildPWidths = function (_recompute, cwidth, _clear) {
            var width = this.node.attributes.get('width');
            if (!(0, string_js_1.isPercent)(width))
                return false;
            if (!this.hasLabels) {
                this.bbox.pwidth = '';
                this.container.bbox.pwidth = '';
            }
            var _a = this.bbox, w = _a.w, L = _a.L, R = _a.R;
            var labelInWidth = this.node.attributes.get('data-width-includes-label');
            var W = Math.max(w, this.length2em(width, Math.max(cwidth, L + w + R))) - (labelInWidth ? L + R : 0);
            var cols = (this.node.attributes.get('equalcolumns') ?
                Array(this.numCols).fill(this.percent(1 / Math.max(1, this.numCols))) :
                this.getColumnAttributes('columnwidth', 0));
            this.cWidths = this.getColumnWidthsFixed(cols, W);
            var CW = this.getComputedWidths();
            this.pWidth = (0, numeric_js_1.sum)(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);
            if (this.isTop) {
                this.bbox.w = this.pWidth;
            }
            this.setColumnPWidths();
            if (this.pWidth !== w) {
                this.parent.invalidateBBox();
            }
            return this.pWidth !== w;
        };
        class_1.prototype.setColumnPWidths = function () {
            var e_4, _a;
            var W = this.cWidths;
            try {
                for (var _b = __values(this.pwidthCells), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var _d = __read(_c.value, 2), cell = _d[0], i = _d[1];
                    if (cell.setChildPWidths(false, W[i])) {
                        cell.invalidateBBox();
                        cell.getBBox();
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_4) throw e_4.error; }
            }
        };
        class_1.prototype.getBBoxHD = function (height) {
            var _a = __read(this.getAlignmentRow(), 2), align = _a[0], row = _a[1];
            if (row === null) {
                var a = this.font.params.axis_height;
                var h2 = height / 2;
                var HD = {
                    top: [0, height],
                    center: [h2, h2],
                    bottom: [height, 0],
                    baseline: [h2, h2],
                    axis: [h2 + a, h2 - a]
                };
                return HD[align] || [h2, h2];
            }
            else {
                var y = this.getVerticalPosition(row, align);
                return [y, height - y];
            }
        };
        class_1.prototype.getBBoxLR = function () {
            if (this.hasLabels) {
                var attributes = this.node.attributes;
                var side = attributes.get('side');
                var _a = __read(this.getPadAlignShift(side), 2), pad = _a[0], align = _a[1];
                var labels = this.hasLabels && !!attributes.get('data-width-includes-label');
                if (labels && this.frame && this.fSpace[0]) {
                    pad -= this.fSpace[0];
                }
                return (align === 'center' && !labels ? [pad, pad] :
                    side === 'left' ? [pad, 0] : [0, pad]);
            }
            return [0, 0];
        };
        class_1.prototype.getPadAlignShift = function (side) {
            var L = this.getTableData().L;
            var sep = this.length2em(this.node.attributes.get('minlabelspacing'));
            var pad = L + sep;
            var _a = __read((this.styles == null ? ['', ''] :
                [this.styles.get('padding-left'), this.styles.get('padding-right')]), 2), lpad = _a[0], rpad = _a[1];
            if (lpad || rpad) {
                pad = Math.max(pad, this.length2em(lpad || '0'), this.length2em(rpad || '0'));
            }
            var _b = __read(this.getAlignShift(), 2), align = _b[0], shift = _b[1];
            if (align === side) {
                shift = (side === 'left' ? Math.max(pad, shift) - pad : Math.min(-pad, shift) + pad);
            }
            return [pad, align, shift];
        };
        class_1.prototype.getAlignShift = function () {
            return (this.isTop ? _super.prototype.getAlignShift.call(this) :
                [this.container.getChildAlign(this.containerI), 0]);
        };
        class_1.prototype.getWidth = function () {
            return this.pWidth || this.getBBox().w;
        };
        class_1.prototype.getEqualRowHeight = function () {
            var _a = this.getTableData(), H = _a.H, D = _a.D;
            var HD = Array.from(H.keys()).map(function (i) { return H[i] + D[i]; });
            return Math.max.apply(Math, HD);
        };
        class_1.prototype.getComputedWidths = function () {
            var _this = this;
            var W = this.getTableData().W;
            var CW = Array.from(W.keys()).map(function (i) {
                return (typeof _this.cWidths[i] === 'number' ? _this.cWidths[i] : W[i]);
            });
            if (this.node.attributes.get('equalcolumns')) {
                CW = Array(CW.length).fill((0, numeric_js_1.max)(CW));
            }
            return CW;
        };
        class_1.prototype.getColumnWidths = function () {
            var width = this.node.attributes.get('width');
            if (this.node.attributes.get('equalcolumns')) {
                return this.getEqualColumns(width);
            }
            var swidths = this.getColumnAttributes('columnwidth', 0);
            if (width === 'auto') {
                return this.getColumnWidthsAuto(swidths);
            }
            if ((0, string_js_1.isPercent)(width)) {
                return this.getColumnWidthsPercent(swidths);
            }
            return this.getColumnWidthsFixed(swidths, this.length2em(width));
        };
        class_1.prototype.getEqualColumns = function (width) {
            var n = Math.max(1, this.numCols);
            var cwidth;
            if (width === 'auto') {
                var W = this.getTableData().W;
                cwidth = (0, numeric_js_1.max)(W);
            }
            else if ((0, string_js_1.isPercent)(width)) {
                cwidth = this.percent(1 / n);
            }
            else {
                var w = (0, numeric_js_1.sum)([].concat(this.cLines, this.cSpace)) + 2 * this.fSpace[0];
                cwidth = Math.max(0, this.length2em(width) - w) / n;
            }
            return Array(this.numCols).fill(cwidth);
        };
        class_1.prototype.getColumnWidthsAuto = function (swidths) {
            var _this = this;
            return swidths.map(function (x) {
                if (x === 'auto' || x === 'fit')
                    return null;
                if ((0, string_js_1.isPercent)(x))
                    return x;
                return _this.length2em(x);
            });
        };
        class_1.prototype.getColumnWidthsPercent = function (swidths) {
            var _this = this;
            var hasFit = swidths.indexOf('fit') >= 0;
            var W = (hasFit ? this.getTableData() : { W: null }).W;
            return Array.from(swidths.keys()).map(function (i) {
                var x = swidths[i];
                if (x === 'fit')
                    return null;
                if (x === 'auto')
                    return (hasFit ? W[i] : null);
                if ((0, string_js_1.isPercent)(x))
                    return x;
                return _this.length2em(x);
            });
        };
        class_1.prototype.getColumnWidthsFixed = function (swidths, width) {
            var _this = this;
            var indices = Array.from(swidths.keys());
            var fit = indices.filter(function (i) { return swidths[i] === 'fit'; });
            var auto = indices.filter(function (i) { return swidths[i] === 'auto'; });
            var n = fit.length || auto.length;
            var W = (n ? this.getTableData() : { W: null }).W;
            var cwidth = width - (0, numeric_js_1.sum)([].concat(this.cLines, this.cSpace)) - 2 * this.fSpace[0];
            var dw = cwidth;
            indices.forEach(function (i) {
                var x = swidths[i];
                dw -= (x === 'fit' || x === 'auto' ? W[i] : _this.length2em(x, cwidth));
            });
            var fw = (n && dw > 0 ? dw / n : 0);
            return indices.map(function (i) {
                var x = swidths[i];
                if (x === 'fit')
                    return W[i] + fw;
                if (x === 'auto')
                    return W[i] + (fit.length === 0 ? fw : 0);
                return _this.length2em(x, cwidth);
            });
        };
        class_1.prototype.getVerticalPosition = function (i, align) {
            var equal = this.node.attributes.get('equalrows');
            var _a = this.getTableData(), H = _a.H, D = _a.D;
            var HD = (equal ? this.getEqualRowHeight() : 0);
            var space = this.getRowHalfSpacing();
            var y = this.fLine;
            for (var j = 0; j < i; j++) {
                y += space[j] + (equal ? HD : H[j] + D[j]) + space[j + 1] + this.rLines[j];
            }
            var _b = __read((equal ? [(HD + H[i] - D[i]) / 2, (HD - H[i] + D[i]) / 2] : [H[i], D[i]]), 2), h = _b[0], d = _b[1];
            var offset = {
                top: 0,
                center: space[i] + (h + d) / 2,
                bottom: space[i] + h + d + space[i + 1],
                baseline: space[i] + h,
                axis: space[i] + h - .25
            };
            y += offset[align] || 0;
            return y;
        };
        class_1.prototype.getEmHalfSpacing = function (fspace, space, scale) {
            if (scale === void 0) { scale = 1; }
            var fspaceEm = this.em(fspace * scale);
            var spaceEm = this.addEm(space, 2 / scale);
            spaceEm.unshift(fspaceEm);
            spaceEm.push(fspaceEm);
            return spaceEm;
        };
        class_1.prototype.getRowHalfSpacing = function () {
            var space = this.rSpace.map(function (x) { return x / 2; });
            space.unshift(this.fSpace[1]);
            space.push(this.fSpace[1]);
            return space;
        };
        class_1.prototype.getColumnHalfSpacing = function () {
            var space = this.cSpace.map(function (x) { return x / 2; });
            space.unshift(this.fSpace[0]);
            space.push(this.fSpace[0]);
            return space;
        };
        class_1.prototype.getAlignmentRow = function () {
            var _a = __read((0, string_js_1.split)(this.node.attributes.get('align')), 2), align = _a[0], row = _a[1];
            if (row == null)
                return [align, null];
            var i = parseInt(row);
            if (i < 0)
                i += this.numRows + 1;
            return [align, i < 1 || i > this.numRows ? null : i - 1];
        };
        class_1.prototype.getColumnAttributes = function (name, i) {
            if (i === void 0) { i = 1; }
            var n = this.numCols - i;
            var columns = this.getAttributeArray(name);
            if (columns.length === 0)
                return null;
            while (columns.length < n) {
                columns.push(columns[columns.length - 1]);
            }
            if (columns.length > n) {
                columns.splice(n);
            }
            return columns;
        };
        class_1.prototype.getRowAttributes = function (name, i) {
            if (i === void 0) { i = 1; }
            var n = this.numRows - i;
            var rows = this.getAttributeArray(name);
            if (rows.length === 0)
                return null;
            while (rows.length < n) {
                rows.push(rows[rows.length - 1]);
            }
            if (rows.length > n) {
                rows.splice(n);
            }
            return rows;
        };
        class_1.prototype.getAttributeArray = function (name) {
            var value = this.node.attributes.get(name);
            if (!value)
                return [this.node.attributes.getDefault(name)];
            return (0, string_js_1.split)(value);
        };
        class_1.prototype.addEm = function (list, n) {
            var _this = this;
            if (n === void 0) { n = 1; }
            if (!list)
                return null;
            return list.map(function (x) { return _this.em(x / n); });
        };
        class_1.prototype.convertLengths = function (list) {
            var _this = this;
            if (!list)
                return null;
            return list.map(function (x) { return _this.length2em(x); });
        };
        return class_1;
    }(Base));
}
exports.CommonMtableMixin = CommonMtableMixin;
//# sourceMappingURL=mtable.js.map

/***/ }),

/***/ 5164:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMtdMixin = void 0;
function CommonMtdMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_1.prototype, "fixesPWidth", {
            get: function () {
                return false;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.invalidateBBox = function () {
            this.bboxComputed = false;
        };
        class_1.prototype.getWrapWidth = function (_j) {
            var table = this.parent.parent;
            var row = this.parent;
            var i = this.node.childPosition() - (row.labeled ? 1 : 0);
            return (typeof (table.cWidths[i]) === 'number' ? table.cWidths[i] : table.getTableData().W[i]);
        };
        class_1.prototype.getChildAlign = function (_i) {
            return this.node.attributes.get('columnalign');
        };
        return class_1;
    }(Base));
}
exports.CommonMtdMixin = CommonMtdMixin;
//# sourceMappingURL=mtd.js.map

/***/ }),

/***/ 6319:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMtextMixin = void 0;
function CommonMtextMixin(Base) {
    var _a;
    return _a = (function (_super) {
            __extends(class_1, _super);
            function class_1() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_1.prototype.getVariant = function () {
                var options = this.jax.options;
                var data = this.jax.math.outputData;
                var merror = ((!!data.merrorFamily || !!options.merrorFont) && this.node.Parent.isKind('merror'));
                if (!!data.mtextFamily || !!options.mtextFont || merror) {
                    var variant = this.node.attributes.get('mathvariant');
                    var font = this.constructor.INHERITFONTS[variant] || this.jax.font.getCssFont(variant);
                    var family = font[0] || (merror ? data.merrorFamily || options.merrorFont :
                        data.mtextFamily || options.mtextFont);
                    this.variant = this.explicitVariant(family, font[2] ? 'bold' : '', font[1] ? 'italic' : '');
                    return;
                }
                _super.prototype.getVariant.call(this);
            };
            return class_1;
        }(Base)),
        _a.INHERITFONTS = {
            normal: ['', false, false],
            bold: ['', false, true],
            italic: ['', true, false],
            'bold-italic': ['', true, true]
        },
        _a;
}
exports.CommonMtextMixin = CommonMtextMixin;
//# sourceMappingURL=mtext.js.map

/***/ }),

/***/ 5766:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMlabeledtrMixin = exports.CommonMtrMixin = void 0;
function CommonMtrMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_1.prototype, "fixesPWidth", {
            get: function () {
                return false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "numCells", {
            get: function () {
                return this.childNodes.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "labeled", {
            get: function () {
                return false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "tableCells", {
            get: function () {
                return this.childNodes;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.getChild = function (i) {
            return this.childNodes[i];
        };
        class_1.prototype.getChildBBoxes = function () {
            return this.childNodes.map(function (cell) { return cell.getBBox(); });
        };
        class_1.prototype.stretchChildren = function (HD) {
            var e_1, _a, e_2, _b, e_3, _c;
            if (HD === void 0) { HD = null; }
            var stretchy = [];
            var children = (this.labeled ? this.childNodes.slice(1) : this.childNodes);
            try {
                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
                    var mtd = children_1_1.value;
                    var child = mtd.childNodes[0];
                    if (child.canStretch(1)) {
                        stretchy.push(child);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            var count = stretchy.length;
            var nodeCount = this.childNodes.length;
            if (count && nodeCount > 1) {
                if (HD === null) {
                    var H = 0, D = 0;
                    var all = (count > 1 && count === nodeCount);
                    try {
                        for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {
                            var mtd = children_2_1.value;
                            var child = mtd.childNodes[0];
                            var noStretch = (child.stretch.dir === 0);
                            if (all || noStretch) {
                                var _d = child.getBBox(noStretch), h = _d.h, d = _d.d;
                                if (h > H) {
                                    H = h;
                                }
                                if (d > D) {
                                    D = d;
                                }
                            }
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (children_2_1 && !children_2_1.done && (_b = children_2.return)) _b.call(children_2);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                    HD = [H, D];
                }
                try {
                    for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
                        var child = stretchy_1_1.value;
                        child.coreMO().getStretchedVariant(HD);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
        };
        return class_1;
    }(Base));
}
exports.CommonMtrMixin = CommonMtrMixin;
function CommonMlabeledtrMixin(Base) {
    return (function (_super) {
        __extends(class_2, _super);
        function class_2() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_2.prototype, "numCells", {
            get: function () {
                return Math.max(0, this.childNodes.length - 1);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_2.prototype, "labeled", {
            get: function () {
                return true;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_2.prototype, "tableCells", {
            get: function () {
                return this.childNodes.slice(1);
            },
            enumerable: false,
            configurable: true
        });
        class_2.prototype.getChild = function (i) {
            return this.childNodes[i + 1];
        };
        class_2.prototype.getChildBBoxes = function () {
            return this.childNodes.slice(1).map(function (cell) { return cell.getBBox(); });
        };
        return class_2;
    }(Base));
}
exports.CommonMlabeledtrMixin = CommonMlabeledtrMixin;
//# sourceMappingURL=mtr.js.map

/***/ }),

/***/ 1971:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonMunderoverMixin = exports.CommonMoverMixin = exports.CommonMunderMixin = void 0;
function CommonMunderMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.stretchChildren();
            return _this;
        }
        Object.defineProperty(class_1.prototype, "scriptChild", {
            get: function () {
                return this.childNodes[this.node.under];
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.computeBBox = function (bbox, recompute) {
            if (recompute === void 0) { recompute = false; }
            if (this.hasMovableLimits()) {
                _super.prototype.computeBBox.call(this, bbox, recompute);
                return;
            }
            bbox.empty();
            var basebox = this.baseChild.getOuterBBox();
            var underbox = this.scriptChild.getOuterBBox();
            var v = this.getUnderKV(basebox, underbox)[1];
            var delta = (this.isLineBelow ? 0 : this.getDelta(true));
            var _a = __read(this.getDeltaW([basebox, underbox], [0, -delta]), 2), bw = _a[0], uw = _a[1];
            bbox.combine(basebox, bw, 0);
            bbox.combine(underbox, uw, v);
            bbox.d += this.font.params.big_op_spacing5;
            bbox.clean();
            this.setChildPWidths(recompute);
        };
        return class_1;
    }(Base));
}
exports.CommonMunderMixin = CommonMunderMixin;
function CommonMoverMixin(Base) {
    return (function (_super) {
        __extends(class_2, _super);
        function class_2() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.stretchChildren();
            return _this;
        }
        Object.defineProperty(class_2.prototype, "scriptChild", {
            get: function () {
                return this.childNodes[this.node.over];
            },
            enumerable: false,
            configurable: true
        });
        class_2.prototype.computeBBox = function (bbox) {
            if (this.hasMovableLimits()) {
                _super.prototype.computeBBox.call(this, bbox);
                return;
            }
            bbox.empty();
            var basebox = this.baseChild.getOuterBBox();
            var overbox = this.scriptChild.getOuterBBox();
            if (this.node.attributes.get('accent')) {
                basebox.h = Math.max(basebox.h, this.font.params.x_height * basebox.scale);
            }
            var u = this.getOverKU(basebox, overbox)[1];
            var delta = (this.isLineAbove ? 0 : this.getDelta());
            var _a = __read(this.getDeltaW([basebox, overbox], [0, delta]), 2), bw = _a[0], ow = _a[1];
            bbox.combine(basebox, bw, 0);
            bbox.combine(overbox, ow, u);
            bbox.h += this.font.params.big_op_spacing5;
            bbox.clean();
        };
        return class_2;
    }(Base));
}
exports.CommonMoverMixin = CommonMoverMixin;
function CommonMunderoverMixin(Base) {
    return (function (_super) {
        __extends(class_3, _super);
        function class_3() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.stretchChildren();
            return _this;
        }
        Object.defineProperty(class_3.prototype, "underChild", {
            get: function () {
                return this.childNodes[this.node.under];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_3.prototype, "overChild", {
            get: function () {
                return this.childNodes[this.node.over];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_3.prototype, "subChild", {
            get: function () {
                return this.underChild;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_3.prototype, "supChild", {
            get: function () {
                return this.overChild;
            },
            enumerable: false,
            configurable: true
        });
        class_3.prototype.computeBBox = function (bbox) {
            if (this.hasMovableLimits()) {
                _super.prototype.computeBBox.call(this, bbox);
                return;
            }
            bbox.empty();
            var overbox = this.overChild.getOuterBBox();
            var basebox = this.baseChild.getOuterBBox();
            var underbox = this.underChild.getOuterBBox();
            if (this.node.attributes.get('accent')) {
                basebox.h = Math.max(basebox.h, this.font.params.x_height * basebox.scale);
            }
            var u = this.getOverKU(basebox, overbox)[1];
            var v = this.getUnderKV(basebox, underbox)[1];
            var delta = this.getDelta();
            var _a = __read(this.getDeltaW([basebox, underbox, overbox], [0, this.isLineBelow ? 0 : -delta, this.isLineAbove ? 0 : delta]), 3), bw = _a[0], uw = _a[1], ow = _a[2];
            bbox.combine(basebox, bw, 0);
            bbox.combine(overbox, ow, u);
            bbox.combine(underbox, uw, v);
            var z = this.font.params.big_op_spacing5;
            bbox.h += z;
            bbox.d += z;
            bbox.clean();
        };
        return class_3;
    }(Base));
}
exports.CommonMunderoverMixin = CommonMunderoverMixin;
//# sourceMappingURL=munderover.js.map

/***/ }),

/***/ 167:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonScriptbaseMixin = void 0;
var MmlNode_js_1 = __webpack_require__(9007);
function CommonScriptbaseMixin(Base) {
    var _a;
    return _a = (function (_super) {
            __extends(class_1, _super);
            function class_1() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
                _this.baseScale = 1;
                _this.baseIc = 0;
                _this.baseRemoveIc = false;
                _this.baseIsChar = false;
                _this.baseHasAccentOver = null;
                _this.baseHasAccentUnder = null;
                _this.isLineAbove = false;
                _this.isLineBelow = false;
                _this.isMathAccent = false;
                var core = _this.baseCore = _this.getBaseCore();
                if (!core)
                    return _this;
                _this.setBaseAccentsFor(core);
                _this.baseScale = _this.getBaseScale();
                _this.baseIc = _this.getBaseIc();
                _this.baseIsChar = _this.isCharBase();
                _this.isMathAccent = _this.baseIsChar &&
                    (_this.scriptChild && !!_this.scriptChild.coreMO().node.getProperty('mathaccent'));
                _this.checkLineAccents();
                _this.baseRemoveIc = !_this.isLineAbove && !_this.isLineBelow &&
                    (!_this.constructor.useIC || _this.isMathAccent);
                return _this;
            }
            Object.defineProperty(class_1.prototype, "baseChild", {
                get: function () {
                    return this.childNodes[this.node.base];
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(class_1.prototype, "scriptChild", {
                get: function () {
                    return this.childNodes[1];
                },
                enumerable: false,
                configurable: true
            });
            class_1.prototype.getBaseCore = function () {
                var core = this.getSemanticBase() || this.childNodes[0];
                while (core &&
                    ((core.childNodes.length === 1 &&
                        (core.node.isKind('mrow') ||
                            (core.node.isKind('TeXAtom') && core.node.texClass !== MmlNode_js_1.TEXCLASS.VCENTER) ||
                            core.node.isKind('mstyle') || core.node.isKind('mpadded') ||
                            core.node.isKind('mphantom') || core.node.isKind('semantics'))) ||
                        (core.node.isKind('munderover') && core.isMathAccent))) {
                    this.setBaseAccentsFor(core);
                    core = core.childNodes[0];
                }
                if (!core) {
                    this.baseHasAccentOver = this.baseHasAccentUnder = false;
                }
                return core || this.childNodes[0];
            };
            class_1.prototype.setBaseAccentsFor = function (core) {
                if (core.node.isKind('munderover')) {
                    if (this.baseHasAccentOver === null) {
                        this.baseHasAccentOver = !!core.node.attributes.get('accent');
                    }
                    if (this.baseHasAccentUnder === null) {
                        this.baseHasAccentUnder = !!core.node.attributes.get('accentunder');
                    }
                }
            };
            class_1.prototype.getSemanticBase = function () {
                var fence = this.node.attributes.getExplicit('data-semantic-fencepointer');
                return this.getBaseFence(this.baseChild, fence);
            };
            class_1.prototype.getBaseFence = function (fence, id) {
                var e_1, _a;
                if (!fence || !fence.node.attributes || !id) {
                    return null;
                }
                if (fence.node.attributes.getExplicit('data-semantic-id') === id) {
                    return fence;
                }
                try {
                    for (var _b = __values(fence.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var child = _c.value;
                        var result = this.getBaseFence(child, id);
                        if (result) {
                            return result;
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                return null;
            };
            class_1.prototype.getBaseScale = function () {
                var child = this.baseCore;
                var scale = 1;
                while (child && child !== this) {
                    var bbox = child.getOuterBBox();
                    scale *= bbox.rscale;
                    child = child.parent;
                }
                return scale;
            };
            class_1.prototype.getBaseIc = function () {
                return this.baseCore.getOuterBBox().ic * this.baseScale;
            };
            class_1.prototype.getAdjustedIc = function () {
                var bbox = this.baseCore.getOuterBBox();
                return (bbox.ic ? 1.05 * bbox.ic + .05 : 0) * this.baseScale;
            };
            class_1.prototype.isCharBase = function () {
                var base = this.baseCore;
                return (((base.node.isKind('mo') && base.size === null) ||
                    base.node.isKind('mi') || base.node.isKind('mn')) &&
                    base.bbox.rscale === 1 && Array.from(base.getText()).length === 1);
            };
            class_1.prototype.checkLineAccents = function () {
                if (!this.node.isKind('munderover'))
                    return;
                if (this.node.isKind('mover')) {
                    this.isLineAbove = this.isLineAccent(this.scriptChild);
                }
                else if (this.node.isKind('munder')) {
                    this.isLineBelow = this.isLineAccent(this.scriptChild);
                }
                else {
                    var mml = this;
                    this.isLineAbove = this.isLineAccent(mml.overChild);
                    this.isLineBelow = this.isLineAccent(mml.underChild);
                }
            };
            class_1.prototype.isLineAccent = function (script) {
                var node = script.coreMO().node;
                return (node.isToken && node.getText() === '\u2015');
            };
            class_1.prototype.getBaseWidth = function () {
                var bbox = this.baseChild.getOuterBBox();
                return bbox.w * bbox.rscale - (this.baseRemoveIc ? this.baseIc : 0) + this.font.params.extra_ic;
            };
            class_1.prototype.computeBBox = function (bbox, recompute) {
                if (recompute === void 0) { recompute = false; }
                var w = this.getBaseWidth();
                var _a = __read(this.getOffset(), 2), x = _a[0], y = _a[1];
                bbox.append(this.baseChild.getOuterBBox());
                bbox.combine(this.scriptChild.getOuterBBox(), w + x, y);
                bbox.w += this.font.params.scriptspace;
                bbox.clean();
                this.setChildPWidths(recompute);
            };
            class_1.prototype.getOffset = function () {
                return [0, 0];
            };
            class_1.prototype.baseCharZero = function (n) {
                var largeop = !!this.baseCore.node.attributes.get('largeop');
                var scale = this.baseScale;
                return (this.baseIsChar && !largeop && scale === 1 ? 0 : n);
            };
            class_1.prototype.getV = function () {
                var bbox = this.baseCore.getOuterBBox();
                var sbox = this.scriptChild.getOuterBBox();
                var tex = this.font.params;
                var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub1);
                return Math.max(this.baseCharZero(bbox.d * this.baseScale + tex.sub_drop * sbox.rscale), subscriptshift, sbox.h * sbox.rscale - (4 / 5) * tex.x_height);
            };
            class_1.prototype.getU = function () {
                var bbox = this.baseCore.getOuterBBox();
                var sbox = this.scriptChild.getOuterBBox();
                var tex = this.font.params;
                var attr = this.node.attributes.getList('displaystyle', 'superscriptshift');
                var prime = this.node.getProperty('texprimestyle');
                var p = prime ? tex.sup3 : (attr.displaystyle ? tex.sup1 : tex.sup2);
                var superscriptshift = this.length2em(attr.superscriptshift, p);
                return Math.max(this.baseCharZero(bbox.h * this.baseScale - tex.sup_drop * sbox.rscale), superscriptshift, sbox.d * sbox.rscale + (1 / 4) * tex.x_height);
            };
            class_1.prototype.hasMovableLimits = function () {
                var display = this.node.attributes.get('displaystyle');
                var mo = this.baseChild.coreMO().node;
                return (!display && !!mo.attributes.get('movablelimits'));
            };
            class_1.prototype.getOverKU = function (basebox, overbox) {
                var accent = this.node.attributes.get('accent');
                var tex = this.font.params;
                var d = overbox.d * overbox.rscale;
                var t = tex.rule_thickness * tex.separation_factor;
                var delta = (this.baseHasAccentOver ? t : 0);
                var T = (this.isLineAbove ? 3 * tex.rule_thickness : t);
                var k = (accent ? T : Math.max(tex.big_op_spacing1, tex.big_op_spacing3 - Math.max(0, d))) - delta;
                return [k, basebox.h * basebox.rscale + k + d];
            };
            class_1.prototype.getUnderKV = function (basebox, underbox) {
                var accent = this.node.attributes.get('accentunder');
                var tex = this.font.params;
                var h = underbox.h * underbox.rscale;
                var t = tex.rule_thickness * tex.separation_factor;
                var delta = (this.baseHasAccentUnder ? t : 0);
                var T = (this.isLineBelow ? 3 * tex.rule_thickness : t);
                var k = (accent ? T : Math.max(tex.big_op_spacing2, tex.big_op_spacing4 - h)) - delta;
                return [k, -(basebox.d * basebox.rscale + k + h)];
            };
            class_1.prototype.getDeltaW = function (boxes, delta) {
                var e_2, _a, e_3, _b;
                if (delta === void 0) { delta = [0, 0, 0]; }
                var align = this.node.attributes.get('align');
                var widths = boxes.map(function (box) { return box.w * box.rscale; });
                widths[0] -= (this.baseRemoveIc && !this.baseCore.node.attributes.get('largeop') ? this.baseIc : 0);
                var w = Math.max.apply(Math, __spreadArray([], __read(widths), false));
                var dw = [];
                var m = 0;
                try {
                    for (var _c = __values(widths.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var i = _d.value;
                        dw[i] = (align === 'center' ? (w - widths[i]) / 2 :
                            align === 'right' ? w - widths[i] : 0) + delta[i];
                        if (dw[i] < m) {
                            m = -dw[i];
                        }
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
                if (m) {
                    try {
                        for (var _e = __values(dw.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {
                            var i = _f.value;
                            dw[i] += m;
                        }
                    }
                    catch (e_3_1) { e_3 = { error: e_3_1 }; }
                    finally {
                        try {
                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                        }
                        finally { if (e_3) throw e_3.error; }
                    }
                }
                [1, 2].map(function (i) { return dw[i] += (boxes[i] ? boxes[i].dx * boxes[0].scale : 0); });
                return dw;
            };
            class_1.prototype.getDelta = function (noskew) {
                if (noskew === void 0) { noskew = false; }
                var accent = this.node.attributes.get('accent');
                var _a = this.baseCore.getOuterBBox(), sk = _a.sk, ic = _a.ic;
                return ((accent && !noskew ? sk : 0) + this.font.skewIcFactor * ic) * this.baseScale;
            };
            class_1.prototype.stretchChildren = function () {
                var e_4, _a, e_5, _b, e_6, _c;
                var stretchy = [];
                try {
                    for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {
                        var child = _e.value;
                        if (child.canStretch(2)) {
                            stretchy.push(child);
                        }
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
                var count = stretchy.length;
                var nodeCount = this.childNodes.length;
                if (count && nodeCount > 1) {
                    var W = 0;
                    var all = (count > 1 && count === nodeCount);
                    try {
                        for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {
                            var child = _g.value;
                            var noStretch = (child.stretch.dir === 0);
                            if (all || noStretch) {
                                var _h = child.getOuterBBox(noStretch), w = _h.w, rscale = _h.rscale;
                                if (w * rscale > W)
                                    W = w * rscale;
                            }
                        }
                    }
                    catch (e_5_1) { e_5 = { error: e_5_1 }; }
                    finally {
                        try {
                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                        }
                        finally { if (e_5) throw e_5.error; }
                    }
                    try {
                        for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
                            var child = stretchy_1_1.value;
                            child.coreMO().getStretchedVariant([W / child.bbox.rscale]);
                        }
                    }
                    catch (e_6_1) { e_6 = { error: e_6_1 }; }
                    finally {
                        try {
                            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
                        }
                        finally { if (e_6) throw e_6.error; }
                    }
                }
            };
            return class_1;
        }(Base)),
        _a.useIC = true,
        _a;
}
exports.CommonScriptbaseMixin = CommonScriptbaseMixin;
//# sourceMappingURL=scriptbase.js.map

/***/ }),

/***/ 5806:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonSemanticsMixin = void 0;
function CommonSemanticsMixin(Base) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function (bbox, _recompute) {
            if (_recompute === void 0) { _recompute = false; }
            if (this.childNodes.length) {
                var _a = this.childNodes[0].getBBox(), w = _a.w, h = _a.h, d = _a.d;
                bbox.w = w;
                bbox.h = h;
                bbox.d = d;
            }
        };
        return class_1;
    }(Base));
}
exports.CommonSemanticsMixin = CommonSemanticsMixin;
//# sourceMappingURL=semantics.js.map

/***/ }),

/***/ 5920:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommonTeXFontMixin = void 0;
function CommonTeXFontMixin(Base) {
    var _a;
    return _a = (function (_super) {
            __extends(class_1, _super);
            function class_1() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_1.prototype.getDelimiterData = function (n) {
                return this.getChar('-smallop', n) || this.getChar('-size4', n);
            };
            return class_1;
        }(Base)),
        _a.NAME = 'TeX',
        _a.defaultVariants = __spreadArray(__spreadArray([], __read(Base.defaultVariants), false), [
            ['-smallop', 'normal'],
            ['-largeop', 'normal'],
            ['-size3', 'normal'],
            ['-size4', 'normal'],
            ['-tex-calligraphic', 'italic'],
            ['-tex-bold-calligraphic', 'bold-italic'],
            ['-tex-oldstyle', 'normal'],
            ['-tex-bold-oldstyle', 'bold'],
            ['-tex-mathit', 'italic'],
            ['-tex-variant', 'normal']
        ], false),
        _a.defaultCssFonts = __assign(__assign({}, Base.defaultCssFonts), { '-smallop': ['serif', false, false], '-largeop': ['serif', false, false], '-size3': ['serif', false, false], '-size4': ['serif', false, false], '-tex-calligraphic': ['cursive', true, false], '-tex-bold-calligraphic': ['cursive', true, true], '-tex-oldstyle': ['serif', false, false], '-tex-bold-oldstyle': ['serif', false, true], '-tex-mathit': ['serif', true, false] }),
        _a.defaultSizeVariants = ['normal', '-smallop', '-largeop', '-size3', '-size4', '-tex-variant'],
        _a.defaultStretchVariants = ['-size4'],
        _a;
}
exports.CommonTeXFontMixin = CommonTeXFontMixin;
//# sourceMappingURL=tex.js.map

/***/ }),

/***/ 5887:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.boldItalic = void 0;
exports.boldItalic = {
    0x2F: [.711, .21, .894],
    0x131: [.452, .008, .394, { sk: .0319 }],
    0x237: [.451, .201, .439, { sk: .0958 }],
    0x2044: [.711, .21, .894],
    0x2206: [.711, 0, .958, { sk: .192 }],
    0x29F8: [.711, .21, .894],
};
//# sourceMappingURL=bold-italic.js.map

/***/ }),

/***/ 1103:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bold = void 0;
exports.bold = {
    0x21: [.705, 0, .35],
    0x22: [.694, -0.329, .603],
    0x23: [.694, .193, .958],
    0x24: [.75, .056, .575],
    0x25: [.75, .056, .958],
    0x26: [.705, .011, .894],
    0x27: [.694, -0.329, .319],
    0x28: [.75, .249, .447],
    0x29: [.75, .249, .447],
    0x2A: [.75, -0.306, .575],
    0x2B: [.633, .131, .894],
    0x2C: [.171, .194, .319],
    0x2D: [.278, -0.166, .383],
    0x2E: [.171, 0, .319],
    0x2F: [.75, .25, .575],
    0x3A: [.444, 0, .319],
    0x3B: [.444, .194, .319],
    0x3C: [.587, .085, .894],
    0x3D: [.393, -0.109, .894],
    0x3E: [.587, .085, .894],
    0x3F: [.7, 0, .543],
    0x40: [.699, .006, .894],
    0x5B: [.75, .25, .319],
    0x5C: [.75, .25, .575],
    0x5D: [.75, .25, .319],
    0x5E: [.694, -0.52, .575],
    0x5F: [-0.01, .061, .575],
    0x60: [.706, -0.503, .575],
    0x7B: [.75, .25, .575],
    0x7C: [.75, .249, .319],
    0x7D: [.75, .25, .575],
    0x7E: [.344, -0.202, .575],
    0xA8: [.695, -0.535, .575],
    0xAC: [.371, -0.061, .767],
    0xAF: [.607, -0.54, .575],
    0xB0: [.702, -0.536, .575],
    0xB1: [.728, .035, .894],
    0xB4: [.706, -0.503, .575],
    0xB7: [.336, -0.166, .319],
    0xD7: [.53, .028, .894],
    0xF7: [.597, .096, .894],
    0x131: [.442, 0, .278, { sk: .0278 }],
    0x237: [.442, .205, .306, { sk: .0833 }],
    0x2B9: [.563, -0.033, .344],
    0x2C6: [.694, -0.52, .575],
    0x2C7: [.66, -0.515, .575],
    0x2C9: [.607, -0.54, .575],
    0x2CA: [.706, -0.503, .575],
    0x2CB: [.706, -0.503, .575],
    0x2D8: [.694, -0.5, .575],
    0x2D9: [.695, -0.525, .575],
    0x2DA: [.702, -0.536, .575],
    0x2DC: [.694, -0.552, .575],
    0x300: [.706, -0.503, 0],
    0x301: [.706, -0.503, 0],
    0x302: [.694, -0.52, 0],
    0x303: [.694, -0.552, 0],
    0x304: [.607, -0.54, 0],
    0x306: [.694, -0.5, 0],
    0x307: [.695, -0.525, 0],
    0x308: [.695, -0.535, 0],
    0x30A: [.702, -0.536, 0],
    0x30B: [.714, -0.511, 0],
    0x30C: [.66, -0.515, 0],
    0x338: [.711, .21, 0],
    0x2002: [0, 0, .5],
    0x2003: [0, 0, .999],
    0x2004: [0, 0, .333],
    0x2005: [0, 0, .25],
    0x2006: [0, 0, .167],
    0x2009: [0, 0, .167],
    0x200A: [0, 0, .083],
    0x2013: [.3, -0.249, .575],
    0x2014: [.3, -0.249, 1.15],
    0x2015: [.3, -0.249, 1.15],
    0x2016: [.75, .248, .575],
    0x2017: [-0.01, .061, .575],
    0x2018: [.694, -0.329, .319],
    0x2019: [.694, -0.329, .319],
    0x201C: [.694, -0.329, .603],
    0x201D: [.694, -0.329, .603],
    0x2020: [.702, .211, .511],
    0x2021: [.702, .202, .511],
    0x2022: [.474, -0.028, .575],
    0x2026: [.171, 0, 1.295],
    0x2032: [.563, -0.033, .344],
    0x2033: [.563, 0, .688],
    0x2034: [.563, 0, 1.032],
    0x203E: [.607, -0.54, .575],
    0x2044: [.75, .25, .575],
    0x2057: [.563, 0, 1.376],
    0x20D7: [.723, -0.513, .575],
    0x210F: [.694, .008, .668, { sk: -0.0319 }],
    0x2113: [.702, .019, .474, { sk: .128 }],
    0x2118: [.461, .21, .74],
    0x2135: [.694, 0, .703],
    0x2190: [.518, .017, 1.15],
    0x2191: [.694, .193, .575],
    0x2192: [.518, .017, 1.15],
    0x2193: [.694, .194, .575],
    0x2194: [.518, .017, 1.15],
    0x2195: [.767, .267, .575],
    0x2196: [.724, .194, 1.15],
    0x2197: [.724, .193, 1.15],
    0x2198: [.694, .224, 1.15],
    0x2199: [.694, .224, 1.15],
    0x219A: [.711, .21, 1.15],
    0x219B: [.711, .21, 1.15],
    0x21A6: [.518, .017, 1.15],
    0x21A9: [.518, .017, 1.282],
    0x21AA: [.518, .017, 1.282],
    0x21AE: [.711, .21, 1.15],
    0x21BC: [.518, -0.22, 1.15],
    0x21BD: [.281, .017, 1.15],
    0x21C0: [.518, -0.22, 1.15],
    0x21C1: [.281, .017, 1.15],
    0x21CC: [.718, .017, 1.15],
    0x21CD: [.711, .21, 1.15],
    0x21CE: [.711, .21, 1.15],
    0x21CF: [.711, .21, 1.15],
    0x21D0: [.547, .046, 1.15],
    0x21D1: [.694, .193, .703],
    0x21D2: [.547, .046, 1.15],
    0x21D3: [.694, .194, .703],
    0x21D4: [.547, .046, 1.15],
    0x21D5: [.767, .267, .703],
    0x2200: [.694, .016, .639],
    0x2203: [.694, 0, .639],
    0x2204: [.711, .21, .639],
    0x2205: [.767, .073, .575],
    0x2206: [.698, 0, .958],
    0x2208: [.587, .086, .767],
    0x2209: [.711, .21, .767],
    0x220B: [.587, .086, .767],
    0x220C: [.711, .21, .767],
    0x2212: [.281, -0.221, .894],
    0x2213: [.537, .227, .894],
    0x2215: [.75, .25, .575],
    0x2216: [.75, .25, .575],
    0x2217: [.472, -0.028, .575],
    0x2218: [.474, -0.028, .575],
    0x2219: [.474, -0.028, .575],
    0x221A: [.82, .18, .958, { ic: .03 }],
    0x221D: [.451, .008, .894],
    0x221E: [.452, .008, 1.15],
    0x2220: [.714, 0, .722],
    0x2223: [.75, .249, .319],
    0x2224: [.75, .249, .319],
    0x2225: [.75, .248, .575],
    0x2226: [.75, .248, .575],
    0x2227: [.604, .017, .767],
    0x2228: [.604, .016, .767],
    0x2229: [.603, .016, .767],
    0x222A: [.604, .016, .767],
    0x222B: [.711, .211, .569, { ic: .063 }],
    0x223C: [.391, -0.109, .894],
    0x2240: [.583, .082, .319],
    0x2241: [.711, .21, .894],
    0x2243: [.502, 0, .894],
    0x2244: [.711, .21, .894],
    0x2245: [.638, .027, .894],
    0x2247: [.711, .21, .894],
    0x2248: [.524, -0.032, .894],
    0x2249: [.711, .21, .894],
    0x224D: [.533, .032, .894],
    0x2250: [.721, -0.109, .894],
    0x2260: [.711, .21, .894],
    0x2261: [.505, 0, .894],
    0x2262: [.711, .21, .894],
    0x2264: [.697, .199, .894],
    0x2265: [.697, .199, .894],
    0x226A: [.617, .116, 1.15],
    0x226B: [.618, .116, 1.15],
    0x226D: [.711, .21, .894],
    0x226E: [.711, .21, .894],
    0x226F: [.711, .21, .894],
    0x2270: [.711, .21, .894],
    0x2271: [.711, .21, .894],
    0x227A: [.585, .086, .894],
    0x227B: [.586, .086, .894],
    0x2280: [.711, .21, .894],
    0x2281: [.711, .21, .894],
    0x2282: [.587, .085, .894],
    0x2283: [.587, .086, .894],
    0x2284: [.711, .21, .894],
    0x2285: [.711, .21, .894],
    0x2286: [.697, .199, .894],
    0x2287: [.697, .199, .894],
    0x2288: [.711, .21, .894],
    0x2289: [.711, .21, .894],
    0x228E: [.604, .016, .767],
    0x2291: [.697, .199, .894],
    0x2292: [.697, .199, .894],
    0x2293: [.604, 0, .767],
    0x2294: [.604, 0, .767],
    0x2295: [.632, .132, .894],
    0x2296: [.632, .132, .894],
    0x2297: [.632, .132, .894],
    0x2298: [.632, .132, .894],
    0x2299: [.632, .132, .894],
    0x22A2: [.693, 0, .703],
    0x22A3: [.693, 0, .703],
    0x22A4: [.694, 0, .894],
    0x22A5: [.693, 0, .894],
    0x22A8: [.75, .249, .974],
    0x22AC: [.711, .21, .703],
    0x22AD: [.75, .249, .974],
    0x22C4: [.523, .021, .575],
    0x22C5: [.336, -0.166, .319],
    0x22C6: [.502, 0, .575],
    0x22C8: [.54, .039, 1],
    0x22E2: [.711, .21, .894],
    0x22E3: [.711, .21, .894],
    0x22EE: [.951, .029, .319],
    0x22EF: [.336, -0.166, 1.295],
    0x22F1: [.871, -0.101, 1.323],
    0x2308: [.75, .248, .511],
    0x2309: [.75, .248, .511],
    0x230A: [.749, .248, .511],
    0x230B: [.749, .248, .511],
    0x2322: [.405, -0.108, 1.15],
    0x2323: [.392, -0.126, 1.15],
    0x2329: [.75, .249, .447],
    0x232A: [.75, .249, .447],
    0x25B3: [.711, 0, 1.022],
    0x25B5: [.711, 0, 1.022],
    0x25B9: [.54, .039, .575],
    0x25BD: [.5, .21, 1.022],
    0x25BF: [.5, .21, 1.022],
    0x25C3: [.539, .038, .575],
    0x25EF: [.711, .211, 1.15],
    0x2660: [.719, .129, .894],
    0x2661: [.711, .024, .894],
    0x2662: [.719, .154, .894],
    0x2663: [.719, .129, .894],
    0x266D: [.75, .017, .447],
    0x266E: [.741, .223, .447],
    0x266F: [.724, .224, .447],
    0x2758: [.75, .249, .319],
    0x27E8: [.75, .249, .447],
    0x27E9: [.75, .249, .447],
    0x27F5: [.518, .017, 1.805],
    0x27F6: [.518, .017, 1.833],
    0x27F7: [.518, .017, 2.126],
    0x27F8: [.547, .046, 1.868],
    0x27F9: [.547, .046, 1.87],
    0x27FA: [.547, .046, 2.126],
    0x27FC: [.518, .017, 1.833],
    0x29F8: [.711, .21, .894],
    0x2A2F: [.53, .028, .894],
    0x2A3F: [.686, 0, .9],
    0x2AAF: [.696, .199, .894],
    0x2AB0: [.697, .199, .894],
    0x3008: [.75, .249, .447],
    0x3009: [.75, .249, .447],
};
//# sourceMappingURL=bold.js.map

/***/ }),

/***/ 9124:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.delimiters = exports.VSIZES = exports.HDW3 = exports.HDW2 = exports.HDW1 = void 0;
var FontData_js_1 = __webpack_require__(5884);
exports.HDW1 = [.75, .25, .875];
exports.HDW2 = [.85, .349, .667];
exports.HDW3 = [.583, .082, .5];
exports.VSIZES = [1, 1.2, 1.8, 2.4, 3];
var DELIM2F = { c: 0x2F, dir: FontData_js_1.V, sizes: exports.VSIZES };
var DELIMAF = { c: 0xAF, dir: FontData_js_1.H, sizes: [.5], stretch: [0, 0xAF], HDW: [.59, -0.544, .5] };
var DELIM2C6 = { c: 0x2C6, dir: FontData_js_1.H, sizes: [.5, .556, 1, 1.444, 1.889] };
var DELIM2DC = { c: 0x2DC, dir: FontData_js_1.H, sizes: [.5, .556, 1, 1.444, 1.889] };
var DELIM2013 = { c: 0x2013, dir: FontData_js_1.H, sizes: [.5], stretch: [0, 0x2013], HDW: [.285, -0.248, .5] };
var DELIM2190 = { c: 0x2190, dir: FontData_js_1.H, sizes: [1], stretch: [0x2190, 0x2212], HDW: exports.HDW3 };
var DELIM2192 = { c: 0x2192, dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2212, 0x2192], HDW: exports.HDW3 };
var DELIM2194 = { c: 0x2194, dir: FontData_js_1.H, sizes: [1], stretch: [0x2190, 0x2212, 0x2192], HDW: exports.HDW3 };
var DELIM21A4 = { c: 0x21A4, dir: FontData_js_1.H, stretch: [0x2190, 0x2212, 0x2223], HDW: exports.HDW3, min: 1.278 };
var DELIM21A6 = { c: 0x21A6, dir: FontData_js_1.H, sizes: [1], stretch: [0x2223, 0x2212, 0x2192], HDW: exports.HDW3 };
var DELIM21D0 = { c: 0x21D0, dir: FontData_js_1.H, sizes: [1], stretch: [0x21D0, 0x3D], HDW: exports.HDW3 };
var DELIM21D2 = { c: 0x21D2, dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x3D, 0x21D2], HDW: exports.HDW3 };
var DELIM21D4 = { c: 0x21D4, dir: FontData_js_1.H, sizes: [1], stretch: [0x21D0, 0x3D, 0x21D2], HDW: exports.HDW3 };
var DELIM2212 = { c: 0x2212, dir: FontData_js_1.H, sizes: [.778], stretch: [0, 0x2212], HDW: exports.HDW3 };
var DELIM2223 = { c: 0x2223, dir: FontData_js_1.V, sizes: [1], stretch: [0, 0x2223], HDW: [.627, .015, .333] };
var DELIM23DC = { c: 0x23DC, dir: FontData_js_1.H, sizes: [.778, 1], schar: [0x2322, 0x2322], variants: [5, 0],
    stretch: [0xE150, 0xE154, 0xE151], HDW: [.32, .2, .5] };
var DELIM23DD = { c: 0x23DD, dir: FontData_js_1.H, sizes: [.778, 1], schar: [0x2323, 0x2323], variants: [5, 0],
    stretch: [0xE152, 0xE154, 0xE153], HDW: [.32, .2, .5] };
var DELIM23DE = { c: 0x23DE, dir: FontData_js_1.H, stretch: [0xE150, 0xE154, 0xE151, 0xE155], HDW: [.32, .2, .5], min: 1.8 };
var DELIM23DF = { c: 0x23DF, dir: FontData_js_1.H, stretch: [0xE152, 0xE154, 0xE153, 0xE156], HDW: [.32, .2, .5], min: 1.8 };
var DELIM27E8 = { c: 0x27E8, dir: FontData_js_1.V, sizes: exports.VSIZES };
var DELIM27E9 = { c: 0x27E9, dir: FontData_js_1.V, sizes: exports.VSIZES };
var DELIM2906 = { c: 0x2906, dir: FontData_js_1.H, stretch: [0x21D0, 0x3D, 0x2223], HDW: exports.HDW3, min: 1.278 };
var DELIM2907 = { c: 0x2907, dir: FontData_js_1.H, stretch: [0x22A8, 0x3D, 0x21D2], HDW: exports.HDW3, min: 1.278 };
exports.delimiters = {
    0x28: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x239B, 0x239C, 0x239D], HDW: [.85, .349, .875] },
    0x29: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x239E, 0x239F, 0x23A0], HDW: [.85, .349, .875] },
    0x2D: DELIM2212,
    0x2F: DELIM2F,
    0x3D: { dir: FontData_js_1.H, sizes: [.778], stretch: [0, 0x3D], HDW: exports.HDW3 },
    0x5B: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A1, 0x23A2, 0x23A3], HDW: exports.HDW2 },
    0x5C: { dir: FontData_js_1.V, sizes: exports.VSIZES },
    0x5D: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A4, 0x23A5, 0x23A6], HDW: exports.HDW2 },
    0x5E: DELIM2C6,
    0x5F: DELIM2013,
    0x7B: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A7, 0x23AA, 0x23A9, 0x23A8], HDW: [.85, .349, .889] },
    0x7C: { dir: FontData_js_1.V, sizes: [1], stretch: [0, 0x2223], HDW: [.75, .25, .333] },
    0x7D: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23AB, 0x23AA, 0x23AD, 0x23AC], HDW: [.85, .349, .889] },
    0x7E: DELIM2DC,
    0xAF: DELIMAF,
    0x2C6: DELIM2C6,
    0x2C9: DELIMAF,
    0x2DC: DELIM2DC,
    0x302: DELIM2C6,
    0x303: DELIM2DC,
    0x332: DELIM2013,
    0x2013: DELIM2013,
    0x2014: DELIM2013,
    0x2015: DELIM2013,
    0x2016: { dir: FontData_js_1.V, sizes: [.602, 1], schar: [0, 0x2225], variants: [1, 0], stretch: [0, 0x2225], HDW: [.602, 0, .556] },
    0x2017: DELIM2013,
    0x203E: DELIMAF,
    0x20D7: DELIM2192,
    0x2190: DELIM2190,
    0x2191: { dir: FontData_js_1.V, sizes: [.888], stretch: [0x2191, 0x23D0], HDW: [.6, 0, .667] },
    0x2192: DELIM2192,
    0x2193: { dir: FontData_js_1.V, sizes: [.888], stretch: [0, 0x23D0, 0x2193], HDW: [.6, 0, .667] },
    0x2194: DELIM2194,
    0x2195: { dir: FontData_js_1.V, sizes: [1.044], stretch: [0x2191, 0x23D0, 0x2193], HDW: exports.HDW1 },
    0x219E: { dir: FontData_js_1.H, sizes: [1], stretch: [0x219E, 0x2212], HDW: exports.HDW3 },
    0x21A0: { dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2212, 0x21A0], HDW: exports.HDW3 },
    0x21A4: DELIM21A4,
    0x21A5: { dir: FontData_js_1.V, stretch: [0x2191, 0x23D0, 0x22A5], HDW: exports.HDW1, min: 1.555 },
    0x21A6: DELIM21A6,
    0x21A7: { dir: FontData_js_1.V, stretch: [0x22A4, 0x23D0, 0x2193], HDW: exports.HDW1, min: 1.555 },
    0x21B0: { dir: FontData_js_1.V, sizes: [.722], stretch: [0x21B0, 0x23D0], HDW: exports.HDW1 },
    0x21B1: { dir: FontData_js_1.V, sizes: [.722], stretch: [0x21B1, 0x23D0], HDW: exports.HDW1 },
    0x21BC: { dir: FontData_js_1.H, sizes: [1], stretch: [0x21BC, 0x2212], HDW: exports.HDW3 },
    0x21BD: { dir: FontData_js_1.H, sizes: [1], stretch: [0x21BD, 0x2212], HDW: exports.HDW3 },
    0x21BE: { dir: FontData_js_1.V, sizes: [.888], stretch: [0x21BE, 0x23D0], HDW: exports.HDW1 },
    0x21BF: { dir: FontData_js_1.V, sizes: [.888], stretch: [0x21BF, 0x23D0], HDW: exports.HDW1 },
    0x21C0: { dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2212, 0x21C0], HDW: exports.HDW3 },
    0x21C1: { dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2212, 0x21C1], HDW: exports.HDW3 },
    0x21C2: { dir: FontData_js_1.V, sizes: [.888], stretch: [0, 0x23D0, 0x21C2], HDW: exports.HDW1 },
    0x21C3: { dir: FontData_js_1.V, sizes: [.888], stretch: [0, 0x23D0, 0x21C3], HDW: exports.HDW1 },
    0x21D0: DELIM21D0,
    0x21D1: { dir: FontData_js_1.V, sizes: [.888], stretch: [0x21D1, 0x2016], HDW: [.599, 0, .778] },
    0x21D2: DELIM21D2,
    0x21D3: { dir: FontData_js_1.V, sizes: [.888], stretch: [0, 0x2016, 0x21D3], HDW: [.6, 0, .778] },
    0x21D4: DELIM21D4,
    0x21D5: { dir: FontData_js_1.V, sizes: [1.044], stretch: [0x21D1, 0x2016, 0x21D3], HDW: [.75, .25, .778] },
    0x21DA: { dir: FontData_js_1.H, sizes: [1], stretch: [0x21DA, 0x2261], HDW: [.464, -0.036, .5] },
    0x21DB: { dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2261, 0x21DB], HDW: [.464, -0.036, .5] },
    0x2212: DELIM2212,
    0x2215: DELIM2F,
    0x221A: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0xE001, 0xE000, 0x23B7], fullExt: [.65, 2.3], HDW: [.85, .35, 1.056] },
    0x2223: DELIM2223,
    0x2225: { dir: FontData_js_1.V, sizes: [1], stretch: [0, 0x2225], HDW: [.627, .015, .556] },
    0x2308: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A1, 0x23A2], HDW: exports.HDW2 },
    0x2309: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A4, 0x23A5], HDW: exports.HDW2 },
    0x230A: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0, 0x23A2, 0x23A3], HDW: exports.HDW2 },
    0x230B: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0, 0x23A5, 0x23A6], HDW: exports.HDW2 },
    0x2312: DELIM23DC,
    0x2322: DELIM23DC,
    0x2323: DELIM23DD,
    0x2329: DELIM27E8,
    0x232A: DELIM27E9,
    0x23AA: { dir: FontData_js_1.V, sizes: [.32], stretch: [0x23AA, 0x23AA, 0x23AA], HDW: [.29, .015, .889] },
    0x23AF: DELIM2013,
    0x23B0: { dir: FontData_js_1.V, sizes: [.989], stretch: [0x23A7, 0x23AA, 0x23AD], HDW: [.75, .25, .889] },
    0x23B1: { dir: FontData_js_1.V, sizes: [.989], stretch: [0x23AB, 0x23AA, 0x23A9], HDW: [.75, .25, .889] },
    0x23B4: { dir: FontData_js_1.H, stretch: [0x250C, 0x2212, 0x2510], HDW: exports.HDW3, min: 1 },
    0x23B5: { dir: FontData_js_1.H, stretch: [0x2514, 0x2212, 0x2518], HDW: exports.HDW3, min: 1 },
    0x23D0: { dir: FontData_js_1.V, sizes: [.602, 1], schar: [0, 0x2223], variants: [1, 0], stretch: [0, 0x2223], HDW: [.602, 0, .333] },
    0x23DC: DELIM23DC,
    0x23DD: DELIM23DD,
    0x23DE: DELIM23DE,
    0x23DF: DELIM23DF,
    0x23E0: { dir: FontData_js_1.H, stretch: [0x2CA, 0x2C9, 0x2CB], HDW: [.59, -0.544, .5], min: 1 },
    0x23E1: { dir: FontData_js_1.H, stretch: [0x2CB, 0x2C9, 0x2CA], HDW: [.59, -0.544, .5], min: 1 },
    0x2500: DELIM2013,
    0x2758: DELIM2223,
    0x27E8: DELIM27E8,
    0x27E9: DELIM27E9,
    0x27EE: { dir: FontData_js_1.V, sizes: [.989], stretch: [0x23A7, 0x23AA, 0x23A9], HDW: [.75, .25, .889] },
    0x27EF: { dir: FontData_js_1.V, sizes: [.989], stretch: [0x23AB, 0x23AA, 0x23AD], HDW: [.75, .25, .889] },
    0x27F5: DELIM2190,
    0x27F6: DELIM2192,
    0x27F7: DELIM2194,
    0x27F8: DELIM21D0,
    0x27F9: DELIM21D2,
    0x27FA: DELIM21D4,
    0x27FB: DELIM21A4,
    0x27FC: DELIM21A6,
    0x27FD: DELIM2906,
    0x27FE: DELIM2907,
    0x2906: DELIM2906,
    0x2907: DELIM2907,
    0x294E: { dir: FontData_js_1.H, stretch: [0x21BC, 0x2212, 0x21C0], HDW: exports.HDW3, min: 2 },
    0x294F: { dir: FontData_js_1.V, stretch: [0x21BE, 0x23D0, 0x21C2], HDW: exports.HDW1, min: 1.776 },
    0x2950: { dir: FontData_js_1.H, stretch: [0x21BD, 0x2212, 0x21C1], HDW: exports.HDW3, min: 2 },
    0x2951: { dir: FontData_js_1.V, stretch: [0x21BF, 0x23D0, 0x21C3], HDW: exports.HDW1, min: .5 },
    0x295A: { dir: FontData_js_1.H, stretch: [0x21BC, 0x2212, 0x2223], HDW: exports.HDW3, min: 1.278 },
    0x295B: { dir: FontData_js_1.H, stretch: [0x2223, 0x2212, 0x21C0], HDW: exports.HDW3, min: 1.278 },
    0x295C: { dir: FontData_js_1.V, stretch: [0x21BE, 0x23D0, 0x22A5], HDW: exports.HDW1, min: 1.556 },
    0x295D: { dir: FontData_js_1.V, stretch: [0x22A4, 0x23D0, 0x21C2], HDW: exports.HDW1, min: 1.556 },
    0x295E: { dir: FontData_js_1.H, stretch: [0x21BD, 0x2212, 0x2223], HDW: exports.HDW3, min: 1.278 },
    0x295F: { dir: FontData_js_1.H, stretch: [0x2223, 0x2212, 0x21C1], HDW: exports.HDW3, min: 1.278 },
    0x2960: { dir: FontData_js_1.V, stretch: [0x21BF, 0x23D0, 0x22A5], HDW: exports.HDW1, min: 1.776 },
    0x2961: { dir: FontData_js_1.V, stretch: [0x22A4, 0x23D0, 0x21C3], HDW: exports.HDW1, min: 1.776 },
    0x3008: DELIM27E8,
    0x3009: DELIM27E9,
    0xFE37: DELIM23DE,
    0xFE38: DELIM23DF,
};
//# sourceMappingURL=delimiters.js.map

/***/ }),

/***/ 6001:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.doubleStruck = void 0;
exports.doubleStruck = {};
//# sourceMappingURL=double-struck.js.map

/***/ }),

/***/ 3696:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.frakturBold = void 0;
exports.frakturBold = {
    0x21: [.689, .012, .349],
    0x22: [.695, -0.432, .254],
    0x26: [.696, .016, .871],
    0x27: [.695, -0.436, .25],
    0x28: [.737, .186, .459],
    0x29: [.735, .187, .459],
    0x2A: [.692, -0.449, .328],
    0x2B: [.598, .082, .893],
    0x2C: [.107, .191, .328],
    0x2D: [.275, -0.236, .893],
    0x2E: [.102, .015, .328],
    0x2F: [.721, .182, .593],
    0x30: [.501, .012, .593],
    0x31: [.489, 0, .593],
    0x32: [.491, 0, .593],
    0x33: [.487, .193, .593],
    0x34: [.495, .196, .593],
    0x35: [.481, .19, .593],
    0x36: [.704, .012, .593],
    0x37: [.479, .197, .593],
    0x38: [.714, .005, .593],
    0x39: [.487, .195, .593],
    0x3A: [.457, .012, .255],
    0x3B: [.458, .19, .255],
    0x3D: [.343, -0.168, .582],
    0x3F: [.697, .014, .428],
    0x5B: [.74, .13, .257],
    0x5D: [.738, .132, .257],
    0x5E: [.734, -0.452, .59],
    0x2018: [.708, -0.411, .254],
    0x2019: [.692, -0.394, .254],
    0x2044: [.721, .182, .593],
    0xE301: [.63, .027, .587],
    0xE302: [.693, .212, .394, { ic: .014 }],
    0xE303: [.681, .219, .387],
    0xE304: [.473, .212, .593],
    0xE305: [.684, .027, .393],
    0xE308: [.679, .22, .981],
    0xE309: [.717, .137, .727],
};
//# sourceMappingURL=fraktur-bold.js.map

/***/ }),

/***/ 9587:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fraktur = void 0;
exports.fraktur = {
    0x21: [.689, .012, .296],
    0x22: [.695, -0.432, .215],
    0x26: [.698, .011, .738],
    0x27: [.695, -0.436, .212],
    0x28: [.737, .186, .389],
    0x29: [.735, .187, .389],
    0x2A: [.692, -0.449, .278],
    0x2B: [.598, .082, .756],
    0x2C: [.107, .191, .278],
    0x2D: [.275, -0.236, .756],
    0x2E: [.102, .015, .278],
    0x2F: [.721, .182, .502],
    0x30: [.492, .013, .502],
    0x31: [.468, 0, .502],
    0x32: [.474, 0, .502],
    0x33: [.473, .182, .502],
    0x34: [.476, .191, .502],
    0x35: [.458, .184, .502],
    0x36: [.7, .013, .502],
    0x37: [.468, .181, .502],
    0x38: [.705, .01, .502],
    0x39: [.469, .182, .502],
    0x3A: [.457, .012, .216],
    0x3B: [.458, .189, .216],
    0x3D: [.368, -0.132, .756],
    0x3F: [.693, .011, .362],
    0x5B: [.74, .13, .278],
    0x5D: [.738, .131, .278],
    0x5E: [.734, -0.452, .5],
    0x2018: [.708, -0.41, .215],
    0x2019: [.692, -0.395, .215],
    0x2044: [.721, .182, .502],
    0xE300: [.683, .032, .497],
    0xE301: [.616, .03, .498],
    0xE302: [.68, .215, .333],
    0xE303: [.679, .224, .329],
    0xE304: [.471, .214, .503],
    0xE305: [.686, .02, .333],
    0xE306: [.577, .021, .334, { ic: .013 }],
    0xE307: [.475, .022, .501, { ic: .013 }],
};
//# sourceMappingURL=fraktur.js.map

/***/ }),

/***/ 8348:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.italic = void 0;
exports.italic = {
    0x21: [.716, 0, .307, { ic: .073 }],
    0x22: [.694, -0.379, .514, { ic: .024 }],
    0x23: [.694, .194, .818, { ic: .01 }],
    0x25: [.75, .056, .818, { ic: .029 }],
    0x26: [.716, .022, .767, { ic: .035 }],
    0x27: [.694, -0.379, .307, { ic: .07 }],
    0x28: [.75, .25, .409, { ic: .108 }],
    0x29: [.75, .25, .409],
    0x2A: [.75, -0.32, .511, { ic: .073 }],
    0x2B: [.557, .057, .767],
    0x2C: [.121, .194, .307],
    0x2D: [.251, -0.18, .358],
    0x2E: [.121, 0, .307],
    0x2F: [.716, .215, .778],
    0x30: [.665, .021, .511, { ic: .051 }],
    0x31: [.666, 0, .511],
    0x32: [.666, .022, .511, { ic: .04 }],
    0x33: [.666, .022, .511, { ic: .051 }],
    0x34: [.666, .194, .511],
    0x35: [.666, .022, .511, { ic: .056 }],
    0x36: [.665, .022, .511, { ic: .054 }],
    0x37: [.666, .022, .511, { ic: .123 }],
    0x38: [.666, .021, .511, { ic: .042 }],
    0x39: [.666, .022, .511, { ic: .042 }],
    0x3A: [.431, 0, .307],
    0x3B: [.431, .194, .307],
    0x3D: [.367, -0.133, .767],
    0x3F: [.716, 0, .511, { ic: .04 }],
    0x40: [.705, .011, .767, { ic: .022 }],
    0x5B: [.75, .25, .307, { ic: .139 }],
    0x5D: [.75, .25, .307, { ic: .052 }],
    0x5E: [.694, -0.527, .511, { ic: .017 }],
    0x5F: [-0.025, .062, .511, { ic: .043 }],
    0x7E: [.318, -0.208, .511, { ic: .06 }],
    0x131: [.441, .01, .307, { ic: .033 }],
    0x237: [.442, .204, .332],
    0x300: [.697, -0.5, 0],
    0x301: [.697, -0.5, 0, { ic: .039 }],
    0x302: [.694, -0.527, 0, { ic: .017 }],
    0x303: [.668, -0.558, 0, { ic: .06 }],
    0x304: [.589, -0.544, 0, { ic: .054 }],
    0x306: [.694, -0.515, 0, { ic: .062 }],
    0x307: [.669, -0.548, 0],
    0x308: [.669, -0.554, 0, { ic: .045 }],
    0x30A: [.716, -0.542, 0],
    0x30B: [.697, -0.503, 0, { ic: .065 }],
    0x30C: [.638, -0.502, 0, { ic: .029 }],
    0x3DD: [.605, .085, .778],
    0x2013: [.285, -0.248, .511, { ic: .043 }],
    0x2014: [.285, -0.248, 1.022, { ic: .016 }],
    0x2015: [.285, -0.248, 1.022, { ic: .016 }],
    0x2017: [-0.025, .062, .511, { ic: .043 }],
    0x2018: [.694, -0.379, .307, { ic: .055 }],
    0x2019: [.694, -0.379, .307, { ic: .07 }],
    0x201C: [.694, -0.379, .514, { ic: .092 }],
    0x201D: [.694, -0.379, .514, { ic: .024 }],
    0x2044: [.716, .215, .778],
    0x210F: [.695, .013, .54, { ic: .022 }],
    0x2206: [.716, 0, .833, { sk: .167 }],
    0x29F8: [.716, .215, .778],
};
//# sourceMappingURL=italic.js.map

/***/ }),

/***/ 1376:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.largeop = void 0;
exports.largeop = {
    0x28: [1.15, .649, .597],
    0x29: [1.15, .649, .597],
    0x2F: [1.15, .649, .811],
    0x5B: [1.15, .649, .472],
    0x5C: [1.15, .649, .811],
    0x5D: [1.15, .649, .472],
    0x7B: [1.15, .649, .667],
    0x7D: [1.15, .649, .667],
    0x2C6: [.772, -0.565, 1],
    0x2DC: [.75, -0.611, 1],
    0x302: [.772, -0.565, 0],
    0x303: [.75, -0.611, 0],
    0x2016: [.602, 0, .778],
    0x2044: [1.15, .649, .811],
    0x2191: [.6, 0, .667],
    0x2193: [.6, 0, .667],
    0x21D1: [.599, 0, .778],
    0x21D3: [.6, 0, .778],
    0x220F: [.95, .45, 1.278],
    0x2210: [.95, .45, 1.278],
    0x2211: [.95, .45, 1.444],
    0x221A: [1.15, .65, 1, { ic: .02 }],
    0x2223: [.627, .015, .333],
    0x2225: [.627, .015, .556],
    0x222B: [1.36, .862, .556, { ic: .388 }],
    0x222C: [1.36, .862, 1.084, { ic: .388 }],
    0x222D: [1.36, .862, 1.592, { ic: .388 }],
    0x222E: [1.36, .862, .556, { ic: .388 }],
    0x22C0: [.95, .45, 1.111],
    0x22C1: [.95, .45, 1.111],
    0x22C2: [.949, .45, 1.111],
    0x22C3: [.95, .449, 1.111],
    0x2308: [1.15, .649, .528],
    0x2309: [1.15, .649, .528],
    0x230A: [1.15, .649, .528],
    0x230B: [1.15, .649, .528],
    0x2329: [1.15, .649, .611],
    0x232A: [1.15, .649, .611],
    0x23D0: [.602, 0, .667],
    0x2758: [.627, .015, .333],
    0x27E8: [1.15, .649, .611],
    0x27E9: [1.15, .649, .611],
    0x2A00: [.949, .449, 1.511],
    0x2A01: [.949, .449, 1.511],
    0x2A02: [.949, .449, 1.511],
    0x2A04: [.95, .449, 1.111],
    0x2A06: [.95, .45, 1.111],
    0x2A0C: [1.36, .862, 2.168, { ic: .388 }],
    0x3008: [1.15, .649, .611],
    0x3009: [1.15, .649, .611],
};
//# sourceMappingURL=largeop.js.map

/***/ }),

/***/ 1439:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.monospace = void 0;
exports.monospace = {
    0x20: [0, 0, .525],
    0x21: [.622, 0, .525],
    0x22: [.623, -0.333, .525],
    0x23: [.611, 0, .525],
    0x24: [.694, .082, .525],
    0x25: [.694, .083, .525],
    0x26: [.622, .011, .525],
    0x27: [.611, -0.287, .525],
    0x28: [.694, .082, .525],
    0x29: [.694, .082, .525],
    0x2A: [.52, -0.09, .525],
    0x2B: [.531, -0.081, .525],
    0x2C: [.14, .139, .525],
    0x2D: [.341, -0.271, .525],
    0x2E: [.14, 0, .525],
    0x2F: [.694, .083, .525],
    0x3A: [.431, 0, .525],
    0x3B: [.431, .139, .525],
    0x3C: [.557, -0.055, .525],
    0x3D: [.417, -0.195, .525],
    0x3E: [.557, -0.055, .525],
    0x3F: [.617, 0, .525],
    0x40: [.617, .006, .525],
    0x5B: [.694, .082, .525],
    0x5C: [.694, .083, .525],
    0x5D: [.694, .082, .525],
    0x5E: [.611, -0.46, .525],
    0x5F: [-0.025, .095, .525],
    0x60: [.681, -0.357, .525],
    0x7B: [.694, .083, .525],
    0x7C: [.694, .082, .525],
    0x7D: [.694, .083, .525],
    0x7E: [.611, -0.466, .525],
    0x7F: [.612, -0.519, .525],
    0xA0: [0, 0, .525],
    0x131: [.431, 0, .525],
    0x237: [.431, .228, .525],
    0x2B9: [.623, -0.334, .525],
    0x300: [.611, -0.485, 0],
    0x301: [.611, -0.485, 0],
    0x302: [.611, -0.46, 0],
    0x303: [.611, -0.466, 0],
    0x304: [.577, -0.5, 0],
    0x306: [.611, -0.504, 0],
    0x308: [.612, -0.519, 0],
    0x30A: [.619, -0.499, 0],
    0x30C: [.577, -0.449, 0],
    0x391: [.623, 0, .525],
    0x392: [.611, 0, .525],
    0x393: [.611, 0, .525],
    0x394: [.623, 0, .525],
    0x395: [.611, 0, .525],
    0x396: [.611, 0, .525],
    0x397: [.611, 0, .525],
    0x398: [.621, .01, .525],
    0x399: [.611, 0, .525],
    0x39A: [.611, 0, .525],
    0x39B: [.623, 0, .525],
    0x39C: [.611, 0, .525],
    0x39D: [.611, 0, .525],
    0x39E: [.611, 0, .525],
    0x39F: [.621, .01, .525],
    0x3A0: [.611, 0, .525],
    0x3A1: [.611, 0, .525],
    0x3A3: [.611, 0, .525],
    0x3A4: [.611, 0, .525],
    0x3A5: [.622, 0, .525],
    0x3A6: [.611, 0, .525],
    0x3A7: [.611, 0, .525],
    0x3A8: [.611, 0, .525],
    0x3A9: [.622, 0, .525],
    0x2017: [-0.025, .095, .525],
    0x2032: [.623, -0.334, .525],
    0x2033: [.623, 0, 1.05],
    0x2034: [.623, 0, 1.575],
    0x2044: [.694, .083, .525],
    0x2057: [.623, 0, 2.1],
    0x2206: [.623, 0, .525],
};
//# sourceMappingURL=monospace.js.map

/***/ }),

/***/ 331:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normal = void 0;
exports.normal = {
    0x20: [0, 0, .25],
    0x21: [.716, 0, .278],
    0x22: [.694, -0.379, .5],
    0x23: [.694, .194, .833],
    0x24: [.75, .056, .5],
    0x25: [.75, .056, .833],
    0x26: [.716, .022, .778],
    0x27: [.694, -0.379, .278],
    0x28: [.75, .25, .389],
    0x29: [.75, .25, .389],
    0x2A: [.75, -0.32, .5],
    0x2B: [.583, .082, .778],
    0x2C: [.121, .194, .278],
    0x2D: [.252, -0.179, .333],
    0x2E: [.12, 0, .278],
    0x2F: [.75, .25, .5],
    0x30: [.666, .022, .5],
    0x31: [.666, 0, .5],
    0x32: [.666, 0, .5],
    0x33: [.665, .022, .5],
    0x34: [.677, 0, .5],
    0x35: [.666, .022, .5],
    0x36: [.666, .022, .5],
    0x37: [.676, .022, .5],
    0x38: [.666, .022, .5],
    0x39: [.666, .022, .5],
    0x3A: [.43, 0, .278],
    0x3B: [.43, .194, .278],
    0x3C: [.54, .04, .778],
    0x3D: [.583, .082, .778],
    0x3E: [.54, .04, .778],
    0x3F: [.705, 0, .472],
    0x40: [.705, .011, .778],
    0x41: [.716, 0, .75],
    0x42: [.683, 0, .708],
    0x43: [.705, .021, .722],
    0x44: [.683, 0, .764],
    0x45: [.68, 0, .681],
    0x46: [.68, 0, .653],
    0x47: [.705, .022, .785],
    0x48: [.683, 0, .75],
    0x49: [.683, 0, .361],
    0x4A: [.683, .022, .514],
    0x4B: [.683, 0, .778],
    0x4C: [.683, 0, .625],
    0x4D: [.683, 0, .917],
    0x4E: [.683, 0, .75],
    0x4F: [.705, .022, .778],
    0x50: [.683, 0, .681],
    0x51: [.705, .193, .778],
    0x52: [.683, .022, .736],
    0x53: [.705, .022, .556],
    0x54: [.677, 0, .722],
    0x55: [.683, .022, .75],
    0x56: [.683, .022, .75],
    0x57: [.683, .022, 1.028],
    0x58: [.683, 0, .75],
    0x59: [.683, 0, .75],
    0x5A: [.683, 0, .611],
    0x5B: [.75, .25, .278],
    0x5C: [.75, .25, .5],
    0x5D: [.75, .25, .278],
    0x5E: [.694, -0.531, .5],
    0x5F: [-0.025, .062, .5],
    0x60: [.699, -0.505, .5],
    0x61: [.448, .011, .5],
    0x62: [.694, .011, .556],
    0x63: [.448, .011, .444],
    0x64: [.694, .011, .556],
    0x65: [.448, .011, .444],
    0x66: [.705, 0, .306, { ic: .066 }],
    0x67: [.453, .206, .5],
    0x68: [.694, 0, .556],
    0x69: [.669, 0, .278],
    0x6A: [.669, .205, .306],
    0x6B: [.694, 0, .528],
    0x6C: [.694, 0, .278],
    0x6D: [.442, 0, .833],
    0x6E: [.442, 0, .556],
    0x6F: [.448, .01, .5],
    0x70: [.442, .194, .556],
    0x71: [.442, .194, .528],
    0x72: [.442, 0, .392],
    0x73: [.448, .011, .394],
    0x74: [.615, .01, .389],
    0x75: [.442, .011, .556],
    0x76: [.431, .011, .528],
    0x77: [.431, .011, .722],
    0x78: [.431, 0, .528],
    0x79: [.431, .204, .528],
    0x7A: [.431, 0, .444],
    0x7B: [.75, .25, .5],
    0x7C: [.75, .249, .278],
    0x7D: [.75, .25, .5],
    0x7E: [.318, -0.215, .5],
    0xA0: [0, 0, .25],
    0xA3: [.714, .011, .769],
    0xA5: [.683, 0, .75],
    0xA8: [.669, -0.554, .5],
    0xAC: [.356, -0.089, .667],
    0xAE: [.709, .175, .947],
    0xAF: [.59, -0.544, .5],
    0xB0: [.715, -0.542, .5],
    0xB1: [.666, 0, .778],
    0xB4: [.699, -0.505, .5],
    0xB7: [.31, -0.19, .278],
    0xD7: [.491, -0.009, .778],
    0xF0: [.749, .021, .556],
    0xF7: [.537, .036, .778],
    0x131: [.442, 0, .278, { sk: .0278 }],
    0x237: [.442, .205, .306, { sk: .0833 }],
    0x2B9: [.56, -0.043, .275],
    0x2C6: [.694, -0.531, .5],
    0x2C7: [.644, -0.513, .5],
    0x2C9: [.59, -0.544, .5],
    0x2CA: [.699, -0.505, .5],
    0x2CB: [.699, -0.505, .5],
    0x2D8: [.694, -0.515, .5],
    0x2D9: [.669, -0.549, .5],
    0x2DA: [.715, -0.542, .5],
    0x2DC: [.668, -0.565, .5],
    0x300: [.699, -0.505, 0],
    0x301: [.699, -0.505, 0],
    0x302: [.694, -0.531, 0],
    0x303: [.668, -0.565, 0],
    0x304: [.59, -0.544, 0],
    0x306: [.694, -0.515, 0],
    0x307: [.669, -0.549, 0],
    0x308: [.669, -0.554, 0],
    0x30A: [.715, -0.542, 0],
    0x30B: [.701, -0.51, 0],
    0x30C: [.644, -0.513, 0],
    0x338: [.716, .215, 0],
    0x391: [.716, 0, .75],
    0x392: [.683, 0, .708],
    0x393: [.68, 0, .625],
    0x394: [.716, 0, .833],
    0x395: [.68, 0, .681],
    0x396: [.683, 0, .611],
    0x397: [.683, 0, .75],
    0x398: [.705, .022, .778],
    0x399: [.683, 0, .361],
    0x39A: [.683, 0, .778],
    0x39B: [.716, 0, .694],
    0x39C: [.683, 0, .917],
    0x39D: [.683, 0, .75],
    0x39E: [.677, 0, .667],
    0x39F: [.705, .022, .778],
    0x3A0: [.68, 0, .75],
    0x3A1: [.683, 0, .681],
    0x3A3: [.683, 0, .722],
    0x3A4: [.677, 0, .722],
    0x3A5: [.705, 0, .778],
    0x3A6: [.683, 0, .722],
    0x3A7: [.683, 0, .75],
    0x3A8: [.683, 0, .778],
    0x3A9: [.704, 0, .722],
    0x2000: [0, 0, .5],
    0x2001: [0, 0, 1],
    0x2002: [0, 0, .5],
    0x2003: [0, 0, 1],
    0x2004: [0, 0, .333],
    0x2005: [0, 0, .25],
    0x2006: [0, 0, .167],
    0x2009: [0, 0, .167],
    0x200A: [0, 0, .1],
    0x200B: [0, 0, 0],
    0x200C: [0, 0, 0],
    0x2013: [.285, -0.248, .5],
    0x2014: [.285, -0.248, 1],
    0x2015: [.285, -0.248, 1],
    0x2016: [.75, .25, .5],
    0x2017: [-0.025, .062, .5],
    0x2018: [.694, -0.379, .278],
    0x2019: [.694, -0.379, .278],
    0x201C: [.694, -0.379, .5],
    0x201D: [.694, -0.379, .5],
    0x2020: [.705, .216, .444],
    0x2021: [.705, .205, .444],
    0x2022: [.444, -0.055, .5],
    0x2026: [.12, 0, 1.172],
    0x2032: [.56, -0.043, .275],
    0x2033: [.56, 0, .55],
    0x2034: [.56, 0, .825],
    0x2035: [.56, -0.043, .275],
    0x2036: [.56, 0, .55],
    0x2037: [.56, 0, .825],
    0x203E: [.59, -0.544, .5],
    0x2044: [.75, .25, .5],
    0x2057: [.56, 0, 1.1],
    0x2060: [0, 0, 0],
    0x2061: [0, 0, 0],
    0x2062: [0, 0, 0],
    0x2063: [0, 0, 0],
    0x2064: [0, 0, 0],
    0x20D7: [.714, -0.516, .5],
    0x2102: [.702, .019, .722],
    0x210B: [.717, .036, .969, { ic: .272, sk: .333 }],
    0x210C: [.666, .133, .72],
    0x210D: [.683, 0, .778],
    0x210E: [.694, .011, .576, { sk: -0.0278 }],
    0x210F: [.695, .013, .54, { ic: .022 }],
    0x2110: [.717, .017, .809, { ic: .137, sk: .333 }],
    0x2111: [.686, .026, .554],
    0x2112: [.717, .017, .874, { ic: .161, sk: .306 }],
    0x2113: [.705, .02, .417, { sk: .111 }],
    0x2115: [.683, .02, .722],
    0x2118: [.453, .216, .636, { sk: .111 }],
    0x2119: [.683, 0, .611],
    0x211A: [.701, .181, .778],
    0x211B: [.717, .017, .85, { ic: .037, sk: .194 }],
    0x211C: [.686, .026, .828],
    0x211D: [.683, 0, .722],
    0x2124: [.683, 0, .667],
    0x2126: [.704, 0, .722],
    0x2127: [.684, .022, .722],
    0x2128: [.729, .139, .602],
    0x212C: [.708, .028, .908, { ic: .02, sk: .194 }],
    0x212D: [.685, .024, .613],
    0x2130: [.707, .008, .562, { ic: .156, sk: .139 }],
    0x2131: [.735, .036, .895, { ic: .095, sk: .222 }],
    0x2132: [.695, 0, .556],
    0x2133: [.721, .05, 1.08, { ic: .136, sk: .444 }],
    0x2135: [.694, 0, .611],
    0x2136: [.763, .021, .667, { ic: .02 }],
    0x2137: [.764, .043, .444],
    0x2138: [.764, .043, .667],
    0x2141: [.705, .023, .639],
    0x2190: [.511, .011, 1],
    0x2191: [.694, .193, .5],
    0x2192: [.511, .011, 1],
    0x2193: [.694, .194, .5],
    0x2194: [.511, .011, 1],
    0x2195: [.772, .272, .5],
    0x2196: [.72, .195, 1],
    0x2197: [.72, .195, 1],
    0x2198: [.695, .22, 1],
    0x2199: [.695, .22, 1],
    0x219A: [.437, -0.06, 1],
    0x219B: [.437, -0.06, 1],
    0x219E: [.417, -0.083, 1],
    0x21A0: [.417, -0.083, 1],
    0x21A2: [.417, -0.083, 1.111],
    0x21A3: [.417, -0.083, 1.111],
    0x21A6: [.511, .011, 1],
    0x21A9: [.511, .011, 1.126],
    0x21AA: [.511, .011, 1.126],
    0x21AB: [.575, .041, 1],
    0x21AC: [.575, .041, 1],
    0x21AD: [.417, -0.083, 1.389],
    0x21AE: [.437, -0.06, 1],
    0x21B0: [.722, 0, .5],
    0x21B1: [.722, 0, .5],
    0x21B6: [.461, 0, 1],
    0x21B7: [.46, 0, 1],
    0x21BA: [.65, .083, .778],
    0x21BB: [.65, .083, .778],
    0x21BC: [.511, -0.23, 1],
    0x21BD: [.27, .011, 1],
    0x21BE: [.694, .194, .417],
    0x21BF: [.694, .194, .417],
    0x21C0: [.511, -0.23, 1],
    0x21C1: [.27, .011, 1],
    0x21C2: [.694, .194, .417],
    0x21C3: [.694, .194, .417],
    0x21C4: [.667, 0, 1],
    0x21C6: [.667, 0, 1],
    0x21C7: [.583, .083, 1],
    0x21C8: [.694, .193, .833],
    0x21C9: [.583, .083, 1],
    0x21CA: [.694, .194, .833],
    0x21CB: [.514, .014, 1],
    0x21CC: [.671, .011, 1],
    0x21CD: [.534, .035, 1],
    0x21CE: [.534, .037, 1],
    0x21CF: [.534, .035, 1],
    0x21D0: [.525, .024, 1],
    0x21D1: [.694, .194, .611],
    0x21D2: [.525, .024, 1],
    0x21D3: [.694, .194, .611],
    0x21D4: [.526, .025, 1],
    0x21D5: [.772, .272, .611],
    0x21DA: [.611, .111, 1],
    0x21DB: [.611, .111, 1],
    0x21DD: [.417, -0.083, 1],
    0x21E0: [.437, -0.064, 1.334],
    0x21E2: [.437, -0.064, 1.334],
    0x2200: [.694, .022, .556],
    0x2201: [.846, .021, .5],
    0x2202: [.715, .022, .531, { ic: .035, sk: .0833 }],
    0x2203: [.694, 0, .556],
    0x2204: [.716, .215, .556],
    0x2205: [.772, .078, .5],
    0x2206: [.716, 0, .833],
    0x2207: [.683, .033, .833],
    0x2208: [.54, .04, .667],
    0x2209: [.716, .215, .667],
    0x220B: [.54, .04, .667],
    0x220C: [.716, .215, .667],
    0x220D: [.44, 0, .429, { ic: .027 }],
    0x220F: [.75, .25, .944],
    0x2210: [.75, .25, .944],
    0x2211: [.75, .25, 1.056],
    0x2212: [.583, .082, .778],
    0x2213: [.5, .166, .778],
    0x2214: [.766, .093, .778],
    0x2215: [.75, .25, .5],
    0x2216: [.75, .25, .5],
    0x2217: [.465, -0.035, .5],
    0x2218: [.444, -0.055, .5],
    0x2219: [.444, -0.055, .5],
    0x221A: [.8, .2, .833, { ic: .02 }],
    0x221D: [.442, .011, .778],
    0x221E: [.442, .011, 1],
    0x2220: [.694, 0, .722],
    0x2221: [.714, .02, .722],
    0x2222: [.551, .051, .722],
    0x2223: [.75, .249, .278],
    0x2224: [.75, .252, .278, { ic: .019 }],
    0x2225: [.75, .25, .5],
    0x2226: [.75, .25, .5, { ic: .018 }],
    0x2227: [.598, .022, .667],
    0x2228: [.598, .022, .667],
    0x2229: [.598, .022, .667],
    0x222A: [.598, .022, .667],
    0x222B: [.716, .216, .417, { ic: .055 }],
    0x222C: [.805, .306, .819, { ic: .138 }],
    0x222D: [.805, .306, 1.166, { ic: .138 }],
    0x222E: [.805, .306, .472, { ic: .138 }],
    0x2234: [.471, .082, .667],
    0x2235: [.471, .082, .667],
    0x223C: [.367, -0.133, .778],
    0x223D: [.367, -0.133, .778],
    0x2240: [.583, .083, .278],
    0x2241: [.467, -0.032, .778],
    0x2242: [.463, -0.034, .778],
    0x2243: [.464, -0.036, .778],
    0x2244: [.716, .215, .778],
    0x2245: [.589, -0.022, .778],
    0x2247: [.652, .155, .778],
    0x2248: [.483, -0.055, .778],
    0x2249: [.716, .215, .778],
    0x224A: [.579, .039, .778],
    0x224D: [.484, -0.016, .778],
    0x224E: [.492, -0.008, .778],
    0x224F: [.492, -0.133, .778],
    0x2250: [.67, -0.133, .778],
    0x2251: [.609, .108, .778],
    0x2252: [.601, .101, .778],
    0x2253: [.601, .102, .778],
    0x2256: [.367, -0.133, .778],
    0x2257: [.721, -0.133, .778],
    0x225C: [.859, -0.133, .778],
    0x2260: [.716, .215, .778],
    0x2261: [.464, -0.036, .778],
    0x2262: [.716, .215, .778],
    0x2264: [.636, .138, .778],
    0x2265: [.636, .138, .778],
    0x2266: [.753, .175, .778],
    0x2267: [.753, .175, .778],
    0x2268: [.752, .286, .778],
    0x2269: [.752, .286, .778],
    0x226A: [.568, .067, 1],
    0x226B: [.567, .067, 1],
    0x226C: [.75, .25, .5],
    0x226D: [.716, .215, .778],
    0x226E: [.708, .209, .778],
    0x226F: [.708, .209, .778],
    0x2270: [.801, .303, .778],
    0x2271: [.801, .303, .778],
    0x2272: [.732, .228, .778],
    0x2273: [.732, .228, .778],
    0x2274: [.732, .228, .778],
    0x2275: [.732, .228, .778],
    0x2276: [.681, .253, .778],
    0x2277: [.681, .253, .778],
    0x2278: [.716, .253, .778],
    0x2279: [.716, .253, .778],
    0x227A: [.539, .041, .778],
    0x227B: [.539, .041, .778],
    0x227C: [.58, .153, .778],
    0x227D: [.58, .154, .778],
    0x227E: [.732, .228, .778],
    0x227F: [.732, .228, .778],
    0x2280: [.705, .208, .778],
    0x2281: [.705, .208, .778],
    0x2282: [.54, .04, .778],
    0x2283: [.54, .04, .778],
    0x2284: [.716, .215, .778],
    0x2285: [.716, .215, .778],
    0x2286: [.636, .138, .778],
    0x2287: [.636, .138, .778],
    0x2288: [.801, .303, .778],
    0x2289: [.801, .303, .778],
    0x228A: [.635, .241, .778],
    0x228B: [.635, .241, .778],
    0x228E: [.598, .022, .667],
    0x228F: [.539, .041, .778],
    0x2290: [.539, .041, .778],
    0x2291: [.636, .138, .778],
    0x2292: [.636, .138, .778],
    0x2293: [.598, 0, .667],
    0x2294: [.598, 0, .667],
    0x2295: [.583, .083, .778],
    0x2296: [.583, .083, .778],
    0x2297: [.583, .083, .778],
    0x2298: [.583, .083, .778],
    0x2299: [.583, .083, .778],
    0x229A: [.582, .082, .778],
    0x229B: [.582, .082, .778],
    0x229D: [.582, .082, .778],
    0x229E: [.689, 0, .778],
    0x229F: [.689, 0, .778],
    0x22A0: [.689, 0, .778],
    0x22A1: [.689, 0, .778],
    0x22A2: [.694, 0, .611],
    0x22A3: [.694, 0, .611],
    0x22A4: [.668, 0, .778],
    0x22A5: [.668, 0, .778],
    0x22A8: [.75, .249, .867],
    0x22A9: [.694, 0, .722],
    0x22AA: [.694, 0, .889],
    0x22AC: [.695, 0, .611],
    0x22AD: [.695, 0, .611],
    0x22AE: [.695, 0, .722],
    0x22AF: [.695, 0, .722],
    0x22B2: [.539, .041, .778],
    0x22B3: [.539, .041, .778],
    0x22B4: [.636, .138, .778],
    0x22B5: [.636, .138, .778],
    0x22B8: [.408, -0.092, 1.111],
    0x22BA: [.431, .212, .556],
    0x22BB: [.716, 0, .611],
    0x22BC: [.716, 0, .611],
    0x22C0: [.75, .249, .833],
    0x22C1: [.75, .249, .833],
    0x22C2: [.75, .249, .833],
    0x22C3: [.75, .249, .833],
    0x22C4: [.488, -0.012, .5],
    0x22C5: [.31, -0.19, .278],
    0x22C6: [.486, -0.016, .5],
    0x22C7: [.545, .044, .778],
    0x22C8: [.505, .005, .9],
    0x22C9: [.492, -0.008, .778],
    0x22CA: [.492, -0.008, .778],
    0x22CB: [.694, .022, .778],
    0x22CC: [.694, .022, .778],
    0x22CD: [.464, -0.036, .778],
    0x22CE: [.578, .021, .76],
    0x22CF: [.578, .022, .76],
    0x22D0: [.54, .04, .778],
    0x22D1: [.54, .04, .778],
    0x22D2: [.598, .022, .667],
    0x22D3: [.598, .022, .667],
    0x22D4: [.736, .022, .667],
    0x22D6: [.541, .041, .778],
    0x22D7: [.541, .041, .778],
    0x22D8: [.568, .067, 1.333],
    0x22D9: [.568, .067, 1.333],
    0x22DA: [.886, .386, .778],
    0x22DB: [.886, .386, .778],
    0x22DE: [.734, 0, .778],
    0x22DF: [.734, 0, .778],
    0x22E0: [.801, .303, .778],
    0x22E1: [.801, .303, .778],
    0x22E2: [.716, .215, .778],
    0x22E3: [.716, .215, .778],
    0x22E6: [.73, .359, .778],
    0x22E7: [.73, .359, .778],
    0x22E8: [.73, .359, .778],
    0x22E9: [.73, .359, .778],
    0x22EA: [.706, .208, .778],
    0x22EB: [.706, .208, .778],
    0x22EC: [.802, .303, .778],
    0x22ED: [.801, .303, .778],
    0x22EE: [1.3, .03, .278],
    0x22EF: [.31, -0.19, 1.172],
    0x22F1: [1.52, -0.1, 1.282],
    0x2305: [.716, 0, .611],
    0x2306: [.813, .097, .611],
    0x2308: [.75, .25, .444],
    0x2309: [.75, .25, .444],
    0x230A: [.75, .25, .444],
    0x230B: [.75, .25, .444],
    0x231C: [.694, -0.306, .5],
    0x231D: [.694, -0.306, .5],
    0x231E: [.366, .022, .5],
    0x231F: [.366, .022, .5],
    0x2322: [.388, -0.122, 1],
    0x2323: [.378, -0.134, 1],
    0x2329: [.75, .25, .389],
    0x232A: [.75, .25, .389],
    0x23B0: [.744, .244, .412],
    0x23B1: [.744, .244, .412],
    0x23D0: [.602, 0, .667],
    0x24C8: [.709, .175, .902],
    0x250C: [.694, -0.306, .5],
    0x2510: [.694, -0.306, .5],
    0x2514: [.366, .022, .5],
    0x2518: [.366, .022, .5],
    0x2571: [.694, .195, .889],
    0x2572: [.694, .195, .889],
    0x25A0: [.689, 0, .778],
    0x25A1: [.689, 0, .778],
    0x25AA: [.689, 0, .778],
    0x25B2: [.575, .02, .722],
    0x25B3: [.716, 0, .889],
    0x25B4: [.575, .02, .722],
    0x25B5: [.716, 0, .889],
    0x25B6: [.539, .041, .778],
    0x25B8: [.539, .041, .778],
    0x25B9: [.505, .005, .5],
    0x25BC: [.576, .019, .722],
    0x25BD: [.5, .215, .889],
    0x25BE: [.576, .019, .722],
    0x25BF: [.5, .215, .889],
    0x25C0: [.539, .041, .778],
    0x25C2: [.539, .041, .778],
    0x25C3: [.505, .005, .5],
    0x25CA: [.716, .132, .667],
    0x25EF: [.715, .215, 1],
    0x25FB: [.689, 0, .778],
    0x25FC: [.689, 0, .778],
    0x2605: [.694, .111, .944],
    0x2660: [.727, .13, .778],
    0x2661: [.716, .033, .778],
    0x2662: [.727, .162, .778],
    0x2663: [.726, .13, .778],
    0x266D: [.75, .022, .389],
    0x266E: [.734, .223, .389],
    0x266F: [.723, .223, .389],
    0x2713: [.706, .034, .833],
    0x2720: [.716, .022, .833],
    0x2758: [.75, .249, .278],
    0x27E8: [.75, .25, .389],
    0x27E9: [.75, .25, .389],
    0x27EE: [.744, .244, .412],
    0x27EF: [.744, .244, .412],
    0x27F5: [.511, .011, 1.609],
    0x27F6: [.511, .011, 1.638],
    0x27F7: [.511, .011, 1.859],
    0x27F8: [.525, .024, 1.609],
    0x27F9: [.525, .024, 1.638],
    0x27FA: [.525, .024, 1.858],
    0x27FC: [.511, .011, 1.638],
    0x29EB: [.716, .132, .667],
    0x29F8: [.716, .215, .778],
    0x2A00: [.75, .25, 1.111],
    0x2A01: [.75, .25, 1.111],
    0x2A02: [.75, .25, 1.111],
    0x2A04: [.75, .249, .833],
    0x2A06: [.75, .249, .833],
    0x2A0C: [.805, .306, 1.638, { ic: .138 }],
    0x2A2F: [.491, -0.009, .778],
    0x2A3F: [.683, 0, .75],
    0x2A5E: [.813, .097, .611],
    0x2A7D: [.636, .138, .778],
    0x2A7E: [.636, .138, .778],
    0x2A85: [.762, .29, .778],
    0x2A86: [.762, .29, .778],
    0x2A87: [.635, .241, .778],
    0x2A88: [.635, .241, .778],
    0x2A89: [.761, .387, .778],
    0x2A8A: [.761, .387, .778],
    0x2A8B: [1.003, .463, .778],
    0x2A8C: [1.003, .463, .778],
    0x2A95: [.636, .138, .778],
    0x2A96: [.636, .138, .778],
    0x2AAF: [.636, .138, .778],
    0x2AB0: [.636, .138, .778],
    0x2AB5: [.752, .286, .778],
    0x2AB6: [.752, .286, .778],
    0x2AB7: [.761, .294, .778],
    0x2AB8: [.761, .294, .778],
    0x2AB9: [.761, .337, .778],
    0x2ABA: [.761, .337, .778],
    0x2AC5: [.753, .215, .778],
    0x2AC6: [.753, .215, .778],
    0x2ACB: [.783, .385, .778],
    0x2ACC: [.783, .385, .778],
    0x3008: [.75, .25, .389],
    0x3009: [.75, .25, .389],
    0xE006: [.43, .023, .222, { ic: .018 }],
    0xE007: [.431, .024, .389, { ic: .018 }],
    0xE008: [.605, .085, .778],
    0xE009: [.434, .006, .667, { ic: .067 }],
    0xE00C: [.752, .284, .778],
    0xE00D: [.752, .284, .778],
    0xE00E: [.919, .421, .778],
    0xE00F: [.801, .303, .778],
    0xE010: [.801, .303, .778],
    0xE011: [.919, .421, .778],
    0xE016: [.828, .33, .778],
    0xE017: [.752, .332, .778],
    0xE018: [.828, .33, .778],
    0xE019: [.752, .333, .778],
    0xE01A: [.634, .255, .778],
    0xE01B: [.634, .254, .778],
    0x1D400: [.698, 0, .869],
    0x1D401: [.686, 0, .818],
    0x1D402: [.697, .011, .831],
    0x1D403: [.686, 0, .882],
    0x1D404: [.68, 0, .756],
    0x1D405: [.68, 0, .724],
    0x1D406: [.697, .01, .904],
    0x1D407: [.686, 0, .9],
    0x1D408: [.686, 0, .436],
    0x1D409: [.686, .011, .594],
    0x1D40A: [.686, 0, .901],
    0x1D40B: [.686, 0, .692],
    0x1D40C: [.686, 0, 1.092],
    0x1D40D: [.686, 0, .9],
    0x1D40E: [.696, .01, .864],
    0x1D40F: [.686, 0, .786],
    0x1D410: [.696, .193, .864],
    0x1D411: [.686, .011, .862],
    0x1D412: [.697, .011, .639],
    0x1D413: [.675, 0, .8],
    0x1D414: [.686, .011, .885],
    0x1D415: [.686, .007, .869],
    0x1D416: [.686, .007, 1.189],
    0x1D417: [.686, 0, .869],
    0x1D418: [.686, 0, .869],
    0x1D419: [.686, 0, .703],
    0x1D41A: [.453, .006, .559],
    0x1D41B: [.694, .006, .639],
    0x1D41C: [.453, .006, .511],
    0x1D41D: [.694, .006, .639],
    0x1D41E: [.452, .006, .527],
    0x1D41F: [.7, 0, .351, { ic: .101 }],
    0x1D420: [.455, .201, .575],
    0x1D421: [.694, 0, .639],
    0x1D422: [.695, 0, .319],
    0x1D423: [.695, .2, .351],
    0x1D424: [.694, 0, .607],
    0x1D425: [.694, 0, .319],
    0x1D426: [.45, 0, .958],
    0x1D427: [.45, 0, .639],
    0x1D428: [.452, .005, .575],
    0x1D429: [.45, .194, .639],
    0x1D42A: [.45, .194, .607],
    0x1D42B: [.45, 0, .474],
    0x1D42C: [.453, .006, .454],
    0x1D42D: [.635, .005, .447],
    0x1D42E: [.45, .006, .639],
    0x1D42F: [.444, 0, .607],
    0x1D430: [.444, 0, .831],
    0x1D431: [.444, 0, .607],
    0x1D432: [.444, .2, .607],
    0x1D433: [.444, 0, .511],
    0x1D434: [.716, 0, .75, { sk: .139 }],
    0x1D435: [.683, 0, .759, { sk: .0833 }],
    0x1D436: [.705, .022, .715, { ic: .045, sk: .0833 }],
    0x1D437: [.683, 0, .828, { sk: .0556 }],
    0x1D438: [.68, 0, .738, { ic: .026, sk: .0833 }],
    0x1D439: [.68, 0, .643, { ic: .106, sk: .0833 }],
    0x1D43A: [.705, .022, .786, { sk: .0833 }],
    0x1D43B: [.683, 0, .831, { ic: .057, sk: .0556 }],
    0x1D43C: [.683, 0, .44, { ic: .064, sk: .111 }],
    0x1D43D: [.683, .022, .555, { ic: .078, sk: .167 }],
    0x1D43E: [.683, 0, .849, { ic: .04, sk: .0556 }],
    0x1D43F: [.683, 0, .681, { sk: .0278 }],
    0x1D440: [.683, 0, .97, { ic: .081, sk: .0833 }],
    0x1D441: [.683, 0, .803, { ic: .085, sk: .0833 }],
    0x1D442: [.704, .022, .763, { sk: .0833 }],
    0x1D443: [.683, 0, .642, { ic: .109, sk: .0833 }],
    0x1D444: [.704, .194, .791, { sk: .0833 }],
    0x1D445: [.683, .021, .759, { sk: .0833 }],
    0x1D446: [.705, .022, .613, { ic: .032, sk: .0833 }],
    0x1D447: [.677, 0, .584, { ic: .12, sk: .0833 }],
    0x1D448: [.683, .022, .683, { ic: .084, sk: .0278 }],
    0x1D449: [.683, .022, .583, { ic: .186 }],
    0x1D44A: [.683, .022, .944, { ic: .104 }],
    0x1D44B: [.683, 0, .828, { ic: .024, sk: .0833 }],
    0x1D44C: [.683, 0, .581, { ic: .182 }],
    0x1D44D: [.683, 0, .683, { ic: .04, sk: .0833 }],
    0x1D44E: [.441, .01, .529],
    0x1D44F: [.694, .011, .429],
    0x1D450: [.442, .011, .433, { sk: .0556 }],
    0x1D451: [.694, .01, .52, { sk: .167 }],
    0x1D452: [.442, .011, .466, { sk: .0556 }],
    0x1D453: [.705, .205, .49, { ic: .06, sk: .167 }],
    0x1D454: [.442, .205, .477, { sk: .0278 }],
    0x1D456: [.661, .011, .345],
    0x1D457: [.661, .204, .412],
    0x1D458: [.694, .011, .521],
    0x1D459: [.694, .011, .298, { sk: .0833 }],
    0x1D45A: [.442, .011, .878],
    0x1D45B: [.442, .011, .6],
    0x1D45C: [.441, .011, .485, { sk: .0556 }],
    0x1D45D: [.442, .194, .503, { sk: .0833 }],
    0x1D45E: [.442, .194, .446, { ic: .014, sk: .0833 }],
    0x1D45F: [.442, .011, .451, { sk: .0556 }],
    0x1D460: [.442, .01, .469, { sk: .0556 }],
    0x1D461: [.626, .011, .361, { sk: .0833 }],
    0x1D462: [.442, .011, .572, { sk: .0278 }],
    0x1D463: [.443, .011, .485, { sk: .0278 }],
    0x1D464: [.443, .011, .716, { sk: .0833 }],
    0x1D465: [.442, .011, .572, { sk: .0278 }],
    0x1D466: [.442, .205, .49, { sk: .0556 }],
    0x1D467: [.442, .011, .465, { sk: .0556 }],
    0x1D468: [.711, 0, .869, { sk: .16 }],
    0x1D469: [.686, 0, .866, { sk: .0958 }],
    0x1D46A: [.703, .017, .817, { ic: .038, sk: .0958 }],
    0x1D46B: [.686, 0, .938, { sk: .0639 }],
    0x1D46C: [.68, 0, .81, { ic: .015, sk: .0958 }],
    0x1D46D: [.68, 0, .689, { ic: .12, sk: .0958 }],
    0x1D46E: [.703, .016, .887, { sk: .0958 }],
    0x1D46F: [.686, 0, .982, { ic: .045, sk: .0639 }],
    0x1D470: [.686, 0, .511, { ic: .062, sk: .128 }],
    0x1D471: [.686, .017, .631, { ic: .063, sk: .192 }],
    0x1D472: [.686, 0, .971, { ic: .032, sk: .0639 }],
    0x1D473: [.686, 0, .756, { sk: .0319 }],
    0x1D474: [.686, 0, 1.142, { ic: .077, sk: .0958 }],
    0x1D475: [.686, 0, .95, { ic: .077, sk: .0958 }],
    0x1D476: [.703, .017, .837, { sk: .0958 }],
    0x1D477: [.686, 0, .723, { ic: .124, sk: .0958 }],
    0x1D478: [.703, .194, .869, { sk: .0958 }],
    0x1D479: [.686, .017, .872, { sk: .0958 }],
    0x1D47A: [.703, .017, .693, { ic: .021, sk: .0958 }],
    0x1D47B: [.675, 0, .637, { ic: .135, sk: .0958 }],
    0x1D47C: [.686, .016, .8, { ic: .077, sk: .0319 }],
    0x1D47D: [.686, .016, .678, { ic: .208 }],
    0x1D47E: [.686, .017, 1.093, { ic: .114 }],
    0x1D47F: [.686, 0, .947, { sk: .0958 }],
    0x1D480: [.686, 0, .675, { ic: .201 }],
    0x1D481: [.686, 0, .773, { ic: .032, sk: .0958 }],
    0x1D482: [.452, .008, .633],
    0x1D483: [.694, .008, .521],
    0x1D484: [.451, .008, .513, { sk: .0639 }],
    0x1D485: [.694, .008, .61, { sk: .192 }],
    0x1D486: [.452, .008, .554, { sk: .0639 }],
    0x1D487: [.701, .201, .568, { ic: .056, sk: .192 }],
    0x1D488: [.452, .202, .545, { sk: .0319 }],
    0x1D489: [.694, .008, .668, { sk: -0.0319 }],
    0x1D48A: [.694, .008, .405],
    0x1D48B: [.694, .202, .471],
    0x1D48C: [.694, .008, .604],
    0x1D48D: [.694, .008, .348, { sk: .0958 }],
    0x1D48E: [.452, .008, 1.032],
    0x1D48F: [.452, .008, .713],
    0x1D490: [.452, .008, .585, { sk: .0639 }],
    0x1D491: [.452, .194, .601, { sk: .0958 }],
    0x1D492: [.452, .194, .542, { sk: .0958 }],
    0x1D493: [.452, .008, .529, { sk: .0639 }],
    0x1D494: [.451, .008, .531, { sk: .0639 }],
    0x1D495: [.643, .007, .415, { sk: .0958 }],
    0x1D496: [.452, .008, .681, { sk: .0319 }],
    0x1D497: [.453, .008, .567, { sk: .0319 }],
    0x1D498: [.453, .008, .831, { sk: .0958 }],
    0x1D499: [.452, .008, .659, { sk: .0319 }],
    0x1D49A: [.452, .202, .59, { sk: .0639 }],
    0x1D49B: [.452, .008, .555, { sk: .0639 }],
    0x1D49C: [.717, .008, .803, { ic: .213, sk: .389 }],
    0x1D49E: [.728, .026, .666, { ic: .153, sk: .278 }],
    0x1D49F: [.708, .031, .774, { ic: .081, sk: .111 }],
    0x1D4A2: [.717, .037, .61, { ic: .128, sk: .25 }],
    0x1D4A5: [.717, .314, 1.052, { ic: .081, sk: .417 }],
    0x1D4A6: [.717, .037, .914, { ic: .29, sk: .361 }],
    0x1D4A9: [.726, .036, .902, { ic: .306, sk: .389 }],
    0x1D4AA: [.707, .008, .738, { ic: .067, sk: .167 }],
    0x1D4AB: [.716, .037, 1.013, { ic: .018, sk: .222 }],
    0x1D4AC: [.717, .017, .883, { sk: .278 }],
    0x1D4AE: [.708, .036, .868, { ic: .148, sk: .333 }],
    0x1D4AF: [.735, .037, .747, { ic: .249, sk: .222 }],
    0x1D4B0: [.717, .017, .8, { ic: .16, sk: .25 }],
    0x1D4B1: [.717, .017, .622, { ic: .228, sk: .222 }],
    0x1D4B2: [.717, .017, .805, { ic: .221, sk: .25 }],
    0x1D4B3: [.717, .017, .944, { ic: .187, sk: .278 }],
    0x1D4B4: [.716, .017, .71, { ic: .249, sk: .194 }],
    0x1D4B5: [.717, .016, .821, { ic: .211, sk: .306 }],
    0x1D504: [.696, .026, .718],
    0x1D505: [.691, .027, .884],
    0x1D507: [.685, .027, .832],
    0x1D508: [.685, .024, .663],
    0x1D509: [.686, .153, .611],
    0x1D50A: [.69, .026, .785],
    0x1D50D: [.686, .139, .552],
    0x1D50E: [.68, .027, .668, { ic: .014 }],
    0x1D50F: [.686, .026, .666],
    0x1D510: [.692, .027, 1.05],
    0x1D511: [.686, .025, .832],
    0x1D512: [.729, .027, .827],
    0x1D513: [.692, .218, .828],
    0x1D514: [.729, .069, .827],
    0x1D516: [.692, .027, .829],
    0x1D517: [.701, .027, .669],
    0x1D518: [.697, .027, .646, { ic: .019 }],
    0x1D519: [.686, .026, .831],
    0x1D51A: [.686, .027, 1.046],
    0x1D51B: [.688, .027, .719],
    0x1D51C: [.686, .218, .833],
    0x1D51E: [.47, .035, .5],
    0x1D51F: [.685, .031, .513],
    0x1D520: [.466, .029, .389],
    0x1D521: [.609, .033, .499],
    0x1D522: [.467, .03, .401],
    0x1D523: [.681, .221, .326],
    0x1D524: [.47, .209, .504],
    0x1D525: [.688, .205, .521],
    0x1D526: [.673, .02, .279],
    0x1D527: [.672, .208, .281],
    0x1D528: [.689, .025, .389],
    0x1D529: [.685, .02, .28],
    0x1D52A: [.475, .026, .767],
    0x1D52B: [.475, .022, .527],
    0x1D52C: [.48, .028, .489],
    0x1D52D: [.541, .212, .5],
    0x1D52E: [.479, .219, .489],
    0x1D52F: [.474, .021, .389],
    0x1D530: [.478, .029, .443],
    0x1D531: [.64, .02, .333, { ic: .015 }],
    0x1D532: [.474, .023, .517],
    0x1D533: [.53, .028, .512],
    0x1D534: [.532, .028, .774],
    0x1D535: [.472, .188, .389],
    0x1D536: [.528, .218, .499],
    0x1D537: [.471, .214, .391],
    0x1D538: [.701, 0, .722],
    0x1D539: [.683, 0, .667],
    0x1D53B: [.683, 0, .722],
    0x1D53C: [.683, 0, .667],
    0x1D53D: [.683, 0, .611],
    0x1D53E: [.702, .019, .778],
    0x1D540: [.683, 0, .389],
    0x1D541: [.683, .077, .5],
    0x1D542: [.683, 0, .778],
    0x1D543: [.683, 0, .667],
    0x1D544: [.683, 0, .944],
    0x1D546: [.701, .019, .778],
    0x1D54A: [.702, .012, .556],
    0x1D54B: [.683, 0, .667],
    0x1D54C: [.683, .019, .722],
    0x1D54D: [.683, .02, .722],
    0x1D54E: [.683, .019, 1],
    0x1D54F: [.683, 0, .722],
    0x1D550: [.683, 0, .722],
    0x1D56C: [.686, .031, .847],
    0x1D56D: [.684, .031, 1.044],
    0x1D56E: [.676, .032, .723],
    0x1D56F: [.683, .029, .982],
    0x1D570: [.686, .029, .783],
    0x1D571: [.684, .146, .722],
    0x1D572: [.687, .029, .927],
    0x1D573: [.683, .126, .851],
    0x1D574: [.681, .025, .655],
    0x1D575: [.68, .141, .652],
    0x1D576: [.681, .026, .789, { ic: .017 }],
    0x1D577: [.683, .028, .786],
    0x1D578: [.683, .032, 1.239],
    0x1D579: [.679, .03, .983],
    0x1D57A: [.726, .03, .976],
    0x1D57B: [.688, .223, .977],
    0x1D57C: [.726, .083, .976],
    0x1D57D: [.688, .028, .978],
    0x1D57E: [.685, .031, .978],
    0x1D57F: [.686, .03, .79, { ic: .012 }],
    0x1D580: [.688, .039, .851, { ic: .02 }],
    0x1D581: [.685, .029, .982],
    0x1D582: [.683, .03, 1.235],
    0x1D583: [.681, .035, .849],
    0x1D584: [.688, .214, .984],
    0x1D585: [.677, .148, .711],
    0x1D586: [.472, .032, .603],
    0x1D587: [.69, .032, .59],
    0x1D588: [.473, .026, .464],
    0x1D589: [.632, .028, .589],
    0x1D58A: [.471, .027, .472],
    0x1D58B: [.687, .222, .388],
    0x1D58C: [.472, .208, .595],
    0x1D58D: [.687, .207, .615],
    0x1D58E: [.686, .025, .331],
    0x1D58F: [.682, .203, .332],
    0x1D590: [.682, .025, .464],
    0x1D591: [.681, .024, .337],
    0x1D592: [.476, .031, .921],
    0x1D593: [.473, .028, .654],
    0x1D594: [.482, .034, .609],
    0x1D595: [.557, .207, .604],
    0x1D596: [.485, .211, .596],
    0x1D597: [.472, .026, .46],
    0x1D598: [.479, .034, .523],
    0x1D599: [.648, .027, .393, { ic: .014 }],
    0x1D59A: [.472, .032, .589, { ic: .014 }],
    0x1D59B: [.546, .027, .604],
    0x1D59C: [.549, .032, .918],
    0x1D59D: [.471, .188, .459],
    0x1D59E: [.557, .221, .589],
    0x1D59F: [.471, .214, .461],
    0x1D5A0: [.694, 0, .667],
    0x1D5A1: [.694, 0, .667],
    0x1D5A2: [.705, .011, .639],
    0x1D5A3: [.694, 0, .722],
    0x1D5A4: [.691, 0, .597],
    0x1D5A5: [.691, 0, .569],
    0x1D5A6: [.704, .011, .667],
    0x1D5A7: [.694, 0, .708],
    0x1D5A8: [.694, 0, .278],
    0x1D5A9: [.694, .022, .472],
    0x1D5AA: [.694, 0, .694],
    0x1D5AB: [.694, 0, .542],
    0x1D5AC: [.694, 0, .875],
    0x1D5AD: [.694, 0, .708],
    0x1D5AE: [.715, .022, .736],
    0x1D5AF: [.694, 0, .639],
    0x1D5B0: [.715, .125, .736],
    0x1D5B1: [.694, 0, .646],
    0x1D5B2: [.716, .022, .556],
    0x1D5B3: [.688, 0, .681],
    0x1D5B4: [.694, .022, .688],
    0x1D5B5: [.694, 0, .667],
    0x1D5B6: [.694, 0, .944],
    0x1D5B7: [.694, 0, .667],
    0x1D5B8: [.694, 0, .667],
    0x1D5B9: [.694, 0, .611],
    0x1D5BA: [.46, .01, .481],
    0x1D5BB: [.694, .011, .517],
    0x1D5BC: [.46, .01, .444],
    0x1D5BD: [.694, .01, .517],
    0x1D5BE: [.461, .01, .444],
    0x1D5BF: [.705, 0, .306, { ic: .041 }],
    0x1D5C0: [.455, .206, .5],
    0x1D5C1: [.694, 0, .517],
    0x1D5C2: [.68, 0, .239],
    0x1D5C3: [.68, .205, .267],
    0x1D5C4: [.694, 0, .489],
    0x1D5C5: [.694, 0, .239],
    0x1D5C6: [.455, 0, .794],
    0x1D5C7: [.455, 0, .517],
    0x1D5C8: [.46, .01, .5],
    0x1D5C9: [.455, .194, .517],
    0x1D5CA: [.455, .194, .517],
    0x1D5CB: [.455, 0, .342],
    0x1D5CC: [.46, .01, .383],
    0x1D5CD: [.571, .01, .361],
    0x1D5CE: [.444, .01, .517],
    0x1D5CF: [.444, 0, .461],
    0x1D5D0: [.444, 0, .683],
    0x1D5D1: [.444, 0, .461],
    0x1D5D2: [.444, .204, .461],
    0x1D5D3: [.444, 0, .435],
    0x1D5D4: [.694, 0, .733],
    0x1D5D5: [.694, 0, .733],
    0x1D5D6: [.704, .011, .703],
    0x1D5D7: [.694, 0, .794],
    0x1D5D8: [.691, 0, .642],
    0x1D5D9: [.691, 0, .611],
    0x1D5DA: [.705, .011, .733],
    0x1D5DB: [.694, 0, .794],
    0x1D5DC: [.694, 0, .331],
    0x1D5DD: [.694, .022, .519],
    0x1D5DE: [.694, 0, .764],
    0x1D5DF: [.694, 0, .581],
    0x1D5E0: [.694, 0, .978],
    0x1D5E1: [.694, 0, .794],
    0x1D5E2: [.716, .022, .794],
    0x1D5E3: [.694, 0, .703],
    0x1D5E4: [.716, .106, .794],
    0x1D5E5: [.694, 0, .703],
    0x1D5E6: [.716, .022, .611],
    0x1D5E7: [.688, 0, .733],
    0x1D5E8: [.694, .022, .764],
    0x1D5E9: [.694, 0, .733],
    0x1D5EA: [.694, 0, 1.039],
    0x1D5EB: [.694, 0, .733],
    0x1D5EC: [.694, 0, .733],
    0x1D5ED: [.694, 0, .672],
    0x1D5EE: [.475, .011, .525],
    0x1D5EF: [.694, .01, .561],
    0x1D5F0: [.475, .011, .489],
    0x1D5F1: [.694, .011, .561],
    0x1D5F2: [.474, .01, .511],
    0x1D5F3: [.705, 0, .336, { ic: .045 }],
    0x1D5F4: [.469, .206, .55],
    0x1D5F5: [.694, 0, .561],
    0x1D5F6: [.695, 0, .256],
    0x1D5F7: [.695, .205, .286],
    0x1D5F8: [.694, 0, .531],
    0x1D5F9: [.694, 0, .256],
    0x1D5FA: [.469, 0, .867],
    0x1D5FB: [.468, 0, .561],
    0x1D5FC: [.474, .011, .55],
    0x1D5FD: [.469, .194, .561],
    0x1D5FE: [.469, .194, .561],
    0x1D5FF: [.469, 0, .372],
    0x1D600: [.474, .01, .422],
    0x1D601: [.589, .01, .404],
    0x1D602: [.458, .011, .561],
    0x1D603: [.458, 0, .5],
    0x1D604: [.458, 0, .744],
    0x1D605: [.458, 0, .5],
    0x1D606: [.458, .205, .5],
    0x1D607: [.458, 0, .476],
    0x1D608: [.694, 0, .667],
    0x1D609: [.694, 0, .667, { ic: .029 }],
    0x1D60A: [.705, .01, .639, { ic: .08 }],
    0x1D60B: [.694, 0, .722, { ic: .025 }],
    0x1D60C: [.691, 0, .597, { ic: .091 }],
    0x1D60D: [.691, 0, .569, { ic: .104 }],
    0x1D60E: [.705, .011, .667, { ic: .063 }],
    0x1D60F: [.694, 0, .708, { ic: .06 }],
    0x1D610: [.694, 0, .278, { ic: .06 }],
    0x1D611: [.694, .022, .472, { ic: .063 }],
    0x1D612: [.694, 0, .694, { ic: .091 }],
    0x1D613: [.694, 0, .542],
    0x1D614: [.694, 0, .875, { ic: .054 }],
    0x1D615: [.694, 0, .708, { ic: .058 }],
    0x1D616: [.716, .022, .736, { ic: .027 }],
    0x1D617: [.694, 0, .639, { ic: .051 }],
    0x1D618: [.716, .125, .736, { ic: .027 }],
    0x1D619: [.694, 0, .646, { ic: .052 }],
    0x1D61A: [.716, .022, .556, { ic: .053 }],
    0x1D61B: [.688, 0, .681, { ic: .109 }],
    0x1D61C: [.694, .022, .688, { ic: .059 }],
    0x1D61D: [.694, 0, .667, { ic: .132 }],
    0x1D61E: [.694, 0, .944, { ic: .132 }],
    0x1D61F: [.694, 0, .667, { ic: .091 }],
    0x1D620: [.694, 0, .667, { ic: .143 }],
    0x1D621: [.694, 0, .611, { ic: .091 }],
    0x1D622: [.461, .01, .481],
    0x1D623: [.694, .011, .517, { ic: .022 }],
    0x1D624: [.46, .011, .444, { ic: .055 }],
    0x1D625: [.694, .01, .517, { ic: .071 }],
    0x1D626: [.46, .011, .444, { ic: .028 }],
    0x1D627: [.705, 0, .306, { ic: .188 }],
    0x1D628: [.455, .206, .5, { ic: .068 }],
    0x1D629: [.694, 0, .517],
    0x1D62A: [.68, 0, .239, { ic: .076 }],
    0x1D62B: [.68, .204, .267, { ic: .069 }],
    0x1D62C: [.694, 0, .489, { ic: .054 }],
    0x1D62D: [.694, 0, .239, { ic: .072 }],
    0x1D62E: [.455, 0, .794],
    0x1D62F: [.454, 0, .517],
    0x1D630: [.461, .011, .5, { ic: .023 }],
    0x1D631: [.455, .194, .517, { ic: .021 }],
    0x1D632: [.455, .194, .517, { ic: .021 }],
    0x1D633: [.455, 0, .342, { ic: .082 }],
    0x1D634: [.461, .011, .383, { ic: .053 }],
    0x1D635: [.571, .011, .361, { ic: .049 }],
    0x1D636: [.444, .01, .517, { ic: .02 }],
    0x1D637: [.444, 0, .461, { ic: .079 }],
    0x1D638: [.444, 0, .683, { ic: .079 }],
    0x1D639: [.444, 0, .461, { ic: .076 }],
    0x1D63A: [.444, .205, .461, { ic: .079 }],
    0x1D63B: [.444, 0, .435, { ic: .059 }],
    0x1D670: [.623, 0, .525],
    0x1D671: [.611, 0, .525],
    0x1D672: [.622, .011, .525],
    0x1D673: [.611, 0, .525],
    0x1D674: [.611, 0, .525],
    0x1D675: [.611, 0, .525],
    0x1D676: [.622, .011, .525],
    0x1D677: [.611, 0, .525],
    0x1D678: [.611, 0, .525],
    0x1D679: [.611, .011, .525],
    0x1D67A: [.611, 0, .525],
    0x1D67B: [.611, 0, .525],
    0x1D67C: [.611, 0, .525],
    0x1D67D: [.611, 0, .525],
    0x1D67E: [.621, .01, .525],
    0x1D67F: [.611, 0, .525],
    0x1D680: [.621, .138, .525],
    0x1D681: [.611, .011, .525],
    0x1D682: [.622, .011, .525],
    0x1D683: [.611, 0, .525],
    0x1D684: [.611, .011, .525],
    0x1D685: [.611, .007, .525],
    0x1D686: [.611, .007, .525],
    0x1D687: [.611, 0, .525],
    0x1D688: [.611, 0, .525],
    0x1D689: [.611, 0, .525],
    0x1D68A: [.439, .006, .525],
    0x1D68B: [.611, .006, .525],
    0x1D68C: [.44, .006, .525],
    0x1D68D: [.611, .006, .525],
    0x1D68E: [.44, .006, .525],
    0x1D68F: [.617, 0, .525],
    0x1D690: [.442, .229, .525],
    0x1D691: [.611, 0, .525],
    0x1D692: [.612, 0, .525],
    0x1D693: [.612, .228, .525],
    0x1D694: [.611, 0, .525],
    0x1D695: [.611, 0, .525],
    0x1D696: [.436, 0, .525, { ic: .011 }],
    0x1D697: [.436, 0, .525],
    0x1D698: [.44, .006, .525],
    0x1D699: [.437, .221, .525],
    0x1D69A: [.437, .221, .525, { ic: .02 }],
    0x1D69B: [.437, 0, .525],
    0x1D69C: [.44, .006, .525],
    0x1D69D: [.554, .006, .525],
    0x1D69E: [.431, .005, .525],
    0x1D69F: [.431, 0, .525],
    0x1D6A0: [.431, 0, .525],
    0x1D6A1: [.431, 0, .525],
    0x1D6A2: [.431, .228, .525],
    0x1D6A3: [.431, 0, .525],
    0x1D6A8: [.698, 0, .869],
    0x1D6A9: [.686, 0, .818],
    0x1D6AA: [.68, 0, .692],
    0x1D6AB: [.698, 0, .958],
    0x1D6AC: [.68, 0, .756],
    0x1D6AD: [.686, 0, .703],
    0x1D6AE: [.686, 0, .9],
    0x1D6AF: [.696, .01, .894],
    0x1D6B0: [.686, 0, .436],
    0x1D6B1: [.686, 0, .901],
    0x1D6B2: [.698, 0, .806],
    0x1D6B3: [.686, 0, 1.092],
    0x1D6B4: [.686, 0, .9],
    0x1D6B5: [.675, 0, .767],
    0x1D6B6: [.696, .01, .864],
    0x1D6B7: [.68, 0, .9],
    0x1D6B8: [.686, 0, .786],
    0x1D6BA: [.686, 0, .831],
    0x1D6BB: [.675, 0, .8],
    0x1D6BC: [.697, 0, .894],
    0x1D6BD: [.686, 0, .831],
    0x1D6BE: [.686, 0, .869],
    0x1D6BF: [.686, 0, .894],
    0x1D6C0: [.696, 0, .831],
    0x1D6C1: [.686, .024, .958],
    0x1D6E2: [.716, 0, .75, { sk: .139 }],
    0x1D6E3: [.683, 0, .759, { sk: .0833 }],
    0x1D6E4: [.68, 0, .615, { ic: .106, sk: .0833 }],
    0x1D6E5: [.716, 0, .833, { sk: .167 }],
    0x1D6E6: [.68, 0, .738, { ic: .026, sk: .0833 }],
    0x1D6E7: [.683, 0, .683, { ic: .04, sk: .0833 }],
    0x1D6E8: [.683, 0, .831, { ic: .057, sk: .0556 }],
    0x1D6E9: [.704, .022, .763, { sk: .0833 }],
    0x1D6EA: [.683, 0, .44, { ic: .064, sk: .111 }],
    0x1D6EB: [.683, 0, .849, { ic: .04, sk: .0556 }],
    0x1D6EC: [.716, 0, .694, { sk: .167 }],
    0x1D6ED: [.683, 0, .97, { ic: .081, sk: .0833 }],
    0x1D6EE: [.683, 0, .803, { ic: .085, sk: .0833 }],
    0x1D6EF: [.677, 0, .742, { ic: .035, sk: .0833 }],
    0x1D6F0: [.704, .022, .763, { sk: .0833 }],
    0x1D6F1: [.68, 0, .831, { ic: .056, sk: .0556 }],
    0x1D6F2: [.683, 0, .642, { ic: .109, sk: .0833 }],
    0x1D6F4: [.683, 0, .78, { ic: .026, sk: .0833 }],
    0x1D6F5: [.677, 0, .584, { ic: .12, sk: .0833 }],
    0x1D6F6: [.705, 0, .583, { ic: .117, sk: .0556 }],
    0x1D6F7: [.683, 0, .667, { sk: .0833 }],
    0x1D6F8: [.683, 0, .828, { ic: .024, sk: .0833 }],
    0x1D6F9: [.683, 0, .612, { ic: .08, sk: .0556 }],
    0x1D6FA: [.704, 0, .772, { ic: .014, sk: .0833 }],
    0x1D6FC: [.442, .011, .64, { sk: .0278 }],
    0x1D6FD: [.705, .194, .566, { sk: .0833 }],
    0x1D6FE: [.441, .216, .518, { ic: .025 }],
    0x1D6FF: [.717, .01, .444, { sk: .0556 }],
    0x1D700: [.452, .022, .466, { sk: .0833 }],
    0x1D701: [.704, .204, .438, { ic: .033, sk: .0833 }],
    0x1D702: [.442, .216, .497, { sk: .0556 }],
    0x1D703: [.705, .01, .469, { sk: .0833 }],
    0x1D704: [.442, .01, .354, { sk: .0556 }],
    0x1D705: [.442, .011, .576],
    0x1D706: [.694, .012, .583],
    0x1D707: [.442, .216, .603, { sk: .0278 }],
    0x1D708: [.442, 0, .494, { ic: .036, sk: .0278 }],
    0x1D709: [.704, .205, .438, { sk: .111 }],
    0x1D70A: [.441, .011, .485, { sk: .0556 }],
    0x1D70B: [.431, .011, .57],
    0x1D70C: [.442, .216, .517, { sk: .0833 }],
    0x1D70D: [.442, .107, .363, { ic: .042, sk: .0833 }],
    0x1D70E: [.431, .011, .571],
    0x1D70F: [.431, .013, .437, { ic: .08, sk: .0278 }],
    0x1D710: [.443, .01, .54, { sk: .0278 }],
    0x1D711: [.442, .218, .654, { sk: .0833 }],
    0x1D712: [.442, .204, .626, { sk: .0556 }],
    0x1D713: [.694, .205, .651, { sk: .111 }],
    0x1D714: [.443, .011, .622],
    0x1D715: [.715, .022, .531, { ic: .035, sk: .0833 }],
    0x1D716: [.431, .011, .406, { sk: .0556 }],
    0x1D717: [.705, .011, .591, { sk: .0833 }],
    0x1D718: [.434, .006, .667, { ic: .067 }],
    0x1D719: [.694, .205, .596, { sk: .0833 }],
    0x1D71A: [.442, .194, .517, { sk: .0833 }],
    0x1D71B: [.431, .01, .828],
    0x1D71C: [.711, 0, .869, { sk: .16 }],
    0x1D71D: [.686, 0, .866, { sk: .0958 }],
    0x1D71E: [.68, 0, .657, { ic: .12, sk: .0958 }],
    0x1D71F: [.711, 0, .958, { sk: .192 }],
    0x1D720: [.68, 0, .81, { ic: .015, sk: .0958 }],
    0x1D721: [.686, 0, .773, { ic: .032, sk: .0958 }],
    0x1D722: [.686, 0, .982, { ic: .045, sk: .0639 }],
    0x1D723: [.702, .017, .867, { sk: .0958 }],
    0x1D724: [.686, 0, .511, { ic: .062, sk: .128 }],
    0x1D725: [.686, 0, .971, { ic: .032, sk: .0639 }],
    0x1D726: [.711, 0, .806, { sk: .192 }],
    0x1D727: [.686, 0, 1.142, { ic: .077, sk: .0958 }],
    0x1D728: [.686, 0, .95, { ic: .077, sk: .0958 }],
    0x1D729: [.675, 0, .841, { ic: .026, sk: .0958 }],
    0x1D72A: [.703, .017, .837, { sk: .0958 }],
    0x1D72B: [.68, 0, .982, { ic: .044, sk: .0639 }],
    0x1D72C: [.686, 0, .723, { ic: .124, sk: .0958 }],
    0x1D72E: [.686, 0, .885, { ic: .017, sk: .0958 }],
    0x1D72F: [.675, 0, .637, { ic: .135, sk: .0958 }],
    0x1D730: [.703, 0, .671, { ic: .131, sk: .0639 }],
    0x1D731: [.686, 0, .767, { sk: .0958 }],
    0x1D732: [.686, 0, .947, { sk: .0958 }],
    0x1D733: [.686, 0, .714, { ic: .076, sk: .0639 }],
    0x1D734: [.703, 0, .879, { sk: .0958 }],
    0x1D736: [.452, .008, .761, { sk: .0319 }],
    0x1D737: [.701, .194, .66, { sk: .0958 }],
    0x1D738: [.451, .211, .59, { ic: .027 }],
    0x1D739: [.725, .008, .522, { sk: .0639 }],
    0x1D73A: [.461, .017, .529, { sk: .0958 }],
    0x1D73B: [.711, .202, .508, { ic: .013, sk: .0958 }],
    0x1D73C: [.452, .211, .6, { sk: .0639 }],
    0x1D73D: [.702, .008, .562, { sk: .0958 }],
    0x1D73E: [.452, .008, .412, { sk: .0639 }],
    0x1D73F: [.452, .008, .668],
    0x1D740: [.694, .013, .671],
    0x1D741: [.452, .211, .708, { sk: .0319 }],
    0x1D742: [.452, 0, .577, { ic: .031, sk: .0319 }],
    0x1D743: [.711, .201, .508, { sk: .128 }],
    0x1D744: [.452, .008, .585, { sk: .0639 }],
    0x1D745: [.444, .008, .682],
    0x1D746: [.451, .211, .612, { sk: .0958 }],
    0x1D747: [.451, .105, .424, { ic: .033, sk: .0958 }],
    0x1D748: [.444, .008, .686],
    0x1D749: [.444, .013, .521, { ic: .089, sk: .0319 }],
    0x1D74A: [.453, .008, .631, { sk: .0319 }],
    0x1D74B: [.452, .216, .747, { sk: .0958 }],
    0x1D74C: [.452, .201, .718, { sk: .0639 }],
    0x1D74D: [.694, .202, .758, { sk: .128 }],
    0x1D74E: [.453, .008, .718],
    0x1D74F: [.71, .017, .628, { ic: .029, sk: .0958 }],
    0x1D750: [.444, .007, .483, { sk: .0639 }],
    0x1D751: [.701, .008, .692, { sk: .0958 }],
    0x1D752: [.434, .006, .667, { ic: .067 }],
    0x1D753: [.694, .202, .712, { sk: .0958 }],
    0x1D754: [.451, .194, .612, { sk: .0958 }],
    0x1D755: [.444, .008, .975],
    0x1D756: [.694, 0, .733],
    0x1D757: [.694, 0, .733],
    0x1D758: [.691, 0, .581],
    0x1D759: [.694, 0, .917],
    0x1D75A: [.691, 0, .642],
    0x1D75B: [.694, 0, .672],
    0x1D75C: [.694, 0, .794],
    0x1D75D: [.716, .022, .856],
    0x1D75E: [.694, 0, .331],
    0x1D75F: [.694, 0, .764],
    0x1D760: [.694, 0, .672],
    0x1D761: [.694, 0, .978],
    0x1D762: [.694, 0, .794],
    0x1D763: [.688, 0, .733],
    0x1D764: [.716, .022, .794],
    0x1D765: [.691, 0, .794],
    0x1D766: [.694, 0, .703],
    0x1D768: [.694, 0, .794],
    0x1D769: [.688, 0, .733],
    0x1D76A: [.715, 0, .856],
    0x1D76B: [.694, 0, .794],
    0x1D76C: [.694, 0, .733],
    0x1D76D: [.694, 0, .856],
    0x1D76E: [.716, 0, .794],
    0x1D7CE: [.654, .01, .575],
    0x1D7CF: [.655, 0, .575],
    0x1D7D0: [.654, 0, .575],
    0x1D7D1: [.655, .011, .575],
    0x1D7D2: [.656, 0, .575],
    0x1D7D3: [.655, .011, .575],
    0x1D7D4: [.655, .011, .575],
    0x1D7D5: [.676, .011, .575],
    0x1D7D6: [.654, .011, .575],
    0x1D7D7: [.654, .011, .575],
    0x1D7E2: [.678, .022, .5],
    0x1D7E3: [.678, 0, .5],
    0x1D7E4: [.677, 0, .5],
    0x1D7E5: [.678, .022, .5],
    0x1D7E6: [.656, 0, .5],
    0x1D7E7: [.656, .021, .5],
    0x1D7E8: [.677, .022, .5],
    0x1D7E9: [.656, .011, .5],
    0x1D7EA: [.678, .022, .5],
    0x1D7EB: [.677, .022, .5],
    0x1D7EC: [.715, .022, .55],
    0x1D7ED: [.716, 0, .55],
    0x1D7EE: [.716, 0, .55],
    0x1D7EF: [.716, .022, .55],
    0x1D7F0: [.694, 0, .55],
    0x1D7F1: [.694, .022, .55],
    0x1D7F2: [.716, .022, .55],
    0x1D7F3: [.695, .011, .55],
    0x1D7F4: [.715, .022, .55],
    0x1D7F5: [.716, .022, .55],
    0x1D7F6: [.621, .01, .525],
    0x1D7F7: [.622, 0, .525],
    0x1D7F8: [.622, 0, .525],
    0x1D7F9: [.622, .011, .525],
    0x1D7FA: [.624, 0, .525],
    0x1D7FB: [.611, .01, .525],
    0x1D7FC: [.622, .011, .525],
    0x1D7FD: [.627, .01, .525],
    0x1D7FE: [.621, .01, .525],
    0x1D7FF: [.622, .011, .525],
};
//# sourceMappingURL=normal.js.map

/***/ }),

/***/ 4886:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sansSerifBoldItalic = void 0;
exports.sansSerifBoldItalic = {
    0x131: [.458, 0, .256],
    0x237: [.458, .205, .286],
};
//# sourceMappingURL=sans-serif-bold-italic.js.map

/***/ }),

/***/ 4471:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sansSerifBold = void 0;
exports.sansSerifBold = {
    0x21: [.694, 0, .367],
    0x22: [.694, -0.442, .558],
    0x23: [.694, .193, .917],
    0x24: [.75, .056, .55],
    0x25: [.75, .056, 1.029],
    0x26: [.716, .022, .831],
    0x27: [.694, -0.442, .306],
    0x28: [.75, .249, .428],
    0x29: [.75, .25, .428],
    0x2A: [.75, -0.293, .55],
    0x2B: [.617, .116, .856],
    0x2C: [.146, .106, .306],
    0x2D: [.273, -0.186, .367],
    0x2E: [.146, 0, .306],
    0x2F: [.75, .249, .55],
    0x3A: [.458, 0, .306],
    0x3B: [.458, .106, .306],
    0x3D: [.407, -0.094, .856],
    0x3F: [.705, 0, .519],
    0x40: [.704, .011, .733],
    0x5B: [.75, .25, .343],
    0x5D: [.75, .25, .343],
    0x5E: [.694, -0.537, .55],
    0x5F: [-0.023, .11, .55],
    0x7E: [.344, -0.198, .55],
    0x131: [.458, 0, .256],
    0x237: [.458, .205, .286],
    0x300: [.694, -0.537, 0],
    0x301: [.694, -0.537, 0],
    0x302: [.694, -0.537, 0],
    0x303: [.694, -0.548, 0],
    0x304: [.66, -0.56, 0],
    0x306: [.694, -0.552, 0],
    0x307: [.695, -0.596, 0],
    0x308: [.695, -0.595, 0],
    0x30A: [.694, -0.538, 0],
    0x30B: [.694, -0.537, 0],
    0x30C: [.657, -0.5, 0],
    0x2013: [.327, -0.24, .55],
    0x2014: [.327, -0.24, 1.1],
    0x2015: [.327, -0.24, 1.1],
    0x2017: [-0.023, .11, .55],
    0x2018: [.694, -0.443, .306],
    0x2019: [.694, -0.442, .306],
    0x201C: [.694, -0.443, .558],
    0x201D: [.694, -0.442, .558],
    0x2044: [.75, .249, .55],
    0x2206: [.694, 0, .917],
};
//# sourceMappingURL=sans-serif-bold.js.map

/***/ }),

/***/ 5181:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sansSerifItalic = void 0;
exports.sansSerifItalic = {
    0x21: [.694, 0, .319, { ic: .036 }],
    0x22: [.694, -0.471, .5],
    0x23: [.694, .194, .833, { ic: .018 }],
    0x24: [.75, .056, .5, { ic: .065 }],
    0x25: [.75, .056, .833],
    0x26: [.716, .022, .758],
    0x27: [.694, -0.471, .278, { ic: .057 }],
    0x28: [.75, .25, .389, { ic: .102 }],
    0x29: [.75, .25, .389],
    0x2A: [.75, -0.306, .5, { ic: .068 }],
    0x2B: [.583, .083, .778],
    0x2C: [.098, .125, .278],
    0x2D: [.259, -0.186, .333],
    0x2E: [.098, 0, .278],
    0x2F: [.75, .25, .5, { ic: .1 }],
    0x30: [.678, .022, .5, { ic: .049 }],
    0x31: [.678, 0, .5],
    0x32: [.678, 0, .5, { ic: .051 }],
    0x33: [.678, .022, .5, { ic: .044 }],
    0x34: [.656, 0, .5, { ic: .021 }],
    0x35: [.656, .022, .5, { ic: .055 }],
    0x36: [.678, .022, .5, { ic: .048 }],
    0x37: [.656, .011, .5, { ic: .096 }],
    0x38: [.678, .022, .5, { ic: .054 }],
    0x39: [.677, .022, .5, { ic: .045 }],
    0x3A: [.444, 0, .278],
    0x3B: [.444, .125, .278],
    0x3D: [.37, -0.13, .778, { ic: .018 }],
    0x3F: [.704, 0, .472, { ic: .064 }],
    0x40: [.705, .01, .667, { ic: .04 }],
    0x5B: [.75, .25, .289, { ic: .136 }],
    0x5D: [.75, .25, .289, { ic: .064 }],
    0x5E: [.694, -0.527, .5, { ic: .033 }],
    0x5F: [-0.038, .114, .5, { ic: .065 }],
    0x7E: [.327, -0.193, .5, { ic: .06 }],
    0x131: [.444, 0, .239, { ic: .019 }],
    0x237: [.444, .204, .267, { ic: .019 }],
    0x300: [.694, -0.527, 0],
    0x301: [.694, -0.527, 0, { ic: .063 }],
    0x302: [.694, -0.527, 0, { ic: .033 }],
    0x303: [.677, -0.543, 0, { ic: .06 }],
    0x304: [.631, -0.552, 0, { ic: .064 }],
    0x306: [.694, -0.508, 0, { ic: .073 }],
    0x307: [.68, -0.576, 0],
    0x308: [.68, -0.582, 0, { ic: .04 }],
    0x30A: [.693, -0.527, 0],
    0x30B: [.694, -0.527, 0, { ic: .063 }],
    0x30C: [.654, -0.487, 0, { ic: .06 }],
    0x391: [.694, 0, .667],
    0x392: [.694, 0, .667, { ic: .029 }],
    0x393: [.691, 0, .542, { ic: .104 }],
    0x394: [.694, 0, .833],
    0x395: [.691, 0, .597, { ic: .091 }],
    0x396: [.694, 0, .611, { ic: .091 }],
    0x397: [.694, 0, .708, { ic: .06 }],
    0x398: [.715, .022, .778, { ic: .026 }],
    0x399: [.694, 0, .278, { ic: .06 }],
    0x39A: [.694, 0, .694, { ic: .091 }],
    0x39B: [.694, 0, .611],
    0x39C: [.694, 0, .875, { ic: .054 }],
    0x39D: [.694, 0, .708, { ic: .058 }],
    0x39E: [.688, 0, .667, { ic: .098 }],
    0x39F: [.716, .022, .736, { ic: .027 }],
    0x3A0: [.691, 0, .708, { ic: .06 }],
    0x3A1: [.694, 0, .639, { ic: .051 }],
    0x3A3: [.694, 0, .722, { ic: .091 }],
    0x3A4: [.688, 0, .681, { ic: .109 }],
    0x3A5: [.716, 0, .778, { ic: .065 }],
    0x3A6: [.694, 0, .722, { ic: .021 }],
    0x3A7: [.694, 0, .667, { ic: .091 }],
    0x3A8: [.694, 0, .778, { ic: .076 }],
    0x3A9: [.716, 0, .722, { ic: .047 }],
    0x2013: [.312, -0.236, .5, { ic: .065 }],
    0x2014: [.312, -0.236, 1, { ic: .065 }],
    0x2015: [.312, -0.236, 1, { ic: .065 }],
    0x2017: [-0.038, .114, .5, { ic: .065 }],
    0x2018: [.694, -0.471, .278, { ic: .058 }],
    0x2019: [.694, -0.471, .278, { ic: .057 }],
    0x201C: [.694, -0.471, .5, { ic: .114 }],
    0x201D: [.694, -0.471, .5],
    0x2044: [.75, .25, .5, { ic: .1 }],
    0x2206: [.694, 0, .833],
};
//# sourceMappingURL=sans-serif-italic.js.map

/***/ }),

/***/ 3526:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sansSerif = void 0;
exports.sansSerif = {
    0x21: [.694, 0, .319],
    0x22: [.694, -0.471, .5],
    0x23: [.694, .194, .833],
    0x24: [.75, .056, .5],
    0x25: [.75, .056, .833],
    0x26: [.716, .022, .758],
    0x27: [.694, -0.471, .278],
    0x28: [.75, .25, .389],
    0x29: [.75, .25, .389],
    0x2A: [.75, -0.306, .5],
    0x2B: [.583, .082, .778],
    0x2C: [.098, .125, .278],
    0x2D: [.259, -0.186, .333],
    0x2E: [.098, 0, .278],
    0x2F: [.75, .25, .5],
    0x3A: [.444, 0, .278],
    0x3B: [.444, .125, .278],
    0x3D: [.37, -0.13, .778],
    0x3F: [.704, 0, .472],
    0x40: [.704, .011, .667],
    0x5B: [.75, .25, .289],
    0x5D: [.75, .25, .289],
    0x5E: [.694, -0.527, .5],
    0x5F: [-0.038, .114, .5],
    0x7E: [.327, -0.193, .5],
    0x131: [.444, 0, .239],
    0x237: [.444, .205, .267],
    0x300: [.694, -0.527, 0],
    0x301: [.694, -0.527, 0],
    0x302: [.694, -0.527, 0],
    0x303: [.677, -0.543, 0],
    0x304: [.631, -0.552, 0],
    0x306: [.694, -0.508, 0],
    0x307: [.68, -0.576, 0],
    0x308: [.68, -0.582, 0],
    0x30A: [.694, -0.527, 0],
    0x30B: [.694, -0.527, 0],
    0x30C: [.654, -0.487, 0],
    0x391: [.694, 0, .667],
    0x392: [.694, 0, .667],
    0x393: [.691, 0, .542],
    0x394: [.694, 0, .833],
    0x395: [.691, 0, .597],
    0x396: [.694, 0, .611],
    0x397: [.694, 0, .708],
    0x398: [.716, .021, .778],
    0x399: [.694, 0, .278],
    0x39A: [.694, 0, .694],
    0x39B: [.694, 0, .611],
    0x39C: [.694, 0, .875],
    0x39D: [.694, 0, .708],
    0x39E: [.688, 0, .667],
    0x39F: [.715, .022, .736],
    0x3A0: [.691, 0, .708],
    0x3A1: [.694, 0, .639],
    0x3A3: [.694, 0, .722],
    0x3A4: [.688, 0, .681],
    0x3A5: [.716, 0, .778],
    0x3A6: [.694, 0, .722],
    0x3A7: [.694, 0, .667],
    0x3A8: [.694, 0, .778],
    0x3A9: [.716, 0, .722],
    0x2013: [.312, -0.236, .5],
    0x2014: [.312, -0.236, 1],
    0x2015: [.312, -0.236, 1],
    0x2017: [-0.038, .114, .5],
    0x2018: [.694, -0.471, .278],
    0x2019: [.694, -0.471, .278],
    0x201C: [.694, -0.471, .5],
    0x201D: [.694, -0.471, .5],
    0x2044: [.75, .25, .5],
    0x2206: [.694, 0, .833],
};
//# sourceMappingURL=sans-serif.js.map

/***/ }),

/***/ 5649:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scriptBold = void 0;
exports.scriptBold = {};
//# sourceMappingURL=script-bold.js.map

/***/ }),

/***/ 7153:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.script = void 0;
exports.script = {};
//# sourceMappingURL=script.js.map

/***/ }),

/***/ 5745:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.smallop = void 0;
exports.smallop = {
    0x28: [.85, .349, .458],
    0x29: [.85, .349, .458],
    0x2F: [.85, .349, .578],
    0x5B: [.85, .349, .417],
    0x5C: [.85, .349, .578],
    0x5D: [.85, .349, .417],
    0x7B: [.85, .349, .583],
    0x7D: [.85, .349, .583],
    0x2C6: [.744, -0.551, .556],
    0x2DC: [.722, -0.597, .556],
    0x302: [.744, -0.551, 0],
    0x303: [.722, -0.597, 0],
    0x2016: [.602, 0, .778],
    0x2044: [.85, .349, .578],
    0x2191: [.6, 0, .667],
    0x2193: [.6, 0, .667],
    0x21D1: [.599, 0, .778],
    0x21D3: [.6, 0, .778],
    0x220F: [.75, .25, .944],
    0x2210: [.75, .25, .944],
    0x2211: [.75, .25, 1.056],
    0x221A: [.85, .35, 1, { ic: .02 }],
    0x2223: [.627, .015, .333],
    0x2225: [.627, .015, .556],
    0x222B: [.805, .306, .472, { ic: .138 }],
    0x222C: [.805, .306, .819, { ic: .138 }],
    0x222D: [.805, .306, 1.166, { ic: .138 }],
    0x222E: [.805, .306, .472, { ic: .138 }],
    0x22C0: [.75, .249, .833],
    0x22C1: [.75, .249, .833],
    0x22C2: [.75, .249, .833],
    0x22C3: [.75, .249, .833],
    0x2308: [.85, .349, .472],
    0x2309: [.85, .349, .472],
    0x230A: [.85, .349, .472],
    0x230B: [.85, .349, .472],
    0x2329: [.85, .35, .472],
    0x232A: [.85, .35, .472],
    0x23D0: [.602, 0, .667],
    0x2758: [.627, .015, .333],
    0x27E8: [.85, .35, .472],
    0x27E9: [.85, .35, .472],
    0x2A00: [.75, .25, 1.111],
    0x2A01: [.75, .25, 1.111],
    0x2A02: [.75, .25, 1.111],
    0x2A04: [.75, .249, .833],
    0x2A06: [.75, .249, .833],
    0x2A0C: [.805, .306, 1.638, { ic: .138 }],
    0x3008: [.85, .35, .472],
    0x3009: [.85, .35, .472],
};
//# sourceMappingURL=smallop.js.map

/***/ }),

/***/ 1411:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texCalligraphicBold = void 0;
exports.texCalligraphicBold = {
    0x41: [.751, .049, .921, { ic: .068, sk: .224 }],
    0x42: [.705, .017, .748, { sk: .16 }],
    0x43: [.703, .02, .613, { sk: .16 }],
    0x44: [.686, 0, .892, { sk: .0958 }],
    0x45: [.703, .016, .607, { ic: .02, sk: .128 }],
    0x46: [.686, .03, .814, { ic: .116, sk: .128 }],
    0x47: [.703, .113, .682, { sk: .128 }],
    0x48: [.686, .048, .987, { sk: .128 }],
    0x49: [.686, 0, .642, { ic: .104, sk: .0319 }],
    0x4A: [.686, .114, .779, { ic: .158, sk: .192 }],
    0x4B: [.703, .017, .871, { sk: .0639 }],
    0x4C: [.703, .017, .788, { sk: .16 }],
    0x4D: [.703, .049, 1.378, { sk: .16 }],
    0x4E: [.84, .049, .937, { ic: .168, sk: .0958 }],
    0x4F: [.703, .017, .906, { sk: .128 }],
    0x50: [.686, .067, .81, { ic: .036, sk: .0958 }],
    0x51: [.703, .146, .939, { sk: .128 }],
    0x52: [.686, .017, .99, { sk: .0958 }],
    0x53: [.703, .016, .696, { ic: .025, sk: .16 }],
    0x54: [.72, .069, .644, { ic: .303, sk: .0319 }],
    0x55: [.686, .024, .715, { ic: .056, sk: .0958 }],
    0x56: [.686, .077, .737, { ic: .037, sk: .0319 }],
    0x57: [.686, .077, 1.169, { ic: .037, sk: .0958 }],
    0x58: [.686, 0, .817, { ic: .089, sk: .16 }],
    0x59: [.686, .164, .759, { ic: .038, sk: .0958 }],
    0x5A: [.686, 0, .818, { ic: .035, sk: .16 }],
    0x131: [.452, .008, .394, { sk: .0319 }],
    0x237: [.451, .201, .439, { sk: .0958 }],
};
//# sourceMappingURL=tex-calligraphic-bold.js.map

/***/ }),

/***/ 6384:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texCalligraphic = void 0;
exports.texCalligraphic = {
    0x41: [.728, .05, .798, { ic: .021, sk: .194 }],
    0x42: [.705, .022, .657, { sk: .139 }],
    0x43: [.705, .025, .527, { sk: .139 }],
    0x44: [.683, 0, .771, { sk: .0833 }],
    0x45: [.705, .022, .528, { ic: .036, sk: .111 }],
    0x46: [.683, .032, .719, { ic: .11, sk: .111 }],
    0x47: [.704, .119, .595, { sk: .111 }],
    0x48: [.683, .048, .845, { sk: .111 }],
    0x49: [.683, 0, .545, { ic: .097, sk: .0278 }],
    0x4A: [.683, .119, .678, { ic: .161, sk: .167 }],
    0x4B: [.705, .022, .762, { sk: .0556 }],
    0x4C: [.705, .022, .69, { sk: .139 }],
    0x4D: [.705, .05, 1.201, { sk: .139 }],
    0x4E: [.789, .05, .82, { ic: .159, sk: .0833 }],
    0x4F: [.705, .022, .796, { sk: .111 }],
    0x50: [.683, .057, .696, { ic: .037, sk: .0833 }],
    0x51: [.705, .131, .817, { sk: .111 }],
    0x52: [.682, .022, .848, { sk: .0833 }],
    0x53: [.705, .022, .606, { ic: .036, sk: .139 }],
    0x54: [.717, .068, .545, { ic: .288, sk: .0278 }],
    0x55: [.683, .028, .626, { ic: .061, sk: .0833 }],
    0x56: [.683, .052, .613, { ic: .045, sk: .0278 }],
    0x57: [.683, .053, .988, { ic: .046, sk: .0833 }],
    0x58: [.683, 0, .713, { ic: .094, sk: .139 }],
    0x59: [.683, .143, .668, { ic: .046, sk: .0833 }],
    0x5A: [.683, 0, .725, { ic: .042, sk: .139 }],
};
//# sourceMappingURL=tex-calligraphic.js.map

/***/ }),

/***/ 6041:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texMathit = void 0;
exports.texMathit = {
    0x41: [.716, 0, .743],
    0x42: [.683, 0, .704],
    0x43: [.705, .021, .716],
    0x44: [.683, 0, .755],
    0x45: [.68, 0, .678],
    0x46: [.68, 0, .653],
    0x47: [.705, .022, .774],
    0x48: [.683, 0, .743],
    0x49: [.683, 0, .386],
    0x4A: [.683, .021, .525],
    0x4B: [.683, 0, .769],
    0x4C: [.683, 0, .627],
    0x4D: [.683, 0, .897],
    0x4E: [.683, 0, .743],
    0x4F: [.704, .022, .767],
    0x50: [.683, 0, .678],
    0x51: [.704, .194, .767],
    0x52: [.683, .022, .729],
    0x53: [.705, .022, .562],
    0x54: [.677, 0, .716],
    0x55: [.683, .022, .743],
    0x56: [.683, .022, .743],
    0x57: [.683, .022, .999],
    0x58: [.683, 0, .743],
    0x59: [.683, 0, .743],
    0x5A: [.683, 0, .613],
    0x61: [.442, .011, .511],
    0x62: [.694, .011, .46],
    0x63: [.441, .01, .46],
    0x64: [.694, .011, .511],
    0x65: [.442, .01, .46],
    0x66: [.705, .204, .307],
    0x67: [.442, .205, .46],
    0x68: [.694, .011, .511],
    0x69: [.656, .01, .307],
    0x6A: [.656, .204, .307],
    0x6B: [.694, .011, .46],
    0x6C: [.694, .011, .256],
    0x6D: [.442, .011, .818],
    0x6E: [.442, .011, .562],
    0x6F: [.442, .011, .511],
    0x70: [.442, .194, .511],
    0x71: [.442, .194, .46],
    0x72: [.442, .011, .422],
    0x73: [.442, .011, .409],
    0x74: [.626, .011, .332],
    0x75: [.441, .011, .537],
    0x76: [.443, .01, .46],
    0x77: [.443, .011, .664],
    0x78: [.442, .011, .464],
    0x79: [.441, .205, .486],
    0x7A: [.442, .011, .409],
};
//# sourceMappingURL=tex-mathit.js.map

/***/ }),

/***/ 8199:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texOldstyleBold = void 0;
exports.texOldstyleBold = {
    0x30: [.46, .017, .575],
    0x31: [.461, 0, .575],
    0x32: [.46, 0, .575],
    0x33: [.461, .211, .575],
    0x34: [.469, .194, .575],
    0x35: [.461, .211, .575],
    0x36: [.66, .017, .575],
    0x37: [.476, .211, .575],
    0x38: [.661, .017, .575],
    0x39: [.461, .21, .575],
    0x41: [.751, .049, .921, { ic: .068, sk: .224 }],
    0x42: [.705, .017, .748, { sk: .16 }],
    0x43: [.703, .02, .613, { sk: .16 }],
    0x44: [.686, 0, .892, { sk: .0958 }],
    0x45: [.703, .016, .607, { ic: .02, sk: .128 }],
    0x46: [.686, .03, .814, { ic: .116, sk: .128 }],
    0x47: [.703, .113, .682, { sk: .128 }],
    0x48: [.686, .048, .987, { sk: .128 }],
    0x49: [.686, 0, .642, { ic: .104, sk: .0319 }],
    0x4A: [.686, .114, .779, { ic: .158, sk: .192 }],
    0x4B: [.703, .017, .871, { sk: .0639 }],
    0x4C: [.703, .017, .788, { sk: .16 }],
    0x4D: [.703, .049, 1.378, { sk: .16 }],
    0x4E: [.84, .049, .937, { ic: .168, sk: .0958 }],
    0x4F: [.703, .017, .906, { sk: .128 }],
    0x50: [.686, .067, .81, { ic: .036, sk: .0958 }],
    0x51: [.703, .146, .939, { sk: .128 }],
    0x52: [.686, .017, .99, { sk: .0958 }],
    0x53: [.703, .016, .696, { ic: .025, sk: .16 }],
    0x54: [.72, .069, .644, { ic: .303, sk: .0319 }],
    0x55: [.686, .024, .715, { ic: .056, sk: .0958 }],
    0x56: [.686, .077, .737, { ic: .037, sk: .0319 }],
    0x57: [.686, .077, 1.169, { ic: .037, sk: .0958 }],
    0x58: [.686, 0, .817, { ic: .089, sk: .16 }],
    0x59: [.686, .164, .759, { ic: .038, sk: .0958 }],
    0x5A: [.686, 0, .818, { ic: .035, sk: .16 }],
};
//# sourceMappingURL=tex-oldstyle-bold.js.map

/***/ }),

/***/ 9848:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texOldstyle = void 0;
exports.texOldstyle = {
    0x30: [.452, .022, .5],
    0x31: [.453, 0, .5],
    0x32: [.453, 0, .5],
    0x33: [.452, .216, .5],
    0x34: [.464, .194, .5],
    0x35: [.453, .216, .5],
    0x36: [.665, .022, .5],
    0x37: [.463, .216, .5],
    0x38: [.666, .021, .5],
    0x39: [.453, .216, .5],
    0x41: [.728, .05, .798, { ic: .021, sk: .194 }],
    0x42: [.705, .022, .657, { sk: .139 }],
    0x43: [.705, .025, .527, { sk: .139 }],
    0x44: [.683, 0, .771, { sk: .0833 }],
    0x45: [.705, .022, .528, { ic: .036, sk: .111 }],
    0x46: [.683, .032, .719, { ic: .11, sk: .111 }],
    0x47: [.704, .119, .595, { sk: .111 }],
    0x48: [.683, .048, .845, { sk: .111 }],
    0x49: [.683, 0, .545, { ic: .097, sk: .0278 }],
    0x4A: [.683, .119, .678, { ic: .161, sk: .167 }],
    0x4B: [.705, .022, .762, { sk: .0556 }],
    0x4C: [.705, .022, .69, { sk: .139 }],
    0x4D: [.705, .05, 1.201, { sk: .139 }],
    0x4E: [.789, .05, .82, { ic: .159, sk: .0833 }],
    0x4F: [.705, .022, .796, { sk: .111 }],
    0x50: [.683, .057, .696, { ic: .037, sk: .0833 }],
    0x51: [.705, .131, .817, { sk: .111 }],
    0x52: [.682, .022, .848, { sk: .0833 }],
    0x53: [.705, .022, .606, { ic: .036, sk: .139 }],
    0x54: [.717, .068, .545, { ic: .288, sk: .0278 }],
    0x55: [.683, .028, .626, { ic: .061, sk: .0833 }],
    0x56: [.683, .052, .613, { ic: .045, sk: .0278 }],
    0x57: [.683, .053, .988, { ic: .046, sk: .0833 }],
    0x58: [.683, 0, .713, { ic: .094, sk: .139 }],
    0x59: [.683, .143, .668, { ic: .046, sk: .0833 }],
    0x5A: [.683, 0, .725, { ic: .042, sk: .139 }],
};
//# sourceMappingURL=tex-oldstyle.js.map

/***/ }),

/***/ 7906:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texSize3 = void 0;
exports.texSize3 = {
    0x28: [1.45, .949, .736],
    0x29: [1.45, .949, .736],
    0x2F: [1.45, .949, 1.044],
    0x5B: [1.45, .949, .528],
    0x5C: [1.45, .949, 1.044],
    0x5D: [1.45, .949, .528],
    0x7B: [1.45, .949, .75],
    0x7D: [1.45, .949, .75],
    0x2C6: [.772, -0.564, 1.444],
    0x2DC: [.749, -0.61, 1.444],
    0x302: [.772, -0.564, 0],
    0x303: [.749, -0.61, 0],
    0x2044: [1.45, .949, 1.044],
    0x221A: [1.45, .95, 1, { ic: .02 }],
    0x2308: [1.45, .949, .583],
    0x2309: [1.45, .949, .583],
    0x230A: [1.45, .949, .583],
    0x230B: [1.45, .949, .583],
    0x2329: [1.45, .95, .75],
    0x232A: [1.45, .949, .75],
    0x27E8: [1.45, .95, .75],
    0x27E9: [1.45, .949, .75],
    0x3008: [1.45, .95, .75],
    0x3009: [1.45, .949, .75],
};
//# sourceMappingURL=tex-size3.js.map

/***/ }),

/***/ 2644:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texSize4 = void 0;
exports.texSize4 = {
    0x28: [1.75, 1.249, .792],
    0x29: [1.75, 1.249, .792],
    0x2F: [1.75, 1.249, 1.278],
    0x5B: [1.75, 1.249, .583],
    0x5C: [1.75, 1.249, 1.278],
    0x5D: [1.75, 1.249, .583],
    0x7B: [1.75, 1.249, .806],
    0x7D: [1.75, 1.249, .806],
    0x2C6: [.845, -0.561, 1.889, { ic: .013 }],
    0x2DC: [.823, -0.583, 1.889],
    0x302: [.845, -0.561, 0, { ic: .013 }],
    0x303: [.823, -0.583, 0],
    0x2044: [1.75, 1.249, 1.278],
    0x221A: [1.75, 1.25, 1, { ic: .02 }],
    0x2308: [1.75, 1.249, .639],
    0x2309: [1.75, 1.249, .639],
    0x230A: [1.75, 1.249, .639],
    0x230B: [1.75, 1.249, .639],
    0x2329: [1.75, 1.248, .806],
    0x232A: [1.75, 1.248, .806],
    0x239B: [1.154, .655, .875],
    0x239C: [.61, .01, .875],
    0x239D: [1.165, .644, .875],
    0x239E: [1.154, .655, .875],
    0x239F: [.61, .01, .875],
    0x23A0: [1.165, .644, .875],
    0x23A1: [1.154, .645, .667],
    0x23A2: [.602, 0, .667],
    0x23A3: [1.155, .644, .667],
    0x23A4: [1.154, .645, .667],
    0x23A5: [.602, 0, .667],
    0x23A6: [1.155, .644, .667],
    0x23A7: [.899, .01, .889],
    0x23A8: [1.16, .66, .889],
    0x23A9: [.01, .899, .889],
    0x23AA: [.29, .015, .889],
    0x23AB: [.899, .01, .889],
    0x23AC: [1.16, .66, .889],
    0x23AD: [.01, .899, .889],
    0x23B7: [.935, .885, 1.056],
    0x27E8: [1.75, 1.248, .806],
    0x27E9: [1.75, 1.248, .806],
    0x3008: [1.75, 1.248, .806],
    0x3009: [1.75, 1.248, .806],
    0xE000: [.625, .014, 1.056],
    0xE001: [.605, .014, 1.056, { ic: .02 }],
    0xE150: [.12, .213, .45, { ic: .01 }],
    0xE151: [.12, .213, .45, { ic: .024 }],
    0xE152: [.333, 0, .45, { ic: .01 }],
    0xE153: [.333, 0, .45, { ic: .024 }],
    0xE154: [.32, .2, .4, { ic: .01 }],
    0xE155: [.333, 0, .9, { ic: .01 }],
    0xE156: [.12, .213, .9, { ic: .01 }],
};
//# sourceMappingURL=tex-size4.js.map

/***/ }),

/***/ 4926:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.texVariant = void 0;
exports.texVariant = {
    0x2C6: [.845, -0.561, 2.333, { ic: .013 }],
    0x2DC: [.899, -0.628, 2.333],
    0x302: [.845, -0.561, 0, { ic: .013 }],
    0x303: [.899, -0.628, 0],
    0x3F0: [.434, .006, .667, { ic: .067 }],
    0x210F: [.695, .013, .54, { ic: .022 }],
    0x2190: [.437, -0.064, .5],
    0x2192: [.437, -0.064, .5],
    0x21CC: [.514, .014, 1],
    0x2204: [.86, .166, .556],
    0x2205: [.587, 0, .778],
    0x2212: [.27, -0.23, .5],
    0x2216: [.43, .023, .778],
    0x221D: [.472, -0.028, .778],
    0x2223: [.43, .023, .222],
    0x2224: [.43, .023, .222, { ic: .018 }],
    0x2225: [.431, .023, .389],
    0x2226: [.431, .024, .389, { ic: .018 }],
    0x223C: [.365, -0.132, .778],
    0x2248: [.481, -0.05, .778],
    0x2268: [.752, .284, .778],
    0x2269: [.752, .284, .778],
    0x2270: [.919, .421, .778],
    0x2271: [.919, .421, .778],
    0x2288: [.828, .33, .778],
    0x2289: [.828, .33, .778],
    0x228A: [.634, .255, .778],
    0x228B: [.634, .254, .778],
    0x22A8: [.694, 0, .611],
    0x22C5: [.189, 0, .278],
    0x2322: [.378, -0.122, .778],
    0x2323: [.378, -0.143, .778],
    0x25B3: [.575, .02, .722],
    0x25BD: [.576, .019, .722],
    0x2A87: [.801, .303, .778],
    0x2A88: [.801, .303, .778],
    0x2ACB: [.752, .332, .778],
    0x2ACC: [.752, .333, .778],
};
//# sourceMappingURL=tex-variant.js.map

/***/ }),

/***/ 5865:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MJContextMenu = void 0;
var context_menu_js_1 = __webpack_require__(5073);
var item_submenu_js_1 = __webpack_require__(6186);
var MJContextMenu = (function (_super) {
    __extends(MJContextMenu, _super);
    function MJContextMenu() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.mathItem = null;
        _this.annotation = '';
        _this.annotationTypes = {};
        return _this;
    }
    MJContextMenu.prototype.post = function (x, y) {
        if (this.mathItem) {
            if (y !== undefined) {
                var input = this.mathItem.inputJax.name;
                var original = this.findID('Show', 'Original');
                original.content = (input === 'MathML' ? 'Original MathML' : input + ' Commands');
                var clipboard = this.findID('Copy', 'Original');
                clipboard.content = original.content;
                var semantics = this.findID('Settings', 'semantics');
                input === 'MathML' ? semantics.disable() : semantics.enable();
                this.getAnnotationMenu();
                this.dynamicSubmenus();
            }
            _super.prototype.post.call(this, x, y);
        }
    };
    MJContextMenu.prototype.unpost = function () {
        _super.prototype.unpost.call(this);
        this.mathItem = null;
    };
    MJContextMenu.prototype.findID = function () {
        var e_1, _a;
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        var menu = this;
        var item = null;
        try {
            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_1 = names_1_1.value;
                if (menu) {
                    item = menu.find(name_1);
                    menu = (item instanceof item_submenu_js_1.Submenu ? item.submenu : null);
                }
                else {
                    item = null;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return item;
    };
    MJContextMenu.prototype.getAnnotationMenu = function () {
        var _this = this;
        var annotations = this.getAnnotations(this.getSemanticNode());
        this.createAnnotationMenu('Show', annotations, function () { return _this.showAnnotation.post(); });
        this.createAnnotationMenu('Copy', annotations, function () { return _this.copyAnnotation(); });
    };
    MJContextMenu.prototype.getSemanticNode = function () {
        var node = this.mathItem.root;
        while (node && !node.isKind('semantics')) {
            if (node.isToken || node.childNodes.length !== 1)
                return null;
            node = node.childNodes[0];
        }
        return node;
    };
    MJContextMenu.prototype.getAnnotations = function (node) {
        var e_2, _a;
        var annotations = [];
        if (!node)
            return annotations;
        try {
            for (var _b = __values(node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child.isKind('annotation')) {
                    var match = this.annotationMatch(child);
                    if (match) {
                        var value = child.childNodes.reduce(function (text, chars) { return text + chars.toString(); }, '');
                        annotations.push([match, value]);
                    }
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return annotations;
    };
    MJContextMenu.prototype.annotationMatch = function (child) {
        var e_3, _a;
        var encoding = child.attributes.get('encoding');
        try {
            for (var _b = __values(Object.keys(this.annotationTypes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var type = _c.value;
                if (this.annotationTypes[type].indexOf(encoding) >= 0) {
                    return type;
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return null;
    };
    MJContextMenu.prototype.createAnnotationMenu = function (id, annotations, action) {
        var _this = this;
        var menu = this.findID(id, 'Annotation');
        menu.submenu = this.factory.get('subMenu')(this.factory, {
            items: annotations.map(function (_a) {
                var _b = __read(_a, 2), type = _b[0], value = _b[1];
                return {
                    type: 'command',
                    id: type,
                    content: type,
                    action: function () {
                        _this.annotation = value;
                        action();
                    }
                };
            }),
            id: 'annotations'
        }, menu);
        if (annotations.length) {
            menu.enable();
        }
        else {
            menu.disable();
        }
    };
    MJContextMenu.prototype.dynamicSubmenus = function () {
        var e_4, _a;
        try {
            for (var _b = __values(MJContextMenu.DynamicSubmenus), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), id = _d[0], method = _d[1];
                var menu = this.find(id);
                if (!menu)
                    continue;
                var sub = method(this, menu);
                menu.submenu = sub;
                if (sub.items.length) {
                    menu.enable();
                }
                else {
                    menu.disable();
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
    };
    MJContextMenu.DynamicSubmenus = new Map();
    return MJContextMenu;
}(context_menu_js_1.ContextMenu));
exports.MJContextMenu = MJContextMenu;
//# sourceMappingURL=MJContextMenu.js.map

/***/ }),

/***/ 8310:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Menu = void 0;
var mathjax_js_1 = __webpack_require__(5713);
var MathItem_js_1 = __webpack_require__(4474);
var global_js_1 = __webpack_require__(9515);
var Options_js_1 = __webpack_require__(7233);
var MJContextMenu_js_1 = __webpack_require__(5865);
var MmlVisitor_js_1 = __webpack_require__(473);
var SelectableInfo_js_1 = __webpack_require__(4414);
var info_js_1 = __webpack_require__(4922);
var parse_js_1 = __webpack_require__(6914);
var item_rule_js_1 = __webpack_require__(3463);
var css_util_js_1 = __webpack_require__(7309);
var sre_js_1 = __importDefault(__webpack_require__(5445));
var MathJax = global_js_1.MathJax;
var isMac = (typeof window !== 'undefined' &&
    window.navigator && window.navigator.platform.substr(0, 3) === 'Mac');
var Menu = (function () {
    function Menu(document, options) {
        if (options === void 0) { options = {}; }
        var _this = this;
        this.settings = null;
        this.defaultSettings = null;
        this.menu = null;
        this.MmlVisitor = new MmlVisitor_js_1.MmlVisitor();
        this.jax = {
            CHTML: null,
            SVG: null
        };
        this.rerenderStart = MathItem_js_1.STATE.LAST;
        this.about = new info_js_1.Info('<b style="font-size:120%;">MathJax</b> v' + mathjax_js_1.mathjax.version, function () {
            var lines = [];
            lines.push('Input Jax: ' + _this.document.inputJax.map(function (jax) { return jax.name; }).join(', '));
            lines.push('Output Jax: ' + _this.document.outputJax.name);
            lines.push('Document Type: ' + _this.document.kind);
            return lines.join('<br/>');
        }, '<a href="https://www.mathjax.org">www.mathjax.org</a>');
        this.help = new info_js_1.Info('<b>MathJax Help</b>', function () {
            return [
                '<p><b>MathJax</b> is a JavaScript library that allows page',
                ' authors to include mathematics within their web pages.',
                ' As a reader, you don\'t need to do anything to make that happen.</p>',
                '<p><b>Browsers</b>: MathJax works with all modern browsers including',
                ' Edge, Firefox, Chrome, Safari, Opera, and most mobile browsers.</p>',
                '<p><b>Math Menu</b>: MathJax adds a contextual menu to equations.',
                ' Right-click or CTRL-click on any mathematics to access the menu.</p>',
                '<div style="margin-left: 1em;">',
                '<p><b>Show Math As:</b> These options allow you to view the formula\'s',
                ' source markup (as MathML or in its original format).</p>',
                '<p><b>Copy to Clipboard:</b> These options copy the formula\'s source markup,',
                ' as MathML or in its original format, to the clipboard',
                ' (in browsers that support that).</p>',
                '<p><b>Math Settings:</b> These give you control over features of MathJax,',
                ' such the size of the mathematics, and the mechanism used',
                ' to display equations.</p>',
                '<p><b>Accessibility</b>: MathJax can work with screen',
                ' readers to make mathematics accessible to the visually impaired.',
                ' Turn on the explorer to enable generation of speech strings',
                ' and the ability to investigate expressions interactively.</p>',
                '<p><b>Language</b>: This menu lets you select the language used by MathJax',
                ' for its menus and warning messages. (Not yet implemented in version 3.)</p>',
                '</div>',
                '<p><b>Math Zoom</b>: If you are having difficulty reading an',
                ' equation, MathJax can enlarge it to help you see it better, or',
                ' you can scall all the math on the page to make it larger.',
                ' Turn these features on in the <b>Math Settings</b> menu.</p>',
                '<p><b>Preferences</b>: MathJax uses your browser\'s localStorage database',
                ' to save the preferences set via this menu locally in your browser.  These',
                ' are not used to track you, and are not transferred or used remotely by',
                ' MathJax in any way.</p>'
            ].join('\n');
        }, '<a href="https://www.mathjax.org">www.mathjax.org</a>');
        this.mathmlCode = new SelectableInfo_js_1.SelectableInfo('MathJax MathML Expression', function () {
            if (!_this.menu.mathItem)
                return '';
            var text = _this.toMML(_this.menu.mathItem);
            return '<pre>' + _this.formatSource(text) + '</pre>';
        }, '');
        this.originalText = new SelectableInfo_js_1.SelectableInfo('MathJax Original Source', function () {
            if (!_this.menu.mathItem)
                return '';
            var text = _this.menu.mathItem.math;
            return '<pre style="font-size:125%; margin:0">' + _this.formatSource(text) + '</pre>';
        }, '');
        this.annotationText = new SelectableInfo_js_1.SelectableInfo('MathJax Annotation Text', function () {
            if (!_this.menu.mathItem)
                return '';
            var text = _this.menu.annotation;
            return '<pre style="font-size:125%; margin:0">' + _this.formatSource(text) + '</pre>';
        }, '');
        this.zoomBox = new info_js_1.Info('MathJax Zoomed Expression', function () {
            if (!_this.menu.mathItem)
                return '';
            var element = _this.menu.mathItem.typesetRoot.cloneNode(true);
            element.style.margin = '0';
            var scale = 1.25 * parseFloat(_this.settings.zscale);
            return '<div style="font-size: ' + scale + '%">' + element.outerHTML + '</div>';
        }, '');
        this.document = document;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, this.constructor.OPTIONS), options);
        this.initSettings();
        this.mergeUserSettings();
        this.initMenu();
        this.applySettings();
    }
    Object.defineProperty(Menu.prototype, "isLoading", {
        get: function () {
            return Menu.loading > 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Menu.prototype, "loadingPromise", {
        get: function () {
            if (!this.isLoading) {
                return Promise.resolve();
            }
            if (!Menu._loadingPromise) {
                Menu._loadingPromise = new Promise(function (ok, failed) {
                    Menu._loadingOK = ok;
                    Menu._loadingFailed = failed;
                });
            }
            return Menu._loadingPromise;
        },
        enumerable: false,
        configurable: true
    });
    Menu.prototype.initSettings = function () {
        this.settings = this.options.settings;
        this.jax = this.options.jax;
        var jax = this.document.outputJax;
        this.jax[jax.name] = jax;
        this.settings.renderer = jax.name;
        if (MathJax._.a11y && MathJax._.a11y.explorer) {
            Object.assign(this.settings, this.document.options.a11y);
        }
        this.settings.scale = jax.options.scale;
        this.defaultSettings = Object.assign({}, this.settings);
    };
    Menu.prototype.initMenu = function () {
        var _this = this;
        var parser = new parse_js_1.Parser([['contextMenu', MJContextMenu_js_1.MJContextMenu.fromJson.bind(MJContextMenu_js_1.MJContextMenu)]]);
        this.menu = parser.parse({
            type: 'contextMenu',
            id: 'MathJax_Menu',
            pool: [
                this.variable('texHints'),
                this.variable('semantics'),
                this.variable('zoom'),
                this.variable('zscale'),
                this.variable('renderer', function (jax) { return _this.setRenderer(jax); }),
                this.variable('alt'),
                this.variable('cmd'),
                this.variable('ctrl'),
                this.variable('shift'),
                this.variable('scale', function (scale) { return _this.setScale(scale); }),
                this.variable('explorer', function (explore) { return _this.setExplorer(explore); }),
                this.a11yVar('highlight'),
                this.a11yVar('backgroundColor'),
                this.a11yVar('backgroundOpacity'),
                this.a11yVar('foregroundColor'),
                this.a11yVar('foregroundOpacity'),
                this.a11yVar('speech'),
                this.a11yVar('subtitles'),
                this.a11yVar('braille'),
                this.a11yVar('viewBraille'),
                this.a11yVar('locale', function (value) { return sre_js_1.default.setupEngine({ locale: value }); }),
                this.a11yVar('speechRules', function (value) {
                    var _a = __read(value.split('-'), 2), domain = _a[0], style = _a[1];
                    _this.document.options.sre.domain = domain;
                    _this.document.options.sre.style = style;
                }),
                this.a11yVar('magnification'),
                this.a11yVar('magnify'),
                this.a11yVar('treeColoring'),
                this.a11yVar('infoType'),
                this.a11yVar('infoRole'),
                this.a11yVar('infoPrefix'),
                this.variable('autocollapse'),
                this.variable('collapsible', function (collapse) { return _this.setCollapsible(collapse); }),
                this.variable('inTabOrder', function (tab) { return _this.setTabOrder(tab); }),
                this.variable('assistiveMml', function (mml) { return _this.setAssistiveMml(mml); })
            ],
            items: [
                this.submenu('Show', 'Show Math As', [
                    this.command('MathMLcode', 'MathML Code', function () { return _this.mathmlCode.post(); }),
                    this.command('Original', 'Original Form', function () { return _this.originalText.post(); }),
                    this.submenu('Annotation', 'Annotation')
                ]),
                this.submenu('Copy', 'Copy to Clipboard', [
                    this.command('MathMLcode', 'MathML Code', function () { return _this.copyMathML(); }),
                    this.command('Original', 'Original Form', function () { return _this.copyOriginal(); }),
                    this.submenu('Annotation', 'Annotation')
                ]),
                this.rule(),
                this.submenu('Settings', 'Math Settings', [
                    this.submenu('Renderer', 'Math Renderer', this.radioGroup('renderer', [['CHTML'], ['SVG']])),
                    this.rule(),
                    this.submenu('ZoomTrigger', 'Zoom Trigger', [
                        this.command('ZoomNow', 'Zoom Once Now', function () { return _this.zoom(null, '', _this.menu.mathItem); }),
                        this.rule(),
                        this.radioGroup('zoom', [
                            ['Click'], ['DoubleClick', 'Double-Click'], ['NoZoom', 'No Zoom']
                        ]),
                        this.rule(),
                        this.label('TriggerRequires', 'Trigger Requires:'),
                        this.checkbox((isMac ? 'Option' : 'Alt'), (isMac ? 'Option' : 'Alt'), 'alt'),
                        this.checkbox('Command', 'Command', 'cmd', { hidden: !isMac }),
                        this.checkbox('Control', 'Control', 'ctrl', { hiddne: isMac }),
                        this.checkbox('Shift', 'Shift', 'shift')
                    ]),
                    this.submenu('ZoomFactor', 'Zoom Factor', this.radioGroup('zscale', [
                        ['150%'], ['175%'], ['200%'], ['250%'], ['300%'], ['400%']
                    ])),
                    this.rule(),
                    this.command('Scale', 'Scale All Math...', function () { return _this.scaleAllMath(); }),
                    this.rule(),
                    this.checkbox('texHints', 'Add TeX hints to MathML', 'texHints'),
                    this.checkbox('semantics', 'Add original as annotation', 'semantics'),
                    this.rule(),
                    this.command('Reset', 'Reset to defaults', function () { return _this.resetDefaults(); })
                ]),
                this.submenu('Accessibility', 'Accessibility', [
                    this.checkbox('Activate', 'Activate', 'explorer'),
                    this.submenu('Speech', 'Speech', [
                        this.checkbox('Speech', 'Speech Output', 'speech'),
                        this.checkbox('Subtitles', 'Speech Subtitles', 'subtitles'),
                        this.checkbox('Braille', 'Braille Output', 'braille'),
                        this.checkbox('View Braille', 'Braille Subtitles', 'viewBraille'),
                        this.rule(),
                        this.submenu('A11yLanguage', 'Language'),
                        this.rule(),
                        this.submenu('Mathspeak', 'Mathspeak Rules', this.radioGroup('speechRules', [
                            ['mathspeak-default', 'Verbose'],
                            ['mathspeak-brief', 'Brief'],
                            ['mathspeak-sbrief', 'Superbrief']
                        ])),
                        this.submenu('Clearspeak', 'Clearspeak Rules', this.radioGroup('speechRules', [
                            ['clearspeak-default', 'Auto']
                        ])),
                        this.submenu('ChromeVox', 'ChromeVox Rules', this.radioGroup('speechRules', [
                            ['chromevox-default', 'Standard'],
                            ['chromevox-alternative', 'Alternative']
                        ]))
                    ]),
                    this.submenu('Highlight', 'Highlight', [
                        this.submenu('Background', 'Background', this.radioGroup('backgroundColor', [
                            ['Blue'], ['Red'], ['Green'], ['Yellow'], ['Cyan'], ['Magenta'], ['White'], ['Black']
                        ])),
                        { 'type': 'slider',
                            'variable': 'backgroundOpacity',
                            'content': ' '
                        },
                        this.submenu('Foreground', 'Foreground', this.radioGroup('foregroundColor', [
                            ['Black'], ['White'], ['Magenta'], ['Cyan'], ['Yellow'], ['Green'], ['Red'], ['Blue']
                        ])),
                        { 'type': 'slider',
                            'variable': 'foregroundOpacity',
                            'content': ' '
                        },
                        this.rule(),
                        this.radioGroup('highlight', [
                            ['None'], ['Hover'], ['Flame']
                        ]),
                        this.rule(),
                        this.checkbox('TreeColoring', 'Tree Coloring', 'treeColoring')
                    ]),
                    this.submenu('Magnification', 'Magnification', [
                        this.radioGroup('magnification', [
                            ['None'], ['Keyboard'], ['Mouse']
                        ]),
                        this.rule(),
                        this.radioGroup('magnify', [
                            ['200%'], ['300%'], ['400%'], ['500%']
                        ])
                    ]),
                    this.submenu('Semantic Info', 'Semantic Info', [
                        this.checkbox('Type', 'Type', 'infoType'),
                        this.checkbox('Role', 'Role', 'infoRole'),
                        this.checkbox('Prefix', 'Prefix', 'infoPrefix')
                    ], true),
                    this.rule(),
                    this.checkbox('Collapsible', 'Collapsible Math', 'collapsible'),
                    this.checkbox('AutoCollapse', 'Auto Collapse', 'autocollapse', { disabled: true }),
                    this.rule(),
                    this.checkbox('InTabOrder', 'Include in Tab Order', 'inTabOrder'),
                    this.checkbox('AssistiveMml', 'Include Hidden MathML', 'assistiveMml')
                ]),
                this.submenu('Language', 'Language'),
                this.rule(),
                this.command('About', 'About MathJax', function () { return _this.about.post(); }),
                this.command('Help', 'MathJax Help', function () { return _this.help.post(); })
            ]
        });
        var menu = this.menu;
        this.about.attachMenu(menu);
        this.help.attachMenu(menu);
        this.originalText.attachMenu(menu);
        this.annotationText.attachMenu(menu);
        this.mathmlCode.attachMenu(menu);
        this.zoomBox.attachMenu(menu);
        this.checkLoadableItems();
        this.enableExplorerItems(this.settings.explorer);
        menu.showAnnotation = this.annotationText;
        menu.copyAnnotation = this.copyAnnotation.bind(this);
        menu.annotationTypes = this.options.annotationTypes;
        css_util_js_1.CssStyles.addInfoStyles(this.document.document);
        css_util_js_1.CssStyles.addMenuStyles(this.document.document);
    };
    Menu.prototype.checkLoadableItems = function () {
        var e_1, _a;
        if (MathJax && MathJax._ && MathJax.loader && MathJax.startup) {
            if (this.settings.collapsible && (!MathJax._.a11y || !MathJax._.a11y.complexity)) {
                this.loadA11y('complexity');
            }
            if (this.settings.explorer && (!MathJax._.a11y || !MathJax._.a11y.explorer)) {
                this.loadA11y('explorer');
            }
            if (this.settings.assistiveMml && (!MathJax._.a11y || !MathJax._.a11y['assistive-mml'])) {
                this.loadA11y('assistive-mml');
            }
        }
        else {
            var menu = this.menu;
            try {
                for (var _b = __values(Object.keys(this.jax)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var name_1 = _c.value;
                    if (!this.jax[name_1]) {
                        menu.findID('Settings', 'Renderer', name_1).disable();
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            menu.findID('Accessibility', 'Activate').disable();
            menu.findID('Accessibility', 'AutoCollapse').disable();
            menu.findID('Accessibility', 'Collapsible').disable();
        }
    };
    Menu.prototype.enableExplorerItems = function (enable) {
        var e_2, _a;
        var menu = this.menu.findID('Accessibility', 'Activate').menu;
        try {
            for (var _b = __values(menu.items.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (item instanceof item_rule_js_1.Rule)
                    break;
                enable ? item.enable() : item.disable();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    Menu.prototype.mergeUserSettings = function () {
        try {
            var settings = localStorage.getItem(Menu.MENU_STORAGE);
            if (!settings)
                return;
            Object.assign(this.settings, JSON.parse(settings));
            this.setA11y(this.settings);
        }
        catch (err) {
            console.log('MathJax localStorage error: ' + err.message);
        }
    };
    Menu.prototype.saveUserSettings = function () {
        var e_3, _a;
        var settings = {};
        try {
            for (var _b = __values(Object.keys(this.settings)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_2 = _c.value;
                if (this.settings[name_2] !== this.defaultSettings[name_2]) {
                    settings[name_2] = this.settings[name_2];
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            if (Object.keys(settings).length) {
                localStorage.setItem(Menu.MENU_STORAGE, JSON.stringify(settings));
            }
            else {
                localStorage.removeItem(Menu.MENU_STORAGE);
            }
        }
        catch (err) {
            console.log('MathJax localStorage error: ' + err.message);
        }
    };
    Menu.prototype.setA11y = function (options) {
        if (MathJax._.a11y && MathJax._.a11y.explorer) {
            MathJax._.a11y.explorer_ts.setA11yOptions(this.document, options);
        }
    };
    Menu.prototype.getA11y = function (option) {
        if (MathJax._.a11y && MathJax._.a11y.explorer) {
            if (this.document.options.a11y[option] !== undefined) {
                return this.document.options.a11y[option];
            }
            return this.document.options.sre[option];
        }
    };
    Menu.prototype.applySettings = function () {
        this.setTabOrder(this.settings.inTabOrder);
        this.document.options.enableAssistiveMml = this.settings.assistiveMml;
        this.document.outputJax.options.scale = parseFloat(this.settings.scale);
        if (this.settings.renderer !== this.defaultSettings.renderer) {
            this.setRenderer(this.settings.renderer);
        }
    };
    Menu.prototype.setScale = function (scale) {
        this.document.outputJax.options.scale = parseFloat(scale);
        this.document.rerender();
    };
    Menu.prototype.setRenderer = function (jax) {
        var _this = this;
        if (this.jax[jax]) {
            this.setOutputJax(jax);
        }
        else {
            var name_3 = jax.toLowerCase();
            this.loadComponent('output/' + name_3, function () {
                var startup = MathJax.startup;
                if (name_3 in startup.constructors) {
                    startup.useOutput(name_3, true);
                    startup.output = startup.getOutputJax();
                    _this.jax[jax] = startup.output;
                    _this.setOutputJax(jax);
                }
            });
        }
    };
    Menu.prototype.setOutputJax = function (jax) {
        this.jax[jax].setAdaptor(this.document.adaptor);
        this.document.outputJax = this.jax[jax];
        this.rerender();
    };
    Menu.prototype.setTabOrder = function (tab) {
        this.menu.store.inTaborder(tab);
    };
    Menu.prototype.setAssistiveMml = function (mml) {
        this.document.options.enableAssistiveMml = mml;
        if (!mml || (MathJax._.a11y && MathJax._.a11y['assistive-mml'])) {
            this.rerender();
        }
        else {
            this.loadA11y('assistive-mml');
        }
    };
    Menu.prototype.setExplorer = function (explore) {
        this.enableExplorerItems(explore);
        this.document.options.enableExplorer = explore;
        if (!explore || (MathJax._.a11y && MathJax._.a11y.explorer)) {
            this.rerender(this.settings.collapsible ? MathItem_js_1.STATE.RERENDER : MathItem_js_1.STATE.COMPILED);
        }
        else {
            this.loadA11y('explorer');
        }
    };
    Menu.prototype.setCollapsible = function (collapse) {
        this.document.options.enableComplexity = collapse;
        if (!collapse || (MathJax._.a11y && MathJax._.a11y.complexity)) {
            this.rerender(MathItem_js_1.STATE.COMPILED);
        }
        else {
            this.loadA11y('complexity');
        }
    };
    Menu.prototype.scaleAllMath = function () {
        var scale = (parseFloat(this.settings.scale) * 100).toFixed(1).replace(/.0$/, '');
        var percent = prompt('Scale all mathematics (compared to surrounding text) by', scale + '%');
        if (percent) {
            if (percent.match(/^\s*\d+(\.\d*)?\s*%?\s*$/)) {
                var scale_1 = parseFloat(percent) / 100;
                if (scale_1) {
                    this.menu.pool.lookup('scale').setValue(String(scale_1));
                }
                else {
                    alert('The scale should not be zero');
                }
            }
            else {
                alert('The scale should be a percentage (e.g., 120%)');
            }
        }
    };
    Menu.prototype.resetDefaults = function () {
        var e_4, _a;
        Menu.loading++;
        var pool = this.menu.pool;
        var settings = this.defaultSettings;
        try {
            for (var _b = __values(Object.keys(this.settings)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var name_4 = _c.value;
                var variable = pool.lookup(name_4);
                if (variable) {
                    variable.setValue(settings[name_4]);
                    var item = variable.items[0];
                    if (item) {
                        item.executeCallbacks_();
                    }
                }
                else {
                    this.settings[name_4] = settings[name_4];
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        Menu.loading--;
        this.rerender(MathItem_js_1.STATE.COMPILED);
    };
    Menu.prototype.checkComponent = function (name) {
        var promise = Menu.loadingPromises.get(name);
        if (promise) {
            mathjax_js_1.mathjax.retryAfter(promise);
        }
    };
    Menu.prototype.loadComponent = function (name, callback) {
        if (Menu.loadingPromises.has(name))
            return;
        var loader = MathJax.loader;
        if (!loader)
            return;
        Menu.loading++;
        var promise = loader.load(name).then(function () {
            Menu.loading--;
            Menu.loadingPromises.delete(name);
            callback();
            if (Menu.loading === 0 && Menu._loadingPromise) {
                Menu._loadingPromise = null;
                Menu._loadingOK();
            }
        }).catch(function (err) {
            if (Menu._loadingPromise) {
                Menu._loadingPromise = null;
                Menu._loadingFailed(err);
            }
            else {
                console.log(err);
            }
        });
        Menu.loadingPromises.set(name, promise);
    };
    Menu.prototype.loadA11y = function (component) {
        var _this = this;
        var noEnrich = !MathItem_js_1.STATE.ENRICHED;
        this.loadComponent('a11y/' + component, function () {
            var startup = MathJax.startup;
            mathjax_js_1.mathjax.handlers.unregister(startup.handler);
            startup.handler = startup.getHandler();
            mathjax_js_1.mathjax.handlers.register(startup.handler);
            var document = _this.document;
            _this.document = startup.document = startup.getDocument();
            _this.document.menu = _this;
            _this.document.outputJax.reset();
            _this.transferMathList(document);
            _this.document.processed = document.processed;
            if (!Menu._loadingPromise) {
                _this.document.outputJax.reset();
                _this.rerender(component === 'complexity' || noEnrich ? MathItem_js_1.STATE.COMPILED : MathItem_js_1.STATE.TYPESET);
            }
        });
    };
    Menu.prototype.transferMathList = function (document) {
        var e_5, _a;
        var MathItem = this.document.options.MathItem;
        try {
            for (var _b = __values(document.math), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                var math = new MathItem();
                Object.assign(math, item);
                this.document.math.push(math);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
    };
    Menu.prototype.formatSource = function (text) {
        return text.trim().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
    };
    Menu.prototype.toMML = function (math) {
        return this.MmlVisitor.visitTree(math.root, math, {
            texHints: this.settings.texHints,
            semantics: (this.settings.semantics && math.inputJax.name !== 'MathML')
        });
    };
    Menu.prototype.zoom = function (event, type, math) {
        if (!event || this.isZoomEvent(event, type)) {
            this.menu.mathItem = math;
            if (event) {
                this.menu.post(event);
            }
            this.zoomBox.post();
        }
    };
    Menu.prototype.isZoomEvent = function (event, zoom) {
        return (this.settings.zoom === zoom &&
            (!this.settings.alt || event.altKey) &&
            (!this.settings.ctrl || event.ctrlKey) &&
            (!this.settings.cmd || event.metaKey) &&
            (!this.settings.shift || event.shiftKey));
    };
    Menu.prototype.rerender = function (start) {
        if (start === void 0) { start = MathItem_js_1.STATE.TYPESET; }
        this.rerenderStart = Math.min(start, this.rerenderStart);
        if (!Menu.loading) {
            if (this.rerenderStart <= MathItem_js_1.STATE.COMPILED) {
                this.document.reset({ inputJax: [] });
            }
            this.document.rerender(this.rerenderStart);
            this.rerenderStart = MathItem_js_1.STATE.LAST;
        }
    };
    Menu.prototype.copyMathML = function () {
        this.copyToClipboard(this.toMML(this.menu.mathItem));
    };
    Menu.prototype.copyOriginal = function () {
        this.copyToClipboard(this.menu.mathItem.math.trim());
    };
    Menu.prototype.copyAnnotation = function () {
        this.copyToClipboard(this.menu.annotation.trim());
    };
    Menu.prototype.copyToClipboard = function (text) {
        var input = document.createElement('textarea');
        input.value = text;
        input.setAttribute('readonly', '');
        input.style.cssText = 'height: 1px; width: 1px; padding: 1px; position: absolute; left: -10px';
        document.body.appendChild(input);
        input.select();
        try {
            document.execCommand('copy');
        }
        catch (error) {
            alert('Can\'t copy to clipboard: ' + error.message);
        }
        document.body.removeChild(input);
    };
    Menu.prototype.addMenu = function (math) {
        var _this = this;
        var element = math.typesetRoot;
        element.addEventListener('contextmenu', function () { return _this.menu.mathItem = math; }, true);
        element.addEventListener('keydown', function () { return _this.menu.mathItem = math; }, true);
        element.addEventListener('click', function (event) { return _this.zoom(event, 'Click', math); }, true);
        element.addEventListener('dblclick', function (event) { return _this.zoom(event, 'DoubleClick', math); }, true);
        this.menu.store.insert(element);
    };
    Menu.prototype.clear = function () {
        this.menu.store.clear();
    };
    Menu.prototype.variable = function (name, action) {
        var _this = this;
        return {
            name: name,
            getter: function () { return _this.settings[name]; },
            setter: function (value) {
                _this.settings[name] = value;
                action && action(value);
                _this.saveUserSettings();
            }
        };
    };
    Menu.prototype.a11yVar = function (name, action) {
        var _this = this;
        return {
            name: name,
            getter: function () { return _this.getA11y(name); },
            setter: function (value) {
                _this.settings[name] = value;
                var options = {};
                options[name] = value;
                _this.setA11y(options);
                action && action(value);
                _this.saveUserSettings();
            }
        };
    };
    Menu.prototype.submenu = function (id, content, entries, disabled) {
        var e_6, _a;
        if (entries === void 0) { entries = []; }
        if (disabled === void 0) { disabled = false; }
        var items = [];
        try {
            for (var entries_1 = __values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {
                var entry = entries_1_1.value;
                if (Array.isArray(entry)) {
                    items = items.concat(entry);
                }
                else {
                    items.push(entry);
                }
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (entries_1_1 && !entries_1_1.done && (_a = entries_1.return)) _a.call(entries_1);
            }
            finally { if (e_6) throw e_6.error; }
        }
        return { type: 'submenu', id: id, content: content, menu: { items: items }, disabled: (items.length === 0) || disabled };
    };
    Menu.prototype.command = function (id, content, action, other) {
        if (other === void 0) { other = {}; }
        return Object.assign({ type: 'command', id: id, content: content, action: action }, other);
    };
    Menu.prototype.checkbox = function (id, content, variable, other) {
        if (other === void 0) { other = {}; }
        return Object.assign({ type: 'checkbox', id: id, content: content, variable: variable }, other);
    };
    Menu.prototype.radioGroup = function (variable, radios) {
        var _this = this;
        return radios.map(function (def) { return _this.radio(def[0], def[1] || def[0], variable); });
    };
    Menu.prototype.radio = function (id, content, variable, other) {
        if (other === void 0) { other = {}; }
        return Object.assign({ type: 'radio', id: id, content: content, variable: variable }, other);
    };
    Menu.prototype.label = function (id, content) {
        return { type: 'label', id: id, content: content };
    };
    Menu.prototype.rule = function () {
        return { type: 'rule' };
    };
    Menu.MENU_STORAGE = 'MathJax-Menu-Settings';
    Menu.OPTIONS = {
        settings: {
            texHints: true,
            semantics: false,
            zoom: 'NoZoom',
            zscale: '200%',
            renderer: 'CHTML',
            alt: false,
            cmd: false,
            ctrl: false,
            shift: false,
            scale: 1,
            autocollapse: false,
            collapsible: false,
            inTabOrder: true,
            assistiveMml: true,
            explorer: false
        },
        jax: {
            CHTML: null,
            SVG: null
        },
        annotationTypes: (0, Options_js_1.expandable)({
            TeX: ['TeX', 'LaTeX', 'application/x-tex'],
            StarMath: ['StarMath 5.0'],
            Maple: ['Maple'],
            ContentMathML: ['MathML-Content', 'application/mathml-content+xml'],
            OpenMath: ['OpenMath']
        })
    };
    Menu.loading = 0;
    Menu.loadingPromises = new Map();
    Menu._loadingPromise = null;
    Menu._loadingOK = null;
    Menu._loadingFailed = null;
    return Menu;
}());
exports.Menu = Menu;
//# sourceMappingURL=Menu.js.map

/***/ }),

/***/ 4001:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MenuHandler = exports.MenuMathDocumentMixin = exports.MenuMathItemMixin = void 0;
var mathjax_js_1 = __webpack_require__(5713);
var MathItem_js_1 = __webpack_require__(4474);
var Options_js_1 = __webpack_require__(7233);
var Menu_js_1 = __webpack_require__(8310);
(0, MathItem_js_1.newState)('CONTEXT_MENU', 170);
function MenuMathItemMixin(BaseMathItem) {
    return (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.addMenu = function (document, force) {
            if (force === void 0) { force = false; }
            if (this.state() >= MathItem_js_1.STATE.CONTEXT_MENU)
                return;
            if (!this.isEscaped && (document.options.enableMenu || force)) {
                document.menu.addMenu(this);
            }
            this.state(MathItem_js_1.STATE.CONTEXT_MENU);
        };
        class_1.prototype.checkLoading = function (document) {
            document.checkLoading();
        };
        return class_1;
    }(BaseMathItem));
}
exports.MenuMathItemMixin = MenuMathItemMixin;
function MenuMathDocumentMixin(BaseDocument) {
    var _a;
    return _a = (function (_super) {
            __extends(class_2, _super);
            function class_2() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
                _this.menu = new _this.options.MenuClass(_this, _this.options.menuOptions);
                var ProcessBits = _this.constructor.ProcessBits;
                if (!ProcessBits.has('context-menu')) {
                    ProcessBits.allocate('context-menu');
                }
                _this.options.MathItem = MenuMathItemMixin(_this.options.MathItem);
                return _this;
            }
            class_2.prototype.addMenu = function () {
                var e_1, _a;
                if (!this.processed.isSet('context-menu')) {
                    try {
                        for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var math = _c.value;
                            math.addMenu(this);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    this.processed.set('context-menu');
                }
                return this;
            };
            class_2.prototype.checkLoading = function () {
                if (this.menu.isLoading) {
                    mathjax_js_1.mathjax.retryAfter(this.menu.loadingPromise.catch(function (err) { return console.log(err); }));
                }
                var settings = this.menu.settings;
                if (settings.collapsible) {
                    this.options.enableComplexity = true;
                    this.menu.checkComponent('a11y/complexity');
                }
                if (settings.explorer) {
                    this.options.enableEnrichment = true;
                    this.options.enableExplorer = true;
                    this.menu.checkComponent('a11y/explorer');
                }
                return this;
            };
            class_2.prototype.state = function (state, restore) {
                if (restore === void 0) { restore = false; }
                _super.prototype.state.call(this, state, restore);
                if (state < MathItem_js_1.STATE.CONTEXT_MENU) {
                    this.processed.clear('context-menu');
                }
                return this;
            };
            class_2.prototype.updateDocument = function () {
                _super.prototype.updateDocument.call(this);
                this.menu.menu.store.sort();
                return this;
            };
            return class_2;
        }(BaseDocument)),
        _a.OPTIONS = __assign(__assign({ enableEnrichment: true, enableComplexity: true, enableExplorer: true, enrichSpeech: 'none', enrichError: function (_doc, _math, err) {
                return console.warn('Enrichment Error:', err);
            } }, BaseDocument.OPTIONS), { MenuClass: Menu_js_1.Menu, menuOptions: Menu_js_1.Menu.OPTIONS, enableMenu: true, sre: (BaseDocument.OPTIONS.sre || (0, Options_js_1.expandable)({})), a11y: (BaseDocument.OPTIONS.a11y || (0, Options_js_1.expandable)({})), renderActions: (0, Options_js_1.expandable)(__assign(__assign({}, BaseDocument.OPTIONS.renderActions), { addMenu: [MathItem_js_1.STATE.CONTEXT_MENU], checkLoading: [MathItem_js_1.STATE.UNPROCESSED + 1] })) }),
        _a;
}
exports.MenuMathDocumentMixin = MenuMathDocumentMixin;
function MenuHandler(handler) {
    handler.documentClass = MenuMathDocumentMixin(handler.documentClass);
    return handler;
}
exports.MenuHandler = MenuHandler;
//# sourceMappingURL=MenuHandler.js.map

/***/ }),

/***/ 473:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlVisitor = void 0;
var SerializedMmlVisitor_js_1 = __webpack_require__(9259);
var Options_js_1 = __webpack_require__(7233);
var MmlVisitor = (function (_super) {
    __extends(MmlVisitor, _super);
    function MmlVisitor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.options = {
            texHints: true,
            semantics: false,
        };
        _this.mathItem = null;
        return _this;
    }
    MmlVisitor.prototype.visitTree = function (node, math, options) {
        if (math === void 0) { math = null; }
        if (options === void 0) { options = {}; }
        this.mathItem = math;
        (0, Options_js_1.userOptions)(this.options, options);
        return this.visitNode(node, '');
    };
    MmlVisitor.prototype.visitTeXAtomNode = function (node, space) {
        if (this.options.texHints) {
            return _super.prototype.visitTeXAtomNode.call(this, node, space);
        }
        if (node.childNodes[0] && node.childNodes[0].childNodes.length === 1) {
            return this.visitNode(node.childNodes[0], space);
        }
        return space + '<mrow' + this.getAttributes(node) + '>\n'
            + this.childNodeMml(node, space + '  ', '\n')
            + space + '</mrow>';
    };
    MmlVisitor.prototype.visitMathNode = function (node, space) {
        if (!this.options.semantics || this.mathItem.inputJax.name !== 'TeX') {
            return _super.prototype.visitDefault.call(this, node, space);
        }
        var addRow = node.childNodes.length && node.childNodes[0].childNodes.length > 1;
        return space + '<math' + this.getAttributes(node) + '>\n'
            + space + '  <semantics>\n'
            + (addRow ? space + '    <mrow>\n' : '')
            + this.childNodeMml(node, space + (addRow ? '      ' : '    '), '\n')
            + (addRow ? space + '    </mrow>\n' : '')
            + space + '    <annotation encoding="application/x-tex">' + this.mathItem.math + '</annotation>\n'
            + space + '  </semantics>\n'
            + space + '</math>';
    };
    return MmlVisitor;
}(SerializedMmlVisitor_js_1.SerializedMmlVisitor));
exports.MmlVisitor = MmlVisitor;
//# sourceMappingURL=MmlVisitor.js.map

/***/ }),

/***/ 4414:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectableInfo = void 0;
var info_js_1 = __webpack_require__(4922);
var html_classes_js_1 = __webpack_require__(2165);
var SelectableInfo = (function (_super) {
    __extends(SelectableInfo, _super);
    function SelectableInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SelectableInfo.prototype.addEvents = function (element) {
        var _this = this;
        element.addEventListener('keypress', function (event) {
            if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {
                _this.selectAll();
                _this.stop(event);
            }
        });
    };
    SelectableInfo.prototype.selectAll = function () {
        var selection = document.getSelection();
        selection.selectAllChildren(this.html.querySelector('pre'));
    };
    SelectableInfo.prototype.copyToClipboard = function () {
        this.selectAll();
        try {
            document.execCommand('copy');
        }
        catch (err) {
            alert('Can\'t copy to clipboard: ' + err.message);
        }
        document.getSelection().removeAllRanges();
    };
    SelectableInfo.prototype.generateHtml = function () {
        var _this = this;
        _super.prototype.generateHtml.call(this);
        var footer = this.html.querySelector('span.' + html_classes_js_1.HtmlClasses['INFOSIGNATURE']);
        var button = footer.appendChild(document.createElement('input'));
        button.type = 'button';
        button.value = 'Copy to Clipboard';
        button.addEventListener('click', function (_event) { return _this.copyToClipboard(); });
    };
    return SelectableInfo;
}(info_js_1.Info));
exports.SelectableInfo = SelectableInfo;
//# sourceMappingURL=SelectableInfo.js.map

/***/ }),

/***/ 9923:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.asyncLoad = void 0;
var mathjax_js_1 = __webpack_require__(5713);
function asyncLoad(name) {
    if (!mathjax_js_1.mathjax.asyncLoad) {
        return Promise.reject("Can't load '".concat(name, "': No asyncLoad method specified"));
    }
    return new Promise(function (ok, fail) {
        var result = mathjax_js_1.mathjax.asyncLoad(name);
        if (result instanceof Promise) {
            result.then(function (value) { return ok(value); }).catch(function (err) { return fail(err); });
        }
        else {
            ok(result);
        }
    });
}
exports.asyncLoad = asyncLoad;
//# sourceMappingURL=AsyncLoad.js.map

/***/ }),

/***/ 6469:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BBox = void 0;
var lengths_js_1 = __webpack_require__(6010);
var BBox = (function () {
    function BBox(def) {
        if (def === void 0) { def = { w: 0, h: -lengths_js_1.BIGDIMEN, d: -lengths_js_1.BIGDIMEN }; }
        this.w = def.w || 0;
        this.h = ('h' in def ? def.h : -lengths_js_1.BIGDIMEN);
        this.d = ('d' in def ? def.d : -lengths_js_1.BIGDIMEN);
        this.L = this.R = this.ic = this.sk = this.dx = 0;
        this.scale = this.rscale = 1;
        this.pwidth = '';
    }
    BBox.zero = function () {
        return new BBox({ h: 0, d: 0, w: 0 });
    };
    BBox.empty = function () {
        return new BBox();
    };
    BBox.prototype.empty = function () {
        this.w = 0;
        this.h = this.d = -lengths_js_1.BIGDIMEN;
        return this;
    };
    BBox.prototype.clean = function () {
        if (this.w === -lengths_js_1.BIGDIMEN)
            this.w = 0;
        if (this.h === -lengths_js_1.BIGDIMEN)
            this.h = 0;
        if (this.d === -lengths_js_1.BIGDIMEN)
            this.d = 0;
    };
    BBox.prototype.rescale = function (scale) {
        this.w *= scale;
        this.h *= scale;
        this.d *= scale;
    };
    BBox.prototype.combine = function (cbox, x, y) {
        if (x === void 0) { x = 0; }
        if (y === void 0) { y = 0; }
        var rscale = cbox.rscale;
        var w = x + rscale * (cbox.w + cbox.L + cbox.R);
        var h = y + rscale * cbox.h;
        var d = rscale * cbox.d - y;
        if (w > this.w)
            this.w = w;
        if (h > this.h)
            this.h = h;
        if (d > this.d)
            this.d = d;
    };
    BBox.prototype.append = function (cbox) {
        var scale = cbox.rscale;
        this.w += scale * (cbox.w + cbox.L + cbox.R);
        if (scale * cbox.h > this.h) {
            this.h = scale * cbox.h;
        }
        if (scale * cbox.d > this.d) {
            this.d = scale * cbox.d;
        }
    };
    BBox.prototype.updateFrom = function (cbox) {
        this.h = cbox.h;
        this.d = cbox.d;
        this.w = cbox.w;
        if (cbox.pwidth) {
            this.pwidth = cbox.pwidth;
        }
    };
    BBox.fullWidth = '100%';
    BBox.StyleAdjust = [
        ['borderTopWidth', 'h'],
        ['borderRightWidth', 'w'],
        ['borderBottomWidth', 'd'],
        ['borderLeftWidth', 'w', 0],
        ['paddingTop', 'h'],
        ['paddingRight', 'w'],
        ['paddingBottom', 'd'],
        ['paddingLeft', 'w', 0]
    ];
    return BBox;
}());
exports.BBox = BBox;
//# sourceMappingURL=BBox.js.map

/***/ }),

/***/ 6751:
/***/ (function(__unused_webpack_module, exports) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BitFieldClass = exports.BitField = void 0;
var BitField = (function () {
    function BitField() {
        this.bits = 0;
    }
    BitField.allocate = function () {
        var e_1, _a;
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        try {
            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_1 = names_1_1.value;
                if (this.has(name_1)) {
                    throw new Error('Bit already allocated for ' + name_1);
                }
                if (this.next === BitField.MAXBIT) {
                    throw new Error('Maximum number of bits already allocated');
                }
                this.names.set(name_1, this.next);
                this.next <<= 1;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    BitField.has = function (name) {
        return this.names.has(name);
    };
    BitField.prototype.set = function (name) {
        this.bits |= this.getBit(name);
    };
    BitField.prototype.clear = function (name) {
        this.bits &= ~this.getBit(name);
    };
    BitField.prototype.isSet = function (name) {
        return !!(this.bits & this.getBit(name));
    };
    BitField.prototype.reset = function () {
        this.bits = 0;
    };
    BitField.prototype.getBit = function (name) {
        var bit = this.constructor.names.get(name);
        if (!bit) {
            throw new Error('Unknown bit-field name: ' + name);
        }
        return bit;
    };
    BitField.MAXBIT = 1 << 31;
    BitField.next = 1;
    BitField.names = new Map();
    return BitField;
}());
exports.BitField = BitField;
function BitFieldClass() {
    var names = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        names[_i] = arguments[_i];
    }
    var Bits = (function (_super) {
        __extends(Bits, _super);
        function Bits() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Bits;
    }(BitField));
    Bits.allocate.apply(Bits, __spreadArray([], __read(names), false));
    return Bits;
}
exports.BitFieldClass = BitFieldClass;
//# sourceMappingURL=BitField.js.map

/***/ }),

/***/ 5368:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.numeric = exports.translate = exports.remove = exports.add = exports.entities = exports.options = void 0;
var Retries_js_1 = __webpack_require__(4542);
var AsyncLoad_js_1 = __webpack_require__(9923);
exports.options = {
    loadMissingEntities: true
};
exports.entities = {
    ApplyFunction: '\u2061',
    Backslash: '\u2216',
    Because: '\u2235',
    Breve: '\u02D8',
    Cap: '\u22D2',
    CenterDot: '\u00B7',
    CircleDot: '\u2299',
    CircleMinus: '\u2296',
    CirclePlus: '\u2295',
    CircleTimes: '\u2297',
    Congruent: '\u2261',
    ContourIntegral: '\u222E',
    Coproduct: '\u2210',
    Cross: '\u2A2F',
    Cup: '\u22D3',
    CupCap: '\u224D',
    Dagger: '\u2021',
    Del: '\u2207',
    Delta: '\u0394',
    Diamond: '\u22C4',
    DifferentialD: '\u2146',
    DotEqual: '\u2250',
    DoubleDot: '\u00A8',
    DoubleRightTee: '\u22A8',
    DoubleVerticalBar: '\u2225',
    DownArrow: '\u2193',
    DownLeftVector: '\u21BD',
    DownRightVector: '\u21C1',
    DownTee: '\u22A4',
    Downarrow: '\u21D3',
    Element: '\u2208',
    EqualTilde: '\u2242',
    Equilibrium: '\u21CC',
    Exists: '\u2203',
    ExponentialE: '\u2147',
    FilledVerySmallSquare: '\u25AA',
    ForAll: '\u2200',
    Gamma: '\u0393',
    Gg: '\u22D9',
    GreaterEqual: '\u2265',
    GreaterEqualLess: '\u22DB',
    GreaterFullEqual: '\u2267',
    GreaterLess: '\u2277',
    GreaterSlantEqual: '\u2A7E',
    GreaterTilde: '\u2273',
    Hacek: '\u02C7',
    Hat: '\u005E',
    HumpDownHump: '\u224E',
    HumpEqual: '\u224F',
    Im: '\u2111',
    ImaginaryI: '\u2148',
    Integral: '\u222B',
    Intersection: '\u22C2',
    InvisibleComma: '\u2063',
    InvisibleTimes: '\u2062',
    Lambda: '\u039B',
    Larr: '\u219E',
    LeftAngleBracket: '\u27E8',
    LeftArrow: '\u2190',
    LeftArrowRightArrow: '\u21C6',
    LeftCeiling: '\u2308',
    LeftDownVector: '\u21C3',
    LeftFloor: '\u230A',
    LeftRightArrow: '\u2194',
    LeftTee: '\u22A3',
    LeftTriangle: '\u22B2',
    LeftTriangleEqual: '\u22B4',
    LeftUpVector: '\u21BF',
    LeftVector: '\u21BC',
    Leftarrow: '\u21D0',
    Leftrightarrow: '\u21D4',
    LessEqualGreater: '\u22DA',
    LessFullEqual: '\u2266',
    LessGreater: '\u2276',
    LessSlantEqual: '\u2A7D',
    LessTilde: '\u2272',
    Ll: '\u22D8',
    Lleftarrow: '\u21DA',
    LongLeftArrow: '\u27F5',
    LongLeftRightArrow: '\u27F7',
    LongRightArrow: '\u27F6',
    Longleftarrow: '\u27F8',
    Longleftrightarrow: '\u27FA',
    Longrightarrow: '\u27F9',
    Lsh: '\u21B0',
    MinusPlus: '\u2213',
    NestedGreaterGreater: '\u226B',
    NestedLessLess: '\u226A',
    NotDoubleVerticalBar: '\u2226',
    NotElement: '\u2209',
    NotEqual: '\u2260',
    NotExists: '\u2204',
    NotGreater: '\u226F',
    NotGreaterEqual: '\u2271',
    NotLeftTriangle: '\u22EA',
    NotLeftTriangleEqual: '\u22EC',
    NotLess: '\u226E',
    NotLessEqual: '\u2270',
    NotPrecedes: '\u2280',
    NotPrecedesSlantEqual: '\u22E0',
    NotRightTriangle: '\u22EB',
    NotRightTriangleEqual: '\u22ED',
    NotSubsetEqual: '\u2288',
    NotSucceeds: '\u2281',
    NotSucceedsSlantEqual: '\u22E1',
    NotSupersetEqual: '\u2289',
    NotTilde: '\u2241',
    NotVerticalBar: '\u2224',
    Omega: '\u03A9',
    OverBar: '\u203E',
    OverBrace: '\u23DE',
    PartialD: '\u2202',
    Phi: '\u03A6',
    Pi: '\u03A0',
    PlusMinus: '\u00B1',
    Precedes: '\u227A',
    PrecedesEqual: '\u2AAF',
    PrecedesSlantEqual: '\u227C',
    PrecedesTilde: '\u227E',
    Product: '\u220F',
    Proportional: '\u221D',
    Psi: '\u03A8',
    Rarr: '\u21A0',
    Re: '\u211C',
    ReverseEquilibrium: '\u21CB',
    RightAngleBracket: '\u27E9',
    RightArrow: '\u2192',
    RightArrowLeftArrow: '\u21C4',
    RightCeiling: '\u2309',
    RightDownVector: '\u21C2',
    RightFloor: '\u230B',
    RightTee: '\u22A2',
    RightTeeArrow: '\u21A6',
    RightTriangle: '\u22B3',
    RightTriangleEqual: '\u22B5',
    RightUpVector: '\u21BE',
    RightVector: '\u21C0',
    Rightarrow: '\u21D2',
    Rrightarrow: '\u21DB',
    Rsh: '\u21B1',
    Sigma: '\u03A3',
    SmallCircle: '\u2218',
    Sqrt: '\u221A',
    Square: '\u25A1',
    SquareIntersection: '\u2293',
    SquareSubset: '\u228F',
    SquareSubsetEqual: '\u2291',
    SquareSuperset: '\u2290',
    SquareSupersetEqual: '\u2292',
    SquareUnion: '\u2294',
    Star: '\u22C6',
    Subset: '\u22D0',
    SubsetEqual: '\u2286',
    Succeeds: '\u227B',
    SucceedsEqual: '\u2AB0',
    SucceedsSlantEqual: '\u227D',
    SucceedsTilde: '\u227F',
    SuchThat: '\u220B',
    Sum: '\u2211',
    Superset: '\u2283',
    SupersetEqual: '\u2287',
    Supset: '\u22D1',
    Therefore: '\u2234',
    Theta: '\u0398',
    Tilde: '\u223C',
    TildeEqual: '\u2243',
    TildeFullEqual: '\u2245',
    TildeTilde: '\u2248',
    UnderBar: '\u005F',
    UnderBrace: '\u23DF',
    Union: '\u22C3',
    UnionPlus: '\u228E',
    UpArrow: '\u2191',
    UpDownArrow: '\u2195',
    UpTee: '\u22A5',
    Uparrow: '\u21D1',
    Updownarrow: '\u21D5',
    Upsilon: '\u03A5',
    Vdash: '\u22A9',
    Vee: '\u22C1',
    VerticalBar: '\u2223',
    VerticalTilde: '\u2240',
    Vvdash: '\u22AA',
    Wedge: '\u22C0',
    Xi: '\u039E',
    amp: '\u0026',
    acute: '\u00B4',
    aleph: '\u2135',
    alpha: '\u03B1',
    amalg: '\u2A3F',
    and: '\u2227',
    ang: '\u2220',
    angmsd: '\u2221',
    angsph: '\u2222',
    ape: '\u224A',
    backprime: '\u2035',
    backsim: '\u223D',
    backsimeq: '\u22CD',
    beta: '\u03B2',
    beth: '\u2136',
    between: '\u226C',
    bigcirc: '\u25EF',
    bigodot: '\u2A00',
    bigoplus: '\u2A01',
    bigotimes: '\u2A02',
    bigsqcup: '\u2A06',
    bigstar: '\u2605',
    bigtriangledown: '\u25BD',
    bigtriangleup: '\u25B3',
    biguplus: '\u2A04',
    blacklozenge: '\u29EB',
    blacktriangle: '\u25B4',
    blacktriangledown: '\u25BE',
    blacktriangleleft: '\u25C2',
    bowtie: '\u22C8',
    boxdl: '\u2510',
    boxdr: '\u250C',
    boxminus: '\u229F',
    boxplus: '\u229E',
    boxtimes: '\u22A0',
    boxul: '\u2518',
    boxur: '\u2514',
    bsol: '\u005C',
    bull: '\u2022',
    cap: '\u2229',
    check: '\u2713',
    chi: '\u03C7',
    circ: '\u02C6',
    circeq: '\u2257',
    circlearrowleft: '\u21BA',
    circlearrowright: '\u21BB',
    circledR: '\u00AE',
    circledS: '\u24C8',
    circledast: '\u229B',
    circledcirc: '\u229A',
    circleddash: '\u229D',
    clubs: '\u2663',
    colon: '\u003A',
    comp: '\u2201',
    ctdot: '\u22EF',
    cuepr: '\u22DE',
    cuesc: '\u22DF',
    cularr: '\u21B6',
    cup: '\u222A',
    curarr: '\u21B7',
    curlyvee: '\u22CE',
    curlywedge: '\u22CF',
    dagger: '\u2020',
    daleth: '\u2138',
    ddarr: '\u21CA',
    deg: '\u00B0',
    delta: '\u03B4',
    digamma: '\u03DD',
    div: '\u00F7',
    divideontimes: '\u22C7',
    dot: '\u02D9',
    doteqdot: '\u2251',
    dotplus: '\u2214',
    dotsquare: '\u22A1',
    dtdot: '\u22F1',
    ecir: '\u2256',
    efDot: '\u2252',
    egs: '\u2A96',
    ell: '\u2113',
    els: '\u2A95',
    empty: '\u2205',
    epsi: '\u03B5',
    epsiv: '\u03F5',
    erDot: '\u2253',
    eta: '\u03B7',
    eth: '\u00F0',
    flat: '\u266D',
    fork: '\u22D4',
    frown: '\u2322',
    gEl: '\u2A8C',
    gamma: '\u03B3',
    gap: '\u2A86',
    gimel: '\u2137',
    gnE: '\u2269',
    gnap: '\u2A8A',
    gne: '\u2A88',
    gnsim: '\u22E7',
    gt: '\u003E',
    gtdot: '\u22D7',
    harrw: '\u21AD',
    hbar: '\u210F',
    hellip: '\u2026',
    hookleftarrow: '\u21A9',
    hookrightarrow: '\u21AA',
    imath: '\u0131',
    infin: '\u221E',
    intcal: '\u22BA',
    iota: '\u03B9',
    jmath: '\u0237',
    kappa: '\u03BA',
    kappav: '\u03F0',
    lEg: '\u2A8B',
    lambda: '\u03BB',
    lap: '\u2A85',
    larrlp: '\u21AB',
    larrtl: '\u21A2',
    lbrace: '\u007B',
    lbrack: '\u005B',
    le: '\u2264',
    leftleftarrows: '\u21C7',
    leftthreetimes: '\u22CB',
    lessdot: '\u22D6',
    lmoust: '\u23B0',
    lnE: '\u2268',
    lnap: '\u2A89',
    lne: '\u2A87',
    lnsim: '\u22E6',
    longmapsto: '\u27FC',
    looparrowright: '\u21AC',
    lowast: '\u2217',
    loz: '\u25CA',
    lt: '\u003C',
    ltimes: '\u22C9',
    ltri: '\u25C3',
    macr: '\u00AF',
    malt: '\u2720',
    mho: '\u2127',
    mu: '\u03BC',
    multimap: '\u22B8',
    nLeftarrow: '\u21CD',
    nLeftrightarrow: '\u21CE',
    nRightarrow: '\u21CF',
    nVDash: '\u22AF',
    nVdash: '\u22AE',
    natur: '\u266E',
    nearr: '\u2197',
    nharr: '\u21AE',
    nlarr: '\u219A',
    not: '\u00AC',
    nrarr: '\u219B',
    nu: '\u03BD',
    nvDash: '\u22AD',
    nvdash: '\u22AC',
    nwarr: '\u2196',
    omega: '\u03C9',
    omicron: '\u03BF',
    or: '\u2228',
    osol: '\u2298',
    period: '\u002E',
    phi: '\u03C6',
    phiv: '\u03D5',
    pi: '\u03C0',
    piv: '\u03D6',
    prap: '\u2AB7',
    precnapprox: '\u2AB9',
    precneqq: '\u2AB5',
    precnsim: '\u22E8',
    prime: '\u2032',
    psi: '\u03C8',
    quot: '\u0022',
    rarrtl: '\u21A3',
    rbrace: '\u007D',
    rbrack: '\u005D',
    rho: '\u03C1',
    rhov: '\u03F1',
    rightrightarrows: '\u21C9',
    rightthreetimes: '\u22CC',
    ring: '\u02DA',
    rmoust: '\u23B1',
    rtimes: '\u22CA',
    rtri: '\u25B9',
    scap: '\u2AB8',
    scnE: '\u2AB6',
    scnap: '\u2ABA',
    scnsim: '\u22E9',
    sdot: '\u22C5',
    searr: '\u2198',
    sect: '\u00A7',
    sharp: '\u266F',
    sigma: '\u03C3',
    sigmav: '\u03C2',
    simne: '\u2246',
    smile: '\u2323',
    spades: '\u2660',
    sub: '\u2282',
    subE: '\u2AC5',
    subnE: '\u2ACB',
    subne: '\u228A',
    supE: '\u2AC6',
    supnE: '\u2ACC',
    supne: '\u228B',
    swarr: '\u2199',
    tau: '\u03C4',
    theta: '\u03B8',
    thetav: '\u03D1',
    tilde: '\u02DC',
    times: '\u00D7',
    triangle: '\u25B5',
    triangleq: '\u225C',
    upsi: '\u03C5',
    upuparrows: '\u21C8',
    veebar: '\u22BB',
    vellip: '\u22EE',
    weierp: '\u2118',
    xi: '\u03BE',
    yen: '\u00A5',
    zeta: '\u03B6',
    zigrarr: '\u21DD',
    nbsp: '\u00A0',
    rsquo: '\u2019',
    lsquo: '\u2018'
};
var loaded = {};
function add(additions, file) {
    Object.assign(exports.entities, additions);
    loaded[file] = true;
}
exports.add = add;
function remove(entity) {
    delete exports.entities[entity];
}
exports.remove = remove;
function translate(text) {
    return text.replace(/&([a-z][a-z0-9]*|#(?:[0-9]+|x[0-9a-f]+));/ig, replace);
}
exports.translate = translate;
function replace(match, entity) {
    if (entity.charAt(0) === '#') {
        return numeric(entity.slice(1));
    }
    if (exports.entities[entity]) {
        return exports.entities[entity];
    }
    if (exports.options['loadMissingEntities']) {
        var file = (entity.match(/^[a-zA-Z](fr|scr|opf)$/) ? RegExp.$1 : entity.charAt(0).toLowerCase());
        if (!loaded[file]) {
            loaded[file] = true;
            (0, Retries_js_1.retryAfter)((0, AsyncLoad_js_1.asyncLoad)('./util/entities/' + file + '.js'));
        }
    }
    return match;
}
function numeric(entity) {
    var n = (entity.charAt(0) === 'x' ?
        parseInt(entity.slice(1), 16) :
        parseInt(entity));
    return String.fromCodePoint(n);
}
exports.numeric = numeric;
//# sourceMappingURL=Entities.js.map

/***/ }),

/***/ 7525:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FunctionList = void 0;
var PrioritizedList_js_1 = __webpack_require__(8666);
var FunctionList = (function (_super) {
    __extends(FunctionList, _super);
    function FunctionList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FunctionList.prototype.execute = function () {
        var e_1, _a;
        var data = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            data[_i] = arguments[_i];
        }
        try {
            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                var result = item.item.apply(item, __spreadArray([], __read(data), false));
                if (result === false) {
                    return false;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return true;
    };
    FunctionList.prototype.asyncExecute = function () {
        var data = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            data[_i] = arguments[_i];
        }
        var i = -1;
        var items = this.items;
        return new Promise(function (ok, fail) {
            (function execute() {
                var _a;
                while (++i < items.length) {
                    var result = (_a = items[i]).item.apply(_a, __spreadArray([], __read(data), false));
                    if (result instanceof Promise) {
                        result.then(execute).catch(function (err) { return fail(err); });
                        return;
                    }
                    if (result === false) {
                        ok(false);
                        return;
                    }
                }
                ok(true);
            })();
        });
    };
    return FunctionList;
}(PrioritizedList_js_1.PrioritizedList));
exports.FunctionList = FunctionList;
//# sourceMappingURL=FunctionList.js.map

/***/ }),

/***/ 103:
/***/ (function(__unused_webpack_module, exports) {


var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LinkedList = exports.ListItem = exports.END = void 0;
exports.END = Symbol();
var ListItem = (function () {
    function ListItem(data) {
        if (data === void 0) { data = null; }
        this.next = null;
        this.prev = null;
        this.data = data;
    }
    return ListItem;
}());
exports.ListItem = ListItem;
var LinkedList = (function () {
    function LinkedList() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.list = new ListItem(exports.END);
        this.list.next = this.list.prev = this.list;
        this.push.apply(this, __spreadArray([], __read(args), false));
    }
    LinkedList.prototype.isBefore = function (a, b) {
        return a < b;
    };
    LinkedList.prototype.push = function () {
        var e_1, _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        try {
            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
                var data = args_1_1.value;
                var item = new ListItem(data);
                item.next = this.list;
                item.prev = this.list.prev;
                this.list.prev = item;
                item.prev.next = item;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return this;
    };
    LinkedList.prototype.pop = function () {
        var item = this.list.prev;
        if (item.data === exports.END) {
            return null;
        }
        this.list.prev = item.prev;
        item.prev.next = this.list;
        item.next = item.prev = null;
        return item.data;
    };
    LinkedList.prototype.unshift = function () {
        var e_2, _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        try {
            for (var _b = __values(args.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var data = _c.value;
                var item = new ListItem(data);
                item.next = this.list.next;
                item.prev = this.list;
                this.list.next = item;
                item.next.prev = item;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return this;
    };
    LinkedList.prototype.shift = function () {
        var item = this.list.next;
        if (item.data === exports.END) {
            return null;
        }
        this.list.next = item.next;
        item.next.prev = this.list;
        item.next = item.prev = null;
        return item.data;
    };
    LinkedList.prototype.remove = function () {
        var e_3, _a;
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            items[_i] = arguments[_i];
        }
        var map = new Map();
        try {
            for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {
                var item_1 = items_1_1.value;
                map.set(item_1, true);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        var item = this.list.next;
        while (item.data !== exports.END) {
            var next = item.next;
            if (map.has(item.data)) {
                item.prev.next = item.next;
                item.next.prev = item.prev;
                item.next = item.prev = null;
            }
            item = next;
        }
    };
    LinkedList.prototype.clear = function () {
        this.list.next.prev = this.list.prev.next = null;
        this.list.next = this.list.prev = this.list;
        return this;
    };
    LinkedList.prototype[Symbol.iterator] = function () {
        var current;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    current = this.list.next;
                    _a.label = 1;
                case 1:
                    if (!(current.data !== exports.END)) return [3, 3];
                    return [4, current.data];
                case 2:
                    _a.sent();
                    current = current.next;
                    return [3, 1];
                case 3: return [2];
            }
        });
    };
    LinkedList.prototype.reversed = function () {
        var current;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    current = this.list.prev;
                    _a.label = 1;
                case 1:
                    if (!(current.data !== exports.END)) return [3, 3];
                    return [4, current.data];
                case 2:
                    _a.sent();
                    current = current.prev;
                    return [3, 1];
                case 3: return [2];
            }
        });
    };
    LinkedList.prototype.insert = function (data, isBefore) {
        if (isBefore === void 0) { isBefore = null; }
        if (isBefore === null) {
            isBefore = this.isBefore.bind(this);
        }
        var item = new ListItem(data);
        var cur = this.list.next;
        while (cur.data !== exports.END && isBefore(cur.data, item.data)) {
            cur = cur.next;
        }
        item.prev = cur.prev;
        item.next = cur;
        cur.prev.next = cur.prev = item;
        return this;
    };
    LinkedList.prototype.sort = function (isBefore) {
        var e_4, _a;
        if (isBefore === void 0) { isBefore = null; }
        if (isBefore === null) {
            isBefore = this.isBefore.bind(this);
        }
        var lists = [];
        try {
            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                lists.push(new LinkedList(item));
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        this.list.next = this.list.prev = this.list;
        while (lists.length > 1) {
            var l1 = lists.shift();
            var l2 = lists.shift();
            l1.merge(l2, isBefore);
            lists.push(l1);
        }
        if (lists.length) {
            this.list = lists[0].list;
        }
        return this;
    };
    LinkedList.prototype.merge = function (list, isBefore) {
        var _a, _b, _c, _d, _e;
        if (isBefore === void 0) { isBefore = null; }
        if (isBefore === null) {
            isBefore = this.isBefore.bind(this);
        }
        var lcur = this.list.next;
        var mcur = list.list.next;
        while (lcur.data !== exports.END && mcur.data !== exports.END) {
            if (isBefore(mcur.data, lcur.data)) {
                _a = __read([lcur, mcur], 2), mcur.prev.next = _a[0], lcur.prev.next = _a[1];
                _b = __read([lcur.prev, mcur.prev], 2), mcur.prev = _b[0], lcur.prev = _b[1];
                _c = __read([list.list, this.list], 2), this.list.prev.next = _c[0], list.list.prev.next = _c[1];
                _d = __read([list.list.prev, this.list.prev], 2), this.list.prev = _d[0], list.list.prev = _d[1];
                _e = __read([mcur.next, lcur], 2), lcur = _e[0], mcur = _e[1];
            }
            else {
                lcur = lcur.next;
            }
        }
        if (mcur.data !== exports.END) {
            this.list.prev.next = list.list.next;
            list.list.next.prev = this.list.prev;
            list.list.prev.next = this.list;
            this.list.prev = list.list.prev;
            list.list.next = list.list.prev = list.list;
        }
        return this;
    };
    return LinkedList;
}());
exports.LinkedList = LinkedList;
//# sourceMappingURL=LinkedList.js.map

/***/ }),

/***/ 7233:
/***/ (function(__unused_webpack_module, exports) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lookup = exports.separateOptions = exports.selectOptionsFromKeys = exports.selectOptions = exports.userOptions = exports.defaultOptions = exports.insert = exports.copy = exports.keys = exports.makeArray = exports.expandable = exports.Expandable = exports.OPTIONS = exports.REMOVE = exports.APPEND = exports.isObject = void 0;
var OBJECT = {}.constructor;
function isObject(obj) {
    return typeof obj === 'object' && obj !== null &&
        (obj.constructor === OBJECT || obj.constructor === Expandable);
}
exports.isObject = isObject;
exports.APPEND = '[+]';
exports.REMOVE = '[-]';
exports.OPTIONS = {
    invalidOption: 'warn',
    optionError: function (message, _key) {
        if (exports.OPTIONS.invalidOption === 'fatal') {
            throw new Error(message);
        }
        console.warn('MathJax: ' + message);
    }
};
var Expandable = (function () {
    function Expandable() {
    }
    return Expandable;
}());
exports.Expandable = Expandable;
function expandable(def) {
    return Object.assign(Object.create(Expandable.prototype), def);
}
exports.expandable = expandable;
function makeArray(x) {
    return Array.isArray(x) ? x : [x];
}
exports.makeArray = makeArray;
function keys(def) {
    if (!def) {
        return [];
    }
    return Object.keys(def).concat(Object.getOwnPropertySymbols(def));
}
exports.keys = keys;
function copy(def) {
    var e_1, _a;
    var props = {};
    try {
        for (var _b = __values(keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            var prop = Object.getOwnPropertyDescriptor(def, key);
            var value = prop.value;
            if (Array.isArray(value)) {
                prop.value = insert([], value, false);
            }
            else if (isObject(value)) {
                prop.value = copy(value);
            }
            if (prop.enumerable) {
                props[key] = prop;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return Object.defineProperties(def.constructor === Expandable ? expandable({}) : {}, props);
}
exports.copy = copy;
function insert(dst, src, warn) {
    var e_2, _a;
    if (warn === void 0) { warn = true; }
    var _loop_1 = function (key) {
        if (warn && dst[key] === undefined && dst.constructor !== Expandable) {
            if (typeof key === 'symbol') {
                key = key.toString();
            }
            exports.OPTIONS.optionError("Invalid option \"".concat(key, "\" (no default value)."), key);
            return "continue";
        }
        var sval = src[key], dval = dst[key];
        if (isObject(sval) && dval !== null &&
            (typeof dval === 'object' || typeof dval === 'function')) {
            var ids = keys(sval);
            if (Array.isArray(dval) &&
                ((ids.length === 1 && (ids[0] === exports.APPEND || ids[0] === exports.REMOVE) && Array.isArray(sval[ids[0]])) ||
                    (ids.length === 2 && ids.sort().join(',') === exports.APPEND + ',' + exports.REMOVE &&
                        Array.isArray(sval[exports.APPEND]) && Array.isArray(sval[exports.REMOVE])))) {
                if (sval[exports.REMOVE]) {
                    dval = dst[key] = dval.filter(function (x) { return sval[exports.REMOVE].indexOf(x) < 0; });
                }
                if (sval[exports.APPEND]) {
                    dst[key] = __spreadArray(__spreadArray([], __read(dval), false), __read(sval[exports.APPEND]), false);
                }
            }
            else {
                insert(dval, sval, warn);
            }
        }
        else if (Array.isArray(sval)) {
            dst[key] = [];
            insert(dst[key], sval, false);
        }
        else if (isObject(sval)) {
            dst[key] = copy(sval);
        }
        else {
            dst[key] = sval;
        }
    };
    try {
        for (var _b = __values(keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            _loop_1(key);
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return dst;
}
exports.insert = insert;
function defaultOptions(options) {
    var defs = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        defs[_i - 1] = arguments[_i];
    }
    defs.forEach(function (def) { return insert(options, def, false); });
    return options;
}
exports.defaultOptions = defaultOptions;
function userOptions(options) {
    var defs = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        defs[_i - 1] = arguments[_i];
    }
    defs.forEach(function (def) { return insert(options, def, true); });
    return options;
}
exports.userOptions = userOptions;
function selectOptions(options) {
    var e_3, _a;
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    var subset = {};
    try {
        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
            var key = keys_1_1.value;
            if (options.hasOwnProperty(key)) {
                subset[key] = options[key];
            }
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
        }
        finally { if (e_3) throw e_3.error; }
    }
    return subset;
}
exports.selectOptions = selectOptions;
function selectOptionsFromKeys(options, object) {
    return selectOptions.apply(void 0, __spreadArray([options], __read(Object.keys(object)), false));
}
exports.selectOptionsFromKeys = selectOptionsFromKeys;
function separateOptions(options) {
    var e_4, _a, e_5, _b;
    var objects = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        objects[_i - 1] = arguments[_i];
    }
    var results = [];
    try {
        for (var objects_1 = __values(objects), objects_1_1 = objects_1.next(); !objects_1_1.done; objects_1_1 = objects_1.next()) {
            var object = objects_1_1.value;
            var exists = {}, missing = {};
            try {
                for (var _c = (e_5 = void 0, __values(Object.keys(options || {}))), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var key = _d.value;
                    (object[key] === undefined ? missing : exists)[key] = options[key];
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_5) throw e_5.error; }
            }
            results.push(exists);
            options = missing;
        }
    }
    catch (e_4_1) { e_4 = { error: e_4_1 }; }
    finally {
        try {
            if (objects_1_1 && !objects_1_1.done && (_a = objects_1.return)) _a.call(objects_1);
        }
        finally { if (e_4) throw e_4.error; }
    }
    results.unshift(options);
    return results;
}
exports.separateOptions = separateOptions;
function lookup(name, lookup, def) {
    if (def === void 0) { def = null; }
    return (lookup.hasOwnProperty(name) ? lookup[name] : def);
}
exports.lookup = lookup;
//# sourceMappingURL=Options.js.map

/***/ }),

/***/ 8666:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PrioritizedList = void 0;
var PrioritizedList = (function () {
    function PrioritizedList() {
        this.items = [];
        this.items = [];
    }
    PrioritizedList.prototype[Symbol.iterator] = function () {
        var i = 0;
        var items = this.items;
        return {
            next: function () {
                return { value: items[i++], done: (i > items.length) };
            }
        };
    };
    PrioritizedList.prototype.add = function (item, priority) {
        if (priority === void 0) { priority = PrioritizedList.DEFAULTPRIORITY; }
        var i = this.items.length;
        do {
            i--;
        } while (i >= 0 && priority < this.items[i].priority);
        this.items.splice(i + 1, 0, { item: item, priority: priority });
        return item;
    };
    PrioritizedList.prototype.remove = function (item) {
        var i = this.items.length;
        do {
            i--;
        } while (i >= 0 && this.items[i].item !== item);
        if (i >= 0) {
            this.items.splice(i, 1);
        }
    };
    PrioritizedList.DEFAULTPRIORITY = 5;
    return PrioritizedList;
}());
exports.PrioritizedList = PrioritizedList;
//# sourceMappingURL=PrioritizedList.js.map

/***/ }),

/***/ 4542:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.retryAfter = exports.handleRetriesFor = void 0;
function handleRetriesFor(code) {
    return new Promise(function run(ok, fail) {
        try {
            ok(code());
        }
        catch (err) {
            if (err.retry && err.retry instanceof Promise) {
                err.retry.then(function () { return run(ok, fail); })
                    .catch(function (perr) { return fail(perr); });
            }
            else if (err.restart && err.restart.isCallback) {
                MathJax.Callback.After(function () { return run(ok, fail); }, err.restart);
            }
            else {
                fail(err);
            }
        }
    });
}
exports.handleRetriesFor = handleRetriesFor;
function retryAfter(promise) {
    var err = new Error('MathJax retry');
    err.retry = promise;
    throw err;
}
exports.retryAfter = retryAfter;
//# sourceMappingURL=Retries.js.map

/***/ }),

/***/ 4139:
/***/ (function(__unused_webpack_module, exports) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CssStyles = void 0;
var CssStyles = (function () {
    function CssStyles(styles) {
        if (styles === void 0) { styles = null; }
        this.styles = {};
        this.addStyles(styles);
    }
    Object.defineProperty(CssStyles.prototype, "cssText", {
        get: function () {
            return this.getStyleString();
        },
        enumerable: false,
        configurable: true
    });
    CssStyles.prototype.addStyles = function (styles) {
        var e_1, _a;
        if (!styles)
            return;
        try {
            for (var _b = __values(Object.keys(styles)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var style = _c.value;
                if (!this.styles[style]) {
                    this.styles[style] = {};
                }
                Object.assign(this.styles[style], styles[style]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    CssStyles.prototype.removeStyles = function () {
        var e_2, _a;
        var selectors = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            selectors[_i] = arguments[_i];
        }
        try {
            for (var selectors_1 = __values(selectors), selectors_1_1 = selectors_1.next(); !selectors_1_1.done; selectors_1_1 = selectors_1.next()) {
                var selector = selectors_1_1.value;
                delete this.styles[selector];
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (selectors_1_1 && !selectors_1_1.done && (_a = selectors_1.return)) _a.call(selectors_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    CssStyles.prototype.clear = function () {
        this.styles = {};
    };
    CssStyles.prototype.getStyleString = function () {
        return this.getStyleRules().join('\n\n');
    };
    CssStyles.prototype.getStyleRules = function () {
        var e_3, _a;
        var selectors = Object.keys(this.styles);
        var defs = new Array(selectors.length);
        var i = 0;
        try {
            for (var selectors_2 = __values(selectors), selectors_2_1 = selectors_2.next(); !selectors_2_1.done; selectors_2_1 = selectors_2.next()) {
                var selector = selectors_2_1.value;
                defs[i++] = selector + ' {\n' + this.getStyleDefString(this.styles[selector]) + '\n}';
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (selectors_2_1 && !selectors_2_1.done && (_a = selectors_2.return)) _a.call(selectors_2);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return defs;
    };
    CssStyles.prototype.getStyleDefString = function (styles) {
        var e_4, _a;
        var properties = Object.keys(styles);
        var values = new Array(properties.length);
        var i = 0;
        try {
            for (var properties_1 = __values(properties), properties_1_1 = properties_1.next(); !properties_1_1.done; properties_1_1 = properties_1.next()) {
                var property = properties_1_1.value;
                values[i++] = '  ' + property + ': ' + styles[property] + ';';
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (properties_1_1 && !properties_1_1.done && (_a = properties_1.return)) _a.call(properties_1);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return values.join('\n');
    };
    return CssStyles;
}());
exports.CssStyles = CssStyles;
//# sourceMappingURL=StyleList.js.map

/***/ }),

/***/ 8054:
/***/ (function(__unused_webpack_module, exports) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Styles = void 0;
var TRBL = ['top', 'right', 'bottom', 'left'];
var WSC = ['width', 'style', 'color'];
function splitSpaces(text) {
    var parts = text.split(/((?:'[^']*'|"[^"]*"|,[\s\n]|[^\s\n])*)/g);
    var split = [];
    while (parts.length > 1) {
        parts.shift();
        split.push(parts.shift());
    }
    return split;
}
function splitTRBL(name) {
    var e_1, _a;
    var parts = splitSpaces(this.styles[name]);
    if (parts.length === 0) {
        parts.push('');
    }
    if (parts.length === 1) {
        parts.push(parts[0]);
    }
    if (parts.length === 2) {
        parts.push(parts[0]);
    }
    if (parts.length === 3) {
        parts.push(parts[1]);
    }
    try {
        for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            this.setStyle(this.childName(name, child), parts.shift());
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
function combineTRBL(name) {
    var e_2, _a;
    var children = Styles.connect[name].children;
    var parts = [];
    try {
        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
            var child = children_1_1.value;
            var part = this.styles[name + '-' + child];
            if (!part) {
                delete this.styles[name];
                return;
            }
            parts.push(part);
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
        }
        finally { if (e_2) throw e_2.error; }
    }
    if (parts[3] === parts[1]) {
        parts.pop();
        if (parts[2] === parts[0]) {
            parts.pop();
            if (parts[1] === parts[0]) {
                parts.pop();
            }
        }
    }
    this.styles[name] = parts.join(' ');
}
function splitSame(name) {
    var e_3, _a;
    try {
        for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            this.setStyle(this.childName(name, child), this.styles[name]);
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_3) throw e_3.error; }
    }
}
function combineSame(name) {
    var e_4, _a;
    var children = __spreadArray([], __read(Styles.connect[name].children), false);
    var value = this.styles[this.childName(name, children.shift())];
    try {
        for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {
            var child = children_2_1.value;
            if (this.styles[this.childName(name, child)] !== value) {
                delete this.styles[name];
                return;
            }
        }
    }
    catch (e_4_1) { e_4 = { error: e_4_1 }; }
    finally {
        try {
            if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);
        }
        finally { if (e_4) throw e_4.error; }
    }
    this.styles[name] = value;
}
var BORDER = {
    width: /^(?:[\d.]+(?:[a-z]+)|thin|medium|thick|inherit|initial|unset)$/,
    style: /^(?:none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|inherit|initial|unset)$/
};
function splitWSC(name) {
    var e_5, _a, e_6, _b;
    var parts = { width: '', style: '', color: '' };
    try {
        for (var _c = __values(splitSpaces(this.styles[name])), _d = _c.next(); !_d.done; _d = _c.next()) {
            var part = _d.value;
            if (part.match(BORDER.width) && parts.width === '') {
                parts.width = part;
            }
            else if (part.match(BORDER.style) && parts.style === '') {
                parts.style = part;
            }
            else {
                parts.color = part;
            }
        }
    }
    catch (e_5_1) { e_5 = { error: e_5_1 }; }
    finally {
        try {
            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        }
        finally { if (e_5) throw e_5.error; }
    }
    try {
        for (var _e = __values(Styles.connect[name].children), _f = _e.next(); !_f.done; _f = _e.next()) {
            var child = _f.value;
            this.setStyle(this.childName(name, child), parts[child]);
        }
    }
    catch (e_6_1) { e_6 = { error: e_6_1 }; }
    finally {
        try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
        }
        finally { if (e_6) throw e_6.error; }
    }
}
function combineWSC(name) {
    var e_7, _a;
    var parts = [];
    try {
        for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            var value = this.styles[this.childName(name, child)];
            if (value) {
                parts.push(value);
            }
        }
    }
    catch (e_7_1) { e_7 = { error: e_7_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_7) throw e_7.error; }
    }
    if (parts.length) {
        this.styles[name] = parts.join(' ');
    }
    else {
        delete this.styles[name];
    }
}
var FONT = {
    style: /^(?:normal|italic|oblique|inherit|initial|unset)$/,
    variant: new RegExp('^(?:' +
        ['normal|none',
            'inherit|initial|unset',
            'common-ligatures|no-common-ligatures',
            'discretionary-ligatures|no-discretionary-ligatures',
            'historical-ligatures|no-historical-ligatures',
            'contextual|no-contextual',
            '(?:stylistic|character-variant|swash|ornaments|annotation)\\([^)]*\\)',
            'small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps',
            'lining-nums|oldstyle-nums|proportional-nums|tabular-nums',
            'diagonal-fractions|stacked-fractions',
            'ordinal|slashed-zero',
            'jis78|jis83|jis90|jis04|simplified|traditional',
            'full-width|proportional-width',
            'ruby'].join('|') + ')$'),
    weight: /^(?:normal|bold|bolder|lighter|[1-9]00|inherit|initial|unset)$/,
    stretch: new RegExp('^(?:' +
        ['normal',
            '(?:(?:ultra|extra|semi)-)?condensed',
            '(?:(?:semi|extra|ulta)-)?expanded',
            'inherit|initial|unset'].join('|') + ')$'),
    size: new RegExp('^(?:' +
        ['xx-small|x-small|small|medium|large|x-large|xx-large|larger|smaller',
            '[\d.]+%|[\d.]+[a-z]+',
            'inherit|initial|unset'].join('|') + ')' +
        '(?:\/(?:normal|[\d.\+](?:%|[a-z]+)?))?$')
};
function splitFont(name) {
    var e_8, _a, e_9, _b;
    var parts = splitSpaces(this.styles[name]);
    var value = {
        style: '', variant: [], weight: '', stretch: '',
        size: '', family: '', 'line-height': ''
    };
    try {
        for (var parts_1 = __values(parts), parts_1_1 = parts_1.next(); !parts_1_1.done; parts_1_1 = parts_1.next()) {
            var part = parts_1_1.value;
            value.family = part;
            try {
                for (var _c = (e_9 = void 0, __values(Object.keys(FONT))), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var name_1 = _d.value;
                    if ((Array.isArray(value[name_1]) || value[name_1] === '') && part.match(FONT[name_1])) {
                        if (name_1 === 'size') {
                            var _e = __read(part.split(/\//), 2), size = _e[0], height = _e[1];
                            value[name_1] = size;
                            if (height) {
                                value['line-height'] = height;
                            }
                        }
                        else if (value.size === '') {
                            if (Array.isArray(value[name_1])) {
                                value[name_1].push(part);
                            }
                            else {
                                value[name_1] = part;
                            }
                        }
                    }
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
    }
    catch (e_8_1) { e_8 = { error: e_8_1 }; }
    finally {
        try {
            if (parts_1_1 && !parts_1_1.done && (_a = parts_1.return)) _a.call(parts_1);
        }
        finally { if (e_8) throw e_8.error; }
    }
    saveFontParts(name, value);
    delete this.styles[name];
}
function saveFontParts(name, value) {
    var e_10, _a;
    try {
        for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            var cname = this.childName(name, child);
            if (Array.isArray(value[child])) {
                var values = value[child];
                if (values.length) {
                    this.styles[cname] = values.join(' ');
                }
            }
            else if (value[child] !== '') {
                this.styles[cname] = value[child];
            }
        }
    }
    catch (e_10_1) { e_10 = { error: e_10_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_10) throw e_10.error; }
    }
}
function combineFont(_name) { }
var Styles = (function () {
    function Styles(cssText) {
        if (cssText === void 0) { cssText = ''; }
        this.parse(cssText);
    }
    Object.defineProperty(Styles.prototype, "cssText", {
        get: function () {
            var e_11, _a;
            var styles = [];
            try {
                for (var _b = __values(Object.keys(this.styles)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var name_2 = _c.value;
                    var parent_1 = this.parentName(name_2);
                    if (!this.styles[parent_1]) {
                        styles.push(name_2 + ': ' + this.styles[name_2] + ';');
                    }
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_11) throw e_11.error; }
            }
            return styles.join(' ');
        },
        enumerable: false,
        configurable: true
    });
    Styles.prototype.set = function (name, value) {
        name = this.normalizeName(name);
        this.setStyle(name, value);
        if (Styles.connect[name] && !Styles.connect[name].combine) {
            this.combineChildren(name);
            delete this.styles[name];
        }
        while (name.match(/-/)) {
            name = this.parentName(name);
            if (!Styles.connect[name])
                break;
            Styles.connect[name].combine.call(this, name);
        }
    };
    Styles.prototype.get = function (name) {
        name = this.normalizeName(name);
        return (this.styles.hasOwnProperty(name) ? this.styles[name] : '');
    };
    Styles.prototype.setStyle = function (name, value) {
        this.styles[name] = value;
        if (Styles.connect[name] && Styles.connect[name].children) {
            Styles.connect[name].split.call(this, name);
        }
        if (value === '') {
            delete this.styles[name];
        }
    };
    Styles.prototype.combineChildren = function (name) {
        var e_12, _a;
        var parent = this.parentName(name);
        try {
            for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                var cname = this.childName(parent, child);
                Styles.connect[cname].combine.call(this, cname);
            }
        }
        catch (e_12_1) { e_12 = { error: e_12_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_12) throw e_12.error; }
        }
    };
    Styles.prototype.parentName = function (name) {
        var parent = name.replace(/-[^-]*$/, '');
        return (name === parent ? '' : parent);
    };
    Styles.prototype.childName = function (name, child) {
        if (child.match(/-/)) {
            return child;
        }
        if (Styles.connect[name] && !Styles.connect[name].combine) {
            child += name.replace(/.*-/, '-');
            name = this.parentName(name);
        }
        return name + '-' + child;
    };
    Styles.prototype.normalizeName = function (name) {
        return name.replace(/[A-Z]/g, function (c) { return '-' + c.toLowerCase(); });
    };
    Styles.prototype.parse = function (cssText) {
        if (cssText === void 0) { cssText = ''; }
        var PATTERN = this.constructor.pattern;
        this.styles = {};
        var parts = cssText.replace(PATTERN.comment, '').split(PATTERN.style);
        while (parts.length > 1) {
            var _a = __read(parts.splice(0, 3), 3), space = _a[0], name_3 = _a[1], value = _a[2];
            if (space.match(/[^\s\n]/))
                return;
            this.set(name_3, value);
        }
    };
    Styles.pattern = {
        style: /([-a-z]+)[\s\n]*:[\s\n]*((?:'[^']*'|"[^"]*"|\n|.)*?)[\s\n]*(?:;|$)/g,
        comment: /\/\*[^]*?\*\//g
    };
    Styles.connect = {
        padding: {
            children: TRBL,
            split: splitTRBL,
            combine: combineTRBL
        },
        border: {
            children: TRBL,
            split: splitSame,
            combine: combineSame
        },
        'border-top': {
            children: WSC,
            split: splitWSC,
            combine: combineWSC
        },
        'border-right': {
            children: WSC,
            split: splitWSC,
            combine: combineWSC
        },
        'border-bottom': {
            children: WSC,
            split: splitWSC,
            combine: combineWSC
        },
        'border-left': {
            children: WSC,
            split: splitWSC,
            combine: combineWSC
        },
        'border-width': {
            children: TRBL,
            split: splitTRBL,
            combine: null
        },
        'border-style': {
            children: TRBL,
            split: splitTRBL,
            combine: null
        },
        'border-color': {
            children: TRBL,
            split: splitTRBL,
            combine: null
        },
        font: {
            children: ['style', 'variant', 'weight', 'stretch', 'line-height', 'size', 'family'],
            split: splitFont,
            combine: combineFont
        }
    };
    return Styles;
}());
exports.Styles = Styles;
//# sourceMappingURL=Styles.js.map

/***/ }),

/***/ 6010:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.px = exports.emRounded = exports.em = exports.percent = exports.length2em = exports.MATHSPACE = exports.RELUNITS = exports.UNITS = exports.BIGDIMEN = void 0;
exports.BIGDIMEN = 1000000;
exports.UNITS = {
    px: 1,
    'in': 96,
    cm: 96 / 2.54,
    mm: 96 / 25.4
};
exports.RELUNITS = {
    em: 1,
    ex: .431,
    pt: 1 / 10,
    pc: 12 / 10,
    mu: 1 / 18
};
exports.MATHSPACE = {
    veryverythinmathspace: 1 / 18,
    verythinmathspace: 2 / 18,
    thinmathspace: 3 / 18,
    mediummathspace: 4 / 18,
    thickmathspace: 5 / 18,
    verythickmathspace: 6 / 18,
    veryverythickmathspace: 7 / 18,
    negativeveryverythinmathspace: -1 / 18,
    negativeverythinmathspace: -2 / 18,
    negativethinmathspace: -3 / 18,
    negativemediummathspace: -4 / 18,
    negativethickmathspace: -5 / 18,
    negativeverythickmathspace: -6 / 18,
    negativeveryverythickmathspace: -7 / 18,
    thin: .04,
    medium: .06,
    thick: .1,
    normal: 1,
    big: 2,
    small: 1 / Math.sqrt(2),
    infinity: exports.BIGDIMEN
};
function length2em(length, size, scale, em) {
    if (size === void 0) { size = 0; }
    if (scale === void 0) { scale = 1; }
    if (em === void 0) { em = 16; }
    if (typeof length !== 'string') {
        length = String(length);
    }
    if (length === '' || length == null) {
        return size;
    }
    if (exports.MATHSPACE[length]) {
        return exports.MATHSPACE[length];
    }
    var match = length.match(/^\s*([-+]?(?:\.\d+|\d+(?:\.\d*)?))?(pt|em|ex|mu|px|pc|in|mm|cm|%)?/);
    if (!match) {
        return size;
    }
    var m = parseFloat(match[1] || '1'), unit = match[2];
    if (exports.UNITS.hasOwnProperty(unit)) {
        return m * exports.UNITS[unit] / em / scale;
    }
    if (exports.RELUNITS.hasOwnProperty(unit)) {
        return m * exports.RELUNITS[unit];
    }
    if (unit === '%') {
        return m / 100 * size;
    }
    return m * size;
}
exports.length2em = length2em;
function percent(m) {
    return (100 * m).toFixed(1).replace(/\.?0+$/, '') + '%';
}
exports.percent = percent;
function em(m) {
    if (Math.abs(m) < .001)
        return '0';
    return (m.toFixed(3).replace(/\.?0+$/, '')) + 'em';
}
exports.em = em;
function emRounded(m, em) {
    if (em === void 0) { em = 16; }
    m = (Math.round(m * em) + .05) / em;
    if (Math.abs(m) < .001)
        return '0em';
    return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
}
exports.emRounded = emRounded;
function px(m, M, em) {
    if (M === void 0) { M = -exports.BIGDIMEN; }
    if (em === void 0) { em = 16; }
    m *= em;
    if (M && m < M)
        m = M;
    if (Math.abs(m) < .1)
        return '0';
    return m.toFixed(1).replace(/\.0$/, '') + 'px';
}
exports.px = px;
//# sourceMappingURL=lengths.js.map

/***/ }),

/***/ 7875:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.max = exports.sum = void 0;
function sum(A) {
    return A.reduce(function (a, b) { return a + b; }, 0);
}
exports.sum = sum;
function max(A) {
    return A.reduce(function (a, b) { return Math.max(a, b); }, 0);
}
exports.max = max;
//# sourceMappingURL=numeric.js.map

/***/ }),

/***/ 505:
/***/ (function(__unused_webpack_module, exports) {


var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.split = exports.isPercent = exports.unicodeString = exports.unicodeChars = exports.quotePattern = exports.sortLength = void 0;
function sortLength(a, b) {
    return a.length !== b.length ? b.length - a.length : a === b ? 0 : a < b ? -1 : 1;
}
exports.sortLength = sortLength;
function quotePattern(text) {
    return text.replace(/([\^$(){}+*?\-|\[\]\:\\])/g, '\\$1');
}
exports.quotePattern = quotePattern;
function unicodeChars(text) {
    return Array.from(text).map(function (c) { return c.codePointAt(0); });
}
exports.unicodeChars = unicodeChars;
function unicodeString(data) {
    return String.fromCodePoint.apply(String, __spreadArray([], __read(data), false));
}
exports.unicodeString = unicodeString;
function isPercent(x) {
    return !!x.match(/%\s*$/);
}
exports.isPercent = isPercent;
function split(x) {
    return x.trim().split(/\s+/);
}
exports.split = split;
//# sourceMappingURL=string.js.map

/***/ }),

/***/ 7718:
/***/ (function(__unused_webpack_module, exports) {


/*!
 *************************************************************************
 *
 *  mhchemParser.ts
 *  4.1.1
 *
 *  Parser for the \ce command and \pu command for MathJax and Co.
 *
 *  mhchem's \ce is a tool for writing beautiful chemical equations easily.
 *  mhchem's \pu is a tool for writing physical units easily.
 *
 *  ----------------------------------------------------------------------
 *
 *  Copyright (c) 2015-2021 Martin Hensel
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  ----------------------------------------------------------------------
 *
 *  https://github.com/mhchem/mhchemParser
 *
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mhchemParser = void 0;
var mhchemParser = (function () {
    function mhchemParser() {
    }
    mhchemParser.toTex = function (input, type) {
        return _mhchemTexify.go(_mhchemParser.go(input, type), type !== "tex");
    };
    return mhchemParser;
}());
exports.mhchemParser = mhchemParser;
function _mhchemCreateTransitions(o) {
    var pattern, state;
    var transitions = {};
    for (pattern in o) {
        for (state in o[pattern]) {
            var stateArray = state.split("|");
            o[pattern][state].stateArray = stateArray;
            for (var i = 0; i < stateArray.length; i++) {
                transitions[stateArray[i]] = [];
            }
        }
    }
    for (pattern in o) {
        for (state in o[pattern]) {
            var stateArray = o[pattern][state].stateArray || [];
            for (var i = 0; i < stateArray.length; i++) {
                var p = o[pattern][state];
                p.action_ = [].concat(p.action_);
                for (var k = 0; k < p.action_.length; k++) {
                    if (typeof p.action_[k] === "string") {
                        p.action_[k] = { type_: p.action_[k] };
                    }
                }
                var patternArray = pattern.split("|");
                for (var j = 0; j < patternArray.length; j++) {
                    if (stateArray[i] === '*') {
                        var t = void 0;
                        for (t in transitions) {
                            transitions[t].push({ pattern: patternArray[j], task: p });
                        }
                    }
                    else {
                        transitions[stateArray[i]].push({ pattern: patternArray[j], task: p });
                    }
                }
            }
        }
    }
    return transitions;
}
;
var _mhchemParser = {
    go: function (input, stateMachine) {
        if (!input) {
            return [];
        }
        if (stateMachine === undefined) {
            stateMachine = 'ce';
        }
        var state = '0';
        var buffer = {};
        buffer['parenthesisLevel'] = 0;
        input = input.replace(/\n/g, " ");
        input = input.replace(/[\u2212\u2013\u2014\u2010]/g, "-");
        input = input.replace(/[\u2026]/g, "...");
        var lastInput;
        var watchdog = 10;
        var output = [];
        while (true) {
            if (lastInput !== input) {
                watchdog = 10;
                lastInput = input;
            }
            else {
                watchdog--;
            }
            var machine = _mhchemParser.stateMachines[stateMachine];
            var t = machine.transitions[state] || machine.transitions['*'];
            iterateTransitions: for (var i = 0; i < t.length; i++) {
                var matches = _mhchemParser.patterns.match_(t[i].pattern, input);
                if (matches) {
                    var task = t[i].task;
                    for (var iA = 0; iA < task.action_.length; iA++) {
                        var o = void 0;
                        if (machine.actions[task.action_[iA].type_]) {
                            o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);
                        }
                        else if (_mhchemParser.actions[task.action_[iA].type_]) {
                            o = _mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);
                        }
                        else {
                            throw ["MhchemBugA", "mhchem bug A. Please report. (" + task.action_[iA].type_ + ")"];
                        }
                        _mhchemParser.concatArray(output, o);
                    }
                    state = task.nextState || state;
                    if (input.length > 0) {
                        if (!task.revisit) {
                            input = matches.remainder;
                        }
                        if (!task.toContinue) {
                            break iterateTransitions;
                        }
                    }
                    else {
                        return output;
                    }
                }
            }
            if (watchdog <= 0) {
                throw ["MhchemBugU", "mhchem bug U. Please report."];
            }
        }
    },
    concatArray: function (a, b) {
        if (b) {
            if (Array.isArray(b)) {
                for (var iB = 0; iB < b.length; iB++) {
                    a.push(b[iB]);
                }
            }
            else {
                a.push(b);
            }
        }
    },
    patterns: {
        patterns: {
            'empty': /^$/,
            'else': /^./,
            'else2': /^./,
            'space': /^\s/,
            'space A': /^\s(?=[A-Z\\$])/,
            'space$': /^\s$/,
            'a-z': /^[a-z]/,
            'x': /^x/,
            'x$': /^x$/,
            'i$': /^i$/,
            'letters': /^(?:[a-zA-Z\u03B1-\u03C9\u0391-\u03A9?@]|(?:\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))))+/,
            '\\greek': /^\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))/,
            'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,
            '$one lowercase latin letter$ $': /^\$(?:([a-z])(?:$|[^a-zA-Z]))\$$/,
            'one lowercase greek letter $': /^(?:\$?[\u03B1-\u03C9]\$?|\$?\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\s*\$?)(?:\s+|\{\}|(?![a-zA-Z]))$/,
            'digits': /^[0-9]+/,
            '-9.,9': /^[+\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))/,
            '-9.,9 no missing 0': /^[+\-]?[0-9]+(?:[.,][0-9]+)?/,
            '(-)(9.,9)(e)(99)': function (input) {
                var match = input.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))?(\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))\))?(?:(?:([eE])|\s*(\*|x|\\times|\u00D7)\s*10\^)([+\-]?[0-9]+|\{[+\-]?[0-9]+\}))?/);
                if (match && match[0]) {
                    return { match_: match.slice(1), remainder: input.substr(match[0].length) };
                }
                return null;
            },
            '(-)(9)^(-9)': /^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+)?)\^([+\-]?[0-9]+|\{[+\-]?[0-9]+\})/,
            'state of aggregation $': function (input) {
                var a = _mhchemParser.patterns.findObserveGroups(input, "", /^\([a-z]{1,3}(?=[\),])/, ")", "");
                if (a && a.remainder.match(/^($|[\s,;\)\]\}])/)) {
                    return a;
                }
                var match = input.match(/^(?:\((?:\\ca\s?)?\$[amothc]\$\))/);
                if (match) {
                    return { match_: match[0], remainder: input.substr(match[0].length) };
                }
                return null;
            },
            '_{(state of aggregation)}$': /^_\{(\([a-z]{1,3}\))\}/,
            '{[(': /^(?:\\\{|\[|\()/,
            ')]}': /^(?:\)|\]|\\\})/,
            ', ': /^[,;]\s*/,
            ',': /^[,;]/,
            '.': /^[.]/,
            '. __* ': /^([.\u22C5\u00B7\u2022]|[*])\s*/,
            '...': /^\.\.\.(?=$|[^.])/,
            '^{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "^{", "", "", "}"); },
            '^($...$)': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "^", "$", "$", ""); },
            '^a': /^\^([0-9]+|[^\\_])/,
            '^\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "^", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true); },
            '^\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "^", /^\\[a-zA-Z]+\{/, "}", ""); },
            '^\\x': /^\^(\\[a-zA-Z]+)\s*/,
            '^(-1)': /^\^(-?\d+)/,
            '\'': /^'/,
            '_{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "_{", "", "", "}"); },
            '_($...$)': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "_", "$", "$", ""); },
            '_9': /^_([+\-]?[0-9]+|[^\\])/,
            '_\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "_", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true); },
            '_\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "_", /^\\[a-zA-Z]+\{/, "}", ""); },
            '_\\x': /^_(\\[a-zA-Z]+)\s*/,
            '^_': /^(?:\^(?=_)|\_(?=\^)|[\^_]$)/,
            '{}^': /^\{\}(?=\^)/,
            '{}': /^\{\}/,
            '{...}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "", "{", "}", ""); },
            '{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "{", "", "", "}"); },
            '$...$': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "", "$", "$", ""); },
            '${(...)}$__$(...)$': function (input) {
                return _mhchemParser.patterns.findObserveGroups(input, "${", "", "", "}$") || _mhchemParser.patterns.findObserveGroups(input, "$", "", "", "$");
            },
            '=<>': /^[=<>]/,
            '#': /^[#\u2261]/,
            '+': /^\+/,
            '-$': /^-(?=[\s_},;\]/]|$|\([a-z]+\))/,
            '-9': /^-(?=[0-9])/,
            '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\s,;\)\]\}]))/,
            '-': /^-/,
            'pm-operator': /^(?:\\pm|\$\\pm\$|\+-|\+\/-)/,
            'operator': /^(?:\+|(?:[\-=<>]|<<|>>|\\approx|\$\\approx\$)(?=\s|$|-?[0-9]))/,
            'arrowUpDown': /^(?:v|\(v\)|\^|\(\^\))(?=$|[\s,;\)\]\}])/,
            '\\bond{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "\\bond{", "", "", "}"); },
            '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\u2192\u27F6\u21CC])/,
            'CMT': /^[CMT](?=\[)/,
            '[(...)]': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "[", "", "", "]"); },
            '1st-level escape': /^(&|\\\\|\\hline)\s*/,
            '\\,': /^(?:\\[,\ ;:])/,
            '\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true); },
            '\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "", /^\\[a-zA-Z]+\{/, "}", ""); },
            '\\ca': /^\\ca(?:\s+|(?![a-zA-Z]))/,
            '\\x': /^(?:\\[a-zA-Z]+\s*|\\[_&{}%])/,
            'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,
            'others': /^[\/~|]/,
            '\\frac{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "\\frac{", "", "", "}", "{", "", "", "}"); },
            '\\overset{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "\\overset{", "", "", "}", "{", "", "", "}"); },
            '\\underset{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "\\underset{", "", "", "}", "{", "", "", "}"); },
            '\\underbrace{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "\\underbrace{", "", "", "}_", "{", "", "", "}"); },
            '\\color{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "\\color{", "", "", "}"); },
            '\\color{(...)}{(...)}': function (input) {
                return _mhchemParser.patterns.findObserveGroups(input, "\\color{", "", "", "}", "{", "", "", "}") ||
                    _mhchemParser.patterns.findObserveGroups(input, "\\color", "\\", "", /^(?=\{)/, "{", "", "", "}");
            },
            '\\ce{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "\\ce{", "", "", "}"); },
            '\\pu{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, "\\pu{", "", "", "}"); },
            'oxidation$': /^(?:[+-][IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,
            'd-oxidation$': /^(?:[+-]?\s?[IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,
            'roman numeral': /^[IVX]+/,
            '1/2$': /^[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+(?:\$[a-z]\$|[a-z])?$/,
            'amount': function (input) {
                var match;
                match = input.match(/^(?:(?:(?:\([+\-]?[0-9]+\/[0-9]+\)|[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+|[+\-]?[0-9]+[.,][0-9]+|[+\-]?\.[0-9]+|[+\-]?[0-9]+)(?:[a-z](?=\s*[A-Z]))?)|[+\-]?[a-z](?=\s*[A-Z])|\+(?!\s))/);
                if (match) {
                    return { match_: match[0], remainder: input.substr(match[0].length) };
                }
                var a = _mhchemParser.patterns.findObserveGroups(input, "", "$", "$", "");
                if (a) {
                    match = a.match_.match(/^\$(?:\(?[+\-]?(?:[0-9]*[a-z]?[+\-])?[0-9]*[a-z](?:[+\-][0-9]*[a-z]?)?\)?|\+|-)\$$/);
                    if (match) {
                        return { match_: match[0], remainder: input.substr(match[0].length) };
                    }
                }
                return null;
            },
            'amount2': function (input) { return this['amount'](input); },
            '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,
            'formula$': function (input) {
                if (input.match(/^\([a-z]+\)$/)) {
                    return null;
                }
                var match = input.match(/^(?:[a-z]|(?:[0-9\ \+\-\,\.\(\)]+[a-z])+[0-9\ \+\-\,\.\(\)]*|(?:[a-z][0-9\ \+\-\,\.\(\)]+)+[a-z]?)$/);
                if (match) {
                    return { match_: match[0], remainder: input.substr(match[0].length) };
                }
                return null;
            },
            'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,
            '/': /^\s*(\/)\s*/,
            '//': /^\s*(\/\/)\s*/,
            '*': /^\s*[*.]\s*/
        },
        findObserveGroups: function (input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {
            var _match = function (input, pattern) {
                if (typeof pattern === "string") {
                    if (input.indexOf(pattern) !== 0) {
                        return null;
                    }
                    return pattern;
                }
                else {
                    var match_1 = input.match(pattern);
                    if (!match_1) {
                        return null;
                    }
                    return match_1[0];
                }
            };
            var _findObserveGroups = function (input, i, endChars) {
                var braces = 0;
                while (i < input.length) {
                    var a = input.charAt(i);
                    var match_2 = _match(input.substr(i), endChars);
                    if (match_2 !== null && braces === 0) {
                        return { endMatchBegin: i, endMatchEnd: i + match_2.length };
                    }
                    else if (a === "{") {
                        braces++;
                    }
                    else if (a === "}") {
                        if (braces === 0) {
                            throw ["ExtraCloseMissingOpen", "Extra close brace or missing open brace"];
                        }
                        else {
                            braces--;
                        }
                    }
                    i++;
                }
                if (braces > 0) {
                    return null;
                }
                return null;
            };
            var match = _match(input, begExcl);
            if (match === null) {
                return null;
            }
            input = input.substr(match.length);
            match = _match(input, begIncl);
            if (match === null) {
                return null;
            }
            var e = _findObserveGroups(input, match.length, endIncl || endExcl);
            if (e === null) {
                return null;
            }
            var match1 = input.substring(0, (endIncl ? e.endMatchEnd : e.endMatchBegin));
            if (!(beg2Excl || beg2Incl)) {
                return {
                    match_: match1,
                    remainder: input.substr(e.endMatchEnd)
                };
            }
            else {
                var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);
                if (group2 === null) {
                    return null;
                }
                var matchRet = [match1, group2.match_];
                return {
                    match_: (combine ? matchRet.join("") : matchRet),
                    remainder: group2.remainder
                };
            }
        },
        match_: function (m, input) {
            var pattern = _mhchemParser.patterns.patterns[m];
            if (pattern === undefined) {
                throw ["MhchemBugP", "mhchem bug P. Please report. (" + m + ")"];
            }
            else if (typeof pattern === "function") {
                return _mhchemParser.patterns.patterns[m](input);
            }
            else {
                var match = input.match(pattern);
                if (match) {
                    if (match.length > 2) {
                        return { match_: match.slice(1), remainder: input.substr(match[0].length) };
                    }
                    else {
                        return { match_: match[1] || match[0], remainder: input.substr(match[0].length) };
                    }
                }
                return null;
            }
        }
    },
    actions: {
        'a=': function (buffer, m) { buffer.a = (buffer.a || "") + m; return undefined; },
        'b=': function (buffer, m) { buffer.b = (buffer.b || "") + m; return undefined; },
        'p=': function (buffer, m) { buffer.p = (buffer.p || "") + m; return undefined; },
        'o=': function (buffer, m) { buffer.o = (buffer.o || "") + m; return undefined; },
        'q=': function (buffer, m) { buffer.q = (buffer.q || "") + m; return undefined; },
        'd=': function (buffer, m) { buffer.d = (buffer.d || "") + m; return undefined; },
        'rm=': function (buffer, m) { buffer.rm = (buffer.rm || "") + m; return undefined; },
        'text=': function (buffer, m) { buffer.text_ = (buffer.text_ || "") + m; return undefined; },
        'insert': function (_buffer, _m, a) { return { type_: a }; },
        'insert+p1': function (_buffer, m, a) { return { type_: a, p1: m }; },
        'insert+p1+p2': function (_buffer, m, a) { return { type_: a, p1: m[0], p2: m[1] }; },
        'copy': function (_buffer, m) { return m; },
        'write': function (_buffer, _m, a) { return a; },
        'rm': function (_buffer, m) { return { type_: 'rm', p1: m }; },
        'text': function (_buffer, m) { return _mhchemParser.go(m, 'text'); },
        'tex-math': function (_buffer, m) { return _mhchemParser.go(m, 'tex-math'); },
        'tex-math tight': function (_buffer, m) { return _mhchemParser.go(m, 'tex-math tight'); },
        'bond': function (_buffer, m, k) { return { type_: 'bond', kind_: k || m }; },
        'color0-output': function (_buffer, m) { return { type_: 'color0', color: m }; },
        'ce': function (_buffer, m) { return _mhchemParser.go(m, 'ce'); },
        'pu': function (_buffer, m) { return _mhchemParser.go(m, 'pu'); },
        '1/2': function (_buffer, m) {
            var ret = [];
            if (m.match(/^[+\-]/)) {
                ret.push(m.substr(0, 1));
                m = m.substr(1);
            }
            var n = m.match(/^([0-9]+|\$[a-z]\$|[a-z])\/([0-9]+)(\$[a-z]\$|[a-z])?$/);
            n[1] = n[1].replace(/\$/g, "");
            ret.push({ type_: 'frac', p1: n[1], p2: n[2] });
            if (n[3]) {
                n[3] = n[3].replace(/\$/g, "");
                ret.push({ type_: 'tex-math', p1: n[3] });
            }
            return ret;
        },
        '9,9': function (_buffer, m) { return _mhchemParser.go(m, '9,9'); }
    },
    stateMachines: {
        'tex': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '0': { action_: 'copy' }
                },
                '\\ce{(...)}': {
                    '0': { action_: [{ type_: 'write', option: "{" }, 'ce', { type_: 'write', option: "}" }] }
                },
                '\\pu{(...)}': {
                    '0': { action_: [{ type_: 'write', option: "{" }, 'pu', { type_: 'write', option: "}" }] }
                },
                'else': {
                    '0': { action_: 'copy' }
                },
            }),
            actions: {}
        },
        'ce': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: 'output' }
                },
                'else': {
                    '0|1|2': { action_: 'beginsWithBond=false', revisit: true, toContinue: true }
                },
                'oxidation$': {
                    '0': { action_: 'oxidation-output' }
                },
                'CMT': {
                    'r': { action_: 'rdt=', nextState: 'rt' },
                    'rd': { action_: 'rqt=', nextState: 'rdt' }
                },
                'arrowUpDown': {
                    '0|1|2|as': { action_: ['sb=false', 'output', 'operator'], nextState: '1' }
                },
                'uprightEntities': {
                    '0|1|2': { action_: ['o=', 'output'], nextState: '1' }
                },
                'orbital': {
                    '0|1|2|3': { action_: 'o=', nextState: 'o' }
                },
                '->': {
                    '0|1|2|3': { action_: 'r=', nextState: 'r' },
                    'a|as': { action_: ['output', 'r='], nextState: 'r' },
                    '*': { action_: ['output', 'r='], nextState: 'r' }
                },
                '+': {
                    'o': { action_: 'd= kv', nextState: 'd' },
                    'd|D': { action_: 'd=', nextState: 'd' },
                    'q': { action_: 'd=', nextState: 'qd' },
                    'qd|qD': { action_: 'd=', nextState: 'qd' },
                    'dq': { action_: ['output', 'd='], nextState: 'd' },
                    '3': { action_: ['sb=false', 'output', 'operator'], nextState: '0' }
                },
                'amount': {
                    '0|2': { action_: 'a=', nextState: 'a' }
                },
                'pm-operator': {
                    '0|1|2|a|as': { action_: ['sb=false', 'output', { type_: 'operator', option: '\\pm' }], nextState: '0' }
                },
                'operator': {
                    '0|1|2|a|as': { action_: ['sb=false', 'output', 'operator'], nextState: '0' }
                },
                '-$': {
                    'o|q': { action_: ['charge or bond', 'output'], nextState: 'qd' },
                    'd': { action_: 'd=', nextState: 'd' },
                    'D': { action_: ['output', { type_: 'bond', option: "-" }], nextState: '3' },
                    'q': { action_: 'd=', nextState: 'qd' },
                    'qd': { action_: 'd=', nextState: 'qd' },
                    'qD|dq': { action_: ['output', { type_: 'bond', option: "-" }], nextState: '3' }
                },
                '-9': {
                    '3|o': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '3' }
                },
                '- orbital overlap': {
                    'o': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' },
                    'd': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' }
                },
                '-': {
                    '0|1|2': { action_: [{ type_: 'output', option: 1 }, 'beginsWithBond=true', { type_: 'bond', option: "-" }], nextState: '3' },
                    '3': { action_: { type_: 'bond', option: "-" } },
                    'a': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' },
                    'as': { action_: [{ type_: 'output', option: 2 }, { type_: 'bond', option: "-" }], nextState: '3' },
                    'b': { action_: 'b=' },
                    'o': { action_: { type_: '- after o/d', option: false }, nextState: '2' },
                    'q': { action_: { type_: '- after o/d', option: false }, nextState: '2' },
                    'd|qd|dq': { action_: { type_: '- after o/d', option: true }, nextState: '2' },
                    'D|qD|p': { action_: ['output', { type_: 'bond', option: "-" }], nextState: '3' }
                },
                'amount2': {
                    '1|3': { action_: 'a=', nextState: 'a' }
                },
                'letters': {
                    '0|1|2|3|a|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },
                    'q|dq': { action_: ['output', 'o='], nextState: 'o' },
                    'd|D|qd|qD': { action_: 'o after d', nextState: 'o' }
                },
                'digits': {
                    'o': { action_: 'q=', nextState: 'q' },
                    'd|D': { action_: 'q=', nextState: 'dq' },
                    'q': { action_: ['output', 'o='], nextState: 'o' },
                    'a': { action_: 'o=', nextState: 'o' }
                },
                'space A': {
                    'b|p|bp': { action_: [] }
                },
                'space': {
                    'a': { action_: [], nextState: 'as' },
                    '0': { action_: 'sb=false' },
                    '1|2': { action_: 'sb=true' },
                    'r|rt|rd|rdt|rdq': { action_: 'output', nextState: '0' },
                    '*': { action_: ['output', 'sb=true'], nextState: '1' }
                },
                '1st-level escape': {
                    '1|2': { action_: ['output', { type_: 'insert+p1', option: '1st-level escape' }] },
                    '*': { action_: ['output', { type_: 'insert+p1', option: '1st-level escape' }], nextState: '0' }
                },
                '[(...)]': {
                    'r|rt': { action_: 'rd=', nextState: 'rd' },
                    'rd|rdt': { action_: 'rq=', nextState: 'rdq' }
                },
                '...': {
                    'o|d|D|dq|qd|qD': { action_: ['output', { type_: 'bond', option: "..." }], nextState: '3' },
                    '*': { action_: [{ type_: 'output', option: 1 }, { type_: 'insert', option: 'ellipsis' }], nextState: '1' }
                },
                '. __* ': {
                    '*': { action_: ['output', { type_: 'insert', option: 'addition compound' }], nextState: '1' }
                },
                'state of aggregation $': {
                    '*': { action_: ['output', 'state of aggregation'], nextState: '1' }
                },
                '{[(': {
                    'a|as|o': { action_: ['o=', 'output', 'parenthesisLevel++'], nextState: '2' },
                    '0|1|2|3': { action_: ['o=', 'output', 'parenthesisLevel++'], nextState: '2' },
                    '*': { action_: ['output', 'o=', 'output', 'parenthesisLevel++'], nextState: '2' }
                },
                ')]}': {
                    '0|1|2|3|b|p|bp|o': { action_: ['o=', 'parenthesisLevel--'], nextState: 'o' },
                    'a|as|d|D|q|qd|qD|dq': { action_: ['output', 'o=', 'parenthesisLevel--'], nextState: 'o' }
                },
                ', ': {
                    '*': { action_: ['output', 'comma'], nextState: '0' }
                },
                '^_': {
                    '*': { action_: [] }
                },
                '^{(...)}|^($...$)': {
                    '0|1|2|as': { action_: 'b=', nextState: 'b' },
                    'p': { action_: 'b=', nextState: 'bp' },
                    '3|o': { action_: 'd= kv', nextState: 'D' },
                    'q': { action_: 'd=', nextState: 'qD' },
                    'd|D|qd|qD|dq': { action_: ['output', 'd='], nextState: 'D' }
                },
                '^a|^\\x{}{}|^\\x{}|^\\x|\'': {
                    '0|1|2|as': { action_: 'b=', nextState: 'b' },
                    'p': { action_: 'b=', nextState: 'bp' },
                    '3|o': { action_: 'd= kv', nextState: 'd' },
                    'q': { action_: 'd=', nextState: 'qd' },
                    'd|qd|D|qD': { action_: 'd=' },
                    'dq': { action_: ['output', 'd='], nextState: 'd' }
                },
                '_{(state of aggregation)}$': {
                    'd|D|q|qd|qD|dq': { action_: ['output', 'q='], nextState: 'q' }
                },
                '_{(...)}|_($...$)|_9|_\\x{}{}|_\\x{}|_\\x': {
                    '0|1|2|as': { action_: 'p=', nextState: 'p' },
                    'b': { action_: 'p=', nextState: 'bp' },
                    '3|o': { action_: 'q=', nextState: 'q' },
                    'd|D': { action_: 'q=', nextState: 'dq' },
                    'q|qd|qD|dq': { action_: ['output', 'q='], nextState: 'q' }
                },
                '=<>': {
                    '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': { action_: [{ type_: 'output', option: 2 }, 'bond'], nextState: '3' }
                },
                '#': {
                    '0|1|2|3|a|as|o': { action_: [{ type_: 'output', option: 2 }, { type_: 'bond', option: "#" }], nextState: '3' }
                },
                '{}^': {
                    '*': { action_: [{ type_: 'output', option: 1 }, { type_: 'insert', option: 'tinySkip' }], nextState: '1' }
                },
                '{}': {
                    '*': { action_: { type_: 'output', option: 1 }, nextState: '1' }
                },
                '{...}': {
                    '0|1|2|3|a|as|b|p|bp': { action_: 'o=', nextState: 'o' },
                    'o|d|D|q|qd|qD|dq': { action_: ['output', 'o='], nextState: 'o' }
                },
                '$...$': {
                    'a': { action_: 'a=' },
                    '0|1|2|3|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },
                    'as|o': { action_: 'o=' },
                    'q|d|D|qd|qD|dq': { action_: ['output', 'o='], nextState: 'o' }
                },
                '\\bond{(...)}': {
                    '*': { action_: [{ type_: 'output', option: 2 }, 'bond'], nextState: "3" }
                },
                '\\frac{(...)}': {
                    '*': { action_: [{ type_: 'output', option: 1 }, 'frac-output'], nextState: '3' }
                },
                '\\overset{(...)}': {
                    '*': { action_: [{ type_: 'output', option: 2 }, 'overset-output'], nextState: '3' }
                },
                '\\underset{(...)}': {
                    '*': { action_: [{ type_: 'output', option: 2 }, 'underset-output'], nextState: '3' }
                },
                '\\underbrace{(...)}': {
                    '*': { action_: [{ type_: 'output', option: 2 }, 'underbrace-output'], nextState: '3' }
                },
                '\\color{(...)}{(...)}': {
                    '*': { action_: [{ type_: 'output', option: 2 }, 'color-output'], nextState: '3' }
                },
                '\\color{(...)}': {
                    '*': { action_: [{ type_: 'output', option: 2 }, 'color0-output'] }
                },
                '\\ce{(...)}': {
                    '*': { action_: [{ type_: 'output', option: 2 }, 'ce'], nextState: '3' }
                },
                '\\,': {
                    '*': { action_: [{ type_: 'output', option: 1 }, 'copy'], nextState: '1' }
                },
                '\\pu{(...)}': {
                    '*': { action_: ['output', { type_: 'write', option: "{" }, 'pu', { type_: 'write', option: "}" }], nextState: '3' }
                },
                '\\x{}{}|\\x{}|\\x': {
                    '0|1|2|3|a|as|b|p|bp|o|c0': { action_: ['o=', 'output'], nextState: '3' },
                    '*': { action_: ['output', 'o=', 'output'], nextState: '3' }
                },
                'others': {
                    '*': { action_: [{ type_: 'output', option: 1 }, 'copy'], nextState: '3' }
                },
                'else2': {
                    'a': { action_: 'a to o', nextState: 'o', revisit: true },
                    'as': { action_: ['output', 'sb=true'], nextState: '1', revisit: true },
                    'r|rt|rd|rdt|rdq': { action_: ['output'], nextState: '0', revisit: true },
                    '*': { action_: ['output', 'copy'], nextState: '3' }
                }
            }),
            actions: {
                'o after d': function (buffer, m) {
                    var ret;
                    if ((buffer.d || "").match(/^[1-9][0-9]*$/)) {
                        var tmp = buffer.d;
                        buffer.d = undefined;
                        ret = this['output'](buffer);
                        ret.push({ type_: 'tinySkip' });
                        buffer.b = tmp;
                    }
                    else {
                        ret = this['output'](buffer);
                    }
                    _mhchemParser.actions['o='](buffer, m);
                    return ret;
                },
                'd= kv': function (buffer, m) {
                    buffer.d = m;
                    buffer.dType = 'kv';
                    return undefined;
                },
                'charge or bond': function (buffer, m) {
                    if (buffer['beginsWithBond']) {
                        var ret = [];
                        _mhchemParser.concatArray(ret, this['output'](buffer));
                        _mhchemParser.concatArray(ret, _mhchemParser.actions['bond'](buffer, m, "-"));
                        return ret;
                    }
                    else {
                        buffer.d = m;
                        return undefined;
                    }
                },
                '- after o/d': function (buffer, m, isAfterD) {
                    var c1 = _mhchemParser.patterns.match_('orbital', buffer.o || "");
                    var c2 = _mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || "");
                    var c3 = _mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || "");
                    var c4 = _mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || "");
                    var hyphenFollows = m === "-" && (c1 && c1.remainder === "" || c2 || c3 || c4);
                    if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {
                        buffer.o = '$' + buffer.o + '$';
                    }
                    var ret = [];
                    if (hyphenFollows) {
                        _mhchemParser.concatArray(ret, this['output'](buffer));
                        ret.push({ type_: 'hyphen' });
                    }
                    else {
                        c1 = _mhchemParser.patterns.match_('digits', buffer.d || "");
                        if (isAfterD && c1 && c1.remainder === '') {
                            _mhchemParser.concatArray(ret, _mhchemParser.actions['d='](buffer, m));
                            _mhchemParser.concatArray(ret, this['output'](buffer));
                        }
                        else {
                            _mhchemParser.concatArray(ret, this['output'](buffer));
                            _mhchemParser.concatArray(ret, _mhchemParser.actions['bond'](buffer, m, "-"));
                        }
                    }
                    return ret;
                },
                'a to o': function (buffer) {
                    buffer.o = buffer.a;
                    buffer.a = undefined;
                    return undefined;
                },
                'sb=true': function (buffer) { buffer.sb = true; return undefined; },
                'sb=false': function (buffer) { buffer.sb = false; return undefined; },
                'beginsWithBond=true': function (buffer) { buffer['beginsWithBond'] = true; return undefined; },
                'beginsWithBond=false': function (buffer) { buffer['beginsWithBond'] = false; return undefined; },
                'parenthesisLevel++': function (buffer) { buffer['parenthesisLevel']++; return undefined; },
                'parenthesisLevel--': function (buffer) { buffer['parenthesisLevel']--; return undefined; },
                'state of aggregation': function (_buffer, m) {
                    return { type_: 'state of aggregation', p1: _mhchemParser.go(m, 'o') };
                },
                'comma': function (buffer, m) {
                    var a = m.replace(/\s*$/, '');
                    var withSpace = (a !== m);
                    if (withSpace && buffer['parenthesisLevel'] === 0) {
                        return { type_: 'comma enumeration L', p1: a };
                    }
                    else {
                        return { type_: 'comma enumeration M', p1: a };
                    }
                },
                'output': function (buffer, _m, entityFollows) {
                    var ret;
                    if (!buffer.r) {
                        ret = [];
                        if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {
                        }
                        else {
                            if (buffer.sb) {
                                ret.push({ type_: 'entitySkip' });
                            }
                            if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows !== 2) {
                                buffer.o = buffer.a;
                                buffer.a = undefined;
                            }
                            else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {
                                buffer.o = buffer.a;
                                buffer.d = buffer.b;
                                buffer.q = buffer.p;
                                buffer.a = buffer.b = buffer.p = undefined;
                            }
                            else {
                                if (buffer.o && buffer.dType === 'kv' && _mhchemParser.patterns.match_('d-oxidation$', buffer.d || "")) {
                                    buffer.dType = 'oxidation';
                                }
                                else if (buffer.o && buffer.dType === 'kv' && !buffer.q) {
                                    buffer.dType = undefined;
                                }
                            }
                            ret.push({
                                type_: 'chemfive',
                                a: _mhchemParser.go(buffer.a, 'a'),
                                b: _mhchemParser.go(buffer.b, 'bd'),
                                p: _mhchemParser.go(buffer.p, 'pq'),
                                o: _mhchemParser.go(buffer.o, 'o'),
                                q: _mhchemParser.go(buffer.q, 'pq'),
                                d: _mhchemParser.go(buffer.d, (buffer.dType === 'oxidation' ? 'oxidation' : 'bd')),
                                dType: buffer.dType
                            });
                        }
                    }
                    else {
                        var rd = void 0;
                        if (buffer.rdt === 'M') {
                            rd = _mhchemParser.go(buffer.rd, 'tex-math');
                        }
                        else if (buffer.rdt === 'T') {
                            rd = [{ type_: 'text', p1: buffer.rd || "" }];
                        }
                        else {
                            rd = _mhchemParser.go(buffer.rd, 'ce');
                        }
                        var rq = void 0;
                        if (buffer.rqt === 'M') {
                            rq = _mhchemParser.go(buffer.rq, 'tex-math');
                        }
                        else if (buffer.rqt === 'T') {
                            rq = [{ type_: 'text', p1: buffer.rq || "" }];
                        }
                        else {
                            rq = _mhchemParser.go(buffer.rq, 'ce');
                        }
                        ret = {
                            type_: 'arrow',
                            r: buffer.r,
                            rd: rd,
                            rq: rq
                        };
                    }
                    for (var p in buffer) {
                        if (p !== 'parenthesisLevel' && p !== 'beginsWithBond') {
                            delete buffer[p];
                        }
                    }
                    return ret;
                },
                'oxidation-output': function (_buffer, m) {
                    var ret = ["{"];
                    _mhchemParser.concatArray(ret, _mhchemParser.go(m, 'oxidation'));
                    ret.push("}");
                    return ret;
                },
                'frac-output': function (_buffer, m) {
                    return { type_: 'frac-ce', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };
                },
                'overset-output': function (_buffer, m) {
                    return { type_: 'overset', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };
                },
                'underset-output': function (_buffer, m) {
                    return { type_: 'underset', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };
                },
                'underbrace-output': function (_buffer, m) {
                    return { type_: 'underbrace', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };
                },
                'color-output': function (_buffer, m) {
                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'ce') };
                },
                'r=': function (buffer, m) { buffer.r = m; return undefined; },
                'rdt=': function (buffer, m) { buffer.rdt = m; return undefined; },
                'rd=': function (buffer, m) { buffer.rd = m; return undefined; },
                'rqt=': function (buffer, m) { buffer.rqt = m; return undefined; },
                'rq=': function (buffer, m) { buffer.rq = m; return undefined; },
                'operator': function (_buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; }
            }
        },
        'a': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: [] }
                },
                '1/2$': {
                    '0': { action_: '1/2' }
                },
                'else': {
                    '0': { action_: [], nextState: '1', revisit: true }
                },
                '${(...)}$__$(...)$': {
                    '*': { action_: 'tex-math tight', nextState: '1' }
                },
                ',': {
                    '*': { action_: { type_: 'insert', option: 'commaDecimal' } }
                },
                'else2': {
                    '*': { action_: 'copy' }
                }
            }),
            actions: {}
        },
        'o': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: [] }
                },
                '1/2$': {
                    '0': { action_: '1/2' }
                },
                'else': {
                    '0': { action_: [], nextState: '1', revisit: true }
                },
                'letters': {
                    '*': { action_: 'rm' }
                },
                '\\ca': {
                    '*': { action_: { type_: 'insert', option: 'circa' } }
                },
                '\\pu{(...)}': {
                    '*': { action_: [{ type_: 'write', option: "{" }, 'pu', { type_: 'write', option: "}" }] }
                },
                '\\x{}{}|\\x{}|\\x': {
                    '*': { action_: 'copy' }
                },
                '${(...)}$__$(...)$': {
                    '*': { action_: 'tex-math' }
                },
                '{(...)}': {
                    '*': { action_: [{ type_: 'write', option: "{" }, 'text', { type_: 'write', option: "}" }] }
                },
                'else2': {
                    '*': { action_: 'copy' }
                }
            }),
            actions: {}
        },
        'text': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: 'output' }
                },
                '{...}': {
                    '*': { action_: 'text=' }
                },
                '${(...)}$__$(...)$': {
                    '*': { action_: 'tex-math' }
                },
                '\\greek': {
                    '*': { action_: ['output', 'rm'] }
                },
                '\\pu{(...)}': {
                    '*': { action_: ['output', { type_: 'write', option: "{" }, 'pu', { type_: 'write', option: "}" }] }
                },
                '\\,|\\x{}{}|\\x{}|\\x': {
                    '*': { action_: ['output', 'copy'] }
                },
                'else': {
                    '*': { action_: 'text=' }
                }
            }),
            actions: {
                'output': function (buffer) {
                    if (buffer.text_) {
                        var ret = { type_: 'text', p1: buffer.text_ };
                        for (var p in buffer) {
                            delete buffer[p];
                        }
                        return ret;
                    }
                    return undefined;
                }
            }
        },
        'pq': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: [] }
                },
                'state of aggregation $': {
                    '*': { action_: 'state of aggregation' }
                },
                'i$': {
                    '0': { action_: [], nextState: '!f', revisit: true }
                },
                '(KV letters),': {
                    '0': { action_: 'rm', nextState: '0' }
                },
                'formula$': {
                    '0': { action_: [], nextState: 'f', revisit: true }
                },
                '1/2$': {
                    '0': { action_: '1/2' }
                },
                'else': {
                    '0': { action_: [], nextState: '!f', revisit: true }
                },
                '${(...)}$__$(...)$': {
                    '*': { action_: 'tex-math' }
                },
                '{(...)}': {
                    '*': { action_: 'text' }
                },
                'a-z': {
                    'f': { action_: 'tex-math' }
                },
                'letters': {
                    '*': { action_: 'rm' }
                },
                '-9.,9': {
                    '*': { action_: '9,9' }
                },
                ',': {
                    '*': { action_: { type_: 'insert+p1', option: 'comma enumeration S' } }
                },
                '\\color{(...)}{(...)}': {
                    '*': { action_: 'color-output' }
                },
                '\\color{(...)}': {
                    '*': { action_: 'color0-output' }
                },
                '\\ce{(...)}': {
                    '*': { action_: 'ce' }
                },
                '\\pu{(...)}': {
                    '*': { action_: [{ type_: 'write', option: "{" }, 'pu', { type_: 'write', option: "}" }] }
                },
                '\\,|\\x{}{}|\\x{}|\\x': {
                    '*': { action_: 'copy' }
                },
                'else2': {
                    '*': { action_: 'copy' }
                }
            }),
            actions: {
                'state of aggregation': function (_buffer, m) {
                    return { type_: 'state of aggregation subscript', p1: _mhchemParser.go(m, 'o') };
                },
                'color-output': function (_buffer, m) {
                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'pq') };
                }
            }
        },
        'bd': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: [] }
                },
                'x$': {
                    '0': { action_: [], nextState: '!f', revisit: true }
                },
                'formula$': {
                    '0': { action_: [], nextState: 'f', revisit: true }
                },
                'else': {
                    '0': { action_: [], nextState: '!f', revisit: true }
                },
                '-9.,9 no missing 0': {
                    '*': { action_: '9,9' }
                },
                '.': {
                    '*': { action_: { type_: 'insert', option: 'electron dot' } }
                },
                'a-z': {
                    'f': { action_: 'tex-math' }
                },
                'x': {
                    '*': { action_: { type_: 'insert', option: 'KV x' } }
                },
                'letters': {
                    '*': { action_: 'rm' }
                },
                '\'': {
                    '*': { action_: { type_: 'insert', option: 'prime' } }
                },
                '${(...)}$__$(...)$': {
                    '*': { action_: 'tex-math' }
                },
                '{(...)}': {
                    '*': { action_: 'text' }
                },
                '\\color{(...)}{(...)}': {
                    '*': { action_: 'color-output' }
                },
                '\\color{(...)}': {
                    '*': { action_: 'color0-output' }
                },
                '\\ce{(...)}': {
                    '*': { action_: 'ce' }
                },
                '\\pu{(...)}': {
                    '*': { action_: [{ type_: 'write', option: "{" }, 'pu', { type_: 'write', option: "}" }] }
                },
                '\\,|\\x{}{}|\\x{}|\\x': {
                    '*': { action_: 'copy' }
                },
                'else2': {
                    '*': { action_: 'copy' }
                }
            }),
            actions: {
                'color-output': function (_buffer, m) {
                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'bd') };
                }
            }
        },
        'oxidation': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: [] }
                },
                'roman numeral': {
                    '*': { action_: 'roman-numeral' }
                },
                '${(...)}$__$(...)$': {
                    '*': { action_: 'tex-math' }
                },
                'else': {
                    '*': { action_: 'copy' }
                }
            }),
            actions: {
                'roman-numeral': function (_buffer, m) { return { type_: 'roman numeral', p1: m }; }
            }
        },
        'tex-math': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: 'output' }
                },
                '\\ce{(...)}': {
                    '*': { action_: ['output', 'ce'] }
                },
                '\\pu{(...)}': {
                    '*': { action_: ['output', { type_: 'write', option: "{" }, 'pu', { type_: 'write', option: "}" }] }
                },
                '{...}|\\,|\\x{}{}|\\x{}|\\x': {
                    '*': { action_: 'o=' }
                },
                'else': {
                    '*': { action_: 'o=' }
                }
            }),
            actions: {
                'output': function (buffer) {
                    if (buffer.o) {
                        var ret = { type_: 'tex-math', p1: buffer.o };
                        for (var p in buffer) {
                            delete buffer[p];
                        }
                        return ret;
                    }
                    return undefined;
                }
            }
        },
        'tex-math tight': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: 'output' }
                },
                '\\ce{(...)}': {
                    '*': { action_: ['output', 'ce'] }
                },
                '\\pu{(...)}': {
                    '*': { action_: ['output', { type_: 'write', option: "{" }, 'pu', { type_: 'write', option: "}" }] }
                },
                '{...}|\\,|\\x{}{}|\\x{}|\\x': {
                    '*': { action_: 'o=' }
                },
                '-|+': {
                    '*': { action_: 'tight operator' }
                },
                'else': {
                    '*': { action_: 'o=' }
                }
            }),
            actions: {
                'tight operator': function (buffer, m) { buffer.o = (buffer.o || "") + "{" + m + "}"; return undefined; },
                'output': function (buffer) {
                    if (buffer.o) {
                        var ret = { type_: 'tex-math', p1: buffer.o };
                        for (var p in buffer) {
                            delete buffer[p];
                        }
                        return ret;
                    }
                    return undefined;
                }
            }
        },
        '9,9': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: [] }
                },
                ',': {
                    '*': { action_: 'comma' }
                },
                'else': {
                    '*': { action_: 'copy' }
                }
            }),
            actions: {
                'comma': function () { return { type_: 'commaDecimal' }; }
            }
        },
        'pu': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: 'output' }
                },
                'space$': {
                    '*': { action_: ['output', 'space'] }
                },
                '{[(|)]}': {
                    '0|a': { action_: 'copy' }
                },
                '(-)(9)^(-9)': {
                    '0': { action_: 'number^', nextState: 'a' }
                },
                '(-)(9.,9)(e)(99)': {
                    '0': { action_: 'enumber', nextState: 'a' }
                },
                'space': {
                    '0|a': { action_: [] }
                },
                'pm-operator': {
                    '0|a': { action_: { type_: 'operator', option: '\\pm' }, nextState: '0' }
                },
                'operator': {
                    '0|a': { action_: 'copy', nextState: '0' }
                },
                '//': {
                    'd': { action_: 'o=', nextState: '/' }
                },
                '/': {
                    'd': { action_: 'o=', nextState: '/' }
                },
                '{...}|else': {
                    '0|d': { action_: 'd=', nextState: 'd' },
                    'a': { action_: ['space', 'd='], nextState: 'd' },
                    '/|q': { action_: 'q=', nextState: 'q' }
                }
            }),
            actions: {
                'enumber': function (_buffer, m) {
                    var ret = [];
                    if (m[0] === "+-" || m[0] === "+/-") {
                        ret.push("\\pm ");
                    }
                    else if (m[0]) {
                        ret.push(m[0]);
                    }
                    if (m[1]) {
                        _mhchemParser.concatArray(ret, _mhchemParser.go(m[1], 'pu-9,9'));
                        if (m[2]) {
                            if (m[2].match(/[,.]/)) {
                                _mhchemParser.concatArray(ret, _mhchemParser.go(m[2], 'pu-9,9'));
                            }
                            else {
                                ret.push(m[2]);
                            }
                        }
                        if (m[3] || m[4]) {
                            if (m[3] === "e" || m[4] === "*") {
                                ret.push({ type_: 'cdot' });
                            }
                            else {
                                ret.push({ type_: 'times' });
                            }
                        }
                    }
                    if (m[5]) {
                        ret.push("10^{" + m[5] + "}");
                    }
                    return ret;
                },
                'number^': function (_buffer, m) {
                    var ret = [];
                    if (m[0] === "+-" || m[0] === "+/-") {
                        ret.push("\\pm ");
                    }
                    else if (m[0]) {
                        ret.push(m[0]);
                    }
                    _mhchemParser.concatArray(ret, _mhchemParser.go(m[1], 'pu-9,9'));
                    ret.push("^{" + m[2] + "}");
                    return ret;
                },
                'operator': function (_buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; },
                'space': function () { return { type_: 'pu-space-1' }; },
                'output': function (buffer) {
                    var ret;
                    var md = _mhchemParser.patterns.match_('{(...)}', buffer.d || "");
                    if (md && md.remainder === '') {
                        buffer.d = md.match_;
                    }
                    var mq = _mhchemParser.patterns.match_('{(...)}', buffer.q || "");
                    if (mq && mq.remainder === '') {
                        buffer.q = mq.match_;
                    }
                    if (buffer.d) {
                        buffer.d = buffer.d.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C");
                        buffer.d = buffer.d.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F");
                    }
                    if (buffer.q) {
                        buffer.q = buffer.q.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C");
                        buffer.q = buffer.q.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F");
                        var b5 = {
                            d: _mhchemParser.go(buffer.d, 'pu'),
                            q: _mhchemParser.go(buffer.q, 'pu')
                        };
                        if (buffer.o === '//') {
                            ret = { type_: 'pu-frac', p1: b5.d, p2: b5.q };
                        }
                        else {
                            ret = b5.d;
                            if (b5.d.length > 1 || b5.q.length > 1) {
                                ret.push({ type_: ' / ' });
                            }
                            else {
                                ret.push({ type_: '/' });
                            }
                            _mhchemParser.concatArray(ret, b5.q);
                        }
                    }
                    else {
                        ret = _mhchemParser.go(buffer.d, 'pu-2');
                    }
                    for (var p in buffer) {
                        delete buffer[p];
                    }
                    return ret;
                }
            }
        },
        'pu-2': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '*': { action_: 'output' }
                },
                '*': {
                    '*': { action_: ['output', 'cdot'], nextState: '0' }
                },
                '\\x': {
                    '*': { action_: 'rm=' }
                },
                'space': {
                    '*': { action_: ['output', 'space'], nextState: '0' }
                },
                '^{(...)}|^(-1)': {
                    '1': { action_: '^(-1)' }
                },
                '-9.,9': {
                    '0': { action_: 'rm=', nextState: '0' },
                    '1': { action_: '^(-1)', nextState: '0' }
                },
                '{...}|else': {
                    '*': { action_: 'rm=', nextState: '1' }
                }
            }),
            actions: {
                'cdot': function () { return { type_: 'tight cdot' }; },
                '^(-1)': function (buffer, m) { buffer.rm += "^{" + m + "}"; return undefined; },
                'space': function () { return { type_: 'pu-space-2' }; },
                'output': function (buffer) {
                    var ret = [];
                    if (buffer.rm) {
                        var mrm = _mhchemParser.patterns.match_('{(...)}', buffer.rm || "");
                        if (mrm && mrm.remainder === '') {
                            ret = _mhchemParser.go(mrm.match_, 'pu');
                        }
                        else {
                            ret = { type_: 'rm', p1: buffer.rm };
                        }
                    }
                    for (var p in buffer) {
                        delete buffer[p];
                    }
                    return ret;
                }
            }
        },
        'pu-9,9': {
            transitions: _mhchemCreateTransitions({
                'empty': {
                    '0': { action_: 'output-0' },
                    'o': { action_: 'output-o' }
                },
                ',': {
                    '0': { action_: ['output-0', 'comma'], nextState: 'o' }
                },
                '.': {
                    '0': { action_: ['output-0', 'copy'], nextState: 'o' }
                },
                'else': {
                    '*': { action_: 'text=' }
                }
            }),
            actions: {
                'comma': function () { return { type_: 'commaDecimal' }; },
                'output-0': function (buffer) {
                    var ret = [];
                    buffer.text_ = buffer.text_ || "";
                    if (buffer.text_.length > 4) {
                        var a = buffer.text_.length % 3;
                        if (a === 0) {
                            a = 3;
                        }
                        for (var i = buffer.text_.length - 3; i > 0; i -= 3) {
                            ret.push(buffer.text_.substr(i, 3));
                            ret.push({ type_: '1000 separator' });
                        }
                        ret.push(buffer.text_.substr(0, a));
                        ret.reverse();
                    }
                    else {
                        ret.push(buffer.text_);
                    }
                    for (var p in buffer) {
                        delete buffer[p];
                    }
                    return ret;
                },
                'output-o': function (buffer) {
                    var ret = [];
                    buffer.text_ = buffer.text_ || "";
                    if (buffer.text_.length > 4) {
                        var a = buffer.text_.length - 3;
                        var i = void 0;
                        for (i = 0; i < a; i += 3) {
                            ret.push(buffer.text_.substr(i, 3));
                            ret.push({ type_: '1000 separator' });
                        }
                        ret.push(buffer.text_.substr(i));
                    }
                    else {
                        ret.push(buffer.text_);
                    }
                    for (var p in buffer) {
                        delete buffer[p];
                    }
                    return ret;
                }
            }
        }
    }
};
var _mhchemTexify = {
    go: function (input, addOuterBraces) {
        if (!input) {
            return "";
        }
        var res = "";
        var cee = false;
        for (var i = 0; i < input.length; i++) {
            var inputi = input[i];
            if (typeof inputi === "string") {
                res += inputi;
            }
            else {
                res += _mhchemTexify._go2(inputi);
                if (inputi.type_ === '1st-level escape') {
                    cee = true;
                }
            }
        }
        if (addOuterBraces && !cee && res) {
            res = "{" + res + "}";
        }
        return res;
    },
    _goInner: function (input) {
        return _mhchemTexify.go(input, false);
    },
    _go2: function (buf) {
        var res;
        switch (buf.type_) {
            case 'chemfive':
                res = "";
                var b5 = {
                    a: _mhchemTexify._goInner(buf.a),
                    b: _mhchemTexify._goInner(buf.b),
                    p: _mhchemTexify._goInner(buf.p),
                    o: _mhchemTexify._goInner(buf.o),
                    q: _mhchemTexify._goInner(buf.q),
                    d: _mhchemTexify._goInner(buf.d)
                };
                if (b5.a) {
                    if (b5.a.match(/^[+\-]/)) {
                        b5.a = "{" + b5.a + "}";
                    }
                    res += b5.a + "\\,";
                }
                if (b5.b || b5.p) {
                    res += "{\\vphantom{A}}";
                    res += "^{\\hphantom{" + (b5.b || "") + "}}_{\\hphantom{" + (b5.p || "") + "}}";
                    res += "\\mkern-1.5mu";
                    res += "{\\vphantom{A}}";
                    res += "^{\\smash[t]{\\vphantom{2}}\\llap{" + (b5.b || "") + "}}";
                    res += "_{\\vphantom{2}\\llap{\\smash[t]{" + (b5.p || "") + "}}}";
                }
                if (b5.o) {
                    if (b5.o.match(/^[+\-]/)) {
                        b5.o = "{" + b5.o + "}";
                    }
                    res += b5.o;
                }
                if (buf.dType === 'kv') {
                    if (b5.d || b5.q) {
                        res += "{\\vphantom{A}}";
                    }
                    if (b5.d) {
                        res += "^{" + b5.d + "}";
                    }
                    if (b5.q) {
                        res += "_{\\smash[t]{" + b5.q + "}}";
                    }
                }
                else if (buf.dType === 'oxidation') {
                    if (b5.d) {
                        res += "{\\vphantom{A}}";
                        res += "^{" + b5.d + "}";
                    }
                    if (b5.q) {
                        res += "{\\vphantom{A}}";
                        res += "_{\\smash[t]{" + b5.q + "}}";
                    }
                }
                else {
                    if (b5.q) {
                        res += "{\\vphantom{A}}";
                        res += "_{\\smash[t]{" + b5.q + "}}";
                    }
                    if (b5.d) {
                        res += "{\\vphantom{A}}";
                        res += "^{" + b5.d + "}";
                    }
                }
                break;
            case 'rm':
                res = "\\mathrm{" + buf.p1 + "}";
                break;
            case 'text':
                if (buf.p1.match(/[\^_]/)) {
                    buf.p1 = buf.p1.replace(" ", "~").replace("-", "\\text{-}");
                    res = "\\mathrm{" + buf.p1 + "}";
                }
                else {
                    res = "\\text{" + buf.p1 + "}";
                }
                break;
            case 'roman numeral':
                res = "\\mathrm{" + buf.p1 + "}";
                break;
            case 'state of aggregation':
                res = "\\mskip2mu " + _mhchemTexify._goInner(buf.p1);
                break;
            case 'state of aggregation subscript':
                res = "\\mskip1mu " + _mhchemTexify._goInner(buf.p1);
                break;
            case 'bond':
                res = _mhchemTexify._getBond(buf.kind_);
                if (!res) {
                    throw ["MhchemErrorBond", "mhchem Error. Unknown bond type (" + buf.kind_ + ")"];
                }
                break;
            case 'frac':
                var c = "\\frac{" + buf.p1 + "}{" + buf.p2 + "}";
                res = "\\mathchoice{\\textstyle" + c + "}{" + c + "}{" + c + "}{" + c + "}";
                break;
            case 'pu-frac':
                var d = "\\frac{" + _mhchemTexify._goInner(buf.p1) + "}{" + _mhchemTexify._goInner(buf.p2) + "}";
                res = "\\mathchoice{\\textstyle" + d + "}{" + d + "}{" + d + "}{" + d + "}";
                break;
            case 'tex-math':
                res = buf.p1 + " ";
                break;
            case 'frac-ce':
                res = "\\frac{" + _mhchemTexify._goInner(buf.p1) + "}{" + _mhchemTexify._goInner(buf.p2) + "}";
                break;
            case 'overset':
                res = "\\overset{" + _mhchemTexify._goInner(buf.p1) + "}{" + _mhchemTexify._goInner(buf.p2) + "}";
                break;
            case 'underset':
                res = "\\underset{" + _mhchemTexify._goInner(buf.p1) + "}{" + _mhchemTexify._goInner(buf.p2) + "}";
                break;
            case 'underbrace':
                res = "\\underbrace{" + _mhchemTexify._goInner(buf.p1) + "}_{" + _mhchemTexify._goInner(buf.p2) + "}";
                break;
            case 'color':
                res = "{\\color{" + buf.color1 + "}{" + _mhchemTexify._goInner(buf.color2) + "}}";
                break;
            case 'color0':
                res = "\\color{" + buf.color + "}";
                break;
            case 'arrow':
                var b6 = {
                    rd: _mhchemTexify._goInner(buf.rd),
                    rq: _mhchemTexify._goInner(buf.rq)
                };
                var arrow = _mhchemTexify._getArrow(buf.r);
                if (b6.rd || b6.rq) {
                    if (buf.r === "<=>" || buf.r === "<=>>" || buf.r === "<<=>" || buf.r === "<-->") {
                        arrow = "\\long" + arrow;
                        if (b6.rd) {
                            arrow = "\\overset{" + b6.rd + "}{" + arrow + "}";
                        }
                        if (b6.rq) {
                            if (buf.r === "<-->") {
                                arrow = "\\underset{\\lower2mu{" + b6.rq + "}}{" + arrow + "}";
                            }
                            else {
                                arrow = "\\underset{\\lower6mu{" + b6.rq + "}}{" + arrow + "}";
                            }
                        }
                        arrow = " {}\\mathrel{" + arrow + "}{} ";
                    }
                    else {
                        if (b6.rq) {
                            arrow += "[{" + b6.rq + "}]";
                        }
                        arrow += "{" + b6.rd + "}";
                        arrow = " {}\\mathrel{\\x" + arrow + "}{} ";
                    }
                }
                else {
                    arrow = " {}\\mathrel{\\long" + arrow + "}{} ";
                }
                res = arrow;
                break;
            case 'operator':
                res = _mhchemTexify._getOperator(buf.kind_);
                break;
            case '1st-level escape':
                res = buf.p1 + " ";
                break;
            case 'space':
                res = " ";
                break;
            case 'tinySkip':
                res = '\\mkern2mu';
                break;
            case 'entitySkip':
                res = "~";
                break;
            case 'pu-space-1':
                res = "~";
                break;
            case 'pu-space-2':
                res = "\\mkern3mu ";
                break;
            case '1000 separator':
                res = "\\mkern2mu ";
                break;
            case 'commaDecimal':
                res = "{,}";
                break;
            case 'comma enumeration L':
                res = "{" + buf.p1 + "}\\mkern6mu ";
                break;
            case 'comma enumeration M':
                res = "{" + buf.p1 + "}\\mkern3mu ";
                break;
            case 'comma enumeration S':
                res = "{" + buf.p1 + "}\\mkern1mu ";
                break;
            case 'hyphen':
                res = "\\text{-}";
                break;
            case 'addition compound':
                res = "\\,{\\cdot}\\,";
                break;
            case 'electron dot':
                res = "\\mkern1mu \\bullet\\mkern1mu ";
                break;
            case 'KV x':
                res = "{\\times}";
                break;
            case 'prime':
                res = "\\prime ";
                break;
            case 'cdot':
                res = "\\cdot ";
                break;
            case 'tight cdot':
                res = "\\mkern1mu{\\cdot}\\mkern1mu ";
                break;
            case 'times':
                res = "\\times ";
                break;
            case 'circa':
                res = "{\\sim}";
                break;
            case '^':
                res = "uparrow";
                break;
            case 'v':
                res = "downarrow";
                break;
            case 'ellipsis':
                res = "\\ldots ";
                break;
            case '/':
                res = "/";
                break;
            case ' / ':
                res = "\\,/\\,";
                break;
            default:
                assertNever(buf);
                throw ["MhchemBugT", "mhchem bug T. Please report."];
        }
        return res;
    },
    _getArrow: function (a) {
        switch (a) {
            case "->": return "rightarrow";
            case "\u2192": return "rightarrow";
            case "\u27F6": return "rightarrow";
            case "<-": return "leftarrow";
            case "<->": return "leftrightarrow";
            case "<-->": return "leftrightarrows";
            case "<=>": return "rightleftharpoons";
            case "\u21CC": return "rightleftharpoons";
            case "<=>>": return "Rightleftharpoons";
            case "<<=>": return "Leftrightharpoons";
            default:
                assertNever(a);
                throw ["MhchemBugT", "mhchem bug T. Please report."];
        }
    },
    _getBond: function (a) {
        switch (a) {
            case "-": return "{-}";
            case "1": return "{-}";
            case "=": return "{=}";
            case "2": return "{=}";
            case "#": return "{\\equiv}";
            case "3": return "{\\equiv}";
            case "~": return "{\\tripledash}";
            case "~-": return "{\\rlap{\\lower.1em{-}}\\raise.1em{\\tripledash}}";
            case "~=": return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{\\tripledash}}-}";
            case "~--": return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{\\tripledash}}-}";
            case "-~-": return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{-}}\\tripledash}";
            case "...": return "{{\\cdot}{\\cdot}{\\cdot}}";
            case "....": return "{{\\cdot}{\\cdot}{\\cdot}{\\cdot}}";
            case "->": return "{\\rightarrow}";
            case "<-": return "{\\leftarrow}";
            case "<": return "{<}";
            case ">": return "{>}";
            default:
                assertNever(a);
                throw ["MhchemBugT", "mhchem bug T. Please report."];
        }
    },
    _getOperator: function (a) {
        switch (a) {
            case "+": return " {}+{} ";
            case "-": return " {}-{} ";
            case "=": return " {}={} ";
            case "<": return " {}<{} ";
            case ">": return " {}>{} ";
            case "<<": return " {}\\ll{} ";
            case ">>": return " {}\\gg{} ";
            case "\\pm": return " {}\\pm{} ";
            case "\\approx": return " {}\\approx{} ";
            case "$\\approx$": return " {}\\approx{} ";
            case "v": return " \\downarrow{} ";
            case "(v)": return " \\downarrow{} ";
            case "^": return " \\uparrow{} ";
            case "(^)": return " \\uparrow{} ";
            default:
                assertNever(a);
                throw ["MhchemBugT", "mhchem bug T. Please report."];
        }
    }
};
function assertNever(a) { }


/***/ }),

/***/ 9329:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractEntry = void 0;
var menu_element_js_1 = __webpack_require__(9328);
var html_classes_js_1 = __webpack_require__(2165);
var AbstractEntry = (function (_super) {
    __extends(AbstractEntry, _super);
    function AbstractEntry(_menu, _type) {
        var _this = _super.call(this) || this;
        _this._menu = _menu;
        _this._type = _type;
        _this.className = html_classes_js_1.HtmlClasses['MENUITEM'];
        _this.role = 'menuitem';
        _this.hidden = false;
        return _this;
    }
    Object.defineProperty(AbstractEntry.prototype, "menu", {
        get: function () {
            return this._menu;
        },
        set: function (menu) {
            this._menu = menu;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractEntry.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: false,
        configurable: true
    });
    AbstractEntry.prototype.hide = function () {
        this.hidden = true;
        this.menu.generateMenu();
    };
    AbstractEntry.prototype.show = function () {
        this.hidden = false;
        this.menu.generateMenu();
    };
    AbstractEntry.prototype.isHidden = function () {
        return this.hidden;
    };
    return AbstractEntry;
}(menu_element_js_1.MenuElement));
exports.AbstractEntry = AbstractEntry;
//# sourceMappingURL=abstract_entry.js.map

/***/ }),

/***/ 1340:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractItem = void 0;
var abstract_entry_js_1 = __webpack_require__(9329);
var menu_util_js_1 = __webpack_require__(2556);
var html_classes_js_1 = __webpack_require__(2165);
var AbstractItem = (function (_super) {
    __extends(AbstractItem, _super);
    function AbstractItem(menu, type, _content, id) {
        var _this = _super.call(this, menu, type) || this;
        _this._content = _content;
        _this.disabled = false;
        _this.callbacks = [];
        _this._id = id ? id : _content;
        return _this;
    }
    Object.defineProperty(AbstractItem.prototype, "content", {
        get: function () {
            return this._content;
        },
        set: function (content) {
            this._content = content;
            this.generateHtml();
            if (this.menu) {
                this.menu.generateHtml();
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractItem.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: false,
        configurable: true
    });
    AbstractItem.prototype.press = function () {
        if (!this.disabled) {
            this.executeAction();
            this.executeCallbacks_();
        }
    };
    AbstractItem.prototype.executeAction = function () { };
    AbstractItem.prototype.registerCallback = function (func) {
        if (this.callbacks.indexOf(func) === -1) {
            this.callbacks.push(func);
        }
    };
    AbstractItem.prototype.unregisterCallback = function (func) {
        var index = this.callbacks.indexOf(func);
        if (index !== -1) {
            this.callbacks.splice(index, 1);
        }
    };
    AbstractItem.prototype.mousedown = function (event) {
        this.press();
        this.stop(event);
    };
    AbstractItem.prototype.mouseover = function (event) {
        this.focus();
        this.stop(event);
    };
    AbstractItem.prototype.mouseout = function (event) {
        this.deactivate();
        this.stop(event);
    };
    AbstractItem.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        var html = this.html;
        html.setAttribute('aria-disabled', 'false');
        html.textContent = this.content;
    };
    AbstractItem.prototype.activate = function () {
        if (!this.disabled) {
            this.html.classList.add(html_classes_js_1.HtmlClasses['MENUACTIVE']);
        }
    };
    AbstractItem.prototype.deactivate = function () {
        this.html.classList.remove(html_classes_js_1.HtmlClasses['MENUACTIVE']);
    };
    AbstractItem.prototype.focus = function () {
        this.menu.focused = this;
        _super.prototype.focus.call(this);
        this.activate();
    };
    AbstractItem.prototype.unfocus = function () {
        this.deactivate();
        _super.prototype.unfocus.call(this);
    };
    AbstractItem.prototype.escape = function (_event) {
        menu_util_js_1.MenuUtil.close(this);
    };
    AbstractItem.prototype.up = function (event) {
        this.menu.up(event);
    };
    AbstractItem.prototype.down = function (event) {
        this.menu.down(event);
    };
    AbstractItem.prototype.left = function (event) {
        this.menu.left(event);
    };
    AbstractItem.prototype.right = function (event) {
        this.menu.right(event);
    };
    AbstractItem.prototype.space = function (_event) {
        this.press();
    };
    AbstractItem.prototype.disable = function () {
        this.disabled = true;
        var html = this.html;
        html.classList.add(html_classes_js_1.HtmlClasses['MENUDISABLED']);
        html.setAttribute('aria-disabled', 'true');
    };
    AbstractItem.prototype.enable = function () {
        this.disabled = false;
        var html = this.html;
        html.classList.remove(html_classes_js_1.HtmlClasses['MENUDISABLED']);
        html.removeAttribute('aria-disabled');
    };
    AbstractItem.prototype.executeCallbacks_ = function () {
        var e_1, _a;
        try {
            for (var _b = __values(this.callbacks), _c = _b.next(); !_c.done; _c = _b.next()) {
                var func = _c.value;
                try {
                    func(this);
                }
                catch (e) {
                    menu_util_js_1.MenuUtil.error(e, 'Callback for menu entry ' + this.id +
                        ' failed.');
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    return AbstractItem;
}(abstract_entry_js_1.AbstractEntry));
exports.AbstractItem = AbstractItem;
//# sourceMappingURL=abstract_item.js.map

/***/ }),

/***/ 1484:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractMenu = void 0;
var abstract_postable_js_1 = __webpack_require__(8372);
var abstract_item_js_1 = __webpack_require__(1340);
var html_classes_js_1 = __webpack_require__(2165);
var item_submenu_js_1 = __webpack_require__(6186);
var AbstractMenu = (function (_super) {
    __extends(AbstractMenu, _super);
    function AbstractMenu() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.className = html_classes_js_1.HtmlClasses['CONTEXTMENU'];
        _this.role = 'menu';
        _this._items = [];
        _this._baseMenu = null;
        return _this;
    }
    Object.defineProperty(AbstractMenu.prototype, "baseMenu", {
        get: function () {
            return this._baseMenu;
        },
        set: function (menu) {
            this._baseMenu = menu;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMenu.prototype, "items", {
        get: function () {
            return this._items;
        },
        set: function (items) {
            this._items = items;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMenu.prototype, "pool", {
        get: function () {
            return this.variablePool;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AbstractMenu.prototype, "focused", {
        get: function () {
            return this._focused;
        },
        set: function (item) {
            if (this._focused === item) {
                return;
            }
            if (!this._focused) {
                this.unfocus();
            }
            var old = this._focused;
            this._focused = item;
            if (old) {
                old.unfocus();
            }
        },
        enumerable: false,
        configurable: true
    });
    AbstractMenu.prototype.up = function (_event) {
        var items = this.items.filter(function (x) { return (x instanceof abstract_item_js_1.AbstractItem) && (!x.isHidden()); });
        if (items.length === 0) {
            return;
        }
        if (!this.focused) {
            items[items.length - 1].focus();
            return;
        }
        var index = items.indexOf(this.focused);
        if (index === -1) {
            return;
        }
        index = index ? --index : items.length - 1;
        items[index].focus();
    };
    AbstractMenu.prototype.down = function (_event) {
        var items = this.items.filter(function (x) { return (x instanceof abstract_item_js_1.AbstractItem) && (!x.isHidden()); });
        if (items.length === 0) {
            return;
        }
        if (!this.focused) {
            items[0].focus();
            return;
        }
        var index = items.indexOf(this.focused);
        if (index === -1) {
            return;
        }
        index++;
        index = (index === items.length) ? 0 : index;
        items[index].focus();
    };
    AbstractMenu.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        this.generateMenu();
    };
    AbstractMenu.prototype.generateMenu = function () {
        var e_1, _a;
        var html = this.html;
        html.classList.add(html_classes_js_1.HtmlClasses['MENU']);
        try {
            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (!item.isHidden()) {
                    html.appendChild(item.html);
                    continue;
                }
                var itemHtml = item.html;
                if (itemHtml.parentNode) {
                    itemHtml.parentNode.removeChild(itemHtml);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    AbstractMenu.prototype.post = function (x, y) {
        this.variablePool.update();
        _super.prototype.post.call(this, x, y);
    };
    AbstractMenu.prototype.unpostSubmenus = function () {
        var e_2, _a;
        var submenus = this.items.filter(function (x) { return x instanceof item_submenu_js_1.Submenu; });
        try {
            for (var submenus_1 = __values(submenus), submenus_1_1 = submenus_1.next(); !submenus_1_1.done; submenus_1_1 = submenus_1.next()) {
                var submenu = submenus_1_1.value;
                submenu.submenu.unpost();
                if (submenu !== this.focused) {
                    submenu.unfocus();
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (submenus_1_1 && !submenus_1_1.done && (_a = submenus_1.return)) _a.call(submenus_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    AbstractMenu.prototype.unpost = function () {
        _super.prototype.unpost.call(this);
        this.unpostSubmenus();
        this.focused = null;
    };
    AbstractMenu.prototype.find = function (id) {
        var e_3, _a;
        try {
            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (item.type === 'rule') {
                    continue;
                }
                if (item.id === id) {
                    return item;
                }
                if (item.type === 'submenu') {
                    var result = item.submenu.find(id);
                    if (result) {
                        return result;
                    }
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return null;
    };
    return AbstractMenu;
}(abstract_postable_js_1.AbstractPostable));
exports.AbstractMenu = AbstractMenu;
//# sourceMappingURL=abstract_menu.js.map

/***/ }),

/***/ 2868:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractNavigatable = void 0;
var key_navigatable_js_1 = __webpack_require__(3205);
var mouse_navigatable_js_1 = __webpack_require__(8853);
var AbstractNavigatable = (function () {
    function AbstractNavigatable() {
        this.bubble = false;
    }
    AbstractNavigatable.prototype.bubbleKey = function () {
        this.bubble = true;
    };
    AbstractNavigatable.prototype.keydown = function (event) {
        switch (event.keyCode) {
            case key_navigatable_js_1.KEY.ESCAPE:
                this.escape(event);
                break;
            case key_navigatable_js_1.KEY.RIGHT:
                this.right(event);
                break;
            case key_navigatable_js_1.KEY.LEFT:
                this.left(event);
                break;
            case key_navigatable_js_1.KEY.UP:
                this.up(event);
                break;
            case key_navigatable_js_1.KEY.DOWN:
                this.down(event);
                break;
            case key_navigatable_js_1.KEY.RETURN:
            case key_navigatable_js_1.KEY.SPACE:
                this.space(event);
                break;
            default:
                return;
        }
        this.bubble ? this.bubble = false : this.stop(event);
    };
    AbstractNavigatable.prototype.escape = function (_event) { };
    AbstractNavigatable.prototype.space = function (_event) { };
    AbstractNavigatable.prototype.left = function (_event) { };
    AbstractNavigatable.prototype.right = function (_event) { };
    AbstractNavigatable.prototype.up = function (_event) { };
    AbstractNavigatable.prototype.down = function (_event) { };
    AbstractNavigatable.prototype.stop = function (event) {
        if (event) {
            event.stopPropagation();
            event.preventDefault();
            event.cancelBubble = true;
        }
    };
    AbstractNavigatable.prototype.mousedown = function (event) {
        return this.stop(event);
    };
    AbstractNavigatable.prototype.mouseup = function (event) {
        return this.stop(event);
    };
    AbstractNavigatable.prototype.mouseover = function (event) {
        return this.stop(event);
    };
    AbstractNavigatable.prototype.mouseout = function (event) {
        return this.stop(event);
    };
    AbstractNavigatable.prototype.click = function (event) {
        return this.stop(event);
    };
    AbstractNavigatable.prototype.addEvents = function (element) {
        element.addEventListener(mouse_navigatable_js_1.MOUSE.DOWN, this.mousedown.bind(this));
        element.addEventListener(mouse_navigatable_js_1.MOUSE.UP, this.mouseup.bind(this));
        element.addEventListener(mouse_navigatable_js_1.MOUSE.OVER, this.mouseover.bind(this));
        element.addEventListener(mouse_navigatable_js_1.MOUSE.OUT, this.mouseout.bind(this));
        element.addEventListener(mouse_navigatable_js_1.MOUSE.CLICK, this.click.bind(this));
        element.addEventListener('keydown', this.keydown.bind(this));
        element.addEventListener('dragstart', this.stop.bind(this));
        element.addEventListener(mouse_navigatable_js_1.MOUSE.SELECTSTART, this.stop.bind(this));
        element.addEventListener('contextmenu', this.stop.bind(this));
        element.addEventListener(mouse_navigatable_js_1.MOUSE.DBLCLICK, this.stop.bind(this));
    };
    return AbstractNavigatable;
}());
exports.AbstractNavigatable = AbstractNavigatable;
//# sourceMappingURL=abstract_navigatable.js.map

/***/ }),

/***/ 8372:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractPostable = void 0;
var menu_element_js_1 = __webpack_require__(9328);
var AbstractPostable = (function (_super) {
    __extends(AbstractPostable, _super);
    function AbstractPostable() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.posted = false;
        return _this;
    }
    AbstractPostable.prototype.isPosted = function () {
        return this.posted;
    };
    AbstractPostable.prototype.post = function (x, y) {
        if (this.posted) {
            return;
        }
        if (typeof (x) !== 'undefined' && typeof (y) !== 'undefined') {
            this.html.setAttribute('style', 'left: ' + x + 'px; top: ' + y + 'px;');
        }
        this.display();
        this.posted = true;
    };
    AbstractPostable.prototype.unpost = function () {
        if (!this.posted) {
            return;
        }
        var html = this.html;
        if (html.parentNode) {
            html.parentNode.removeChild(html);
        }
        this.posted = false;
    };
    return AbstractPostable;
}(menu_element_js_1.MenuElement));
exports.AbstractPostable = AbstractPostable;
//# sourceMappingURL=abstract_postable.js.map

/***/ }),

/***/ 6765:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractVariableItem = void 0;
var abstract_item_js_1 = __webpack_require__(1340);
var AbstractVariableItem = (function (_super) {
    __extends(AbstractVariableItem, _super);
    function AbstractVariableItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractVariableItem.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        var html = this.html;
        if (!this.span) {
            this.generateSpan();
        }
        html.appendChild(this.span);
        this.update();
    };
    AbstractVariableItem.prototype.register = function () {
        this.variable.register(this);
    };
    AbstractVariableItem.prototype.unregister = function () {
        this.variable.unregister(this);
    };
    AbstractVariableItem.prototype.update = function () {
        this.updateAria();
        if (this.span) {
            this.updateSpan();
        }
    };
    return AbstractVariableItem;
}(abstract_item_js_1.AbstractItem));
exports.AbstractVariableItem = AbstractVariableItem;
//# sourceMappingURL=abstract_variable_item.js.map

/***/ }),

/***/ 5179:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CloseButton = void 0;
var abstract_postable_js_1 = __webpack_require__(8372);
var html_classes_js_1 = __webpack_require__(2165);
var CloseButton = (function (_super) {
    __extends(CloseButton, _super);
    function CloseButton(element) {
        var _this = _super.call(this) || this;
        _this.element = element;
        _this.className = html_classes_js_1.HtmlClasses['MENUCLOSE'];
        _this.role = 'button';
        return _this;
    }
    CloseButton.prototype.generateHtml = function () {
        var html = document.createElement('span');
        html.classList.add(this.className);
        html.setAttribute('role', this.role);
        html.setAttribute('tabindex', '0');
        var content = document.createElement('span');
        content.textContent = '\u00D7';
        html.appendChild(content);
        this.html = html;
    };
    CloseButton.prototype.display = function () { };
    CloseButton.prototype.unpost = function () {
        _super.prototype.unpost.call(this);
        this.element.unpost();
    };
    CloseButton.prototype.keydown = function (event) {
        this.bubbleKey();
        _super.prototype.keydown.call(this, event);
    };
    CloseButton.prototype.space = function (event) {
        this.unpost();
        this.stop(event);
    };
    CloseButton.prototype.mousedown = function (event) {
        this.unpost();
        this.stop(event);
    };
    return CloseButton;
}(abstract_postable_js_1.AbstractPostable));
exports.CloseButton = CloseButton;
//# sourceMappingURL=close_button.js.map

/***/ }),

/***/ 5073:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ContextMenu = void 0;
var abstract_menu_js_1 = __webpack_require__(1484);
var html_classes_js_1 = __webpack_require__(2165);
var menu_store_js_1 = __webpack_require__(1932);
var variable_pool_js_1 = __webpack_require__(2358);
var ContextMenu = (function (_super) {
    __extends(ContextMenu, _super);
    function ContextMenu(factory) {
        var _this = _super.call(this) || this;
        _this.factory = factory;
        _this.id = '';
        _this.moving = false;
        _this._store = new menu_store_js_1.MenuStore(_this);
        _this.widgets = [];
        _this.variablePool = new variable_pool_js_1.VariablePool();
        return _this;
    }
    ContextMenu.fromJson = function (factory, _a) {
        var pool = _a.pool, items = _a.items, _b = _a.id, id = _b === void 0 ? '' : _b;
        var ctxtMenu = new this(factory);
        ctxtMenu.id = id;
        var varParser = factory.get('variable');
        pool.forEach(function (x) { return varParser(factory, x, ctxtMenu.pool); });
        var itemList = factory.get('items')(factory, items, ctxtMenu);
        ctxtMenu.items = itemList;
        return ctxtMenu;
    };
    ContextMenu.prototype.generateHtml = function () {
        if (this.isPosted()) {
            this.unpost();
        }
        _super.prototype.generateHtml.call(this);
        this._frame = document.createElement('div');
        this._frame.classList.add(html_classes_js_1.HtmlClasses['MENUFRAME']);
        var styleString = 'left: 0px; top: 0px; z-index: 200; width: 100%; ' +
            'height: 100%; border: 0px; padding: 0px; margin: 0px;';
        this._frame.setAttribute('style', 'position: absolute; ' + styleString);
        var innerDiv = document.createElement('div');
        innerDiv.setAttribute('style', 'position: fixed; ' + styleString);
        this._frame.appendChild(innerDiv);
        innerDiv.addEventListener('mousedown', function (event) {
            this.unpost();
            this.unpostWidgets();
            this.stop(event);
        }.bind(this));
    };
    ContextMenu.prototype.display = function () {
        document.body.appendChild(this.frame);
        this.frame.appendChild(this.html);
        this.focus();
    };
    ContextMenu.prototype.escape = function (_event) {
        this.unpost();
        this.unpostWidgets();
    };
    ContextMenu.prototype.unpost = function () {
        _super.prototype.unpost.call(this);
        if (this.widgets.length > 0) {
            return;
        }
        this.frame.parentNode.removeChild(this.frame);
        var store = this.store;
        if (!this.moving) {
            store.insertTaborder();
        }
        store.active.focus();
    };
    ContextMenu.prototype.left = function (_event) {
        this.move_(this.store.previous());
    };
    ContextMenu.prototype.right = function (_event) {
        this.move_(this.store.next());
    };
    Object.defineProperty(ContextMenu.prototype, "frame", {
        get: function () {
            return this._frame;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ContextMenu.prototype, "store", {
        get: function () {
            return this._store;
        },
        enumerable: false,
        configurable: true
    });
    ContextMenu.prototype.post = function (numberOrEvent, isY) {
        if (typeof (isY) !== 'undefined') {
            if (!this.moving) {
                this.store.removeTaborder();
            }
            _super.prototype.post.call(this, numberOrEvent, isY);
            return;
        }
        var event = numberOrEvent;
        var node;
        if (event instanceof Event) {
            node = event.target;
            this.stop(event);
        }
        else {
            node = event;
        }
        var x;
        var y;
        if (event instanceof MouseEvent) {
            x = event.pageX, y = event.pageY;
            if (!x && !y && event.clientX) {
                x = event.clientX + document.body.scrollLeft +
                    document.documentElement.scrollLeft;
                y = event.clientY + document.body.scrollTop +
                    document.documentElement.scrollTop;
            }
        }
        if (!x && !y && node) {
            var offsetX = window.pageXOffset || document.documentElement.scrollLeft;
            var offsetY = window.pageYOffset || document.documentElement.scrollTop;
            var rect = node.getBoundingClientRect();
            x = (rect.right + rect.left) / 2 + offsetX;
            y = (rect.bottom + rect.top) / 2 + offsetY;
        }
        this.store.active = node;
        this.anchor = this.store.active;
        var menu = this.html;
        var margin = 5;
        if (x + menu.offsetWidth > document.body.offsetWidth - margin) {
            x = document.body.offsetWidth - menu.offsetWidth - margin;
        }
        this.post(x, y);
    };
    ContextMenu.prototype.registerWidget = function (widget) {
        this.widgets.push(widget);
    };
    ContextMenu.prototype.unregisterWidget = function (widget) {
        var index = this.widgets.indexOf(widget);
        if (index > -1) {
            this.widgets.splice(index, 1);
        }
        if (this.widgets.length === 0) {
            this.unpost();
        }
    };
    ContextMenu.prototype.unpostWidgets = function () {
        this.widgets.forEach(function (x) { return x.unpost(); });
    };
    ContextMenu.prototype.toJson = function () {
        return { type: '' };
    };
    ContextMenu.prototype.move_ = function (next) {
        if (this.anchor && next !== this.anchor) {
            this.moving = true;
            this.unpost();
            this.post(next);
            this.moving = false;
        }
    };
    return ContextMenu;
}(abstract_menu_js_1.AbstractMenu));
exports.ContextMenu = ContextMenu;
//# sourceMappingURL=context_menu.js.map

/***/ }),

/***/ 7309:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CssStyles = void 0;
var html_classes_js_1 = __webpack_require__(2165);
var CssStyles;
(function (CssStyles) {
    function makeClass_(name) {
        return '.' + (html_classes_js_1.HtmlClasses[name] || name);
    }
    var INFO_STYLES = {};
    INFO_STYLES[makeClass_('INFOCLOSE')] = '{' +
        '  top:.2em; right:.2em;' +
        '}',
        INFO_STYLES[makeClass_('INFOCONTENT')] = '{' +
            '  overflow:auto; text-align:left; font-size:80%;' +
            '  padding:.4em .6em; border:1px inset; margin:1em 0px;' +
            '  max-height:20em; max-width:30em; background-color:#EEEEEE;' +
            '  white-space:normal;' +
            '}',
        INFO_STYLES[makeClass_('INFO') + makeClass_('MOUSEPOST')] = '{' +
            'outline:none;' +
            '}',
        INFO_STYLES[makeClass_('INFO')] = '{' +
            '  position:fixed; left:50%; width:auto; text-align:center;' +
            '  border:3px outset; padding:1em 2em; background-color:#DDDDDD;' +
            '  color:black;' +
            '  cursor:default; font-family:message-box; font-size:120%;' +
            '  font-style:normal; text-indent:0; text-transform:none;' +
            '  line-height:normal; letter-spacing:normal; word-spacing:normal;' +
            '  word-wrap:normal; white-space:nowrap; float:none; z-index:201;' +
            '  border-radius: 15px;                     /* Opera 10.5 and IE9 */' +
            '  -webkit-border-radius:15px;               /* Safari and Chrome */' +
            '  -moz-border-radius:15px;                  /* Firefox */' +
            '  -khtml-border-radius:15px;                /* Konqueror */' +
            '  box-shadow:0px 10px 20px #808080;         /* Opera 10.5 and IE9 */' +
            '  -webkit-box-shadow:0px 10px 20px #808080; /* Safari 3 & Chrome */' +
            '  -moz-box-shadow:0px 10px 20px #808080;    /* Forefox 3.5 */' +
            '  -khtml-box-shadow:0px 10px 20px #808080;  /* Konqueror */' +
            '  filter:progid:DXImageTransform.Microsoft.dropshadow(OffX=2,' +
            ' OffY=2, Color="gray", Positive="true"); /* IE */' +
            '}';
    var MENU_STYLES = {};
    MENU_STYLES[makeClass_('MENU')] = '{' +
        '  position:absolute;' +
        '  background-color:white;' +
        '  color:black;' +
        '  width:auto; padding:5px 0px;' +
        '  border:1px solid #CCCCCC; margin:0; cursor:default;' +
        '  font: menu; text-align:left; text-indent:0; text-transform:none;' +
        '  line-height:normal; letter-spacing:normal; word-spacing:normal;' +
        '  word-wrap:normal; white-space:nowrap; float:none; z-index:201;' +
        '  border-radius: 5px;                     /* Opera 10.5 and IE9 */' +
        '  -webkit-border-radius: 5px;             /* Safari and Chrome */' +
        '  -moz-border-radius: 5px;                /* Firefox */' +
        '  -khtml-border-radius: 5px;              /* Konqueror */' +
        '  box-shadow:0px 10px 20px #808080;         /* Opera 10.5 and IE9 */' +
        '  -webkit-box-shadow:0px 10px 20px #808080; /* Safari 3 & Chrome */' +
        '  -moz-box-shadow:0px 10px 20px #808080;    /* Forefox 3.5 */' +
        '  -khtml-box-shadow:0px 10px 20px #808080;  /* Konqueror */' +
        '}',
        MENU_STYLES[makeClass_('MENUITEM')] = '{' +
            '  padding: 1px 2em;' +
            '  background:transparent;' +
            '}',
        MENU_STYLES[makeClass_('MENUARROW')] = '{' +
            '  position:absolute; right:.5em; padding-top:.25em; color:#666666;' +
            '  font-family: null; font-size: .75em' +
            '}',
        MENU_STYLES[makeClass_('MENUACTIVE') + ' ' + makeClass_('MENUARROW')] =
            '{color:white}',
        MENU_STYLES[makeClass_('MENUARROW') + makeClass_('RTL')] =
            '{left:.5em; right:auto}',
        MENU_STYLES[makeClass_('MENUCHECK')] = '{' +
            '  position:absolute; left:.7em;' +
            '  font-family: null' +
            '}',
        MENU_STYLES[makeClass_('MENUCHECK') + makeClass_('RTL')] =
            '{ right:.7em; left:auto }',
        MENU_STYLES[makeClass_('MENURADIOCHECK')] = '{' +
            '  position:absolute; left: .7em;' +
            '}',
        MENU_STYLES[makeClass_('MENURADIOCHECK') + makeClass_('RTL')] = '{' +
            '  right: .7em; left:auto' +
            '}',
        MENU_STYLES[makeClass_('MENUINPUTBOX')] = '{' +
            '  padding-left: 1em; right:.5em; color:#666666;' +
            '  font-family: null;' +
            '}',
        MENU_STYLES[makeClass_('MENUINPUTBOX') + makeClass_('RTL')] = '{' +
            '  left: .1em;' +
            '}',
        MENU_STYLES[makeClass_('MENUCOMBOBOX')] = '{' +
            '  left:.1em; padding-bottom:.5em;' +
            '}',
        MENU_STYLES[makeClass_('MENUSLIDER')] = '{' +
            '  left: .1em;' +
            '}',
        MENU_STYLES[makeClass_('SLIDERVALUE')] = '{' +
            '  position:absolute; right:.1em; padding-top:.25em; color:#333333;' +
            '  font-size: .75em' +
            '}',
        MENU_STYLES[makeClass_('SLIDERBAR')] = '{' +
            '  outline: none; background: #d3d3d3' +
            '}',
        MENU_STYLES[makeClass_('MENULABEL')] = '{' +
            '  padding: 1px 2em 3px 1.33em;' +
            '  font-style:italic' +
            '}',
        MENU_STYLES[makeClass_('MENURULE')] = '{' +
            '  border-top: 1px solid #DDDDDD;' +
            '  margin: 4px 3px;' +
            '}',
        MENU_STYLES[makeClass_('MENUDISABLED')] = '{' +
            '  color:GrayText' +
            '}',
        MENU_STYLES[makeClass_('MENUACTIVE')] = '{' +
            '  background-color: #606872;' +
            '  color: white;' +
            '}',
        MENU_STYLES[makeClass_('MENUDISABLED') + ':focus'] = '{' +
            '  background-color: #E8E8E8' +
            '}',
        MENU_STYLES[makeClass_('MENULABEL') + ':focus'] = '{' +
            '  background-color: #E8E8E8' +
            '}',
        MENU_STYLES[makeClass_('CONTEXTMENU') + ':focus'] = '{' +
            '  outline:none' +
            '}',
        MENU_STYLES[makeClass_('CONTEXTMENU') + ' ' +
            makeClass_('MENUITEM') + ':focus'] = '{' +
            '  outline:none' +
            '}',
        MENU_STYLES[makeClass_('SELECTIONMENU')] = '{' +
            '  position:relative; float:left;' +
            '  border-bottom: none;' +
            ' -webkit-box-shadow:none;' +
            ' -webkit-border-radius:0px; ' +
            '}',
        MENU_STYLES[makeClass_('SELECTIONITEM')] = '{' +
            '  padding-right: 1em;' +
            '}',
        MENU_STYLES[makeClass_('SELECTION')] = '{' +
            '  right: 40%; width:50%; ' +
            '}',
        MENU_STYLES[makeClass_('SELECTIONBOX')] = '{' +
            '  padding: 0em; max-height:20em; max-width: none;' +
            '  background-color:#FFFFFF;' +
            '}',
        MENU_STYLES[makeClass_('SELECTIONDIVIDER')] = '{' +
            '  clear: both; border-top: 2px solid #000000;' +
            '}',
        MENU_STYLES[makeClass_('MENU') + ' ' + makeClass_('MENUCLOSE')] = '{' +
            '  top:-10px; left:-10px' +
            '}';
    var CLOSE_ICON_STYLES = {};
    CLOSE_ICON_STYLES[makeClass_('MENUCLOSE')] = '{' +
        '  position:absolute;' +
        '  cursor:pointer;' +
        '  display:inline-block;' +
        '  border:2px solid #AAA;' +
        '  border-radius:18px;' +
        '  -webkit-border-radius: 18px;             /* Safari and Chrome */' +
        '  -moz-border-radius: 18px;                /* Firefox */' +
        '  -khtml-border-radius: 18px;              /* Konqueror */' +
        '  font-family: "Courier New", Courier;' +
        '  font-size:24px;' +
        '  color:#F0F0F0' +
        '}',
        CLOSE_ICON_STYLES[makeClass_('MENUCLOSE') + ' span'] = '{' +
            '  display:block; background-color:#AAA; border:1.5px solid;' +
            '  border-radius:18px;' +
            '  -webkit-border-radius: 18px;             /* Safari and Chrome */' +
            '  -moz-border-radius: 18px;                /* Firefox */' +
            '  -khtml-border-radius: 18px;              /* Konqueror */' +
            '  line-height:0;' +
            '  padding:8px 0 6px     /* may need to be browser-specific */' +
            '}',
        CLOSE_ICON_STYLES[makeClass_('MENUCLOSE') + ':hover'] = '{' +
            '  color:white!important;' +
            '  border:2px solid #CCC!important' +
            '}',
        CLOSE_ICON_STYLES[makeClass_('MENUCLOSE') + ':hover span'] = '{' +
            '  background-color:#CCC!important' +
            '}',
        CLOSE_ICON_STYLES[makeClass_('MENUCLOSE') + ':hover:focus'] = '{' +
            '  outline:none' +
            '}';
    var INFO_ADDED = false;
    var MENU_ADDED = false;
    var CLOSE_ICON_ADDED = false;
    function addMenuStyles(opt_document) {
        if (MENU_ADDED) {
            return;
        }
        addStyles_(MENU_STYLES, opt_document);
        MENU_ADDED = true;
        addCloseIconStyles_(opt_document);
    }
    CssStyles.addMenuStyles = addMenuStyles;
    function addInfoStyles(opt_document) {
        if (INFO_ADDED) {
            return;
        }
        addStyles_(INFO_STYLES, opt_document);
        INFO_ADDED = true;
        addCloseIconStyles_(opt_document);
    }
    CssStyles.addInfoStyles = addInfoStyles;
    function addCloseIconStyles_(opt_document) {
        if (CLOSE_ICON_ADDED) {
            return;
        }
        addStyles_(CLOSE_ICON_STYLES, opt_document);
        CLOSE_ICON_ADDED = true;
    }
    function addStyles_(styles, opt_document) {
        var doc = opt_document || document;
        var element = doc.createElement('style');
        element.type = 'text/css';
        var inner = '';
        for (var style in styles) {
            inner += style;
            inner += ' ';
            inner += styles[style];
            inner += '\n';
        }
        element.innerHTML = inner;
        doc.head.appendChild(element);
    }
})(CssStyles = exports.CssStyles || (exports.CssStyles = {}));
//# sourceMappingURL=css_util.js.map

/***/ }),

/***/ 2165:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HtmlAttrs = exports.HtmlClasses = void 0;
var PREFIX = 'CtxtMenu';
function prefix_(name) {
    return PREFIX + '_' + name;
}
function prefixClass_(name) {
    return prefix_(name);
}
function prefixAttr_(name) {
    return prefix_(name);
}
exports.HtmlClasses = {
    ATTACHED: prefixClass_('Attached'),
    CONTEXTMENU: prefixClass_('ContextMenu'),
    MENU: prefixClass_('Menu'),
    MENUARROW: prefixClass_('MenuArrow'),
    MENUACTIVE: prefixClass_('MenuActive'),
    MENUCHECK: prefixClass_('MenuCheck'),
    MENUCLOSE: prefixClass_('MenuClose'),
    MENUCOMBOBOX: prefixClass_('MenuComboBox'),
    MENUDISABLED: prefixClass_('MenuDisabled'),
    MENUFRAME: prefixClass_('MenuFrame'),
    MENUITEM: prefixClass_('MenuItem'),
    MENULABEL: prefixClass_('MenuLabel'),
    MENURADIOCHECK: prefixClass_('MenuRadioCheck'),
    MENUINPUTBOX: prefixClass_('MenuInputBox'),
    MENURULE: prefixClass_('MenuRule'),
    MENUSLIDER: prefixClass_('MenuSlider'),
    MOUSEPOST: prefixClass_('MousePost'),
    RTL: prefixClass_('RTL'),
    INFO: prefixClass_('Info'),
    INFOCLOSE: prefixClass_('InfoClose'),
    INFOCONTENT: prefixClass_('InfoContent'),
    INFOSIGNATURE: prefixClass_('InfoSignature'),
    INFOTITLE: prefixClass_('InfoTitle'),
    SLIDERVALUE: prefixClass_('SliderValue'),
    SLIDERBAR: prefixClass_('SliderBar'),
    SELECTION: prefixClass_('Selection'),
    SELECTIONBOX: prefixClass_('SelectionBox'),
    SELECTIONMENU: prefixClass_('SelectionMenu'),
    SELECTIONDIVIDER: prefixClass_('SelectionDivider'),
    SELECTIONITEM: prefixClass_('SelectionItem')
};
exports.HtmlAttrs = {
    COUNTER: prefixAttr_('Counter'),
    KEYDOWNFUNC: prefixAttr_('keydownFunc'),
    CONTEXTMENUFUNC: prefixAttr_('contextmenuFunc'),
    OLDTAB: prefixAttr_('Oldtabindex'),
    TOUCHFUNC: prefixAttr_('TouchFunc'),
};
//# sourceMappingURL=html_classes.js.map

/***/ }),

/***/ 4922:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Info = void 0;
var close_button_js_1 = __webpack_require__(5179);
var html_classes_js_1 = __webpack_require__(2165);
var abstract_postable_js_1 = __webpack_require__(8372);
var Info = (function (_super) {
    __extends(Info, _super);
    function Info(title, content, signature) {
        var _this = _super.call(this) || this;
        _this.title = title;
        _this.signature = signature;
        _this.className = html_classes_js_1.HtmlClasses['INFO'];
        _this.role = 'dialog';
        _this.contentDiv = _this.generateContent();
        _this.close = _this.generateClose();
        _this.content = content || function () { return ''; };
        return _this;
    }
    Info.prototype.attachMenu = function (menu) {
        this.menu = menu;
    };
    Info.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        var html = this.html;
        html.appendChild(this.generateTitle());
        html.appendChild(this.contentDiv);
        html.appendChild(this.generateSignature());
        html.appendChild(this.close.html);
        html.setAttribute('tabindex', '0');
    };
    Info.prototype.post = function () {
        _super.prototype.post.call(this);
        var doc = document.documentElement;
        var html = this.html;
        var H = window.innerHeight || doc.clientHeight || doc.scrollHeight || 0;
        var x = Math.floor((-html.offsetWidth) / 2);
        var y = Math.floor((H - html.offsetHeight) / 3);
        html.setAttribute('style', 'margin-left: ' + x + 'px; top: ' + y + 'px;');
        if (window.event instanceof MouseEvent) {
            html.classList.add(html_classes_js_1.HtmlClasses['MOUSEPOST']);
        }
        html.focus();
    };
    Info.prototype.display = function () {
        this.menu.registerWidget(this);
        this.contentDiv.innerHTML = this.content();
        var html = this.menu.html;
        if (html.parentNode) {
            html.parentNode.removeChild(html);
        }
        this.menu.frame.appendChild(this.html);
    };
    Info.prototype.click = function (_event) { };
    Info.prototype.keydown = function (event) {
        this.bubbleKey();
        _super.prototype.keydown.call(this, event);
    };
    Info.prototype.escape = function (_event) {
        this.unpost();
    };
    Info.prototype.unpost = function () {
        _super.prototype.unpost.call(this);
        this.html.classList.remove(html_classes_js_1.HtmlClasses['MOUSEPOST']);
        this.menu.unregisterWidget(this);
    };
    Info.prototype.generateClose = function () {
        var close = new close_button_js_1.CloseButton(this);
        var html = close.html;
        html.classList.add(html_classes_js_1.HtmlClasses['INFOCLOSE']);
        html.setAttribute('aria-label', 'Close Dialog Box');
        return close;
    };
    Info.prototype.generateTitle = function () {
        var span = document.createElement('span');
        span.innerHTML = this.title;
        span.classList.add(html_classes_js_1.HtmlClasses['INFOTITLE']);
        return span;
    };
    Info.prototype.generateContent = function () {
        var div = document.createElement('div');
        div.classList.add(html_classes_js_1.HtmlClasses['INFOCONTENT']);
        div.setAttribute('tabindex', '0');
        return div;
    };
    Info.prototype.generateSignature = function () {
        var span = document.createElement('span');
        span.innerHTML = this.signature;
        span.classList.add(html_classes_js_1.HtmlClasses['INFOSIGNATURE']);
        return span;
    };
    Info.prototype.toJson = function () {
        return { type: ''
        };
    };
    return Info;
}(abstract_postable_js_1.AbstractPostable));
exports.Info = Info;
//# sourceMappingURL=info.js.map

/***/ }),

/***/ 1409:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Checkbox = void 0;
var abstract_variable_item_js_1 = __webpack_require__(6765);
var menu_util_js_1 = __webpack_require__(2556);
var html_classes_js_1 = __webpack_require__(2165);
var Checkbox = (function (_super) {
    __extends(Checkbox, _super);
    function Checkbox(menu, content, variable, id) {
        var _this = _super.call(this, menu, 'checkbox', content, id) || this;
        _this.role = 'menuitemcheckbox';
        _this.variable = menu.pool.lookup(variable);
        _this.register();
        return _this;
    }
    Checkbox.fromJson = function (_factory, _a, menu) {
        var content = _a.content, variable = _a.variable, id = _a.id;
        return new this(menu, content, variable, id);
    };
    Checkbox.prototype.executeAction = function () {
        this.variable.setValue(!this.variable.getValue());
        menu_util_js_1.MenuUtil.close(this);
    };
    Checkbox.prototype.generateSpan = function () {
        this.span = document.createElement('span');
        this.span.textContent = '\u2713';
        this.span.classList.add(html_classes_js_1.HtmlClasses['MENUCHECK']);
    };
    Checkbox.prototype.updateAria = function () {
        this.html.setAttribute('aria-checked', this.variable.getValue() ? 'true' : 'false');
    };
    Checkbox.prototype.updateSpan = function () {
        this.span.style.display = this.variable.getValue() ? '' : 'none';
    };
    Checkbox.prototype.toJson = function () {
        return { type: ''
        };
    };
    return Checkbox;
}(abstract_variable_item_js_1.AbstractVariableItem));
exports.Checkbox = Checkbox;
//# sourceMappingURL=item_checkbox.js.map

/***/ }),

/***/ 9886:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Combo = void 0;
var abstract_variable_item_js_1 = __webpack_require__(6765);
var menu_util_js_1 = __webpack_require__(2556);
var html_classes_js_1 = __webpack_require__(2165);
var key_navigatable_js_1 = __webpack_require__(3205);
var Combo = (function (_super) {
    __extends(Combo, _super);
    function Combo(menu, content, variable, id) {
        var _this = _super.call(this, menu, 'combobox', content, id) || this;
        _this.role = 'combobox';
        _this.inputEvent = false;
        _this.variable = menu.pool.lookup(variable);
        _this.register();
        return _this;
    }
    Combo.fromJson = function (_factory, _a, menu) {
        var content = _a.content, variable = _a.variable, id = _a.id;
        return new this(menu, content, variable, id);
    };
    Combo.prototype.executeAction = function () {
        this.variable.setValue(this.input.value, menu_util_js_1.MenuUtil.getActiveElement(this));
    };
    Combo.prototype.space = function (event) {
        _super.prototype.space.call(this, event);
        menu_util_js_1.MenuUtil.close(this);
    };
    Combo.prototype.focus = function () {
        _super.prototype.focus.call(this);
        this.input.focus();
    };
    Combo.prototype.unfocus = function () {
        _super.prototype.unfocus.call(this);
        this.updateSpan();
    };
    Combo.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        var html = this.html;
        html.classList.add(html_classes_js_1.HtmlClasses['MENUCOMBOBOX']);
    };
    Combo.prototype.generateSpan = function () {
        this.span = document.createElement('span');
        this.span.classList.add(html_classes_js_1.HtmlClasses['MENUINPUTBOX']);
        this.input = document.createElement('input');
        this.input.addEventListener('keydown', this.inputKey.bind(this));
        this.input.setAttribute('size', '10em');
        this.input.setAttribute('type', 'text');
        this.input.setAttribute('tabindex', '-1');
        this.span.appendChild(this.input);
    };
    Combo.prototype.inputKey = function (_event) {
        this.bubbleKey();
        this.inputEvent = true;
    };
    Combo.prototype.keydown = function (event) {
        if (this.inputEvent &&
            event.keyCode !== key_navigatable_js_1.KEY.ESCAPE &&
            event.keyCode !== key_navigatable_js_1.KEY.RETURN) {
            this.inputEvent = false;
            event.stopPropagation();
            return;
        }
        _super.prototype.keydown.call(this, event);
        event.stopPropagation();
    };
    Combo.prototype.updateAria = function () { };
    Combo.prototype.updateSpan = function () {
        var initValue;
        try {
            initValue = this.variable.getValue(menu_util_js_1.MenuUtil.getActiveElement(this));
        }
        catch (e) {
            initValue = '';
        }
        this.input.value = initValue;
    };
    Combo.prototype.toJson = function () {
        return { type: ''
        };
    };
    return Combo;
}(abstract_variable_item_js_1.AbstractVariableItem));
exports.Combo = Combo;
//# sourceMappingURL=item_combo.js.map

/***/ }),

/***/ 3467:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Command = void 0;
var abstract_item_js_1 = __webpack_require__(1340);
var menu_util_js_1 = __webpack_require__(2556);
var Command = (function (_super) {
    __extends(Command, _super);
    function Command(menu, content, command, id) {
        var _this = _super.call(this, menu, 'command', content, id) || this;
        _this.command = command;
        return _this;
    }
    Command.fromJson = function (_factory, _a, menu) {
        var content = _a.content, action = _a.action, id = _a.id;
        return new this(menu, content, action, id);
    };
    Command.prototype.executeAction = function () {
        try {
            this.command(menu_util_js_1.MenuUtil.getActiveElement(this));
        }
        catch (e) {
            menu_util_js_1.MenuUtil.error(e, 'Illegal command callback.');
        }
        menu_util_js_1.MenuUtil.close(this);
    };
    Command.prototype.toJson = function () {
        return { type: ''
        };
    };
    return Command;
}(abstract_item_js_1.AbstractItem));
exports.Command = Command;
//# sourceMappingURL=item_command.js.map

/***/ }),

/***/ 2965:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Label = void 0;
var abstract_item_js_1 = __webpack_require__(1340);
var html_classes_js_1 = __webpack_require__(2165);
var Label = (function (_super) {
    __extends(Label, _super);
    function Label(menu, content, id) {
        return _super.call(this, menu, 'label', content, id) || this;
    }
    Label.fromJson = function (_factory, _a, menu) {
        var content = _a.content, id = _a.id;
        return new this(menu, content, id);
    };
    Label.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        var html = this.html;
        html.classList.add(html_classes_js_1.HtmlClasses['MENULABEL']);
    };
    Label.prototype.toJson = function () {
        return { type: ''
        };
    };
    return Label;
}(abstract_item_js_1.AbstractItem));
exports.Label = Label;
//# sourceMappingURL=item_label.js.map

/***/ }),

/***/ 385:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Radio = void 0;
var abstract_variable_item_js_1 = __webpack_require__(6765);
var menu_util_js_1 = __webpack_require__(2556);
var html_classes_js_1 = __webpack_require__(2165);
var Radio = (function (_super) {
    __extends(Radio, _super);
    function Radio(menu, content, variable, id) {
        var _this = _super.call(this, menu, 'radio', content, id) || this;
        _this.role = 'menuitemradio';
        _this.variable = menu.pool.lookup(variable);
        _this.register();
        return _this;
    }
    Radio.fromJson = function (_factory, _a, menu) {
        var content = _a.content, variable = _a.variable, id = _a.id;
        return new this(menu, content, variable, id);
    };
    Radio.prototype.executeAction = function () {
        this.variable.setValue(this.id);
        menu_util_js_1.MenuUtil.close(this);
    };
    Radio.prototype.generateSpan = function () {
        this.span = document.createElement('span');
        this.span.textContent = '\u2713';
        this.span.classList.add(html_classes_js_1.HtmlClasses['MENURADIOCHECK']);
    };
    Radio.prototype.updateAria = function () {
        this.html.setAttribute('aria-checked', this.variable.getValue() === this.id ? 'true' : 'false');
    };
    Radio.prototype.updateSpan = function () {
        this.span.style.display =
            this.variable.getValue() === this.id ? '' : 'none';
    };
    Radio.prototype.toJson = function () {
        return { type: ''
        };
    };
    return Radio;
}(abstract_variable_item_js_1.AbstractVariableItem));
exports.Radio = Radio;
//# sourceMappingURL=item_radio.js.map

/***/ }),

/***/ 3463:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Rule = void 0;
var abstract_entry_js_1 = __webpack_require__(9329);
var html_classes_js_1 = __webpack_require__(2165);
var Rule = (function (_super) {
    __extends(Rule, _super);
    function Rule(menu) {
        var _this = _super.call(this, menu, 'rule') || this;
        _this.className = html_classes_js_1.HtmlClasses['MENUITEM'];
        _this.role = 'separator';
        return _this;
    }
    Rule.fromJson = function (_factory, _a, menu) {
        return new this(menu);
    };
    Rule.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        var html = this.html;
        html.classList.add(html_classes_js_1.HtmlClasses['MENURULE']);
        html.setAttribute('aria-orientation', 'vertical');
    };
    Rule.prototype.addEvents = function (_element) { };
    Rule.prototype.toJson = function () {
        return { type: 'rule' };
    };
    return Rule;
}(abstract_entry_js_1.AbstractEntry));
exports.Rule = Rule;
//# sourceMappingURL=item_rule.js.map

/***/ }),

/***/ 7625:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Slider = void 0;
var abstract_variable_item_js_1 = __webpack_require__(6765);
var menu_util_js_1 = __webpack_require__(2556);
var html_classes_js_1 = __webpack_require__(2165);
var key_navigatable_js_1 = __webpack_require__(3205);
var Slider = (function (_super) {
    __extends(Slider, _super);
    function Slider(menu, content, variable, id) {
        var _this = _super.call(this, menu, 'slider', content, id) || this;
        _this.role = 'slider';
        _this.labelId = 'ctx_slideLabel' + menu_util_js_1.MenuUtil.counter();
        _this.valueId = 'ctx_slideValue' + menu_util_js_1.MenuUtil.counter();
        _this.inputEvent = false;
        _this.variable = menu.pool.lookup(variable);
        _this.register();
        return _this;
    }
    Slider.fromJson = function (_factory, _a, menu) {
        var content = _a.content, variable = _a.variable, id = _a.id;
        return new this(menu, content, variable, id);
    };
    Slider.prototype.executeAction = function () {
        this.variable.setValue(this.input.value, menu_util_js_1.MenuUtil.getActiveElement(this));
        this.update();
    };
    Slider.prototype.space = function (event) {
        _super.prototype.space.call(this, event);
        menu_util_js_1.MenuUtil.close(this);
    };
    Slider.prototype.focus = function () {
        _super.prototype.focus.call(this);
        this.input.focus();
    };
    Slider.prototype.unfocus = function () {
        _super.prototype.unfocus.call(this);
        this.updateSpan();
    };
    Slider.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        var html = this.html;
        html.classList.add(html_classes_js_1.HtmlClasses['MENUSLIDER']);
        this.valueSpan = document.createElement('span');
        this.valueSpan.setAttribute('id', this.valueId);
        this.valueSpan.classList.add(html_classes_js_1.HtmlClasses['SLIDERVALUE']);
        this.html.appendChild(this.valueSpan);
    };
    Slider.prototype.generateSpan = function () {
        this.span = document.createElement('span');
        this.labelSpan = document.createElement('span');
        this.labelSpan.setAttribute('id', this.labelId);
        this.labelSpan.appendChild(this.html.childNodes[0]);
        this.html.appendChild(this.labelSpan);
        this.input = document.createElement('input');
        this.input.setAttribute('type', 'range');
        this.input.setAttribute('min', '0');
        this.input.setAttribute('max', '100');
        this.input.setAttribute('aria-valuemin', '0');
        this.input.setAttribute('aria-valuemax', '100');
        this.input.setAttribute('aria-labelledby', this.labelId);
        this.input.addEventListener('keydown', this.inputKey.bind(this));
        this.input.addEventListener('input', this.executeAction.bind(this));
        this.input.classList.add(html_classes_js_1.HtmlClasses['SLIDERBAR']);
        this.span.appendChild(this.input);
    };
    Slider.prototype.inputKey = function (_event) {
        this.inputEvent = true;
    };
    Slider.prototype.mousedown = function (event) {
        event.stopPropagation();
    };
    Slider.prototype.mouseup = function (_event) {
        event.stopPropagation();
    };
    Slider.prototype.keydown = function (event) {
        var code = event.keyCode;
        if (code === key_navigatable_js_1.KEY.UP || code === key_navigatable_js_1.KEY.DOWN) {
            event.preventDefault();
            _super.prototype.keydown.call(this, event);
            return;
        }
        if (this.inputEvent &&
            code !== key_navigatable_js_1.KEY.ESCAPE && code !== key_navigatable_js_1.KEY.RETURN) {
            this.inputEvent = false;
            event.stopPropagation();
            return;
        }
        _super.prototype.keydown.call(this, event);
        event.stopPropagation();
    };
    Slider.prototype.updateAria = function () {
        var value = this.variable.getValue();
        if (value && this.input) {
            this.input.setAttribute('aria-valuenow', value);
            this.input.setAttribute('aria-valuetext', value + '%');
        }
    };
    Slider.prototype.updateSpan = function () {
        var initValue;
        try {
            initValue = this.variable.getValue(menu_util_js_1.MenuUtil.getActiveElement(this));
            this.valueSpan.innerHTML = initValue + '%';
        }
        catch (e) {
            initValue = '';
        }
        this.input.value = initValue;
    };
    Slider.prototype.toJson = function () {
        return { type: ''
        };
    };
    return Slider;
}(abstract_variable_item_js_1.AbstractVariableItem));
exports.Slider = Slider;
//# sourceMappingURL=item_slider.js.map

/***/ }),

/***/ 6186:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Submenu = void 0;
var abstract_item_js_1 = __webpack_require__(1340);
var html_classes_js_1 = __webpack_require__(2165);
var Submenu = (function (_super) {
    __extends(Submenu, _super);
    function Submenu(menu, content, id) {
        var _this = _super.call(this, menu, 'submenu', content, id) || this;
        _this._submenu = null;
        return _this;
    }
    Submenu.fromJson = function (factory, _a, menu) {
        var content = _a.content, submenu = _a.menu, id = _a.id;
        var item = new this(menu, content, id);
        var sm = factory.get('subMenu')(factory, submenu, item);
        item.submenu = sm;
        return item;
    };
    Object.defineProperty(Submenu.prototype, "submenu", {
        get: function () {
            return this._submenu;
        },
        set: function (menu) {
            this._submenu = menu;
        },
        enumerable: false,
        configurable: true
    });
    Submenu.prototype.mouseover = function (event) {
        this.focus();
        this.stop(event);
    };
    Submenu.prototype.mouseout = function (event) {
        this.stop(event);
    };
    Submenu.prototype.unfocus = function () {
        if (!this.submenu.isPosted()) {
            _super.prototype.unfocus.call(this);
            return;
        }
        if (this.menu.focused !== this) {
            _super.prototype.unfocus.call(this);
            this.menu.unpostSubmenus();
            return;
        }
        this.html.setAttribute('tabindex', '-1');
        this.html.blur();
    };
    Submenu.prototype.focus = function () {
        _super.prototype.focus.call(this);
        if (!this.submenu.isPosted() && !this.disabled) {
            this.submenu.post();
        }
    };
    Submenu.prototype.executeAction = function () {
        this.submenu.isPosted() ? this.submenu.unpost() : this.submenu.post();
    };
    Submenu.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        var html = this.html;
        this.span = document.createElement('span');
        this.span.textContent = '\u25BA';
        this.span.classList.add(html_classes_js_1.HtmlClasses['MENUARROW']);
        html.appendChild(this.span);
        html.setAttribute('aria-haspopup', 'true');
    };
    Submenu.prototype.left = function (event) {
        if (this.submenu.isPosted()) {
            this.submenu.unpost();
        }
        else {
            _super.prototype.left.call(this, event);
        }
    };
    Submenu.prototype.right = function (event) {
        if (!this.submenu.isPosted()) {
            this.submenu.post();
        }
        else {
            this.submenu.down(event);
        }
    };
    Submenu.prototype.toJson = function () {
        return { type: ''
        };
    };
    return Submenu;
}(abstract_item_js_1.AbstractItem));
exports.Submenu = Submenu;
//# sourceMappingURL=item_submenu.js.map

/***/ }),

/***/ 3205:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KEY = void 0;
var KEY;
(function (KEY) {
    KEY[KEY["RETURN"] = 13] = "RETURN";
    KEY[KEY["ESCAPE"] = 27] = "ESCAPE";
    KEY[KEY["SPACE"] = 32] = "SPACE";
    KEY[KEY["LEFT"] = 37] = "LEFT";
    KEY[KEY["UP"] = 38] = "UP";
    KEY[KEY["RIGHT"] = 39] = "RIGHT";
    KEY[KEY["DOWN"] = 40] = "DOWN";
})(KEY = exports.KEY || (exports.KEY = {}));
//# sourceMappingURL=key_navigatable.js.map

/***/ }),

/***/ 9328:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MenuElement = void 0;
var abstract_navigatable_js_1 = __webpack_require__(2868);
var MenuElement = (function (_super) {
    __extends(MenuElement, _super);
    function MenuElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuElement.prototype.addAttributes = function (attributes) {
        for (var attr in attributes) {
            this.html.setAttribute(attr, attributes[attr]);
        }
    };
    Object.defineProperty(MenuElement.prototype, "html", {
        get: function () {
            if (!this._html) {
                this.generateHtml();
            }
            return this._html;
        },
        set: function (html) {
            this._html = html;
            this.addEvents(html);
        },
        enumerable: false,
        configurable: true
    });
    MenuElement.prototype.generateHtml = function () {
        var html = document.createElement('div');
        html.classList.add(this.className);
        html.setAttribute('role', this.role);
        this.html = html;
    };
    MenuElement.prototype.focus = function () {
        var html = this.html;
        html.setAttribute('tabindex', '0');
        html.focus();
    };
    MenuElement.prototype.unfocus = function () {
        var html = this.html;
        if (html.hasAttribute('tabindex')) {
            html.setAttribute('tabindex', '-1');
        }
        try {
            html.blur();
        }
        catch (e) {
        }
        html.blur();
    };
    return MenuElement;
}(abstract_navigatable_js_1.AbstractNavigatable));
exports.MenuElement = MenuElement;
//# sourceMappingURL=menu_element.js.map

/***/ }),

/***/ 1932:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MenuStore = void 0;
var menu_util_js_1 = __webpack_require__(2556);
var html_classes_js_1 = __webpack_require__(2165);
var key_navigatable_js_1 = __webpack_require__(3205);
var MenuStore = (function () {
    function MenuStore(menu) {
        this.menu = menu;
        this.store = [];
        this._active = null;
        this.counter = 0;
        this.attachedClass = html_classes_js_1.HtmlClasses['ATTACHED'] + '_' +
            menu_util_js_1.MenuUtil.counter();
        this.taborder = true;
        this.attrMap = {};
    }
    Object.defineProperty(MenuStore.prototype, "active", {
        get: function () {
            return this._active;
        },
        set: function (element) {
            do {
                if (this.store.indexOf(element) !== -1) {
                    this._active = element;
                    break;
                }
                element = element.parentNode;
            } while (element);
        },
        enumerable: false,
        configurable: true
    });
    MenuStore.prototype.next = function () {
        var length = this.store.length;
        if (length === 0) {
            this.active = null;
            return null;
        }
        var index = this.store.indexOf(this.active);
        index = index === -1 ? 0 : (index < length - 1 ? index + 1 : 0);
        this.active = this.store[index];
        return this.active;
    };
    MenuStore.prototype.previous = function () {
        var length = this.store.length;
        if (length === 0) {
            this.active = null;
            return null;
        }
        var last = length - 1;
        var index = this.store.indexOf(this.active);
        index = index === -1 ? last : (index === 0 ? last : index - 1);
        this.active = this.store[index];
        return this.active;
    };
    MenuStore.prototype.clear = function () {
        this.remove(this.store);
    };
    MenuStore.prototype.insert = function (elementOrList) {
        var e_1, _a;
        var elements = elementOrList instanceof HTMLElement ?
            [elementOrList] : elementOrList;
        try {
            for (var elements_1 = __values(elements), elements_1_1 = elements_1.next(); !elements_1_1.done; elements_1_1 = elements_1.next()) {
                var element = elements_1_1.value;
                this.insertElement(element);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (elements_1_1 && !elements_1_1.done && (_a = elements_1.return)) _a.call(elements_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.sort();
    };
    MenuStore.prototype.remove = function (elementOrList) {
        var e_2, _a;
        var elements = elementOrList instanceof HTMLElement ?
            [elementOrList] : elementOrList;
        try {
            for (var elements_2 = __values(elements), elements_2_1 = elements_2.next(); !elements_2_1.done; elements_2_1 = elements_2.next()) {
                var element = elements_2_1.value;
                this.removeElement(element);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (elements_2_1 && !elements_2_1.done && (_a = elements_2.return)) _a.call(elements_2);
            }
            finally { if (e_2) throw e_2.error; }
        }
        this.sort();
    };
    MenuStore.prototype.inTaborder = function (flag) {
        if (this.taborder && !flag) {
            this.removeTaborder();
        }
        if (!this.taborder && flag) {
            this.insertTaborder();
        }
        this.taborder = flag;
    };
    MenuStore.prototype.insertTaborder = function () {
        if (this.taborder) {
            this.insertTaborder_();
        }
    };
    MenuStore.prototype.removeTaborder = function () {
        if (this.taborder) {
            this.removeTaborder_();
        }
    };
    MenuStore.prototype.insertElement = function (element) {
        if (element.classList.contains(this.attachedClass)) {
            return;
        }
        element.classList.add(this.attachedClass);
        if (this.taborder) {
            this.addTabindex(element);
        }
        this.addEvents(element);
    };
    MenuStore.prototype.removeElement = function (element) {
        if (!element.classList.contains(this.attachedClass)) {
            return;
        }
        element.classList.remove(this.attachedClass);
        if (this.taborder) {
            this.removeTabindex(element);
        }
        this.removeEvents(element);
    };
    MenuStore.prototype.sort = function () {
        var nodes = document.getElementsByClassName(this.attachedClass);
        this.store = [].slice.call(nodes);
    };
    MenuStore.prototype.insertTaborder_ = function () {
        this.store.forEach(function (x) { return x.setAttribute('tabindex', '0'); });
    };
    MenuStore.prototype.removeTaborder_ = function () {
        this.store.forEach(function (x) { return x.setAttribute('tabindex', '-1'); });
    };
    MenuStore.prototype.addTabindex = function (element) {
        if (element.hasAttribute('tabindex')) {
            element.setAttribute(html_classes_js_1.HtmlAttrs['OLDTAB'], element.getAttribute('tabindex'));
        }
        element.setAttribute('tabindex', '0');
    };
    MenuStore.prototype.removeTabindex = function (element) {
        if (element.hasAttribute(html_classes_js_1.HtmlAttrs['OLDTAB'])) {
            element.setAttribute('tabindex', element.getAttribute(html_classes_js_1.HtmlAttrs['OLDTAB']));
            element.removeAttribute(html_classes_js_1.HtmlAttrs['OLDTAB']);
        }
        else {
            element.removeAttribute('tabindex');
        }
    };
    MenuStore.prototype.addEvents = function (element) {
        if (element.hasAttribute(html_classes_js_1.HtmlAttrs['COUNTER'])) {
            return;
        }
        this.addEvent(element, 'contextmenu', this.menu.post.bind(this.menu));
        this.addEvent(element, 'keydown', this.keydown.bind(this));
        element.setAttribute(html_classes_js_1.HtmlAttrs['COUNTER'], this.counter.toString());
        this.counter++;
    };
    MenuStore.prototype.addEvent = function (element, name, func) {
        var attrName = html_classes_js_1.HtmlAttrs[name.toUpperCase() + 'FUNC'];
        this.attrMap[attrName + this.counter] = func;
        element.addEventListener(name, func);
    };
    MenuStore.prototype.removeEvents = function (element) {
        if (!element.hasAttribute(html_classes_js_1.HtmlAttrs['COUNTER'])) {
            return;
        }
        var counter = element.getAttribute(html_classes_js_1.HtmlAttrs['COUNTER']);
        this.removeEvent(element, 'contextmenu', counter);
        this.removeEvent(element, 'keydown', counter);
        element.removeAttribute(html_classes_js_1.HtmlAttrs['COUNTER']);
    };
    MenuStore.prototype.removeEvent = function (element, name, counter) {
        var attrName = html_classes_js_1.HtmlAttrs[name.toUpperCase() + 'FUNC'];
        var menuFunc = this.attrMap[attrName + counter];
        element.removeEventListener(name, menuFunc);
    };
    MenuStore.prototype.keydown = function (event) {
        if (event.keyCode === key_navigatable_js_1.KEY.SPACE) {
            this.menu.post(event);
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    };
    return MenuStore;
}());
exports.MenuStore = MenuStore;
//# sourceMappingURL=menu_store.js.map

/***/ }),

/***/ 2556:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MenuUtil = void 0;
var MenuUtil;
(function (MenuUtil) {
    function close(item) {
        var menu = item.menu;
        if (menu.baseMenu) {
            menu.baseMenu.unpost();
        }
        else {
            menu.unpost();
        }
    }
    MenuUtil.close = close;
    function getActiveElement(item) {
        var menu = item.menu;
        var baseMenu = (menu.baseMenu ? menu.baseMenu : menu);
        return baseMenu.store.active;
    }
    MenuUtil.getActiveElement = getActiveElement;
    function error(_error, msg) {
        console.error('ContextMenu Error: ' + msg);
    }
    MenuUtil.error = error;
    function counter() {
        return count++;
    }
    MenuUtil.counter = counter;
    var count = 0;
})(MenuUtil = exports.MenuUtil || (exports.MenuUtil = {}));
//# sourceMappingURL=menu_util.js.map

/***/ }),

/***/ 8853:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MOUSE = void 0;
exports.MOUSE = {
    CLICK: 'click',
    DBLCLICK: 'dblclick',
    DOWN: 'mousedown',
    UP: 'mouseup',
    OVER: 'mouseover',
    OUT: 'mouseout',
    MOVE: 'mousemove',
    SELECTEND: 'selectend',
    SELECTSTART: 'selectstart'
};
//# sourceMappingURL=mouse_navigatable.js.map

/***/ }),

/***/ 6914:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Parser = void 0;
var item_command_js_1 = __webpack_require__(3467);
var context_menu_js_1 = __webpack_require__(5073);
var variable_js_1 = __webpack_require__(3737);
var item_checkbox_js_1 = __webpack_require__(1409);
var item_combo_js_1 = __webpack_require__(9886);
var item_label_js_1 = __webpack_require__(2965);
var item_radio_js_1 = __webpack_require__(385);
var item_submenu_js_1 = __webpack_require__(6186);
var item_rule_js_1 = __webpack_require__(3463);
var item_slider_js_1 = __webpack_require__(7625);
var sub_menu_js_1 = __webpack_require__(4834);
var selection_box_js_1 = __webpack_require__(2100);
var parser_factory_js_1 = __webpack_require__(2308);
var Parser = (function () {
    function Parser(init) {
        var _this = this;
        if (init === void 0) { init = []; }
        this._initList = [
            ['command', item_command_js_1.Command.fromJson.bind(item_command_js_1.Command)],
            ['checkbox', item_checkbox_js_1.Checkbox.fromJson.bind(item_checkbox_js_1.Checkbox)],
            ['combo', item_combo_js_1.Combo.fromJson.bind(item_combo_js_1.Combo)],
            ['slider', item_slider_js_1.Slider.fromJson.bind(item_slider_js_1.Slider)],
            ['label', item_label_js_1.Label.fromJson.bind(item_label_js_1.Label)],
            ['radio', item_radio_js_1.Radio.fromJson.bind(item_radio_js_1.Radio)],
            ['rule', item_rule_js_1.Rule.fromJson.bind(item_rule_js_1.Rule)],
            ['submenu', item_submenu_js_1.Submenu.fromJson.bind(item_submenu_js_1.Submenu)],
            ['contextMenu', context_menu_js_1.ContextMenu.fromJson.bind(context_menu_js_1.ContextMenu)],
            ['subMenu', sub_menu_js_1.SubMenu.fromJson.bind(sub_menu_js_1.SubMenu)],
            ['variable', variable_js_1.Variable.fromJson.bind(variable_js_1.Variable)],
            ['items', this.items.bind(this)],
            ['selectionMenu', selection_box_js_1.SelectionMenu.fromJson.bind(selection_box_js_1.SelectionMenu)],
            ['selectionBox', selection_box_js_1.SelectionBox.fromJson.bind(selection_box_js_1.SelectionBox)]
        ];
        this._factory = new parser_factory_js_1.ParserFactory(this._initList);
        init.forEach(function (_a) {
            var _b = __read(_a, 2), x = _b[0], y = _b[1];
            return _this.factory.add(x, y);
        });
    }
    Object.defineProperty(Parser.prototype, "factory", {
        get: function () {
            return this._factory;
        },
        enumerable: false,
        configurable: true
    });
    Parser.prototype.items = function (_factory, its, ctxt) {
        var e_1, _a;
        var hidden = [];
        try {
            for (var its_1 = __values(its), its_1_1 = its_1.next(); !its_1_1.done; its_1_1 = its_1.next()) {
                var item = its_1_1.value;
                var entry = this.parse(item, ctxt);
                if (!entry) {
                    continue;
                }
                ctxt.items.push(entry);
                if (item.disabled) {
                    entry.disable();
                }
                if (item.hidden) {
                    hidden.push(entry);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (its_1_1 && !its_1_1.done && (_a = its_1.return)) _a.call(its_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        hidden.forEach(function (x) { return x.hide(); });
        return ctxt.items;
    };
    Parser.prototype.parse = function (_a) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        var kind = _a.type, json = __rest(_a, ["type"]);
        var func = this.factory.get(kind);
        return func ? func.apply(void 0, __spread([this.factory, json], rest)) : null;
    };
    return Parser;
}());
exports.Parser = Parser;
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ 2308:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ParserFactory = void 0;
var ParserFactory = (function () {
    function ParserFactory(init) {
        this._parser = new Map(init);
    }
    ParserFactory.prototype.get = function (name) {
        return this._parser.get(name);
    };
    ParserFactory.prototype.add = function (name, method) {
        this._parser.set(name, method);
    };
    return ParserFactory;
}());
exports.ParserFactory = ParserFactory;
//# sourceMappingURL=parser_factory.js.map

/***/ }),

/***/ 2100:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectionBox = exports.SelectionMenu = void 0;
var menu_util_js_1 = __webpack_require__(2556);
var html_classes_js_1 = __webpack_require__(2165);
var abstract_menu_js_1 = __webpack_require__(1484);
var info_js_1 = __webpack_require__(4922);
var SelectionMenu = (function (_super) {
    __extends(SelectionMenu, _super);
    function SelectionMenu(anchor) {
        var _this = _super.call(this) || this;
        _this.anchor = anchor;
        _this.className = html_classes_js_1.HtmlClasses['SELECTIONMENU'];
        _this.variablePool = _this.anchor.menu.pool;
        _this.baseMenu = _this.anchor.menu;
        return _this;
    }
    SelectionMenu.fromJson = function (factory, _a, sb) {
        var title = _a.title, values = _a.values, variable = _a.variable;
        var selection = new this(sb);
        var tit = factory.get('label')(factory, { content: title || '', id: title || 'id' }, selection);
        var rul = factory.get('rule')(factory, {}, selection);
        var radios = values.map(function (x) { return factory.get('radio')(factory, { content: x, variable: variable, id: x }, selection); });
        var items = [tit, rul].concat(radios);
        selection.items = items;
        return selection;
    };
    SelectionMenu.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        this.items.forEach(function (item) { return item.html.classList.add(html_classes_js_1.HtmlClasses['SELECTIONITEM']); });
    };
    SelectionMenu.prototype.display = function () { };
    SelectionMenu.prototype.right = function (event) {
        this.anchor.right(event);
    };
    SelectionMenu.prototype.left = function (event) {
        this.anchor.left(event);
    };
    return SelectionMenu;
}(abstract_menu_js_1.AbstractMenu));
exports.SelectionMenu = SelectionMenu;
var SelectionBox = (function (_super) {
    __extends(SelectionBox, _super);
    function SelectionBox(title, signature, style, grid) {
        if (style === void 0) { style = "none"; }
        if (grid === void 0) { grid = "vertical"; }
        var _this = _super.call(this, title, null, signature) || this;
        _this.style = style;
        _this.grid = grid;
        _this._selections = [];
        _this.prefix = 'ctxt-selection';
        _this._balanced = true;
        return _this;
    }
    SelectionBox.fromJson = function (factory, _a, ctxt) {
        var title = _a.title, signature = _a.signature, selections = _a.selections, order = _a.order, grid = _a.grid;
        var sb = new this(title, signature, order, grid);
        sb.attachMenu(ctxt);
        var sels = selections.map(function (x) { return factory.get('selectionMenu')(factory, x, sb); });
        sb.selections = sels;
        return sb;
    };
    SelectionBox.prototype.attachMenu = function (menu) {
        this.menu = menu;
    };
    Object.defineProperty(SelectionBox.prototype, "selections", {
        get: function () {
            return this._selections;
        },
        set: function (selections) {
            var _this = this;
            this._selections = [];
            selections.forEach(function (x) { return _this.addSelection(x); });
        },
        enumerable: false,
        configurable: true
    });
    SelectionBox.prototype.addSelection = function (selection) {
        selection.anchor = this;
        this._selections.push(selection);
    };
    SelectionBox.prototype.rowDiv = function (sels) {
        var _this = this;
        var div = document.createElement('div');
        this.contentDiv.appendChild(div);
        var rects = sels.map(function (sel) {
            div.appendChild(sel.html);
            if (!sel.html.id) {
                sel.html.id = _this.prefix + menu_util_js_1.MenuUtil.counter();
            }
            return sel.html.getBoundingClientRect();
        });
        var column = rects.map(function (x) { return x.width; });
        var width = column.reduce(function (x, y) { return x + y; }, 0);
        var height = rects.reduce(function (x, y) { return Math.max(x, y.height); }, 0);
        div.classList.add(html_classes_js_1.HtmlClasses['SELECTIONDIVIDER']);
        div.setAttribute('style', 'height: ' + height + 'px;');
        return [div, width, height, column];
    };
    SelectionBox.prototype.display = function () {
        _super.prototype.display.call(this);
        this.order();
        if (!this.selections.length) {
            return;
        }
        var outerDivs = [];
        var maxWidth = 0;
        var balancedColumn = [];
        var chunks = this.getChunkSize(this.selections.length);
        var _loop_1 = function (i) {
            var sels = this_1.selections.slice(i, i + chunks);
            var _a = __read(this_1.rowDiv(sels), 4), div = _a[0], width = _a[1], height = _a[2], column = _a[3];
            outerDivs.push(div);
            maxWidth = Math.max(maxWidth, width);
            sels.forEach(function (sel) { return sel.html.style.height = height + 'px'; });
            balancedColumn = this_1.combineColumn(balancedColumn, column);
        };
        var this_1 = this;
        for (var i = 0; i < this.selections.length; i += chunks) {
            _loop_1(i);
        }
        if (this._balanced) {
            this.balanceColumn(outerDivs, balancedColumn);
            maxWidth = balancedColumn.reduce(function (x, y) { return x + y; }, 20);
        }
        outerDivs.forEach(function (div) { return div.style.width = maxWidth + 'px'; });
    };
    SelectionBox.prototype.getChunkSize = function (size) {
        switch (this.grid) {
            case "square":
                return Math.floor(Math.sqrt(size));
            case "horizontal":
                return Math.floor(size / SelectionBox.chunkSize);
            case "vertical":
            default:
                return SelectionBox.chunkSize;
        }
    };
    SelectionBox.prototype.balanceColumn = function (divs, column) {
        divs.forEach(function (div) {
            var children = Array.from(div.children);
            for (var i = 0, child = void 0; child = children[i]; i++) {
                child.style.width = column[i] + 'px';
            }
        });
    };
    SelectionBox.prototype.combineColumn = function (col1, col2) {
        var result = [];
        var i = 0;
        while (col1[i] || col2[i]) {
            if (!col1[i]) {
                result = result.concat(col2.slice(i));
                break;
            }
            if (!col2[i]) {
                result = result.concat(col1.slice(i));
                break;
            }
            result.push(Math.max(col1[i], col2[i]));
            i++;
        }
        ;
        return result;
    };
    SelectionBox.prototype.left = function (event) {
        var _this = this;
        this.move(event, function (index) {
            return (index === 0 ? _this.selections.length : index) - 1;
        });
    };
    SelectionBox.prototype.right = function (event) {
        var _this = this;
        this.move(event, function (index) {
            return index === _this.selections.length - 1 ? 0 : index + 1;
        });
    };
    SelectionBox.prototype.generateHtml = function () {
        _super.prototype.generateHtml.call(this);
        this.html.classList.add(html_classes_js_1.HtmlClasses['SELECTION']);
    };
    SelectionBox.prototype.generateContent = function () {
        var div = _super.prototype.generateContent.call(this);
        div.classList.add(html_classes_js_1.HtmlClasses['SELECTIONBOX']);
        div.removeAttribute('tabindex');
        return div;
    };
    SelectionBox.prototype.findSelection = function (event) {
        var target = event.target;
        var selection = null;
        if (target.id) {
            selection = this.selections.find(function (x) { return x.html.id === target.id; });
        }
        if (!selection) {
            var id_1 = target.parentElement.id;
            selection = this.selections.find(function (x) { return x.html.id === id_1; });
        }
        return selection;
    };
    SelectionBox.prototype.move = function (event, isNext) {
        var selection = this.findSelection(event);
        if (selection.focused) {
            selection.focused.unfocus();
        }
        var index = this.selections.indexOf(selection);
        var next = isNext(index);
        this.selections[next].focus();
    };
    SelectionBox.prototype.order = function () {
        this.selections.sort(SelectionBox.orderMethod.get(this.style));
    };
    SelectionBox.prototype.toJson = function () {
        return { type: ''
        };
    };
    SelectionBox.chunkSize = 4;
    SelectionBox.orderMethod = new Map([
        ["alphabetical", function (x, y) { return x.items[0].content.localeCompare(y.items[0].content); }],
        ["none", function (_x, _y) { return 1; }],
        ["decreasing", function (x, y) {
                var xl = x.items.length;
                var yl = y.items.length;
                return (xl < yl) ? 1 : ((yl < xl) ? -1 : 0);
            }],
        ["increasing", function (x, y) {
                var xl = x.items.length;
                var yl = y.items.length;
                return (xl < yl) ? -1 : ((yl < xl) ? 1 : 0);
            }],
    ]);
    return SelectionBox;
}(info_js_1.Info));
exports.SelectionBox = SelectionBox;
//# sourceMappingURL=selection_box.js.map

/***/ }),

/***/ 4834:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SubMenu = void 0;
var abstract_menu_js_1 = __webpack_require__(1484);
var SubMenu = (function (_super) {
    __extends(SubMenu, _super);
    function SubMenu(_anchor) {
        var _this = _super.call(this) || this;
        _this._anchor = _anchor;
        _this.variablePool = _this.anchor.menu.pool;
        _this.setBaseMenu();
        return _this;
    }
    SubMenu.fromJson = function (factory, _a, anchor) {
        var its = _a.items;
        var submenu = new this(anchor);
        var itemList = factory.get('items')(factory, its, submenu);
        submenu.items = itemList;
        return submenu;
    };
    Object.defineProperty(SubMenu.prototype, "anchor", {
        get: function () {
            return this._anchor;
        },
        enumerable: false,
        configurable: true
    });
    SubMenu.prototype.post = function () {
        if (!this.anchor.menu.isPosted()) {
            return;
        }
        var mobileFlag = false;
        var rtlFlag = false;
        var margin = 5;
        var parent = this.anchor.html;
        var menu = this.html;
        var base = this.baseMenu.frame;
        var mw = parent.offsetWidth;
        var x = (mobileFlag ? 30 : mw - 2);
        var y = 0;
        while (parent && parent !== base) {
            x += parent.offsetLeft;
            y += parent.offsetTop;
            parent = parent.parentNode;
        }
        if (!mobileFlag) {
            if ((rtlFlag && x - mw - menu.offsetWidth > margin) ||
                (!rtlFlag && x + menu.offsetWidth >
                    document.body.offsetWidth - margin)) {
                x = Math.max(margin, x - mw - menu.offsetWidth + 6);
            }
        }
        _super.prototype.post.call(this, x, y);
    };
    SubMenu.prototype.display = function () {
        this.baseMenu.frame.appendChild(this.html);
    };
    SubMenu.prototype.setBaseMenu = function () {
        var menu = this;
        do {
            menu = menu.anchor.menu;
        } while (menu instanceof SubMenu);
        this.baseMenu = menu;
    };
    SubMenu.prototype.left = function (_event) {
        this.focused = null;
        this.anchor.focus();
    };
    SubMenu.prototype.toJson = function () {
        return { type: ''
        };
    };
    return SubMenu;
}(abstract_menu_js_1.AbstractMenu));
exports.SubMenu = SubMenu;
//# sourceMappingURL=sub_menu.js.map

/***/ }),

/***/ 3737:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Variable = void 0;
var menu_util_js_1 = __webpack_require__(2556);
var Variable = (function () {
    function Variable(_name, getter, setter) {
        this._name = _name;
        this.getter = getter;
        this.setter = setter;
        this.items = [];
    }
    Variable.fromJson = function (_factory, _a, pool) {
        var name = _a.name, getter = _a.getter, setter = _a.setter;
        var variable = new this(name, getter, setter);
        pool.insert(variable);
    };
    Object.defineProperty(Variable.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: false,
        configurable: true
    });
    Variable.prototype.getValue = function (node) {
        try {
            return this.getter(node);
        }
        catch (e) {
            menu_util_js_1.MenuUtil.error(e, 'Command of variable ' + this.name + ' failed.');
            return null;
        }
    };
    Variable.prototype.setValue = function (value, node) {
        try {
            this.setter(value, node);
        }
        catch (e) {
            menu_util_js_1.MenuUtil.error(e, 'Command of variable ' + this.name + ' failed.');
        }
        this.update();
    };
    Variable.prototype.register = function (item) {
        if (this.items.indexOf(item) === -1) {
            this.items.push(item);
        }
    };
    Variable.prototype.unregister = function (item) {
        var index = this.items.indexOf(item);
        if (index !== -1) {
            this.items.splice(index, 1);
        }
    };
    Variable.prototype.update = function () {
        this.items.forEach(function (x) { return x.update(); });
    };
    Variable.prototype.registerCallback = function (func) {
        this.items.forEach(function (x) { return x.registerCallback(func); });
    };
    Variable.prototype.unregisterCallback = function (func) {
        this.items.forEach(function (x) { return x.unregisterCallback(func); });
    };
    Variable.prototype.toJson = function () {
        return { type: 'variable',
            name: this.name,
            getter: this.getter.toString(),
            setter: this.setter.toString() };
    };
    return Variable;
}());
exports.Variable = Variable;
//# sourceMappingURL=variable.js.map

/***/ }),

/***/ 2358:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VariablePool = void 0;
var VariablePool = (function () {
    function VariablePool() {
        this.pool = {};
    }
    VariablePool.prototype.insert = function (variable) {
        this.pool[variable.name] = variable;
    };
    VariablePool.prototype.lookup = function (name) {
        return this.pool[name];
    };
    VariablePool.prototype.remove = function (name) {
        delete this.pool[name];
    };
    VariablePool.prototype.update = function () {
        for (var variable in this.pool) {
            this.pool[variable].update();
        }
    };
    return VariablePool;
}());
exports.VariablePool = VariablePool;
//# sourceMappingURL=variable_pool.js.map

/***/ }),

/***/ 3921:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractAudioRenderer = void 0;
const engine_1 = __webpack_require__(5897);
class AbstractAudioRenderer {
    constructor() {
        this.separator_ = ' ';
    }
    setSeparator(sep) {
        this.separator_ = sep;
    }
    getSeparator() {
        return engine_1.default.getInstance().modality === 'braille' ? '' : this.separator_;
    }
    error(_key) {
        return null;
    }
    merge(spans) {
        let str = '';
        const len = spans.length - 1;
        for (let i = 0, span; (span = spans[i]); i++) {
            str += span.speech;
            if (i < len) {
                const sep = span.attributes['separator'];
                str += sep !== undefined ? sep : this.getSeparator();
            }
        }
        return str;
    }
    finalize(str) {
        return str;
    }
    pauseValue(value) {
        let numeric;
        switch (value) {
            case 'long':
                numeric = 750;
                break;
            case 'medium':
                numeric = 500;
                break;
            case 'short':
                numeric = 250;
                break;
            default:
                numeric = parseInt(value, 10);
        }
        return Math.floor((numeric * engine_1.default.getInstance().getRate()) / 100);
    }
}
exports.AbstractAudioRenderer = AbstractAudioRenderer;


/***/ }),

/***/ 4196:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AcssRenderer = void 0;
const EngineConst = __webpack_require__(4440);
const EventUtil = __webpack_require__(8496);
const AudioUtil = __webpack_require__(3706);
const markup_renderer_1 = __webpack_require__(182);
class AcssRenderer extends markup_renderer_1.MarkupRenderer {
    markup(descrs) {
        this.setScaleFunction(-2, 2, 0, 10, 0);
        const markup = AudioUtil.personalityMarkup(descrs);
        const result = [];
        const currentPers = { open: [] };
        let pause = null;
        let isString = false;
        for (let i = 0, descr; (descr = markup[i]); i++) {
            if (AudioUtil.isMarkupElement(descr)) {
                AudioUtil.mergeMarkup(currentPers, descr);
                continue;
            }
            if (AudioUtil.isPauseElement(descr)) {
                if (isString) {
                    pause = AudioUtil.mergePause(pause, descr, Math.max);
                }
                continue;
            }
            const str = '"' + this.merge(descr.span) + '"';
            isString = true;
            if (pause) {
                result.push(this.pause(pause));
                pause = null;
            }
            const prosody = this.prosody_(currentPers);
            result.push(prosody ? '(text (' + prosody + ') ' + str + ')' : str);
        }
        return '(exp ' + result.join(' ') + ')';
    }
    error(key) {
        return '(error "' + EventUtil.Move.get(key) + '")';
    }
    prosodyElement(key, value) {
        value = this.applyScaleFunction(value);
        switch (key) {
            case EngineConst.personalityProps.RATE:
                return '(richness . ' + value + ')';
            case EngineConst.personalityProps.PITCH:
                return '(average-pitch . ' + value + ')';
            case EngineConst.personalityProps.VOLUME:
                return '(stress . ' + value + ')';
        }
        return '(value . ' + value + ')';
    }
    pause(pause) {
        return ('(pause . ' +
            this.pauseValue(pause[EngineConst.personalityProps.PAUSE]) +
            ')');
    }
    prosody_(pros) {
        const keys = pros.open;
        const result = [];
        for (let i = 0, key; (key = keys[i]); i++) {
            result.push(this.prosodyElement(key, pros[key]));
        }
        return result.join(' ');
    }
}
exports.AcssRenderer = AcssRenderer;


/***/ }),

/***/ 3706:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSpanElement = exports.isPauseElement = exports.isMarkupElement = exports.personalityMarkup = exports.sortClose = exports.mergeMarkup = exports.mergePause = void 0;
const base_util_1 = __webpack_require__(707);
const EngineConst = __webpack_require__(4440);
const span_1 = __webpack_require__(9536);
function mergePause(oldPause, newPause, opt_merge) {
    if (!oldPause) {
        return newPause;
    }
    return { pause: mergePause_(oldPause.pause, newPause.pause, opt_merge) };
}
exports.mergePause = mergePause;
function mergePause_(oldPause, newPause, opt_merge) {
    const merge = opt_merge ||
        function (x, y) {
            if (typeof x === 'number' && typeof y === 'number') {
                return x + y;
            }
            if (typeof x === 'number') {
                return y;
            }
            if (typeof y === 'number') {
                return x;
            }
            return [oldPause, newPause].sort()[0];
        };
    return merge.call(null, oldPause, newPause);
}
function mergeMarkup(oldPers, newPers) {
    delete oldPers.open;
    newPers.close.forEach((x) => delete oldPers[x]);
    newPers.open.forEach((x) => (oldPers[x] = newPers[x]));
    const keys = Object.keys(oldPers);
    oldPers.open = keys;
}
exports.mergeMarkup = mergeMarkup;
function sortClose(open, descrs) {
    if (open.length <= 1) {
        return open;
    }
    const result = [];
    for (let i = 0, descr; (descr = descrs[i]), open.length; i++) {
        if (!descr.close || !descr.close.length) {
            continue;
        }
        descr.close.forEach(function (x) {
            const index = open.indexOf(x);
            if (index !== -1) {
                result.unshift(x);
                open.splice(index, 1);
            }
        });
    }
    return result;
}
exports.sortClose = sortClose;
let PersonalityRanges_ = {};
let LastOpen_ = [];
function personalityMarkup(descrs) {
    PersonalityRanges_ = {};
    LastOpen_ = [];
    let result = [];
    const currentPers = {};
    for (let i = 0, descr; (descr = descrs[i]); i++) {
        let pause = null;
        const span = descr.descriptionSpan();
        const pers = descr.personality;
        const join = pers[EngineConst.personalityProps.JOIN];
        delete pers[EngineConst.personalityProps.JOIN];
        if (typeof pers[EngineConst.personalityProps.PAUSE] !== 'undefined') {
            pause = {
                [EngineConst.personalityProps.PAUSE]: pers[EngineConst.personalityProps.PAUSE]
            };
            delete pers[EngineConst.personalityProps.PAUSE];
        }
        const diff = personalityDiff_(pers, currentPers);
        appendMarkup_(result, span, diff, join, pause, true);
    }
    result = result.concat(finaliseMarkup_());
    result = simplifyMarkup_(result);
    return result;
}
exports.personalityMarkup = personalityMarkup;
function appendElement_(markup, element) {
    const last = markup[markup.length - 1];
    if (!last) {
        markup.push(element);
        return;
    }
    if (isSpanElement(element) && isSpanElement(last)) {
        if (typeof last.join === 'undefined') {
            last.span = last.span.concat(element.span);
            return;
        }
        const lstr = last['span'].pop();
        const fstr = element['span'].shift();
        last['span'].push(lstr + last.join + fstr);
        last['span'] = last['span'].concat(element.span);
        last.join = element.join;
        return;
    }
    if (isPauseElement(element) && isPauseElement(last)) {
        last.pause = mergePause_(last.pause, element.pause);
        return;
    }
    markup.push(element);
}
function simplifyMarkup_(markup) {
    const lastPers = {};
    const result = [];
    for (let i = 0, element; (element = markup[i]); i++) {
        if (!isMarkupElement(element)) {
            appendElement_(result, element);
            continue;
        }
        if (!element.close || element.close.length !== 1 || element.open.length) {
            copyValues_(element, lastPers);
            result.push(element);
            continue;
        }
        let nextElement = markup[i + 1];
        if (!nextElement || isSpanElement(nextElement)) {
            copyValues_(element, lastPers);
            result.push(element);
            continue;
        }
        const pauseElement = isPauseElement(nextElement) ? nextElement : null;
        if (pauseElement) {
            nextElement = markup[i + 2];
        }
        if (nextElement &&
            isMarkupElement(nextElement) &&
            nextElement.open[0] === element.close[0] &&
            !nextElement.close.length &&
            nextElement[nextElement.open[0]] === lastPers[nextElement.open[0]]) {
            if (pauseElement) {
                appendElement_(result, pauseElement);
                i = i + 2;
            }
            else {
                i = i + 1;
            }
        }
        else {
            copyValues_(element, lastPers);
            result.push(element);
        }
    }
    return result;
}
function copyValues_(from, to) {
    if (from['rate']) {
        to['rate'] = from['rate'];
    }
    if (from['pitch']) {
        to['pitch'] = from['pitch'];
    }
    if (from['volume']) {
        to['volume'] = from['volume'];
    }
}
function finaliseMarkup_() {
    const final = [];
    for (let i = LastOpen_.length - 1; i >= 0; i--) {
        const pers = LastOpen_[i];
        if (pers.length) {
            const markup = { open: [], close: [] };
            for (let j = 0; j < pers.length; j++) {
                const per = pers[j];
                markup.close.push(per);
                markup[per] = 0;
            }
            final.push(markup);
        }
    }
    return final;
}
function isMarkupElement(element) {
    return typeof element === 'object' && element.open;
}
exports.isMarkupElement = isMarkupElement;
function isPauseElement(element) {
    return (typeof element === 'object' &&
        Object.keys(element).length === 1 &&
        Object.keys(element)[0] === EngineConst.personalityProps.PAUSE);
}
exports.isPauseElement = isPauseElement;
function isSpanElement(element) {
    const keys = Object.keys(element);
    return (typeof element === 'object' &&
        ((keys.length === 1 && keys[0] === 'span') ||
            (keys.length === 2 &&
                ((keys[0] === 'span' && keys[1] === 'join') ||
                    (keys[1] === 'span' && keys[0] === 'join')))));
}
exports.isSpanElement = isSpanElement;
function appendMarkup_(markup, span, pers, join, pause, merge = false) {
    if (merge) {
        const last = markup[markup.length - 1];
        let oldJoin;
        if (last) {
            oldJoin = last[EngineConst.personalityProps.JOIN];
        }
        if (last && !span.speech && pause && isPauseElement(last)) {
            const pauseProp = EngineConst.personalityProps.PAUSE;
            last[pauseProp] = mergePause_(last[pauseProp], pause[pauseProp]);
            pause = null;
        }
        if (last &&
            span.speech &&
            Object.keys(pers).length === 0 &&
            isSpanElement(last)) {
            if (typeof oldJoin !== 'undefined') {
                const lastSpan = last['span'].pop();
                span = new span_1.Span(lastSpan.speech + oldJoin + span.speech, lastSpan.attributes);
            }
            last['span'].push(span);
            span = new span_1.Span('', {});
            last[EngineConst.personalityProps.JOIN] = join;
        }
    }
    if (Object.keys(pers).length !== 0) {
        markup.push(pers);
    }
    if (span.speech) {
        markup.push({ span: [span], join: join });
    }
    if (pause) {
        markup.push(pause);
    }
}
function personalityDiff_(current, old) {
    if (!old) {
        return current;
    }
    const result = {};
    for (const prop of EngineConst.personalityPropList) {
        const currentValue = current[prop];
        const oldValue = old[prop];
        if ((!currentValue && !oldValue) ||
            (currentValue && oldValue && currentValue === oldValue)) {
            continue;
        }
        const value = currentValue || 0;
        if (!isMarkupElement(result)) {
            result.open = [];
            result.close = [];
        }
        if (!currentValue) {
            result.close.push(prop);
        }
        if (!oldValue) {
            result.open.push(prop);
        }
        if (oldValue && currentValue) {
            result.close.push(prop);
            result.open.push(prop);
        }
        old[prop] = value;
        result[prop] = value;
        PersonalityRanges_[prop]
            ? PersonalityRanges_[prop].push(value)
            : (PersonalityRanges_[prop] = [value]);
    }
    if (isMarkupElement(result)) {
        let c = result.close.slice();
        while (c.length > 0) {
            let lo = LastOpen_.pop();
            const loNew = (0, base_util_1.setdifference)(lo, c);
            c = (0, base_util_1.setdifference)(c, lo);
            lo = loNew;
            if (c.length === 0) {
                if (lo.length !== 0) {
                    LastOpen_.push(lo);
                }
                continue;
            }
            if (lo.length === 0) {
                continue;
            }
            result.close = result.close.concat(lo);
            result.open = result.open.concat(lo);
            for (let i = 0, open; (open = lo[i]); i++) {
                result[open] = old[open];
            }
        }
        LastOpen_.push(result.open);
    }
    return result;
}


/***/ }),

/***/ 7052:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AuditoryDescription = void 0;
const grammar_1 = __webpack_require__(2105);
const span_1 = __webpack_require__(9536);
class AuditoryDescription {
    constructor({ context, text, userValue, annotation, attributes, personality, layout }) {
        this.context = context || '';
        this.text = text || '';
        this.userValue = userValue || '';
        this.annotation = annotation || '';
        this.attributes = attributes || {};
        this.personality = personality || {};
        this.layout = layout || '';
    }
    static create(args, flags = {}) {
        args.text = grammar_1.Grammar.getInstance().apply(args.text, flags);
        return new AuditoryDescription(args);
    }
    isEmpty() {
        return (this.context.length === 0 &&
            this.text.length === 0 &&
            this.userValue.length === 0 &&
            this.annotation.length === 0);
    }
    clone() {
        let personality;
        if (this.personality) {
            personality = {};
            for (const key in this.personality) {
                personality[key] = this.personality[key];
            }
        }
        let attributes;
        if (this.attributes) {
            attributes = {};
            for (const key in this.attributes) {
                attributes[key] = this.attributes[key];
            }
        }
        return new AuditoryDescription({
            context: this.context,
            text: this.text,
            userValue: this.userValue,
            annotation: this.annotation,
            personality: personality,
            attributes: attributes,
            layout: this.layout
        });
    }
    toString() {
        return ('AuditoryDescription(context="' +
            this.context +
            '" ' +
            ' text="' +
            this.text +
            '" ' +
            ' userValue="' +
            this.userValue +
            '" ' +
            ' annotation="' +
            this.annotation +
            '")');
    }
    descriptionString() {
        return this.context && this.text
            ? this.context + ' ' + this.text
            : this.context || this.text;
    }
    descriptionSpan() {
        return new span_1.Span(this.descriptionString(), this.attributes);
    }
    equals(that) {
        return (this.context === that.context &&
            this.text === that.text &&
            this.userValue === that.userValue &&
            this.annotation === that.annotation);
    }
}
exports.AuditoryDescription = AuditoryDescription;


/***/ }),

/***/ 8290:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isXml = exports.registerRenderer = exports.error = exports.finalize = exports.merge = exports.markup = exports.getSeparator = exports.setSeparator = void 0;
const engine_1 = __webpack_require__(5897);
const EngineConst = __webpack_require__(4440);
const acss_renderer_1 = __webpack_require__(4196);
const layout_renderer_1 = __webpack_require__(8639);
const punctuation_renderer_1 = __webpack_require__(8990);
const sable_renderer_1 = __webpack_require__(6660);
const span_1 = __webpack_require__(9536);
const ssml_renderer_1 = __webpack_require__(7504);
const ssml_step_renderer_1 = __webpack_require__(3757);
const string_renderer_1 = __webpack_require__(4032);
const xml_renderer_1 = __webpack_require__(2456);
const xmlInstance = new ssml_renderer_1.SsmlRenderer();
const renderers = new Map([
    [EngineConst.Markup.NONE, new string_renderer_1.StringRenderer()],
    [EngineConst.Markup.PUNCTUATION, new punctuation_renderer_1.PunctuationRenderer()],
    [EngineConst.Markup.LAYOUT, new layout_renderer_1.LayoutRenderer()],
    [EngineConst.Markup.ACSS, new acss_renderer_1.AcssRenderer()],
    [EngineConst.Markup.SABLE, new sable_renderer_1.SableRenderer()],
    [EngineConst.Markup.VOICEXML, xmlInstance],
    [EngineConst.Markup.SSML, xmlInstance],
    [EngineConst.Markup.SSML_STEP, new ssml_step_renderer_1.SsmlStepRenderer()]
]);
function setSeparator(sep) {
    const renderer = renderers.get(engine_1.default.getInstance().markup);
    if (renderer) {
        renderer.setSeparator(sep);
    }
}
exports.setSeparator = setSeparator;
function getSeparator() {
    const renderer = renderers.get(engine_1.default.getInstance().markup);
    return renderer ? renderer.getSeparator() : '';
}
exports.getSeparator = getSeparator;
function markup(descrs) {
    const renderer = renderers.get(engine_1.default.getInstance().markup);
    if (!renderer) {
        return '';
    }
    return renderer.markup(descrs);
}
exports.markup = markup;
function merge(strs) {
    const span = strs.map((s) => {
        return typeof s === 'string' ? new span_1.Span(s, {}) : s;
    });
    const renderer = renderers.get(engine_1.default.getInstance().markup);
    if (!renderer) {
        return strs.join();
    }
    return renderer.merge(span);
}
exports.merge = merge;
function finalize(str) {
    const renderer = renderers.get(engine_1.default.getInstance().markup);
    if (!renderer) {
        return str;
    }
    return renderer.finalize(str);
}
exports.finalize = finalize;
function error(key) {
    const renderer = renderers.get(engine_1.default.getInstance().markup);
    if (!renderer) {
        return '';
    }
    return renderer.error(key);
}
exports.error = error;
function registerRenderer(type, renderer) {
    renderers.set(type, renderer);
}
exports.registerRenderer = registerRenderer;
function isXml() {
    return renderers.get(engine_1.default.getInstance().markup) instanceof xml_renderer_1.XmlRenderer;
}
exports.isXml = isXml;


/***/ }),

/***/ 8639:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LayoutRenderer = void 0;
const debugger_1 = __webpack_require__(2057);
const DomUtil = __webpack_require__(5740);
const EngineConst = __webpack_require__(4440);
const AudioUtil = __webpack_require__(3706);
const xml_renderer_1 = __webpack_require__(2456);
class LayoutRenderer extends xml_renderer_1.XmlRenderer {
    finalize(str) {
        return setTwoDim(str);
    }
    pause(_pause) {
        return '';
    }
    prosodyElement(attr, value) {
        return attr === EngineConst.personalityProps.LAYOUT ? `<${value}>` : '';
    }
    closeTag(tag) {
        return `</${tag}>`;
    }
    markup(descrs) {
        const result = [];
        let content = [];
        for (const descr of descrs) {
            if (!descr.layout) {
                content.push(descr);
                continue;
            }
            result.push(this.processContent(content));
            content = [];
            const value = descr.layout;
            if (value.match(/^begin/)) {
                result.push('<' + value.replace(/^begin/, '') + '>');
                continue;
            }
            if (value.match(/^end/)) {
                result.push('</' + value.replace(/^end/, '') + '>');
                continue;
            }
            console.warn('Something went wrong with layout markup: ' + value);
        }
        result.push(this.processContent(content));
        return result.join('');
    }
    processContent(content) {
        const result = [];
        const markup = AudioUtil.personalityMarkup(content);
        for (let i = 0, descr; (descr = markup[i]); i++) {
            if (descr.span) {
                result.push(this.merge(descr.span));
                continue;
            }
            if (AudioUtil.isPauseElement(descr)) {
                continue;
            }
        }
        return result.join('');
    }
}
exports.LayoutRenderer = LayoutRenderer;
let twodExpr = '';
const handlers = {
    TABLE: handleTable,
    CASES: handleCases,
    CAYLEY: handleCayley,
    MATRIX: handleMatrix,
    CELL: recurseTree,
    FENCE: recurseTree,
    ROW: recurseTree,
    FRACTION: handleFraction,
    NUMERATOR: handleFractionPart,
    DENOMINATOR: handleFractionPart
};
function applyHandler(element) {
    const tag = DomUtil.tagName(element);
    const handler = handlers[tag];
    return handler ? handler(element) : element.textContent;
}
function setTwoDim(str) {
    twodExpr = '';
    const dom = DomUtil.parseInput(`<all>${str}</all>`);
    debugger_1.Debugger.getInstance().output(DomUtil.formatXml(dom.toString()));
    twodExpr = recurseTree(dom);
    return twodExpr;
}
function combineContent(str1, str2) {
    if (!str1 || !str2) {
        return str1 + str2;
    }
    const height1 = strHeight(str1);
    const height2 = strHeight(str2);
    const diff = height1 - height2;
    str1 = diff < 0 ? padCell(str1, height2, strWidth(str1)) : str1;
    str2 = diff > 0 ? padCell(str2, height1, strWidth(str2)) : str2;
    const lines1 = str1.split(/\r\n|\r|\n/);
    const lines2 = str2.split(/\r\n|\r|\n/);
    const result = [];
    for (let i = 0; i < lines1.length; i++) {
        result.push(lines1[i] + lines2[i]);
    }
    return result.join('\n');
}
function recurseTree(dom) {
    let result = '';
    for (const child of Array.from(dom.childNodes)) {
        if (child.nodeType === DomUtil.NodeType.TEXT_NODE) {
            result = combineContent(result, child.textContent);
            continue;
        }
        result = combineContent(result, applyHandler(child));
    }
    return result;
}
function strHeight(str) {
    return str.split(/\r\n|\r|\n/).length;
}
function strWidth(str) {
    return str.split(/\r\n|\r|\n/).reduce((max, x) => Math.max(x.length, max), 0);
}
function padHeight(str, height) {
    const padding = height - strHeight(str);
    return str + (padding > 0 ? new Array(padding + 1).join('\n') : '');
}
function padWidth(str, width) {
    const lines = str.split(/\r\n|\r|\n/);
    const result = [];
    for (const line of lines) {
        const padding = width - line.length;
        result.push(line + (padding > 0 ? new Array(padding + 1).join('⠀') : ''));
    }
    return result.join('\n');
}
function padCell(str, height, width) {
    str = padHeight(str, height);
    return padWidth(str, width);
}
function assembleRows(matrix) {
    const children = Array.from(matrix.childNodes);
    const mat = [];
    for (const row of children) {
        if (row.nodeType !== DomUtil.NodeType.ELEMENT_NODE) {
            continue;
        }
        mat.push(handleRow(row));
    }
    return mat;
}
function getMaxParameters(mat) {
    const maxHeight = mat.reduce((max, x) => Math.max(x.height, max), 0);
    const maxWidth = [];
    for (let i = 0; i < mat[0].width.length; i++) {
        maxWidth.push(mat.map((x) => x.width[i]).reduce((max, x) => Math.max(max, x), 0));
    }
    return [maxHeight, maxWidth];
}
function combineCells(mat, maxWidth) {
    const newMat = [];
    for (const row of mat) {
        if (row.height === 0) {
            continue;
        }
        const newCells = [];
        for (let i = 0; i < row.cells.length; i++) {
            newCells.push(padCell(row.cells[i], row.height, maxWidth[i]));
        }
        row.cells = newCells;
        newMat.push(row);
    }
    return newMat;
}
function combineRows(mat, maxHeight) {
    if (maxHeight === 1) {
        return mat
            .map((row) => row.lfence + row.cells.join(row.sep) + row.rfence)
            .join('\n');
    }
    const result = [];
    for (const row of mat) {
        const sep = verticalArrange(row.sep, row.height);
        let str = row.cells.shift();
        while (row.cells.length) {
            str = combineContent(str, sep);
            str = combineContent(str, row.cells.shift());
        }
        str = combineContent(verticalArrange(row.lfence, row.height), str);
        str = combineContent(str, verticalArrange(row.rfence, row.height));
        result.push(str);
        result.push(row.lfence + new Array(strWidth(str) - 3).join(row.sep) + row.rfence);
    }
    return result.slice(0, -1).join('\n');
}
function verticalArrange(char, height) {
    let str = '';
    while (height) {
        str += char + '\n';
        height--;
    }
    return str.slice(0, -1);
}
function getFence(node) {
    if (node.nodeType === DomUtil.NodeType.ELEMENT_NODE &&
        DomUtil.tagName(node) === 'FENCE') {
        return applyHandler(node);
    }
    return '';
}
function handleMatrix(matrix) {
    let mat = assembleRows(matrix);
    const [maxHeight, maxWidth] = getMaxParameters(mat);
    mat = combineCells(mat, maxWidth);
    return combineRows(mat, maxHeight);
}
function handleTable(table) {
    let mat = assembleRows(table);
    mat.forEach((row) => {
        row.cells = row.cells.slice(1).slice(0, -1);
        row.width = row.width.slice(1).slice(0, -1);
    });
    const [maxHeight, maxWidth] = getMaxParameters(mat);
    mat = combineCells(mat, maxWidth);
    return combineRows(mat, maxHeight);
}
function handleCases(cases) {
    let mat = assembleRows(cases);
    mat.forEach((row) => {
        row.cells = row.cells.slice(0, -1);
        row.width = row.width.slice(0, -1);
    });
    const [maxHeight, maxWidth] = getMaxParameters(mat);
    mat = combineCells(mat, maxWidth);
    return combineRows(mat, maxHeight);
}
function handleCayley(cayley) {
    let mat = assembleRows(cayley);
    mat.forEach((row) => {
        row.cells = row.cells.slice(1).slice(0, -1);
        row.width = row.width.slice(1).slice(0, -1);
        row.sep = row.sep + row.sep;
    });
    const [maxHeight, maxWidth] = getMaxParameters(mat);
    const bar = {
        lfence: '',
        rfence: '',
        cells: maxWidth.map((x) => '⠐' + new Array(x).join('⠒')),
        width: maxWidth,
        height: 1,
        sep: mat[0].sep
    };
    mat.splice(1, 0, bar);
    mat = combineCells(mat, maxWidth);
    return combineRows(mat, maxHeight);
}
function handleRow(row) {
    const children = Array.from(row.childNodes);
    const lfence = getFence(children[0]);
    const rfence = getFence(children[children.length - 1]);
    if (lfence) {
        children.shift();
    }
    if (rfence) {
        children.pop();
    }
    let sep = '';
    const cells = [];
    for (const child of children) {
        if (child.nodeType === DomUtil.NodeType.TEXT_NODE) {
            sep = child.textContent;
            continue;
        }
        const result = applyHandler(child);
        cells.push(result);
    }
    return {
        lfence: lfence,
        rfence: rfence,
        sep: sep,
        cells: cells,
        height: cells.reduce((max, x) => Math.max(strHeight(x), max), 0),
        width: cells.map(strWidth)
    };
}
function centerCell(cell, width) {
    const cw = strWidth(cell);
    const center = (width - cw) / 2;
    const [lpad, rpad] = Math.floor(center) === center
        ? [center, center]
        : [Math.floor(center), Math.ceil(center)];
    const lines = cell.split(/\r\n|\r|\n/);
    const result = [];
    const [lstr, rstr] = [
        new Array(lpad + 1).join('⠀'),
        new Array(rpad + 1).join('⠀')
    ];
    for (const line of lines) {
        result.push(lstr + line + rstr);
    }
    return result.join('\n');
}
function handleFraction(frac) {
    const [open, num, , den, close] = Array.from(frac.childNodes);
    const numerator = applyHandler(num);
    const denominator = applyHandler(den);
    const nwidth = strWidth(numerator);
    const dwidth = strWidth(denominator);
    let maxWidth = Math.max(nwidth, dwidth);
    const bar = open + new Array(maxWidth + 1).join('⠒') + close;
    maxWidth = bar.length;
    return (`${centerCell(numerator, maxWidth)}\n${bar}\n` +
        `${centerCell(denominator, maxWidth)}`);
}
function handleFractionPart(prt) {
    const fchild = prt.firstChild;
    const content = recurseTree(prt);
    if (fchild && fchild.nodeType === DomUtil.NodeType.ELEMENT_NODE) {
        if (DomUtil.tagName(fchild) === 'ENGLISH') {
            return '⠰' + content;
        }
        if (DomUtil.tagName(fchild) === 'NUMBER') {
            return '⠼' + content;
        }
    }
    return content;
}


/***/ }),

/***/ 182:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarkupRenderer = void 0;
const EngineConst = __webpack_require__(4440);
const abstract_audio_renderer_1 = __webpack_require__(3921);
class MarkupRenderer extends abstract_audio_renderer_1.AbstractAudioRenderer {
    constructor() {
        super(...arguments);
        this.ignoreElements = [EngineConst.personalityProps.LAYOUT];
        this.scaleFunction = null;
    }
    setScaleFunction(a, b, c, d, decimals = 0) {
        this.scaleFunction = (x) => {
            const delta = (x - a) / (b - a);
            const num = c * (1 - delta) + d * delta;
            return +(Math.round((num + 'e+' + decimals)) +
                'e-' +
                decimals);
        };
    }
    applyScaleFunction(value) {
        return this.scaleFunction ? this.scaleFunction(value) : value;
    }
    ignoreElement(key) {
        return this.ignoreElements.indexOf(key) !== -1;
    }
}
exports.MarkupRenderer = MarkupRenderer;


/***/ }),

/***/ 8990:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PunctuationRenderer = void 0;
const EngineConst = __webpack_require__(4440);
const abstract_audio_renderer_1 = __webpack_require__(3921);
const AudioUtil = __webpack_require__(3706);
class PunctuationRenderer extends abstract_audio_renderer_1.AbstractAudioRenderer {
    markup(descrs) {
        const markup = AudioUtil.personalityMarkup(descrs);
        let str = '';
        let pause = null;
        let span = false;
        for (let i = 0, descr; (descr = markup[i]); i++) {
            if (AudioUtil.isMarkupElement(descr)) {
                continue;
            }
            if (AudioUtil.isPauseElement(descr)) {
                if (span) {
                    pause = AudioUtil.mergePause(pause, descr, Math.max);
                }
                continue;
            }
            if (pause) {
                str += this.pause(pause[EngineConst.personalityProps.PAUSE]);
                pause = null;
            }
            str += (span ? this.getSeparator() : '') + this.merge(descr.span);
            span = true;
        }
        return str;
    }
    pause(pause) {
        let newPause;
        if (typeof pause === 'number') {
            if (pause <= 250) {
                newPause = 'short';
            }
            else if (pause <= 500) {
                newPause = 'medium';
            }
            else {
                newPause = 'long';
            }
        }
        else {
            newPause = pause;
        }
        return PunctuationRenderer.PAUSE_PUNCTUATION.get(newPause) || '';
    }
}
exports.PunctuationRenderer = PunctuationRenderer;
PunctuationRenderer.PAUSE_PUNCTUATION = new Map([
    ['short', ','],
    ['medium', ';'],
    ['long', '.']
]);


/***/ }),

/***/ 6660:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SableRenderer = void 0;
const EngineConst = __webpack_require__(4440);
const xml_renderer_1 = __webpack_require__(2456);
class SableRenderer extends xml_renderer_1.XmlRenderer {
    finalize(str) {
        return ('<?xml version="1.0"?>' +
            '<!DOCTYPE SABLE PUBLIC "-//SABLE//DTD SABLE speech mark up//EN"' +
            ' "Sable.v0_2.dtd" []><SABLE>' +
            this.getSeparator() +
            str +
            this.getSeparator() +
            '</SABLE>');
    }
    pause(pause) {
        return ('<BREAK ' +
            'MSEC="' +
            this.pauseValue(pause[EngineConst.personalityProps.PAUSE]) +
            '"/>');
    }
    prosodyElement(tag, value) {
        value = this.applyScaleFunction(value);
        switch (tag) {
            case EngineConst.personalityProps.PITCH:
                return '<PITCH RANGE="' + value + '%">';
            case EngineConst.personalityProps.RATE:
                return '<RATE SPEED="' + value + '%">';
            case EngineConst.personalityProps.VOLUME:
                return '<VOLUME LEVEL="' + value + '%">';
            default:
                return '<' + tag.toUpperCase() + ' VALUE="' + value + '">';
        }
    }
    closeTag(tag) {
        return '</' + tag.toUpperCase() + '>';
    }
}
exports.SableRenderer = SableRenderer;


/***/ }),

/***/ 9536:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Span = void 0;
class Span {
    constructor(speech, attributes) {
        this.speech = speech;
        this.attributes = attributes;
    }
}
exports.Span = Span;


/***/ }),

/***/ 7504:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SsmlRenderer = void 0;
const engine_1 = __webpack_require__(5897);
const EngineConst = __webpack_require__(4440);
const xml_renderer_1 = __webpack_require__(2456);
class SsmlRenderer extends xml_renderer_1.XmlRenderer {
    finalize(str) {
        return ('<?xml version="1.0"?><speak version="1.1"' +
            ' xmlns="http://www.w3.org/2001/10/synthesis">' +
            '<prosody rate="' +
            engine_1.default.getInstance().getRate() +
            '%">' +
            this.getSeparator() +
            str +
            this.getSeparator() +
            '</prosody></speak>');
    }
    pause(pause) {
        return ('<break ' +
            'time="' +
            this.pauseValue(pause[EngineConst.personalityProps.PAUSE]) +
            'ms"/>');
    }
    prosodyElement(attr, value) {
        value = Math.floor(this.applyScaleFunction(value));
        const valueStr = value < 0 ? value.toString() : '+' + value.toString();
        return ('<prosody ' +
            attr.toLowerCase() +
            '="' +
            valueStr +
            (attr === EngineConst.personalityProps.VOLUME ? '>' : '%">'));
    }
    closeTag(_tag) {
        return '</prosody>';
    }
}
exports.SsmlRenderer = SsmlRenderer;


/***/ }),

/***/ 3757:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SsmlStepRenderer = void 0;
const ssml_renderer_1 = __webpack_require__(7504);
class SsmlStepRenderer extends ssml_renderer_1.SsmlRenderer {
    markup(descrs) {
        SsmlStepRenderer.MARKS = {};
        return super.markup(descrs);
    }
    merge(spans) {
        const result = [];
        for (let i = 0; i < spans.length; i++) {
            const span = spans[i];
            const id = span.attributes['extid'];
            if (id && !SsmlStepRenderer.MARKS[id]) {
                result.push('<mark name="' + id + '"/>');
                SsmlStepRenderer.MARKS[id] = true;
            }
            if (span.speech.length === 1 && span.speech.match(/[a-zA-Z]/)) {
                result.push('<say-as interpret-as="' +
                    SsmlStepRenderer.CHARACTER_ATTR +
                    '">' +
                    span.speech +
                    '</say-as>');
            }
            else {
                result.push(span.speech);
            }
        }
        return result.join(this.getSeparator());
    }
}
exports.SsmlStepRenderer = SsmlStepRenderer;
SsmlStepRenderer.CHARACTER_ATTR = 'character';
SsmlStepRenderer.MARKS = {};


/***/ }),

/***/ 4032:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StringRenderer = void 0;
const abstract_audio_renderer_1 = __webpack_require__(3921);
const audio_util_1 = __webpack_require__(3706);
class StringRenderer extends abstract_audio_renderer_1.AbstractAudioRenderer {
    markup(descrs) {
        let str = '';
        const markup = (0, audio_util_1.personalityMarkup)(descrs);
        const clean = markup.filter((x) => x.span);
        if (!clean.length) {
            return str;
        }
        const len = clean.length - 1;
        for (let i = 0, descr; (descr = clean[i]); i++) {
            if (descr.span) {
                str += this.merge(descr.span);
            }
            if (i >= len) {
                continue;
            }
            const join = descr.join;
            str += typeof join === 'undefined' ? this.getSeparator() : join;
        }
        return str;
    }
}
exports.StringRenderer = StringRenderer;


/***/ }),

/***/ 2456:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.XmlRenderer = void 0;
const engine_1 = __webpack_require__(5897);
const AudioUtil = __webpack_require__(3706);
const markup_renderer_1 = __webpack_require__(182);
class XmlRenderer extends markup_renderer_1.MarkupRenderer {
    markup(descrs) {
        this.setScaleFunction(-2, 2, -100, 100, 2);
        const markup = AudioUtil.personalityMarkup(descrs);
        const result = [];
        const currentOpen = [];
        for (let i = 0, descr; (descr = markup[i]); i++) {
            if (descr.span) {
                result.push(this.merge(descr.span));
                continue;
            }
            if (AudioUtil.isPauseElement(descr)) {
                result.push(this.pause(descr));
                continue;
            }
            if (descr.close.length) {
                for (let j = 0; j < descr.close.length; j++) {
                    const last = currentOpen.pop();
                    if (descr.close.indexOf(last) === -1) {
                        throw new engine_1.SREError('Unknown closing markup element: ' + last);
                    }
                    result.push(this.closeTag(last));
                }
            }
            if (descr.open.length) {
                const open = AudioUtil.sortClose(descr.open.slice(), markup.slice(i + 1));
                open.forEach((o) => {
                    result.push(this.prosodyElement(o, descr[o]));
                    currentOpen.push(o);
                });
            }
        }
        return result.join(' ');
    }
}
exports.XmlRenderer = XmlRenderer;


/***/ }),

/***/ 707:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.union = exports.setdifference = exports.interleaveLists = exports.removeEmpty = void 0;
function removeEmpty(strs) {
    return strs.filter((str) => str);
}
exports.removeEmpty = removeEmpty;
function interleaveLists(list1, list2) {
    const result = [];
    while (list1.length || list2.length) {
        list1.length && result.push(list1.shift());
        list2.length && result.push(list2.shift());
    }
    return result;
}
exports.interleaveLists = interleaveLists;
function setdifference(a, b) {
    if (!a) {
        return [];
    }
    if (!b) {
        return a;
    }
    return a.filter((x) => b.indexOf(x) < 0);
}
exports.setdifference = setdifference;
function union(a, b) {
    if (!a || !b) {
        return a || b || [];
    }
    return a.concat(setdifference(b, a));
}
exports.union = union;


/***/ }),

/***/ 2139:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadScript = exports.loadMapsForIE_ = exports.installWGXpath_ = exports.loadWGXpath_ = exports.mapsForIE = exports.detectEdge = exports.detectIE = void 0;
const system_external_1 = __webpack_require__(2315);
const xpath_util_1 = __webpack_require__(5274);
function detectIE() {
    const isIE = typeof window !== 'undefined' &&
        'ActiveXObject' in window &&
        'clipboardData' in window;
    if (!isIE) {
        return false;
    }
    loadMapsForIE_();
    loadWGXpath_();
    return true;
}
exports.detectIE = detectIE;
function detectEdge() {
    var _a;
    const isEdge = typeof window !== 'undefined' &&
        'MSGestureEvent' in window &&
        ((_a = window.chrome) === null || _a === void 0 ? void 0 : _a.loadTimes) === null;
    if (!isEdge) {
        return false;
    }
    document.evaluate = null;
    loadWGXpath_(true);
    return true;
}
exports.detectEdge = detectEdge;
exports.mapsForIE = null;
function loadWGXpath_(opt_isEdge) {
    loadScript(system_external_1.default.WGXpath);
    installWGXpath_(opt_isEdge);
}
exports.loadWGXpath_ = loadWGXpath_;
function installWGXpath_(opt_isEdge, opt_count) {
    let count = opt_count || 1;
    if (typeof wgxpath === 'undefined' && count < 10) {
        setTimeout(function () {
            installWGXpath_(opt_isEdge, count++);
        }, 200);
        return;
    }
    if (count >= 10) {
        return;
    }
    system_external_1.default.wgxpath = wgxpath;
    opt_isEdge
        ? system_external_1.default.wgxpath.install({ document: document })
        : system_external_1.default.wgxpath.install();
    xpath_util_1.xpath.evaluate = document.evaluate;
    xpath_util_1.xpath.result = XPathResult;
    xpath_util_1.xpath.createNSResolver = document.createNSResolver;
}
exports.installWGXpath_ = installWGXpath_;
function loadMapsForIE_() {
    loadScript(system_external_1.default.mathmapsIePath);
}
exports.loadMapsForIE_ = loadMapsForIE_;
function loadScript(src) {
    const scr = system_external_1.default.document.createElement('script');
    scr.type = 'text/javascript';
    scr.src = src;
    system_external_1.default.document.head
        ? system_external_1.default.document.head.appendChild(scr)
        : system_external_1.default.document.body.appendChild(scr);
}
exports.loadScript = loadScript;


/***/ }),

/***/ 2057:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Debugger = void 0;
const system_external_1 = __webpack_require__(2315);
class Debugger {
    constructor() {
        this.isActive_ = false;
        this.outputFunction_ = console.info;
        this.stream_ = null;
    }
    static getInstance() {
        Debugger.instance = Debugger.instance || new Debugger();
        return Debugger.instance;
    }
    init(opt_file) {
        if (opt_file) {
            this.startDebugFile_(opt_file);
        }
        this.isActive_ = true;
    }
    output(...args) {
        if (this.isActive_) {
            this.output_(args);
        }
    }
    generateOutput(func) {
        if (this.isActive_) {
            this.output_(func.apply(func, []));
        }
    }
    exit(callback = () => { }) {
        if (this.isActive_ && this.stream_) {
            this.stream_.end('', '', callback);
        }
    }
    startDebugFile_(filename) {
        this.stream_ = system_external_1.default.fs.createWriteStream(filename);
        this.outputFunction_ = function (...args) {
            this.stream_.write(args.join(' '));
            this.stream_.write('\n');
        }.bind(this);
        this.stream_.on('error', function (_error) {
            console.info('Invalid log file. Debug information sent to console.');
            this.outputFunction_ = console.info;
        }.bind(this));
        this.stream_.on('finish', function () {
            console.info('Finalizing debug file.');
        });
    }
    output_(outputList) {
        this.outputFunction_.apply(console.info === this.outputFunction_ ? console : this.outputFunction_, ['Speech Rule Engine Debugger:'].concat(outputList));
    }
}
exports.Debugger = Debugger;


/***/ }),

/***/ 5740:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.serializeXml = exports.cloneNode = exports.tagName = exports.querySelectorAll = exports.querySelectorAllByAttrValue = exports.querySelectorAllByAttr = exports.formatXml = exports.createTextNode = exports.createElementNS = exports.createElement = exports.replaceNode = exports.NodeType = exports.parseInput = exports.XML_ENTITIES = exports.trimInput_ = exports.toArray = void 0;
const engine_1 = __webpack_require__(5897);
const EngineConst = __webpack_require__(4440);
const system_external_1 = __webpack_require__(2315);
const XpathUtil = __webpack_require__(5274);
function toArray(nodeList) {
    const nodeArray = [];
    for (let i = 0, m = nodeList.length; i < m; i++) {
        nodeArray.push(nodeList[i]);
    }
    return nodeArray;
}
exports.toArray = toArray;
function trimInput_(input) {
    input = input.replace(/&nbsp;/g, ' ');
    return input.replace(/>[ \f\n\r\t\v\u200b]+</g, '><').trim();
}
exports.trimInput_ = trimInput_;
exports.XML_ENTITIES = {
    '&lt;': true,
    '&gt;': true,
    '&amp;': true,
    '&quot;': true,
    '&apos;': true
};
function parseInput(input) {
    const dp = new system_external_1.default.xmldom.DOMParser();
    const clean_input = trimInput_(input);
    const allValues = clean_input.match(/&(?!lt|gt|amp|quot|apos)\w+;/g);
    const html = !!allValues;
    if (!clean_input) {
        throw new Error('Empty input!');
    }
    try {
        const doc = dp.parseFromString(clean_input, html ? 'text/html' : 'text/xml');
        if (engine_1.default.getInstance().mode === EngineConst.Mode.HTTP) {
            XpathUtil.xpath.currentDocument = doc;
            return html ? doc.body.childNodes[0] : doc.documentElement;
        }
        return doc.documentElement;
    }
    catch (err) {
        throw new engine_1.SREError('Illegal input: ' + err.message);
    }
}
exports.parseInput = parseInput;
var NodeType;
(function (NodeType) {
    NodeType[NodeType["ELEMENT_NODE"] = 1] = "ELEMENT_NODE";
    NodeType[NodeType["ATTRIBUTE_NODE"] = 2] = "ATTRIBUTE_NODE";
    NodeType[NodeType["TEXT_NODE"] = 3] = "TEXT_NODE";
    NodeType[NodeType["CDATA_SECTION_NODE"] = 4] = "CDATA_SECTION_NODE";
    NodeType[NodeType["ENTITY_REFERENCE_NODE"] = 5] = "ENTITY_REFERENCE_NODE";
    NodeType[NodeType["ENTITY_NODE"] = 6] = "ENTITY_NODE";
    NodeType[NodeType["PROCESSING_INSTRUCTION_NODE"] = 7] = "PROCESSING_INSTRUCTION_NODE";
    NodeType[NodeType["COMMENT_NODE"] = 8] = "COMMENT_NODE";
    NodeType[NodeType["DOCUMENT_NODE"] = 9] = "DOCUMENT_NODE";
    NodeType[NodeType["DOCUMENT_TYPE_NODE"] = 10] = "DOCUMENT_TYPE_NODE";
    NodeType[NodeType["DOCUMENT_FRAGMENT_NODE"] = 11] = "DOCUMENT_FRAGMENT_NODE";
    NodeType[NodeType["NOTATION_NODE"] = 12] = "NOTATION_NODE";
})(NodeType = exports.NodeType || (exports.NodeType = {}));
function replaceNode(oldNode, newNode) {
    if (!oldNode.parentNode) {
        return;
    }
    oldNode.parentNode.insertBefore(newNode, oldNode);
    oldNode.parentNode.removeChild(oldNode);
}
exports.replaceNode = replaceNode;
function createElement(tag) {
    return system_external_1.default.document.createElement(tag);
}
exports.createElement = createElement;
function createElementNS(url, tag) {
    return system_external_1.default.document.createElementNS(url, tag);
}
exports.createElementNS = createElementNS;
function createTextNode(content) {
    return system_external_1.default.document.createTextNode(content);
}
exports.createTextNode = createTextNode;
function formatXml(xml) {
    let formatted = '';
    let reg = /(>)(<)(\/*)/g;
    xml = xml.replace(reg, '$1\r\n$2$3');
    let pad = 0;
    let split = xml.split('\r\n');
    reg = /(\.)*(<)(\/*)/g;
    split = split
        .map((x) => x.replace(reg, '$1\r\n$2$3').split('\r\n'))
        .reduce((x, y) => x.concat(y), []);
    while (split.length) {
        let node = split.shift();
        if (!node) {
            continue;
        }
        let indent = 0;
        if (node.match(/^<\w[^>/]*>[^>]+$/)) {
            const match = matchingStartEnd(node, split[0]);
            if (match[0]) {
                if (match[1]) {
                    node = node + split.shift().slice(0, -match[1].length);
                    if (match[1].trim()) {
                        split.unshift(match[1]);
                    }
                }
                else {
                    node = node + split.shift();
                }
            }
            else {
                indent = 1;
            }
        }
        else if (node.match(/^<\/\w/)) {
            if (pad !== 0) {
                pad -= 1;
            }
        }
        else if (node.match(/^<\w[^>]*[^/]>.*$/)) {
            indent = 1;
        }
        else if (node.match(/^<\w[^>]*\/>.+$/)) {
            const position = node.indexOf('>') + 1;
            const rest = node.slice(position);
            if (rest.trim()) {
                split.unshift();
            }
            node = node.slice(0, position);
        }
        else {
            indent = 0;
        }
        formatted += new Array(pad + 1).join('  ') + node + '\r\n';
        pad += indent;
    }
    return formatted;
}
exports.formatXml = formatXml;
function matchingStartEnd(start, end) {
    if (!end) {
        return [false, ''];
    }
    const tag1 = start.match(/^<([^> ]+).*>/);
    const tag2 = end.match(/^<\/([^>]+)>(.*)/);
    return tag1 && tag2 && tag1[1] === tag2[1] ? [true, tag2[2]] : [false, ''];
}
function querySelectorAllByAttr(node, attr) {
    return node.querySelectorAll
        ? toArray(node.querySelectorAll(`[${attr}]`))
        : XpathUtil.evalXPath(`.//*[@${attr}]`, node);
}
exports.querySelectorAllByAttr = querySelectorAllByAttr;
function querySelectorAllByAttrValue(node, attr, value) {
    return node.querySelectorAll
        ? toArray(node.querySelectorAll(`[${attr}="${value}"]`))
        : XpathUtil.evalXPath(`.//*[@${attr}="${value}"]`, node);
}
exports.querySelectorAllByAttrValue = querySelectorAllByAttrValue;
function querySelectorAll(node, tag) {
    return node.querySelectorAll
        ? toArray(node.querySelectorAll(tag))
        : XpathUtil.evalXPath(`.//${tag}`, node);
}
exports.querySelectorAll = querySelectorAll;
function tagName(node) {
    return node.tagName.toUpperCase();
}
exports.tagName = tagName;
function cloneNode(node) {
    return node.cloneNode(true);
}
exports.cloneNode = cloneNode;
function serializeXml(node) {
    const xmls = new system_external_1.default.xmldom.XMLSerializer();
    return xmls.serializeToString(node);
}
exports.serializeXml = serializeXml;


/***/ }),

/***/ 5897:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnginePromise = exports.SREError = void 0;
const Dcstr = __webpack_require__(1676);
const EngineConst = __webpack_require__(4440);
const debugger_1 = __webpack_require__(2057);
const variables_1 = __webpack_require__(1377);
class SREError extends Error {
    constructor(message = '') {
        super();
        this.message = message;
        this.name = 'SRE Error';
    }
}
exports.SREError = SREError;
class Engine {
    constructor() {
        this.customLoader = null;
        this.parsers = {};
        this.comparator = null;
        this.mode = EngineConst.Mode.SYNC;
        this.init = true;
        this.delay = false;
        this.comparators = {};
        this.domain = 'mathspeak';
        this.style = Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.STYLE];
        this._defaultLocale = Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.LOCALE];
        this.locale = this.defaultLocale;
        this.subiso = '';
        this.modality = Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.MODALITY];
        this.speech = EngineConst.Speech.NONE;
        this.markup = EngineConst.Markup.NONE;
        this.walker = 'Table';
        this.structure = false;
        this.ruleSets = [];
        this.strict = false;
        this.isIE = false;
        this.isEdge = false;
        this.rate = '100';
        this.pprint = false;
        this.config = false;
        this.rules = '';
        this.prune = '';
        this.evaluator = Engine.defaultEvaluator;
        this.defaultParser = new Dcstr.DynamicCstrParser(Dcstr.DynamicCstr.DEFAULT_ORDER);
        this.parser = this.defaultParser;
        this.dynamicCstr = Dcstr.DynamicCstr.defaultCstr();
    }
    set defaultLocale(loc) {
        this._defaultLocale = variables_1.Variables.ensureLocale(loc, this._defaultLocale);
    }
    get defaultLocale() {
        return this._defaultLocale;
    }
    static getInstance() {
        Engine.instance = Engine.instance || new Engine();
        return Engine.instance;
    }
    static defaultEvaluator(str, _cstr) {
        return str;
    }
    static evaluateNode(node) {
        return Engine.nodeEvaluator(node);
    }
    getRate() {
        const numeric = parseInt(this.rate, 10);
        return isNaN(numeric) ? 100 : numeric;
    }
    setDynamicCstr(opt_dynamic) {
        if (this.defaultLocale) {
            Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.LOCALE] = this.defaultLocale;
        }
        if (opt_dynamic) {
            const keys = Object.keys(opt_dynamic);
            for (let i = 0; i < keys.length; i++) {
                const feature = keys[i];
                if (Dcstr.DynamicCstr.DEFAULT_ORDER.indexOf(feature) !== -1) {
                    const value = opt_dynamic[feature];
                    this[feature] = value;
                }
            }
        }
        EngineConst.DOMAIN_TO_STYLES[this.domain] = this.style;
        const dynamic = [this.locale, this.modality, this.domain, this.style].join('.');
        const fallback = Dcstr.DynamicProperties.createProp([Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.LOCALE]], [Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.MODALITY]], [Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.DOMAIN]], [Dcstr.DynamicCstr.DEFAULT_VALUES[Dcstr.Axis.STYLE]]);
        const comparator = this.comparators[this.domain];
        const parser = this.parsers[this.domain];
        this.parser = parser ? parser : this.defaultParser;
        this.dynamicCstr = this.parser.parse(dynamic);
        this.dynamicCstr.updateProperties(fallback.getProperties());
        this.comparator = comparator
            ? comparator()
            : new Dcstr.DefaultComparator(this.dynamicCstr);
    }
    configurate(feature) {
        if (this.mode === EngineConst.Mode.HTTP && !this.config) {
            configBlocks(feature);
            this.config = true;
        }
        configFeature(feature);
    }
    setCustomLoader(fn) {
        if (fn) {
            this.customLoader = fn;
        }
    }
}
exports["default"] = Engine;
Engine.BINARY_FEATURES = ['strict', 'structure', 'pprint'];
Engine.STRING_FEATURES = [
    'markup',
    'style',
    'domain',
    'speech',
    'walker',
    'defaultLocale',
    'locale',
    'delay',
    'modality',
    'rate',
    'rules',
    'subiso',
    'prune'
];
Engine.nodeEvaluator = function (_node) {
    return [];
};
function configFeature(feature) {
    if (typeof SREfeature !== 'undefined') {
        for (const [name, feat] of Object.entries(SREfeature)) {
            feature[name] = feat;
        }
    }
}
function configBlocks(feature) {
    const scripts = document.documentElement.querySelectorAll('script[type="text/x-sre-config"]');
    for (let i = 0, m = scripts.length; i < m; i++) {
        let inner;
        try {
            inner = scripts[i].innerHTML;
            const config = JSON.parse(inner);
            for (const f in config) {
                feature[f] = config[f];
            }
        }
        catch (err) {
            debugger_1.Debugger.getInstance().output('Illegal configuration ', inner);
        }
    }
}
class EnginePromise {
    static get(locale = Engine.getInstance().locale) {
        return EnginePromise.promises[locale] || Promise.resolve('');
    }
    static getall() {
        return Promise.all(Object.values(EnginePromise.promises));
    }
}
exports.EnginePromise = EnginePromise;
EnginePromise.loaded = {};
EnginePromise.promises = {};


/***/ }),

/***/ 4440:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DOMAIN_TO_STYLES = exports.Markup = exports.Speech = exports.personalityPropList = exports.personalityProps = exports.Mode = void 0;
var Mode;
(function (Mode) {
    Mode["SYNC"] = "sync";
    Mode["ASYNC"] = "async";
    Mode["HTTP"] = "http";
})(Mode = exports.Mode || (exports.Mode = {}));
var personalityProps;
(function (personalityProps) {
    personalityProps["PITCH"] = "pitch";
    personalityProps["RATE"] = "rate";
    personalityProps["VOLUME"] = "volume";
    personalityProps["PAUSE"] = "pause";
    personalityProps["JOIN"] = "join";
    personalityProps["LAYOUT"] = "layout";
})(personalityProps = exports.personalityProps || (exports.personalityProps = {}));
exports.personalityPropList = [
    personalityProps.PITCH,
    personalityProps.RATE,
    personalityProps.VOLUME,
    personalityProps.PAUSE,
    personalityProps.JOIN
];
var Speech;
(function (Speech) {
    Speech["NONE"] = "none";
    Speech["SHALLOW"] = "shallow";
    Speech["DEEP"] = "deep";
})(Speech = exports.Speech || (exports.Speech = {}));
var Markup;
(function (Markup) {
    Markup["NONE"] = "none";
    Markup["LAYOUT"] = "layout";
    Markup["PUNCTUATION"] = "punctuation";
    Markup["SSML"] = "ssml";
    Markup["SSML_STEP"] = "ssml_step";
    Markup["ACSS"] = "acss";
    Markup["SABLE"] = "sable";
    Markup["VOICEXML"] = "voicexml";
})(Markup = exports.Markup || (exports.Markup = {}));
exports.DOMAIN_TO_STYLES = {
    mathspeak: 'default',
    clearspeak: 'default'
};


/***/ }),

/***/ 6828:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setup = void 0;
const L10n = __webpack_require__(7491);
const MathMap = __webpack_require__(6141);
const BrowserUtil = __webpack_require__(2139);
const engine_1 = __webpack_require__(5897);
const FileUtil = __webpack_require__(7248);
const system_external_1 = __webpack_require__(2315);
function setup(feature) {
    return __awaiter(this, void 0, void 0, function* () {
        const engine = engine_1.default.getInstance();
        if (feature.domain === 'default' &&
            (feature.modality === 'speech' ||
                !feature.modality ||
                engine.modality === 'speech')) {
            feature.domain = 'mathspeak';
        }
        const setIf = (feat) => {
            if (typeof feature[feat] !== 'undefined') {
                engine[feat] = !!feature[feat];
            }
        };
        const setMulti = (feat) => {
            if (typeof feature[feat] !== 'undefined') {
                engine[feat] = feature[feat];
            }
        };
        setMulti('mode');
        engine.configurate(feature);
        engine_1.default.BINARY_FEATURES.forEach(setIf);
        engine_1.default.STRING_FEATURES.forEach(setMulti);
        if (feature.json) {
            system_external_1.default.jsonPath = FileUtil.makePath(feature.json);
        }
        if (feature.xpath) {
            system_external_1.default.WGXpath = feature.xpath;
        }
        engine.setCustomLoader(feature.custom);
        setupBrowsers(engine);
        L10n.setLocale();
        engine.setDynamicCstr();
        if (engine.init) {
            engine_1.EnginePromise.promises['init'] = new Promise((res, _rej) => {
                setTimeout(() => {
                    res('init');
                }, 10);
            });
            engine.init = false;
            return engine_1.EnginePromise.get();
        }
        if (engine.delay) {
            engine.delay = false;
            return engine_1.EnginePromise.get();
        }
        return MathMap.loadLocale();
    });
}
exports.setup = setup;
function setupBrowsers(engine) {
    engine.isIE = BrowserUtil.detectIE();
    engine.isEdge = BrowserUtil.detectEdge();
}


/***/ }),

/***/ 8496:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Event = exports.EventType = exports.Move = exports.KeyCode = void 0;
var KeyCode;
(function (KeyCode) {
    KeyCode[KeyCode["ENTER"] = 13] = "ENTER";
    KeyCode[KeyCode["ESC"] = 27] = "ESC";
    KeyCode[KeyCode["SPACE"] = 32] = "SPACE";
    KeyCode[KeyCode["PAGE_UP"] = 33] = "PAGE_UP";
    KeyCode[KeyCode["PAGE_DOWN"] = 34] = "PAGE_DOWN";
    KeyCode[KeyCode["END"] = 35] = "END";
    KeyCode[KeyCode["HOME"] = 36] = "HOME";
    KeyCode[KeyCode["LEFT"] = 37] = "LEFT";
    KeyCode[KeyCode["UP"] = 38] = "UP";
    KeyCode[KeyCode["RIGHT"] = 39] = "RIGHT";
    KeyCode[KeyCode["DOWN"] = 40] = "DOWN";
    KeyCode[KeyCode["TAB"] = 9] = "TAB";
    KeyCode[KeyCode["LESS"] = 188] = "LESS";
    KeyCode[KeyCode["GREATER"] = 190] = "GREATER";
    KeyCode[KeyCode["DASH"] = 189] = "DASH";
    KeyCode[KeyCode["ZERO"] = 48] = "ZERO";
    KeyCode[KeyCode["ONE"] = 49] = "ONE";
    KeyCode[KeyCode["TWO"] = 50] = "TWO";
    KeyCode[KeyCode["THREE"] = 51] = "THREE";
    KeyCode[KeyCode["FOUR"] = 52] = "FOUR";
    KeyCode[KeyCode["FIVE"] = 53] = "FIVE";
    KeyCode[KeyCode["SIX"] = 54] = "SIX";
    KeyCode[KeyCode["SEVEN"] = 55] = "SEVEN";
    KeyCode[KeyCode["EIGHT"] = 56] = "EIGHT";
    KeyCode[KeyCode["NINE"] = 57] = "NINE";
    KeyCode[KeyCode["A"] = 65] = "A";
    KeyCode[KeyCode["B"] = 66] = "B";
    KeyCode[KeyCode["C"] = 67] = "C";
    KeyCode[KeyCode["D"] = 68] = "D";
    KeyCode[KeyCode["E"] = 69] = "E";
    KeyCode[KeyCode["F"] = 70] = "F";
    KeyCode[KeyCode["G"] = 71] = "G";
    KeyCode[KeyCode["H"] = 72] = "H";
    KeyCode[KeyCode["I"] = 73] = "I";
    KeyCode[KeyCode["J"] = 74] = "J";
    KeyCode[KeyCode["K"] = 75] = "K";
    KeyCode[KeyCode["L"] = 76] = "L";
    KeyCode[KeyCode["M"] = 77] = "M";
    KeyCode[KeyCode["N"] = 78] = "N";
    KeyCode[KeyCode["O"] = 79] = "O";
    KeyCode[KeyCode["P"] = 80] = "P";
    KeyCode[KeyCode["Q"] = 81] = "Q";
    KeyCode[KeyCode["R"] = 82] = "R";
    KeyCode[KeyCode["S"] = 83] = "S";
    KeyCode[KeyCode["T"] = 84] = "T";
    KeyCode[KeyCode["U"] = 85] = "U";
    KeyCode[KeyCode["V"] = 86] = "V";
    KeyCode[KeyCode["W"] = 87] = "W";
    KeyCode[KeyCode["X"] = 88] = "X";
    KeyCode[KeyCode["Y"] = 89] = "Y";
    KeyCode[KeyCode["Z"] = 90] = "Z";
})(KeyCode = exports.KeyCode || (exports.KeyCode = {}));
exports.Move = new Map([
    [13, 'ENTER'],
    [27, 'ESC'],
    [32, 'SPACE'],
    [33, 'PAGE_UP'],
    [34, 'PAGE_DOWN'],
    [35, 'END'],
    [36, 'HOME'],
    [37, 'LEFT'],
    [38, 'UP'],
    [39, 'RIGHT'],
    [40, 'DOWN'],
    [9, 'TAB'],
    [188, 'LESS'],
    [190, 'GREATER'],
    [189, 'DASH'],
    [48, 'ZERO'],
    [49, 'ONE'],
    [50, 'TWO'],
    [51, 'THREE'],
    [52, 'FOUR'],
    [53, 'FIVE'],
    [54, 'SIX'],
    [55, 'SEVEN'],
    [56, 'EIGHT'],
    [57, 'NINE'],
    [65, 'A'],
    [66, 'B'],
    [67, 'C'],
    [68, 'D'],
    [69, 'E'],
    [70, 'F'],
    [71, 'G'],
    [72, 'H'],
    [73, 'I'],
    [74, 'J'],
    [75, 'K'],
    [76, 'L'],
    [77, 'M'],
    [78, 'N'],
    [79, 'O'],
    [80, 'P'],
    [81, 'Q'],
    [82, 'R'],
    [83, 'S'],
    [84, 'T'],
    [85, 'U'],
    [86, 'V'],
    [87, 'W'],
    [88, 'X'],
    [89, 'Y'],
    [90, 'Z']
]);
var EventType;
(function (EventType) {
    EventType["CLICK"] = "click";
    EventType["DBLCLICK"] = "dblclick";
    EventType["MOUSEDOWN"] = "mousedown";
    EventType["MOUSEUP"] = "mouseup";
    EventType["MOUSEOVER"] = "mouseover";
    EventType["MOUSEOUT"] = "mouseout";
    EventType["MOUSEMOVE"] = "mousemove";
    EventType["SELECTSTART"] = "selectstart";
    EventType["KEYPRESS"] = "keypress";
    EventType["KEYDOWN"] = "keydown";
    EventType["KEYUP"] = "keyup";
    EventType["TOUCHSTART"] = "touchstart";
    EventType["TOUCHMOVE"] = "touchmove";
    EventType["TOUCHEND"] = "touchend";
    EventType["TOUCHCANCEL"] = "touchcancel";
})(EventType = exports.EventType || (exports.EventType = {}));
class Event {
    constructor(src, type, callback) {
        this.src = src;
        this.type = type;
        this.callback = callback;
    }
    add() {
        this.src.addEventListener(this.type, this.callback);
    }
    remove() {
        this.src.removeEventListener(this.type, this.callback);
    }
}
exports.Event = Event;


/***/ }),

/***/ 7248:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.localePath = exports.makePath = void 0;
const system_external_1 = __webpack_require__(2315);
function makePath(path) {
    return path.match('/$') ? path : path + '/';
}
exports.makePath = makePath;
function localePath(locale, ext = 'json') {
    return (makePath(system_external_1.default.jsonPath) +
        locale +
        (ext.match(/^\./) ? ext : '.' + ext));
}
exports.localePath = localePath;


/***/ }),

/***/ 3769:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeyProcessor = exports.Processor = void 0;
const event_util_1 = __webpack_require__(8496);
class Processor {
    constructor(name, methods) {
        this.name = name;
        this.process = methods.processor;
        this.postprocess =
            methods.postprocessor || ((x, _y) => x);
        this.processor = this.postprocess
            ? function (x) {
                return this.postprocess(this.process(x), x);
            }
            : this.process;
        this.print = methods.print || Processor.stringify_;
        this.pprint = methods.pprint || this.print;
    }
    static stringify_(x) {
        return x ? x.toString() : x;
    }
}
exports.Processor = Processor;
Processor.LocalState = { walker: null, speechGenerator: null, highlighter: null };
class KeyProcessor extends Processor {
    constructor(name, methods) {
        super(name, methods);
        this.key = methods.key || KeyProcessor.getKey_;
    }
    static getKey_(key) {
        return typeof key === 'string'
            ?
                event_util_1.KeyCode[key.toUpperCase()]
            : key;
    }
}
exports.KeyProcessor = KeyProcessor;


/***/ }),

/***/ 6499:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keypress = exports.output = exports.print = exports.process = exports.set = void 0;
const AuralRendering = __webpack_require__(8290);
const Enrich = __webpack_require__(5714);
const HighlighterFactory = __webpack_require__(3090);
const locale_1 = __webpack_require__(4356);
const Semantic = __webpack_require__(1414);
const SpeechGeneratorFactory = __webpack_require__(9552);
const SpeechGeneratorUtil = __webpack_require__(9543);
const WalkerFactory = __webpack_require__(3362);
const WalkerUtil = __webpack_require__(1204);
const DomUtil = __webpack_require__(5740);
const engine_1 = __webpack_require__(5897);
const EngineConst = __webpack_require__(4440);
const processor_1 = __webpack_require__(3769);
const XpathUtil = __webpack_require__(5274);
const PROCESSORS = new Map();
function set(processor) {
    PROCESSORS.set(processor.name, processor);
}
exports.set = set;
function get_(name) {
    const processor = PROCESSORS.get(name);
    if (!processor) {
        throw new engine_1.SREError('Unknown processor ' + name);
    }
    return processor;
}
function process(name, expr) {
    const processor = get_(name);
    try {
        return processor.processor(expr);
    }
    catch (_e) {
        throw new engine_1.SREError('Processing error for expression ' + expr);
    }
}
exports.process = process;
function print(name, data) {
    const processor = get_(name);
    return engine_1.default.getInstance().pprint
        ? processor.pprint(data)
        : processor.print(data);
}
exports.print = print;
function output(name, expr) {
    const processor = get_(name);
    try {
        const data = processor.processor(expr);
        return engine_1.default.getInstance().pprint
            ? processor.pprint(data)
            : processor.print(data);
    }
    catch (_e) {
        throw new engine_1.SREError('Processing error for expression ' + expr);
    }
}
exports.output = output;
function keypress(name, expr) {
    const processor = get_(name);
    const key = processor instanceof processor_1.KeyProcessor ? processor.key(expr) : expr;
    const data = processor.processor(key);
    return engine_1.default.getInstance().pprint
        ? processor.pprint(data)
        : processor.print(data);
}
exports.keypress = keypress;
set(new processor_1.Processor('semantic', {
    processor: function (expr) {
        const mml = DomUtil.parseInput(expr);
        return Semantic.xmlTree(mml);
    },
    postprocessor: function (xml, _expr) {
        const setting = engine_1.default.getInstance().speech;
        if (setting === EngineConst.Speech.NONE) {
            return xml;
        }
        const clone = DomUtil.cloneNode(xml);
        let speech = SpeechGeneratorUtil.computeMarkup(clone);
        if (setting === EngineConst.Speech.SHALLOW) {
            xml.setAttribute('speech', AuralRendering.finalize(speech));
            return xml;
        }
        const nodesXml = XpathUtil.evalXPath('.//*[@id]', xml);
        const nodesClone = XpathUtil.evalXPath('.//*[@id]', clone);
        for (let i = 0, orig, node; (orig = nodesXml[i]), (node = nodesClone[i]); i++) {
            speech = SpeechGeneratorUtil.computeMarkup(node);
            orig.setAttribute('speech', AuralRendering.finalize(speech));
        }
        return xml;
    },
    pprint: function (tree) {
        return DomUtil.formatXml(tree.toString());
    }
}));
set(new processor_1.Processor('speech', {
    processor: function (expr) {
        const mml = DomUtil.parseInput(expr);
        const xml = Semantic.xmlTree(mml);
        const descrs = SpeechGeneratorUtil.computeSpeech(xml);
        return AuralRendering.finalize(AuralRendering.markup(descrs));
    },
    pprint: function (speech) {
        const str = speech.toString();
        return AuralRendering.isXml() ? DomUtil.formatXml(str) : str;
    }
}));
set(new processor_1.Processor('json', {
    processor: function (expr) {
        const mml = DomUtil.parseInput(expr);
        const stree = Semantic.getTree(mml);
        return stree.toJson();
    },
    postprocessor: function (json, expr) {
        const setting = engine_1.default.getInstance().speech;
        if (setting === EngineConst.Speech.NONE) {
            return json;
        }
        const mml = DomUtil.parseInput(expr);
        const xml = Semantic.xmlTree(mml);
        const speech = SpeechGeneratorUtil.computeMarkup(xml);
        if (setting === EngineConst.Speech.SHALLOW) {
            json.stree.speech = AuralRendering.finalize(speech);
            return json;
        }
        const addRec = (json) => {
            const node = XpathUtil.evalXPath(`.//*[@id=${json.id}]`, xml)[0];
            const speech = SpeechGeneratorUtil.computeMarkup(node);
            json.speech = AuralRendering.finalize(speech);
            if (json.children) {
                json.children.forEach(addRec);
            }
        };
        addRec(json.stree);
        return json;
    },
    print: function (json) {
        return JSON.stringify(json);
    },
    pprint: function (json) {
        return JSON.stringify(json, null, 2);
    }
}));
set(new processor_1.Processor('description', {
    processor: function (expr) {
        const mml = DomUtil.parseInput(expr);
        const xml = Semantic.xmlTree(mml);
        const descrs = SpeechGeneratorUtil.computeSpeech(xml);
        return descrs;
    },
    print: function (descrs) {
        return JSON.stringify(descrs);
    },
    pprint: function (descrs) {
        return JSON.stringify(descrs, null, 2);
    }
}));
set(new processor_1.Processor('enriched', {
    processor: function (expr) {
        return Enrich.semanticMathmlSync(expr);
    },
    postprocessor: function (enr, _expr) {
        const root = WalkerUtil.getSemanticRoot(enr);
        let generator;
        switch (engine_1.default.getInstance().speech) {
            case EngineConst.Speech.NONE:
                break;
            case EngineConst.Speech.SHALLOW:
                generator = SpeechGeneratorFactory.generator('Adhoc');
                generator.getSpeech(root, enr);
                break;
            case EngineConst.Speech.DEEP:
                generator = SpeechGeneratorFactory.generator('Tree');
                generator.getSpeech(enr, enr);
                break;
            default:
                break;
        }
        return enr;
    },
    pprint: function (tree) {
        return DomUtil.formatXml(tree.toString());
    }
}));
set(new processor_1.Processor('walker', {
    processor: function (expr) {
        const generator = SpeechGeneratorFactory.generator('Node');
        processor_1.Processor.LocalState.speechGenerator = generator;
        generator.setOptions({
            modality: engine_1.default.getInstance().modality,
            locale: engine_1.default.getInstance().locale,
            domain: engine_1.default.getInstance().domain,
            style: engine_1.default.getInstance().style
        });
        processor_1.Processor.LocalState.highlighter = HighlighterFactory.highlighter({ color: 'black' }, { color: 'white' }, { renderer: 'NativeMML' });
        const node = process('enriched', expr);
        const eml = print('enriched', node);
        processor_1.Processor.LocalState.walker = WalkerFactory.walker(engine_1.default.getInstance().walker, node, generator, processor_1.Processor.LocalState.highlighter, eml);
        return processor_1.Processor.LocalState.walker;
    },
    print: function (_walker) {
        return processor_1.Processor.LocalState.walker.speech();
    }
}));
set(new processor_1.KeyProcessor('move', {
    processor: function (direction) {
        if (!processor_1.Processor.LocalState.walker) {
            return null;
        }
        const move = processor_1.Processor.LocalState.walker.move(direction);
        return move === false
            ? AuralRendering.error(direction)
            : processor_1.Processor.LocalState.walker.speech();
    }
}));
set(new processor_1.Processor('number', {
    processor: function (numb) {
        const num = parseInt(numb, 10);
        return isNaN(num) ? '' : locale_1.LOCALE.NUMBERS.numberToWords(num);
    }
}));
set(new processor_1.Processor('ordinal', {
    processor: function (numb) {
        const num = parseInt(numb, 10);
        return isNaN(num) ? '' : locale_1.LOCALE.NUMBERS.wordOrdinal(num);
    }
}));
set(new processor_1.Processor('numericOrdinal', {
    processor: function (numb) {
        const num = parseInt(numb, 10);
        return isNaN(num) ? '' : locale_1.LOCALE.NUMBERS.numericOrdinal(num);
    }
}));
set(new processor_1.Processor('vulgar', {
    processor: function (numb) {
        const [en, den] = numb.split('/').map((x) => parseInt(x, 10));
        return isNaN(en) || isNaN(den)
            ? ''
            : process('speech', `<mfrac><mn>${en}</mn><mn>${den}</mn></mfrac>`);
    }
}));


/***/ }),

/***/ 2998:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.localePath = exports.exit = exports.move = exports.walk = exports.processFile = exports.file = exports.vulgar = exports.numericOrdinal = exports.ordinal = exports.number = exports.toEnriched = exports.toDescription = exports.toJson = exports.toSemantic = exports.toSpeech = exports.localeLoader = exports.engineReady = exports.engineSetup = exports.setupEngine = exports.version = void 0;
const engine_1 = __webpack_require__(5897);
const engine_setup_1 = __webpack_require__(6828);
const EngineConst = __webpack_require__(4440);
const FileUtil = __webpack_require__(7248);
const ProcessorFactory = __webpack_require__(6499);
const system_external_1 = __webpack_require__(2315);
const variables_1 = __webpack_require__(1377);
const math_map_1 = __webpack_require__(6141);
exports.version = variables_1.Variables.VERSION;
function setupEngine(feature) {
    return __awaiter(this, void 0, void 0, function* () {
        return (0, engine_setup_1.setup)(feature);
    });
}
exports.setupEngine = setupEngine;
function engineSetup() {
    const engineFeatures = ['mode'].concat(engine_1.default.STRING_FEATURES, engine_1.default.BINARY_FEATURES);
    const engine = engine_1.default.getInstance();
    const features = {};
    engineFeatures.forEach(function (x) {
        features[x] = engine[x];
    });
    features.json = system_external_1.default.jsonPath;
    features.xpath = system_external_1.default.WGXpath;
    features.rules = engine.ruleSets.slice();
    return features;
}
exports.engineSetup = engineSetup;
function engineReady() {
    return __awaiter(this, void 0, void 0, function* () {
        return setupEngine({}).then(() => engine_1.EnginePromise.getall());
    });
}
exports.engineReady = engineReady;
exports.localeLoader = math_map_1.standardLoader;
function toSpeech(expr) {
    return processString('speech', expr);
}
exports.toSpeech = toSpeech;
function toSemantic(expr) {
    return processString('semantic', expr);
}
exports.toSemantic = toSemantic;
function toJson(expr) {
    return processString('json', expr);
}
exports.toJson = toJson;
function toDescription(expr) {
    return processString('description', expr);
}
exports.toDescription = toDescription;
function toEnriched(expr) {
    return processString('enriched', expr);
}
exports.toEnriched = toEnriched;
function number(expr) {
    return processString('number', expr);
}
exports.number = number;
function ordinal(expr) {
    return processString('ordinal', expr);
}
exports.ordinal = ordinal;
function numericOrdinal(expr) {
    return processString('numericOrdinal', expr);
}
exports.numericOrdinal = numericOrdinal;
function vulgar(expr) {
    return processString('vulgar', expr);
}
exports.vulgar = vulgar;
function processString(processor, input) {
    return ProcessorFactory.process(processor, input);
}
exports.file = {};
exports.file.toSpeech = function (input, opt_output) {
    return processFile('speech', input, opt_output);
};
exports.file.toSemantic = function (input, opt_output) {
    return processFile('semantic', input, opt_output);
};
exports.file.toJson = function (input, opt_output) {
    return processFile('json', input, opt_output);
};
exports.file.toDescription = function (input, opt_output) {
    return processFile('description', input, opt_output);
};
exports.file.toEnriched = function (input, opt_output) {
    return processFile('enriched', input, opt_output);
};
function processFile(processor, input, opt_output) {
    switch (engine_1.default.getInstance().mode) {
        case EngineConst.Mode.ASYNC:
            return processFileAsync(processor, input, opt_output);
        case EngineConst.Mode.SYNC:
            return processFileSync(processor, input, opt_output);
        default:
            throw new engine_1.SREError(`Can process files in ${engine_1.default.getInstance().mode} mode`);
    }
}
exports.processFile = processFile;
function processFileSync(processor, input, opt_output) {
    const expr = inputFileSync_(input);
    const result = ProcessorFactory.output(processor, expr);
    if (opt_output) {
        try {
            system_external_1.default.fs.writeFileSync(opt_output, result);
        }
        catch (err) {
            throw new engine_1.SREError('Can not write to file: ' + opt_output);
        }
    }
    return result;
}
function inputFileSync_(file) {
    let expr;
    try {
        expr = system_external_1.default.fs.readFileSync(file, { encoding: 'utf8' });
    }
    catch (err) {
        throw new engine_1.SREError('Can not open file: ' + file);
    }
    return expr;
}
function processFileAsync(processor, file, output) {
    return __awaiter(this, void 0, void 0, function* () {
        const expr = yield system_external_1.default.fs.promises.readFile(file, {
            encoding: 'utf8'
        });
        const result = ProcessorFactory.output(processor, expr);
        if (output) {
            try {
                system_external_1.default.fs.promises.writeFile(output, result);
            }
            catch (_err) {
                throw new engine_1.SREError('Can not write to file: ' + output);
            }
        }
        return result;
    });
}
function walk(expr) {
    return ProcessorFactory.output('walker', expr);
}
exports.walk = walk;
function move(direction) {
    return ProcessorFactory.keypress('move', direction);
}
exports.move = move;
function exit(opt_value) {
    const value = opt_value || 0;
    engine_1.EnginePromise.getall().then(() => process.exit(value));
}
exports.exit = exit;
exports.localePath = FileUtil.localePath;
if (system_external_1.default.documentSupported) {
    setupEngine({ mode: EngineConst.Mode.HTTP }).then(() => setupEngine({}));
}
else {
    setupEngine({ mode: EngineConst.Mode.SYNC }).then(() => setupEngine({ mode: EngineConst.Mode.ASYNC }));
}


/***/ }),

/***/ 2315:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var __dirname = "/";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const variables_1 = __webpack_require__(1377);
class SystemExternal {
    static extRequire(library) {
        if (typeof process !== 'undefined' && "function" !== 'undefined') {
            const nodeRequire = eval('require');
            return nodeRequire(library);
        }
        return null;
    }
}
exports["default"] = SystemExternal;
SystemExternal.windowSupported = (() => !(typeof window === 'undefined'))();
SystemExternal.documentSupported = (() => SystemExternal.windowSupported &&
    !(typeof window.document === 'undefined'))();
SystemExternal.xmldom = SystemExternal.documentSupported
    ? window
    : SystemExternal.extRequire('xmldom-sre');
SystemExternal.document = SystemExternal.documentSupported
    ? window.document
    : new SystemExternal.xmldom.DOMImplementation().createDocument('', '', 0);
SystemExternal.xpath = SystemExternal.documentSupported
    ? document
    : (function () {
        const window = { document: {}, XPathResult: {} };
        const wgx = SystemExternal.extRequire('wicked-good-xpath');
        wgx.install(window);
        window.document.XPathResult = window.XPathResult;
        return window.document;
    })();
SystemExternal.mathmapsIePath = 'https://cdn.jsdelivr.net/npm/sre-mathmaps-ie@' +
    variables_1.Variables.VERSION +
    'mathmaps_ie.js';
SystemExternal.commander = SystemExternal.documentSupported
    ? null
    : SystemExternal.extRequire('commander');
SystemExternal.fs = SystemExternal.documentSupported
    ? null
    : SystemExternal.extRequire('fs');
SystemExternal.url = variables_1.Variables.url;
SystemExternal.jsonPath = (function () {
    return ((SystemExternal.documentSupported
        ? SystemExternal.url
        : process.env.SRE_JSON_PATH ||
            __webpack_require__.g.SRE_JSON_PATH ||
            ( true
                ? __dirname + '/mathmaps'
                : 0)) + '/');
})();
SystemExternal.WGXpath = variables_1.Variables.WGXpath;
SystemExternal.wgxpath = null;


/***/ }),

/***/ 1377:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Variables = void 0;
class Variables {
    static ensureLocale(loc, def) {
        if (!Variables.LOCALES.get(loc)) {
            console.error(`Locale ${loc} does not exist! Using` +
                ` ${Variables.LOCALES.get(def)} instead.`);
            return def;
        }
        return loc;
    }
}
exports.Variables = Variables;
Variables.VERSION = '4.0.6';
Variables.LOCALES = new Map([
    ['ca', 'Catalan'],
    ['da', 'Danish'],
    ['de', 'German'],
    ['en', 'English'],
    ['es', 'Spanish'],
    ['fr', 'French'],
    ['hi', 'Hindi'],
    ['it', 'Italian'],
    ['nb', 'Bokmål'],
    ['nn', 'Nynorsk'],
    ['sv', 'Swedish'],
    ['nemeth', 'Nemeth']
]);
Variables.mathjaxVersion = '3.2.1';
Variables.url = 'https://cdn.jsdelivr.net/npm/speech-rule-engine@' +
    Variables.VERSION +
    '/lib/mathmaps';
Variables.WGXpath = 'https://cdn.jsdelivr.net/npm/wicked-good-xpath@1.3.0/dist/wgxpath.install.js';


/***/ }),

/***/ 5274:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateEvaluator = exports.evaluateString = exports.evaluateBoolean = exports.getLeafNodes = exports.evalXPath = exports.resolveNameSpace = exports.xpath = void 0;
const engine_1 = __webpack_require__(5897);
const EngineConst = __webpack_require__(4440);
const system_external_1 = __webpack_require__(2315);
function xpathSupported() {
    if (typeof XPathResult === 'undefined') {
        return false;
    }
    return true;
}
exports.xpath = {
    currentDocument: null,
    evaluate: xpathSupported()
        ? document.evaluate
        : system_external_1.default.xpath.evaluate,
    result: xpathSupported() ? XPathResult : system_external_1.default.xpath.XPathResult,
    createNSResolver: xpathSupported()
        ? document.createNSResolver
        : system_external_1.default.xpath.createNSResolver
};
const nameSpaces = {
    xhtml: 'http://www.w3.org/1999/xhtml',
    mathml: 'http://www.w3.org/1998/Math/MathML',
    mml: 'http://www.w3.org/1998/Math/MathML',
    svg: 'http://www.w3.org/2000/svg'
};
function resolveNameSpace(prefix) {
    return nameSpaces[prefix] || null;
}
exports.resolveNameSpace = resolveNameSpace;
class Resolver {
    constructor() {
        this.lookupNamespaceURI = resolveNameSpace;
    }
}
function evaluateXpath(expression, rootNode, type) {
    return engine_1.default.getInstance().mode === EngineConst.Mode.HTTP &&
        !engine_1.default.getInstance().isIE &&
        !engine_1.default.getInstance().isEdge
        ? exports.xpath.currentDocument.evaluate(expression, rootNode, resolveNameSpace, type, null)
        : exports.xpath.evaluate(expression, rootNode, new Resolver(), type, null);
}
function evalXPath(expression, rootNode) {
    let iterator;
    try {
        iterator = evaluateXpath(expression, rootNode, exports.xpath.result.ORDERED_NODE_ITERATOR_TYPE);
    }
    catch (err) {
        return [];
    }
    const results = [];
    for (let xpathNode = iterator.iterateNext(); xpathNode; xpathNode = iterator.iterateNext()) {
        results.push(xpathNode);
    }
    return results;
}
exports.evalXPath = evalXPath;
function getLeafNodes(rootNode) {
    return evalXPath('.//*[count(*)=0]', rootNode);
}
exports.getLeafNodes = getLeafNodes;
function evaluateBoolean(expression, rootNode) {
    let result;
    try {
        result = evaluateXpath(expression, rootNode, exports.xpath.result.BOOLEAN_TYPE);
    }
    catch (err) {
        return false;
    }
    return result.booleanValue;
}
exports.evaluateBoolean = evaluateBoolean;
function evaluateString(expression, rootNode) {
    let result;
    try {
        result = evaluateXpath(expression, rootNode, exports.xpath.result.STRING_TYPE);
    }
    catch (err) {
        return '';
    }
    return result.stringValue;
}
exports.evaluateString = evaluateString;
function updateEvaluator(node) {
    if (engine_1.default.getInstance().mode !== EngineConst.Mode.HTTP)
        return;
    let parent = node;
    while (parent && !parent.evaluate) {
        parent = parent.parentNode;
    }
    if (parent && parent.evaluate) {
        exports.xpath.currentDocument = parent;
    }
    else if (node.ownerDocument) {
        exports.xpath.currentDocument = node.ownerDocument;
    }
}
exports.updateEvaluator = updateEvaluator;


/***/ }),

/***/ 9268:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractEnrichCase = void 0;
class AbstractEnrichCase {
    constructor(semantic) {
        this.semantic = semantic;
    }
}
exports.AbstractEnrichCase = AbstractEnrichCase;


/***/ }),

/***/ 6061:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseBinomial = void 0;
const DomUtil = __webpack_require__(5740);
const abstract_enrich_case_1 = __webpack_require__(9268);
const enrich_mathml_1 = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseBinomial extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.mml = semantic.mathmlTree;
    }
    static test(semantic) {
        return (!semantic.mathmlTree &&
            semantic.type === "line" &&
            semantic.role === "binomial");
    }
    getMathml() {
        if (!this.semantic.childNodes.length) {
            return this.mml;
        }
        const child = this.semantic.childNodes[0];
        this.mml = (0, enrich_mathml_1.walkTree)(child);
        if (this.mml.hasAttribute(enrich_attr_1.Attribute.TYPE)) {
            const mrow = DomUtil.createElement('mrow');
            mrow.setAttribute(enrich_attr_1.Attribute.ADDED, 'true');
            DomUtil.replaceNode(this.mml, mrow);
            mrow.appendChild(this.mml);
            this.mml = mrow;
        }
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        return this.mml;
    }
}
exports.CaseBinomial = CaseBinomial;


/***/ }),

/***/ 5765:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseDoubleScript = void 0;
const DomUtil = __webpack_require__(5740);
const abstract_enrich_case_1 = __webpack_require__(9268);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseDoubleScript extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.mml = semantic.mathmlTree;
    }
    static test(semantic) {
        if (!semantic.mathmlTree || !semantic.childNodes.length) {
            return false;
        }
        const mmlTag = DomUtil.tagName(semantic.mathmlTree);
        const role = semantic.childNodes[0].role;
        return ((mmlTag === 'MSUBSUP' && role === "subsup") ||
            (mmlTag === 'MUNDEROVER' && role === "underover"));
    }
    getMathml() {
        const ignore = this.semantic.childNodes[0];
        const baseSem = ignore.childNodes[0];
        const supSem = this.semantic.childNodes[1];
        const subSem = ignore.childNodes[1];
        const supMml = EnrichMathml.walkTree(supSem);
        const baseMml = EnrichMathml.walkTree(baseSem);
        const subMml = EnrichMathml.walkTree(subSem);
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        this.mml.setAttribute(enrich_attr_1.Attribute.CHILDREN, (0, enrich_attr_1.makeIdList)([baseSem, subSem, supSem]));
        [baseMml, subMml, supMml].forEach((child) => EnrichMathml.getInnerNode(child).setAttribute(enrich_attr_1.Attribute.PARENT, this.mml.getAttribute(enrich_attr_1.Attribute.ID)));
        this.mml.setAttribute(enrich_attr_1.Attribute.TYPE, ignore.role);
        EnrichMathml.addCollapsedAttribute(this.mml, [
            this.semantic.id,
            [ignore.id, baseSem.id, subSem.id],
            supSem.id
        ]);
        return this.mml;
    }
}
exports.CaseDoubleScript = CaseDoubleScript;


/***/ }),

/***/ 7251:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseEmbellished = void 0;
const DomUtil = __webpack_require__(5740);
const semantic_node_1 = __webpack_require__(5952);
const abstract_enrich_case_1 = __webpack_require__(9268);
const case_double_script_1 = __webpack_require__(5765);
const case_multiscripts_1 = __webpack_require__(7014);
const case_tensor_1 = __webpack_require__(6887);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseEmbellished extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.fenced = null;
        this.fencedMml = null;
        this.fencedMmlNodes = [];
        this.ofence = null;
        this.ofenceMml = null;
        this.ofenceMap = {};
        this.cfence = null;
        this.cfenceMml = null;
        this.cfenceMap = {};
        this.parentCleanup = [];
    }
    static test(semantic) {
        return !!(semantic.mathmlTree &&
            semantic.fencePointer &&
            !semantic.mathmlTree.getAttribute('data-semantic-type'));
    }
    static makeEmptyNode_(id) {
        const mrow = DomUtil.createElement('mrow');
        const empty = new semantic_node_1.SemanticNode(id);
        empty.type = "empty";
        empty.mathmlTree = mrow;
        return empty;
    }
    static fencedMap_(fence, ids) {
        ids[fence.id] = fence.mathmlTree;
        if (!fence.embellished) {
            return;
        }
        CaseEmbellished.fencedMap_(fence.childNodes[0], ids);
    }
    getMathml() {
        this.getFenced_();
        this.fencedMml = EnrichMathml.walkTree(this.fenced);
        this.getFencesMml_();
        if (this.fenced.type === "empty" && !this.fencedMml.parentNode) {
            this.fencedMml.setAttribute(enrich_attr_1.Attribute.ADDED, 'true');
            this.cfenceMml.parentNode.insertBefore(this.fencedMml, this.cfenceMml);
        }
        this.getFencedMml_();
        const rewrite = this.rewrite_();
        return rewrite;
    }
    fencedElement(node) {
        return (node.type === "fenced" ||
            node.type === "matrix" ||
            node.type === "vector");
    }
    getFenced_() {
        let currentNode = this.semantic;
        while (!this.fencedElement(currentNode)) {
            currentNode = currentNode.childNodes[0];
        }
        this.fenced = currentNode.childNodes[0];
        this.ofence = currentNode.contentNodes[0];
        this.cfence = currentNode.contentNodes[1];
        CaseEmbellished.fencedMap_(this.ofence, this.ofenceMap);
        CaseEmbellished.fencedMap_(this.cfence, this.cfenceMap);
    }
    getFencedMml_() {
        let sibling = this.ofenceMml.nextSibling;
        sibling = sibling === this.fencedMml ? sibling : this.fencedMml;
        while (sibling && sibling !== this.cfenceMml) {
            this.fencedMmlNodes.push(sibling);
            sibling = sibling.nextSibling;
        }
    }
    getFencesMml_() {
        let currentNode = this.semantic;
        const ofenceIds = Object.keys(this.ofenceMap);
        const cfenceIds = Object.keys(this.cfenceMap);
        while ((!this.ofenceMml || !this.cfenceMml) &&
            currentNode !== this.fenced) {
            if (ofenceIds.indexOf(currentNode.fencePointer) !== -1 &&
                !this.ofenceMml) {
                this.ofenceMml = currentNode.mathmlTree;
            }
            if (cfenceIds.indexOf(currentNode.fencePointer) !== -1 &&
                !this.cfenceMml) {
                this.cfenceMml = currentNode.mathmlTree;
            }
            currentNode = currentNode.childNodes[0];
        }
        if (!this.ofenceMml) {
            this.ofenceMml = this.ofence.mathmlTree;
        }
        if (!this.cfenceMml) {
            this.cfenceMml = this.cfence.mathmlTree;
        }
        if (this.ofenceMml) {
            this.ofenceMml = EnrichMathml.ascendNewNode(this.ofenceMml);
        }
        if (this.cfenceMml) {
            this.cfenceMml = EnrichMathml.ascendNewNode(this.cfenceMml);
        }
    }
    rewrite_() {
        let currentNode = this.semantic;
        let result = null;
        const newNode = this.introduceNewLayer_();
        (0, enrich_attr_1.setAttributes)(newNode, this.fenced.parent);
        while (!this.fencedElement(currentNode)) {
            const mml = currentNode.mathmlTree;
            const specialCase = this.specialCase_(currentNode, mml);
            if (specialCase) {
                currentNode = specialCase;
            }
            else {
                (0, enrich_attr_1.setAttributes)(mml, currentNode);
                const mmlChildren = [];
                for (let i = 1, child; (child = currentNode.childNodes[i]); i++) {
                    mmlChildren.push(EnrichMathml.walkTree(child));
                }
                currentNode = currentNode.childNodes[0];
            }
            const dummy = DomUtil.createElement('dummy');
            const saveChild = mml.childNodes[0];
            DomUtil.replaceNode(mml, dummy);
            DomUtil.replaceNode(newNode, mml);
            DomUtil.replaceNode(mml.childNodes[0], newNode);
            DomUtil.replaceNode(dummy, saveChild);
            if (!result) {
                result = mml;
            }
        }
        EnrichMathml.walkTree(this.ofence);
        EnrichMathml.walkTree(this.cfence);
        this.cleanupParents_();
        return result || newNode;
    }
    specialCase_(semantic, mml) {
        const mmlTag = DomUtil.tagName(mml);
        let parent = null;
        let caller;
        if (mmlTag === 'MSUBSUP') {
            parent = semantic.childNodes[0];
            caller = case_double_script_1.CaseDoubleScript;
        }
        else if (mmlTag === 'MMULTISCRIPTS') {
            if (semantic.type === "superscript" ||
                semantic.type === "subscript") {
                caller = case_multiscripts_1.CaseMultiscripts;
            }
            else if (semantic.type === "tensor") {
                caller = case_tensor_1.CaseTensor;
            }
            if (caller &&
                semantic.childNodes[0] &&
                semantic.childNodes[0].role === "subsup") {
                parent = semantic.childNodes[0];
            }
            else {
                parent = semantic;
            }
        }
        if (!parent) {
            return null;
        }
        const base = parent.childNodes[0];
        const empty = CaseEmbellished.makeEmptyNode_(base.id);
        parent.childNodes[0] = empty;
        mml = new caller(semantic).getMathml();
        parent.childNodes[0] = base;
        this.parentCleanup.push(mml);
        return parent.childNodes[0];
    }
    introduceNewLayer_() {
        const fullOfence = this.fullFence(this.ofenceMml);
        const fullCfence = this.fullFence(this.cfenceMml);
        let newNode = DomUtil.createElement('mrow');
        DomUtil.replaceNode(this.fencedMml, newNode);
        this.fencedMmlNodes.forEach((node) => newNode.appendChild(node));
        newNode.insertBefore(fullOfence, this.fencedMml);
        newNode.appendChild(fullCfence);
        if (!newNode.parentNode) {
            const mrow = DomUtil.createElement('mrow');
            while (newNode.childNodes.length > 0) {
                mrow.appendChild(newNode.childNodes[0]);
            }
            newNode.appendChild(mrow);
            newNode = mrow;
        }
        return newNode;
    }
    fullFence(fence) {
        const parent = this.fencedMml.parentNode;
        let currentFence = fence;
        while (currentFence.parentNode && currentFence.parentNode !== parent) {
            currentFence = currentFence.parentNode;
        }
        return currentFence;
    }
    cleanupParents_() {
        this.parentCleanup.forEach(function (x) {
            const parent = x.childNodes[1].getAttribute(enrich_attr_1.Attribute.PARENT);
            x.childNodes[0].setAttribute(enrich_attr_1.Attribute.PARENT, parent);
        });
    }
}
exports.CaseEmbellished = CaseEmbellished;


/***/ }),

/***/ 6265:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseLimit = void 0;
const DomUtil = __webpack_require__(5740);
const abstract_enrich_case_1 = __webpack_require__(9268);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseLimit extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.mml = semantic.mathmlTree;
    }
    static test(semantic) {
        if (!semantic.mathmlTree || !semantic.childNodes.length) {
            return false;
        }
        const mmlTag = DomUtil.tagName(semantic.mathmlTree);
        const type = semantic.type;
        return (((type === "limupper" || type === "limlower") &&
            (mmlTag === 'MSUBSUP' || mmlTag === 'MUNDEROVER')) ||
            (type === "limboth" &&
                (mmlTag === 'MSUB' ||
                    mmlTag === 'MUNDER' ||
                    mmlTag === 'MSUP' ||
                    mmlTag === 'MOVER')));
    }
    static walkTree_(node) {
        if (node) {
            EnrichMathml.walkTree(node);
        }
    }
    getMathml() {
        const children = this.semantic.childNodes;
        if (this.semantic.type !== "limboth" &&
            this.mml.childNodes.length >= 3) {
            this.mml = EnrichMathml.introduceNewLayer([this.mml], this.semantic);
        }
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        if (!children[0].mathmlTree) {
            children[0].mathmlTree = this.semantic.mathmlTree;
        }
        children.forEach(CaseLimit.walkTree_);
        return this.mml;
    }
}
exports.CaseLimit = CaseLimit;


/***/ }),

/***/ 6514:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseLine = void 0;
const abstract_enrich_case_1 = __webpack_require__(9268);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseLine extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.mml = semantic.mathmlTree;
    }
    static test(semantic) {
        return !!semantic.mathmlTree && semantic.type === "line";
    }
    getMathml() {
        if (this.semantic.contentNodes.length) {
            EnrichMathml.walkTree(this.semantic.contentNodes[0]);
        }
        if (this.semantic.childNodes.length) {
            EnrichMathml.walkTree(this.semantic.childNodes[0]);
        }
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        return this.mml;
    }
}
exports.CaseLine = CaseLine;


/***/ }),

/***/ 6839:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseMultiindex = void 0;
const DomUtil = __webpack_require__(5740);
const abstract_enrich_case_1 = __webpack_require__(9268);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseMultiindex extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.mml = semantic.mathmlTree;
    }
    static multiscriptIndex(index) {
        if (index.type === "punctuated" &&
            index.contentNodes[0].role === "dummy") {
            return EnrichMathml.collapsePunctuated(index);
        }
        EnrichMathml.walkTree(index);
        return index.id;
    }
    static createNone_(semantic) {
        const newNode = DomUtil.createElement('none');
        if (semantic) {
            (0, enrich_attr_1.setAttributes)(newNode, semantic);
        }
        newNode.setAttribute(enrich_attr_1.Attribute.ADDED, 'true');
        return newNode;
    }
    completeMultiscript(rightIndices, leftIndices) {
        const children = DomUtil.toArray(this.mml.childNodes).slice(1);
        let childCounter = 0;
        const completeIndices = (indices) => {
            for (let i = 0, index; (index = indices[i]); i++) {
                const child = children[childCounter];
                if (!child ||
                    index !==
                        parseInt(EnrichMathml.getInnerNode(child).getAttribute(enrich_attr_1.Attribute.ID))) {
                    const query = this.semantic.querySelectorAll((x) => x.id === index);
                    this.mml.insertBefore(CaseMultiindex.createNone_(query[0]), child || null);
                }
                else {
                    EnrichMathml.getInnerNode(child).setAttribute(enrich_attr_1.Attribute.PARENT, this.semantic.id.toString());
                    childCounter++;
                }
            }
        };
        completeIndices(rightIndices);
        if (children[childCounter] &&
            DomUtil.tagName(children[childCounter]) !== 'MPRESCRIPTS') {
            this.mml.insertBefore(children[childCounter], DomUtil.createElement('mprescripts'));
        }
        else {
            childCounter++;
        }
        completeIndices(leftIndices);
    }
}
exports.CaseMultiindex = CaseMultiindex;


/***/ }),

/***/ 7014:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseMultiscripts = void 0;
const DomUtil = __webpack_require__(5740);
const semantic_skeleton_1 = __webpack_require__(5656);
const case_multiindex_1 = __webpack_require__(6839);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseMultiscripts extends case_multiindex_1.CaseMultiindex {
    static test(semantic) {
        if (!semantic.mathmlTree) {
            return false;
        }
        const mmlTag = DomUtil.tagName(semantic.mathmlTree);
        return (mmlTag === 'MMULTISCRIPTS' &&
            (semantic.type === "superscript" ||
                semantic.type === "subscript"));
    }
    constructor(semantic) {
        super(semantic);
    }
    getMathml() {
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        let baseSem, rsup, rsub;
        if (this.semantic.childNodes[0] &&
            this.semantic.childNodes[0].role === "subsup") {
            const ignore = this.semantic.childNodes[0];
            baseSem = ignore.childNodes[0];
            rsup = case_multiindex_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]);
            rsub = case_multiindex_1.CaseMultiindex.multiscriptIndex(ignore.childNodes[1]);
            const collapsed = [this.semantic.id, [ignore.id, baseSem.id, rsub], rsup];
            EnrichMathml.addCollapsedAttribute(this.mml, collapsed);
            this.mml.setAttribute(enrich_attr_1.Attribute.TYPE, ignore.role);
            this.completeMultiscript(semantic_skeleton_1.SemanticSkeleton.interleaveIds(rsub, rsup), []);
        }
        else {
            baseSem = this.semantic.childNodes[0];
            rsup = case_multiindex_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]);
            const collapsed = [this.semantic.id, baseSem.id, rsup];
            EnrichMathml.addCollapsedAttribute(this.mml, collapsed);
        }
        const childIds = semantic_skeleton_1.SemanticSkeleton.collapsedLeafs(rsub || [], rsup);
        const base = EnrichMathml.walkTree(baseSem);
        EnrichMathml.getInnerNode(base).setAttribute(enrich_attr_1.Attribute.PARENT, this.semantic.id.toString());
        childIds.unshift(baseSem.id);
        this.mml.setAttribute(enrich_attr_1.Attribute.CHILDREN, childIds.join(','));
        return this.mml;
    }
}
exports.CaseMultiscripts = CaseMultiscripts;


/***/ }),

/***/ 3416:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseProof = void 0;
const abstract_enrich_case_1 = __webpack_require__(9268);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseProof extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.mml = semantic.mathmlTree;
    }
    static test(semantic) {
        return (!!semantic.mathmlTree &&
            (semantic.type === "inference" ||
                semantic.type === "premises"));
    }
    getMathml() {
        if (!this.semantic.childNodes.length) {
            return this.mml;
        }
        this.semantic.contentNodes.forEach(function (x) {
            EnrichMathml.walkTree(x);
            (0, enrich_attr_1.setAttributes)(x.mathmlTree, x);
        });
        this.semantic.childNodes.forEach(function (x) {
            EnrichMathml.walkTree(x);
        });
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        if (this.mml.getAttribute('data-semantic-id') ===
            this.mml.getAttribute('data-semantic-parent')) {
            this.mml.removeAttribute('data-semantic-parent');
        }
        return this.mml;
    }
}
exports.CaseProof = CaseProof;


/***/ }),

/***/ 5699:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseTable = void 0;
const DomUtil = __webpack_require__(5740);
const abstract_enrich_case_1 = __webpack_require__(9268);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseTable extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.inner = [];
        this.mml = semantic.mathmlTree;
    }
    static test(semantic) {
        return (semantic.type === "matrix" ||
            semantic.type === "vector" ||
            semantic.type === "cases");
    }
    getMathml() {
        const lfence = EnrichMathml.cloneContentNode(this.semantic.contentNodes[0]);
        const rfence = this.semantic.contentNodes[1]
            ? EnrichMathml.cloneContentNode(this.semantic.contentNodes[1])
            : null;
        this.inner = this.semantic.childNodes.map(EnrichMathml.walkTree);
        if (!this.mml) {
            this.mml = EnrichMathml.introduceNewLayer([lfence].concat(this.inner, [rfence]), this.semantic);
        }
        else if (DomUtil.tagName(this.mml) === 'MFENCED') {
            const children = this.mml.childNodes;
            this.mml.insertBefore(lfence, children[0] || null);
            rfence && this.mml.appendChild(rfence);
            this.mml = EnrichMathml.rewriteMfenced(this.mml);
        }
        else {
            const newChildren = [lfence, this.mml];
            rfence && newChildren.push(rfence);
            this.mml = EnrichMathml.introduceNewLayer(newChildren, this.semantic);
        }
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        return this.mml;
    }
}
exports.CaseTable = CaseTable;


/***/ }),

/***/ 6887:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseTensor = void 0;
const semantic_skeleton_1 = __webpack_require__(5656);
const case_multiindex_1 = __webpack_require__(6839);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseTensor extends case_multiindex_1.CaseMultiindex {
    static test(semantic) {
        return !!semantic.mathmlTree && semantic.type === "tensor";
    }
    constructor(semantic) {
        super(semantic);
    }
    getMathml() {
        EnrichMathml.walkTree(this.semantic.childNodes[0]);
        const lsub = case_multiindex_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]);
        const lsup = case_multiindex_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[2]);
        const rsub = case_multiindex_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[3]);
        const rsup = case_multiindex_1.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[4]);
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        const collapsed = [
            this.semantic.id,
            this.semantic.childNodes[0].id,
            lsub,
            lsup,
            rsub,
            rsup
        ];
        EnrichMathml.addCollapsedAttribute(this.mml, collapsed);
        const childIds = semantic_skeleton_1.SemanticSkeleton.collapsedLeafs(lsub, lsup, rsub, rsup);
        childIds.unshift(this.semantic.childNodes[0].id);
        this.mml.setAttribute(enrich_attr_1.Attribute.CHILDREN, childIds.join(','));
        this.completeMultiscript(semantic_skeleton_1.SemanticSkeleton.interleaveIds(rsub, rsup), semantic_skeleton_1.SemanticSkeleton.interleaveIds(lsub, lsup));
        return this.mml;
    }
}
exports.CaseTensor = CaseTensor;


/***/ }),

/***/ 9236:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CaseText = void 0;
const abstract_enrich_case_1 = __webpack_require__(9268);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
class CaseText extends abstract_enrich_case_1.AbstractEnrichCase {
    constructor(semantic) {
        super(semantic);
        this.mml = semantic.mathmlTree;
    }
    static test(semantic) {
        return (semantic.type === "punctuated" &&
            (semantic.role === "text" ||
                semantic.contentNodes.every((x) => x.role === "dummy")));
    }
    getMathml() {
        const children = [];
        const collapsed = EnrichMathml.collapsePunctuated(this.semantic, children);
        this.mml = EnrichMathml.introduceNewLayer(children, this.semantic);
        (0, enrich_attr_1.setAttributes)(this.mml, this.semantic);
        this.mml.removeAttribute(enrich_attr_1.Attribute.CONTENT);
        EnrichMathml.addCollapsedAttribute(this.mml, collapsed);
        return this.mml;
    }
}
exports.CaseText = CaseText;


/***/ }),

/***/ 5714:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prepareMmlString = exports.testTranslation__ = exports.semanticMathml = exports.semanticMathmlSync = exports.semanticMathmlNode = void 0;
const debugger_1 = __webpack_require__(2057);
const DomUtil = __webpack_require__(5740);
const engine_1 = __webpack_require__(5897);
const Semantic = __webpack_require__(1414);
const EnrichMathml = __webpack_require__(5452);
const enrich_attr_1 = __webpack_require__(2298);
__webpack_require__(1513);
function semanticMathmlNode(mml) {
    const clone = DomUtil.cloneNode(mml);
    const tree = Semantic.getTree(clone);
    return EnrichMathml.enrich(clone, tree);
}
exports.semanticMathmlNode = semanticMathmlNode;
function semanticMathmlSync(expr) {
    const mml = DomUtil.parseInput(expr);
    return semanticMathmlNode(mml);
}
exports.semanticMathmlSync = semanticMathmlSync;
function semanticMathml(expr, callback) {
    engine_1.EnginePromise.getall().then(() => {
        const mml = DomUtil.parseInput(expr);
        callback(semanticMathmlNode(mml));
    });
}
exports.semanticMathml = semanticMathml;
function testTranslation__(expr) {
    debugger_1.Debugger.getInstance().init();
    const mml = semanticMathmlSync(prepareMmlString(expr)).toString();
    (0, enrich_attr_1.removeAttributePrefix)(mml);
    debugger_1.Debugger.getInstance().exit();
    return mml;
}
exports.testTranslation__ = testTranslation__;
function prepareMmlString(expr) {
    if (!expr.match(/^<math/)) {
        expr = '<math>' + expr;
    }
    if (!expr.match(/\/math>$/)) {
        expr += '</math>';
    }
    return expr;
}
exports.prepareMmlString = prepareMmlString;


/***/ }),

/***/ 2298:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addPrefix = exports.removeAttributePrefix = exports.setPostfix = exports.setAttributes = exports.makeIdList = exports.EnrichAttributes = exports.Attribute = exports.Prefix = void 0;
exports.Prefix = 'data-semantic-';
var Attribute;
(function (Attribute) {
    Attribute["ADDED"] = "data-semantic-added";
    Attribute["ALTERNATIVE"] = "data-semantic-alternative";
    Attribute["CHILDREN"] = "data-semantic-children";
    Attribute["COLLAPSED"] = "data-semantic-collapsed";
    Attribute["CONTENT"] = "data-semantic-content";
    Attribute["EMBELLISHED"] = "data-semantic-embellished";
    Attribute["FENCEPOINTER"] = "data-semantic-fencepointer";
    Attribute["FONT"] = "data-semantic-font";
    Attribute["ID"] = "data-semantic-id";
    Attribute["ANNOTATION"] = "data-semantic-annotation";
    Attribute["OPERATOR"] = "data-semantic-operator";
    Attribute["OWNS"] = "data-semantic-owns";
    Attribute["PARENT"] = "data-semantic-parent";
    Attribute["POSTFIX"] = "data-semantic-postfix";
    Attribute["PREFIX"] = "data-semantic-prefix";
    Attribute["ROLE"] = "data-semantic-role";
    Attribute["SPEECH"] = "data-semantic-speech";
    Attribute["STRUCTURE"] = "data-semantic-structure";
    Attribute["TYPE"] = "data-semantic-type";
})(Attribute = exports.Attribute || (exports.Attribute = {}));
exports.EnrichAttributes = [
    Attribute.ADDED,
    Attribute.ALTERNATIVE,
    Attribute.CHILDREN,
    Attribute.COLLAPSED,
    Attribute.CONTENT,
    Attribute.EMBELLISHED,
    Attribute.FENCEPOINTER,
    Attribute.FONT,
    Attribute.ID,
    Attribute.ANNOTATION,
    Attribute.OPERATOR,
    Attribute.OWNS,
    Attribute.PARENT,
    Attribute.POSTFIX,
    Attribute.PREFIX,
    Attribute.ROLE,
    Attribute.SPEECH,
    Attribute.STRUCTURE,
    Attribute.TYPE
];
function makeIdList(nodes) {
    return nodes
        .map(function (node) {
        return node.id;
    })
        .join(',');
}
exports.makeIdList = makeIdList;
function setAttributes(mml, semantic) {
    mml.setAttribute(Attribute.TYPE, semantic.type);
    const attributes = semantic.allAttributes();
    for (let i = 0, attr; (attr = attributes[i]); i++) {
        mml.setAttribute(exports.Prefix + attr[0].toLowerCase(), attr[1]);
    }
    if (semantic.childNodes.length) {
        mml.setAttribute(Attribute.CHILDREN, makeIdList(semantic.childNodes));
    }
    if (semantic.contentNodes.length) {
        mml.setAttribute(Attribute.CONTENT, makeIdList(semantic.contentNodes));
    }
    if (semantic.parent) {
        mml.setAttribute(Attribute.PARENT, semantic.parent.id.toString());
    }
    setPostfix(mml, semantic);
}
exports.setAttributes = setAttributes;
function setPostfix(mml, semantic) {
    const postfix = [];
    if (semantic.role === "mglyph") {
        postfix.push('image');
    }
    if (semantic.attributes['href']) {
        postfix.push('link');
    }
    if (postfix.length) {
        mml.setAttribute(Attribute.POSTFIX, postfix.join(' '));
    }
}
exports.setPostfix = setPostfix;
function removeAttributePrefix(mml) {
    return mml.toString().replace(new RegExp(exports.Prefix, 'g'), '');
}
exports.removeAttributePrefix = removeAttributePrefix;
function addPrefix(attr) {
    return (exports.Prefix + attr);
}
exports.addPrefix = addPrefix;


/***/ }),

/***/ 3532:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.factory = exports.getCase = void 0;
function getCase(node) {
    for (let i = 0, enrich; (enrich = exports.factory[i]); i++) {
        if (enrich.test(node)) {
            return enrich.constr(node);
        }
    }
    return null;
}
exports.getCase = getCase;
exports.factory = [];


/***/ }),

/***/ 1513:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const case_binomial_1 = __webpack_require__(6061);
const case_double_script_1 = __webpack_require__(5765);
const case_embellished_1 = __webpack_require__(7251);
const case_limit_1 = __webpack_require__(6265);
const case_line_1 = __webpack_require__(6514);
const case_multiscripts_1 = __webpack_require__(7014);
const case_proof_1 = __webpack_require__(3416);
const case_table_1 = __webpack_require__(5699);
const case_tensor_1 = __webpack_require__(6887);
const case_text_1 = __webpack_require__(9236);
const enrich_case_1 = __webpack_require__(3532);
enrich_case_1.factory.push(...[
    {
        test: case_limit_1.CaseLimit.test,
        constr: (node) => new case_limit_1.CaseLimit(node)
    },
    {
        test: case_embellished_1.CaseEmbellished.test,
        constr: (node) => new case_embellished_1.CaseEmbellished(node)
    },
    {
        test: case_double_script_1.CaseDoubleScript.test,
        constr: (node) => new case_double_script_1.CaseDoubleScript(node)
    },
    {
        test: case_tensor_1.CaseTensor.test,
        constr: (node) => new case_tensor_1.CaseTensor(node)
    },
    {
        test: case_multiscripts_1.CaseMultiscripts.test,
        constr: (node) => new case_multiscripts_1.CaseMultiscripts(node)
    },
    { test: case_line_1.CaseLine.test, constr: (node) => new case_line_1.CaseLine(node) },
    {
        test: case_binomial_1.CaseBinomial.test,
        constr: (node) => new case_binomial_1.CaseBinomial(node)
    },
    {
        test: case_proof_1.CaseProof.test,
        constr: (node) => new case_proof_1.CaseProof(node)
    },
    {
        test: case_table_1.CaseTable.test,
        constr: (node) => new case_table_1.CaseTable(node)
    },
    { test: case_text_1.CaseText.test, constr: (node) => new case_text_1.CaseText(node) }
]);


/***/ }),

/***/ 5452:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.printNodeList__ = exports.collapsePunctuated = exports.formattedOutput_ = exports.formattedOutput = exports.getInnerNode = exports.setOperatorAttribute_ = exports.createInvisibleOperator_ = exports.rewriteMfenced = exports.cloneContentNode = exports.addCollapsedAttribute = exports.parentNode_ = exports.isIgnorable_ = exports.unitChild_ = exports.descendNode_ = exports.ascendNewNode = exports.validLca_ = exports.pathToRoot_ = exports.attachedElement_ = exports.prunePath_ = exports.mathmlLca_ = exports.lcaType = exports.functionApplication_ = exports.isDescendant_ = exports.insertNewChild_ = exports.mergeChildren_ = exports.collectChildNodes_ = exports.collateChildNodes_ = exports.childrenSubset_ = exports.moveSemanticAttributes_ = exports.introduceLayerAboveLca = exports.introduceNewLayer = exports.walkTree = exports.enrich = exports.SETTINGS = void 0;
const debugger_1 = __webpack_require__(2057);
const DomUtil = __webpack_require__(5740);
const engine_1 = __webpack_require__(5897);
const SemanticAttr = __webpack_require__(3588);
const SemanticHeuristics = __webpack_require__(7516);
const semantic_skeleton_1 = __webpack_require__(5656);
const SemanticUtil = __webpack_require__(4795);
const EnrichAttr = __webpack_require__(2298);
const enrich_case_1 = __webpack_require__(3532);
exports.SETTINGS = {
    collapsed: true,
    implicit: true
};
function enrich(mml, semantic) {
    const oldMml = DomUtil.cloneNode(mml);
    walkTree(semantic.root);
    if (engine_1.default.getInstance().structure) {
        mml.setAttribute(EnrichAttr.Attribute.STRUCTURE, semantic_skeleton_1.SemanticSkeleton.fromStructure(mml, semantic).toString());
    }
    debugger_1.Debugger.getInstance().generateOutput(function () {
        formattedOutput(oldMml, mml, semantic, true);
        return [];
    });
    return mml;
}
exports.enrich = enrich;
function walkTree(semantic) {
    const specialCase = (0, enrich_case_1.getCase)(semantic);
    let newNode;
    if (specialCase) {
        newNode = specialCase.getMathml();
        return ascendNewNode(newNode);
    }
    if (semantic.mathml.length === 1) {
        debugger_1.Debugger.getInstance().output('Walktree Case 0');
        newNode = semantic.mathml[0];
        EnrichAttr.setAttributes(newNode, semantic);
        if (semantic.childNodes.length) {
            debugger_1.Debugger.getInstance().output('Walktree Case 0.1');
            semantic.childNodes.forEach(function (child) {
                if (child.type === "empty") {
                    newNode.appendChild(walkTree(child));
                }
            });
        }
        return ascendNewNode(newNode);
    }
    const newContent = semantic.contentNodes.map(cloneContentNode);
    setOperatorAttribute_(semantic, newContent);
    const newChildren = semantic.childNodes.map(walkTree);
    const childrenList = semantic_skeleton_1.SemanticSkeleton.combineContentChildren(semantic, newContent, newChildren);
    newNode = semantic.mathmlTree;
    if (newNode === null) {
        debugger_1.Debugger.getInstance().output('Walktree Case 1');
        newNode = introduceNewLayer(childrenList, semantic);
    }
    else {
        const attached = attachedElement_(childrenList);
        debugger_1.Debugger.getInstance().output('Walktree Case 2');
        if (attached) {
            debugger_1.Debugger.getInstance().output('Walktree Case 2.1');
            newNode = attached.parentNode;
        }
        else {
            debugger_1.Debugger.getInstance().output('Walktree Case 2.2');
            newNode = getInnerNode(newNode);
        }
    }
    newNode = rewriteMfenced(newNode);
    mergeChildren_(newNode, childrenList, semantic);
    EnrichAttr.setAttributes(newNode, semantic);
    return ascendNewNode(newNode);
}
exports.walkTree = walkTree;
function introduceNewLayer(children, semantic) {
    const lca = mathmlLca_(children);
    let newNode = lca.node;
    const info = lca.type;
    if (info !== lcaType.VALID || !SemanticUtil.hasEmptyTag(newNode)) {
        debugger_1.Debugger.getInstance().output('Walktree Case 1.1');
        newNode = DomUtil.createElement('mrow');
        if (info === lcaType.PRUNED) {
            debugger_1.Debugger.getInstance().output('Walktree Case 1.1.0');
            newNode = introduceLayerAboveLca(newNode, lca.node, children);
        }
        else if (children[0]) {
            debugger_1.Debugger.getInstance().output('Walktree Case 1.1.1');
            const node = attachedElement_(children);
            const oldChildren = childrenSubset_(node.parentNode, children);
            DomUtil.replaceNode(node, newNode);
            oldChildren.forEach(function (x) {
                newNode.appendChild(x);
            });
        }
    }
    if (!semantic.mathmlTree) {
        semantic.mathmlTree = newNode;
    }
    return newNode;
}
exports.introduceNewLayer = introduceNewLayer;
function introduceLayerAboveLca(mrow, lca, children) {
    let innerNode = descendNode_(lca);
    if (SemanticUtil.hasMathTag(innerNode)) {
        debugger_1.Debugger.getInstance().output('Walktree Case 1.1.0.0');
        moveSemanticAttributes_(innerNode, mrow);
        DomUtil.toArray(innerNode.childNodes).forEach(function (x) {
            mrow.appendChild(x);
        });
        const auxNode = mrow;
        mrow = innerNode;
        innerNode = auxNode;
    }
    const index = children.indexOf(lca);
    children[index] = innerNode;
    DomUtil.replaceNode(innerNode, mrow);
    mrow.appendChild(innerNode);
    children.forEach(function (x) {
        mrow.appendChild(x);
    });
    return mrow;
}
exports.introduceLayerAboveLca = introduceLayerAboveLca;
function moveSemanticAttributes_(oldNode, newNode) {
    for (const attr of EnrichAttr.EnrichAttributes) {
        if (oldNode.hasAttribute(attr)) {
            newNode.setAttribute(attr, oldNode.getAttribute(attr));
            oldNode.removeAttribute(attr);
        }
    }
}
exports.moveSemanticAttributes_ = moveSemanticAttributes_;
function childrenSubset_(node, newChildren) {
    const oldChildren = DomUtil.toArray(node.childNodes);
    let leftIndex = +Infinity;
    let rightIndex = -Infinity;
    newChildren.forEach(function (child) {
        const index = oldChildren.indexOf(child);
        if (index !== -1) {
            leftIndex = Math.min(leftIndex, index);
            rightIndex = Math.max(rightIndex, index);
        }
    });
    return oldChildren.slice(leftIndex, rightIndex + 1);
}
exports.childrenSubset_ = childrenSubset_;
function collateChildNodes_(node, children, semantic) {
    const oldChildren = [];
    let newChildren = DomUtil.toArray(node.childNodes);
    let notFirst = false;
    while (newChildren.length) {
        const child = newChildren.shift();
        if (child.hasAttribute(EnrichAttr.Attribute.TYPE)) {
            oldChildren.push(child);
            continue;
        }
        const collect = collectChildNodes_(child);
        if (collect.length === 0) {
            continue;
        }
        if (collect.length === 1) {
            oldChildren.push(child);
            continue;
        }
        if (notFirst) {
            child.setAttribute('AuxiliaryImplicit', true);
        }
        else {
            notFirst = true;
        }
        newChildren = collect.concat(newChildren);
    }
    const rear = [];
    const semChildren = semantic.childNodes.map(function (x) {
        return x.mathmlTree;
    });
    while (semChildren.length) {
        const schild = semChildren.pop();
        if (!schild) {
            continue;
        }
        if (oldChildren.indexOf(schild) !== -1) {
            break;
        }
        if (children.indexOf(schild) !== -1) {
            rear.unshift(schild);
        }
    }
    return oldChildren.concat(rear);
}
exports.collateChildNodes_ = collateChildNodes_;
function collectChildNodes_(node) {
    const collect = [];
    let newChildren = DomUtil.toArray(node.childNodes);
    while (newChildren.length) {
        const child = newChildren.shift();
        if (child.nodeType !== DomUtil.NodeType.ELEMENT_NODE) {
            continue;
        }
        if (child.hasAttribute(EnrichAttr.Attribute.TYPE)) {
            collect.push(child);
            continue;
        }
        newChildren = DomUtil.toArray(child.childNodes).concat(newChildren);
    }
    return collect;
}
exports.collectChildNodes_ = collectChildNodes_;
function mergeChildren_(node, newChildren, semantic) {
    const oldChildren = semantic.role === "implicit" &&
        SemanticHeuristics.flags.combine_juxtaposition
        ? collateChildNodes_(node, newChildren, semantic)
        : DomUtil.toArray(node.childNodes);
    if (!oldChildren.length) {
        newChildren.forEach(function (x) {
            node.appendChild(x);
        });
        return;
    }
    let oldCounter = 0;
    while (newChildren.length) {
        const newChild = newChildren[0];
        if (oldChildren[oldCounter] === newChild ||
            functionApplication_(oldChildren[oldCounter], newChild)) {
            newChildren.shift();
            oldCounter++;
            continue;
        }
        if (oldChildren[oldCounter] &&
            newChildren.indexOf(oldChildren[oldCounter]) === -1) {
            oldCounter++;
            continue;
        }
        if (isDescendant_(newChild, node)) {
            newChildren.shift();
            continue;
        }
        insertNewChild_(node, oldChildren[oldCounter], newChild);
        newChildren.shift();
    }
}
exports.mergeChildren_ = mergeChildren_;
function insertNewChild_(node, oldChild, newChild) {
    if (!oldChild) {
        node.insertBefore(newChild, null);
        return;
    }
    let parent = oldChild;
    let next = parentNode_(parent);
    while (next &&
        next.firstChild === parent &&
        !parent.hasAttribute('AuxiliaryImplicit') &&
        next !== node) {
        parent = next;
        next = parentNode_(parent);
    }
    if (next) {
        next.insertBefore(newChild, parent);
        parent.removeAttribute('AuxiliaryImplicit');
    }
}
exports.insertNewChild_ = insertNewChild_;
function isDescendant_(child, node) {
    if (!child) {
        return false;
    }
    do {
        child = child.parentNode;
        if (child === node) {
            return true;
        }
    } while (child);
    return false;
}
exports.isDescendant_ = isDescendant_;
function functionApplication_(oldNode, newNode) {
    const appl = SemanticAttr.functionApplication();
    if (oldNode &&
        newNode &&
        oldNode.textContent &&
        newNode.textContent &&
        oldNode.textContent === appl &&
        newNode.textContent === appl &&
        newNode.getAttribute(EnrichAttr.Attribute.ADDED) === 'true') {
        for (let i = 0, attr; (attr = oldNode.attributes[i]); i++) {
            if (!newNode.hasAttribute(attr.nodeName)) {
                newNode.setAttribute(attr.nodeName, attr.nodeValue);
            }
        }
        DomUtil.replaceNode(oldNode, newNode);
        return true;
    }
    return false;
}
exports.functionApplication_ = functionApplication_;
var lcaType;
(function (lcaType) {
    lcaType["VALID"] = "valid";
    lcaType["INVALID"] = "invalid";
    lcaType["PRUNED"] = "pruned";
})(lcaType = exports.lcaType || (exports.lcaType = {}));
function mathmlLca_(children) {
    const leftMost = attachedElement_(children);
    if (!leftMost) {
        return { type: lcaType.INVALID, node: null };
    }
    const rightMost = attachedElement_(children.slice().reverse());
    if (leftMost === rightMost) {
        return { type: lcaType.VALID, node: leftMost };
    }
    const leftPath = pathToRoot_(leftMost);
    const newLeftPath = prunePath_(leftPath, children);
    const rightPath = pathToRoot_(rightMost, function (x) {
        return newLeftPath.indexOf(x) !== -1;
    });
    const lca = rightPath[0];
    const lIndex = newLeftPath.indexOf(lca);
    if (lIndex === -1) {
        return { type: lcaType.INVALID, node: null };
    }
    return {
        type: newLeftPath.length !== leftPath.length
            ? lcaType.PRUNED
            : validLca_(newLeftPath[lIndex + 1], rightPath[1])
                ? lcaType.VALID
                : lcaType.INVALID,
        node: lca
    };
}
exports.mathmlLca_ = mathmlLca_;
function prunePath_(path, children) {
    let i = 0;
    while (path[i] && children.indexOf(path[i]) === -1) {
        i++;
    }
    return path.slice(0, i + 1);
}
exports.prunePath_ = prunePath_;
function attachedElement_(nodes) {
    let count = 0;
    let attached = null;
    while (!attached && count < nodes.length) {
        if (nodes[count].parentNode) {
            attached = nodes[count];
        }
        count++;
    }
    return attached;
}
exports.attachedElement_ = attachedElement_;
function pathToRoot_(node, opt_test) {
    const test = opt_test || ((_x) => false);
    const path = [node];
    while (!test(node) && !SemanticUtil.hasMathTag(node) && node.parentNode) {
        node = parentNode_(node);
        path.unshift(node);
    }
    return path;
}
exports.pathToRoot_ = pathToRoot_;
function validLca_(left, right) {
    return !!(left && right && !left.previousSibling && !right.nextSibling);
}
exports.validLca_ = validLca_;
function ascendNewNode(newNode) {
    while (!SemanticUtil.hasMathTag(newNode) && unitChild_(newNode)) {
        newNode = parentNode_(newNode);
    }
    return newNode;
}
exports.ascendNewNode = ascendNewNode;
function descendNode_(node) {
    const children = DomUtil.toArray(node.childNodes);
    if (!children) {
        return node;
    }
    const remainder = children.filter(function (child) {
        return (child.nodeType === DomUtil.NodeType.ELEMENT_NODE &&
            !SemanticUtil.hasIgnoreTag(child));
    });
    if (remainder.length === 1 &&
        SemanticUtil.hasEmptyTag(remainder[0]) &&
        !remainder[0].hasAttribute(EnrichAttr.Attribute.TYPE)) {
        return descendNode_(remainder[0]);
    }
    return node;
}
exports.descendNode_ = descendNode_;
function unitChild_(node) {
    const parent = parentNode_(node);
    if (!parent || !SemanticUtil.hasEmptyTag(parent)) {
        return false;
    }
    return DomUtil.toArray(parent.childNodes).every(function (child) {
        return child === node || isIgnorable_(child);
    });
}
exports.unitChild_ = unitChild_;
function isIgnorable_(node) {
    if (node.nodeType !== DomUtil.NodeType.ELEMENT_NODE) {
        return true;
    }
    if (!node || SemanticUtil.hasIgnoreTag(node)) {
        return true;
    }
    const children = DomUtil.toArray(node.childNodes);
    if ((!SemanticUtil.hasEmptyTag(node) && children.length) ||
        SemanticUtil.hasDisplayTag(node) ||
        node.hasAttribute(EnrichAttr.Attribute.TYPE) ||
        SemanticUtil.isOrphanedGlyph(node)) {
        return false;
    }
    return DomUtil.toArray(node.childNodes).every(isIgnorable_);
}
exports.isIgnorable_ = isIgnorable_;
function parentNode_(element) {
    return element.parentNode;
}
exports.parentNode_ = parentNode_;
function addCollapsedAttribute(node, collapsed) {
    const skeleton = new semantic_skeleton_1.SemanticSkeleton(collapsed);
    node.setAttribute(EnrichAttr.Attribute.COLLAPSED, skeleton.toString());
}
exports.addCollapsedAttribute = addCollapsedAttribute;
function cloneContentNode(content) {
    if (content.mathml.length) {
        return walkTree(content);
    }
    const clone = exports.SETTINGS.implicit
        ? createInvisibleOperator_(content)
        : DomUtil.createElement('mrow');
    content.mathml = [clone];
    return clone;
}
exports.cloneContentNode = cloneContentNode;
function rewriteMfenced(mml) {
    if (DomUtil.tagName(mml) !== 'MFENCED') {
        return mml;
    }
    const newNode = DomUtil.createElement('mrow');
    for (let i = 0, attr; (attr = mml.attributes[i]); i++) {
        if (['open', 'close', 'separators'].indexOf(attr.name) === -1) {
            newNode.setAttribute(attr.name, attr.value);
        }
    }
    DomUtil.toArray(mml.childNodes).forEach(function (x) {
        newNode.appendChild(x);
    });
    DomUtil.replaceNode(mml, newNode);
    return newNode;
}
exports.rewriteMfenced = rewriteMfenced;
function createInvisibleOperator_(operator) {
    const moNode = DomUtil.createElement('mo');
    const text = DomUtil.createTextNode(operator.textContent);
    moNode.appendChild(text);
    EnrichAttr.setAttributes(moNode, operator);
    moNode.setAttribute(EnrichAttr.Attribute.ADDED, 'true');
    return moNode;
}
exports.createInvisibleOperator_ = createInvisibleOperator_;
function setOperatorAttribute_(semantic, content) {
    const operator = semantic.type + (semantic.textContent ? ',' + semantic.textContent : '');
    content.forEach(function (c) {
        getInnerNode(c).setAttribute(EnrichAttr.Attribute.OPERATOR, operator);
    });
}
exports.setOperatorAttribute_ = setOperatorAttribute_;
function getInnerNode(node) {
    const children = DomUtil.toArray(node.childNodes);
    if (!children) {
        return node;
    }
    const remainder = children.filter(function (child) {
        return !isIgnorable_(child);
    });
    const result = [];
    for (let i = 0, remain; (remain = remainder[i]); i++) {
        if (SemanticUtil.hasEmptyTag(remain)) {
            const nextInner = getInnerNode(remain);
            if (nextInner && nextInner !== remain) {
                result.push(nextInner);
            }
        }
        else {
            result.push(remain);
        }
    }
    if (result.length === 1) {
        return result[0];
    }
    return node;
}
exports.getInnerNode = getInnerNode;
function formattedOutput(mml, expr, tree, opt_wiki) {
    const wiki = opt_wiki || false;
    formattedOutput_(mml, 'Original MathML', wiki);
    formattedOutput_(tree, 'Semantic Tree', wiki);
    formattedOutput_(expr, 'Semantically enriched MathML', wiki);
}
exports.formattedOutput = formattedOutput;
function formattedOutput_(element, name, wiki) {
    const output = DomUtil.formatXml(element.toString());
    if (!wiki) {
        console.info(output);
        return;
    }
    console.info(name + ':\n```html\n' + EnrichAttr.removeAttributePrefix(output) + '\n```\n');
}
exports.formattedOutput_ = formattedOutput_;
function collapsePunctuated(semantic, opt_children) {
    const optional = !!opt_children;
    const children = opt_children || [];
    const parent = semantic.parent;
    const contentIds = semantic.contentNodes.map(function (x) {
        return x.id;
    });
    contentIds.unshift('c');
    const childIds = [semantic.id, contentIds];
    for (let i = 0, child; (child = semantic.childNodes[i]); i++) {
        const mmlChild = walkTree(child);
        children.push(mmlChild);
        const innerNode = getInnerNode(mmlChild);
        if (parent && !optional) {
            innerNode.setAttribute(EnrichAttr.Attribute.PARENT, parent.id.toString());
        }
        childIds.push(child.id);
    }
    return childIds;
}
exports.collapsePunctuated = collapsePunctuated;
function printNodeList__(title, nodes) {
    console.info(title);
    DomUtil.toArray(nodes).forEach(function (x) {
        console.info(x.toString());
    });
    console.info('<<<<<<<<<<<<<<<<<');
}
exports.printNodeList__ = printNodeList__;


/***/ }),

/***/ 5105:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractHighlighter = void 0;
const XpathUtil = __webpack_require__(5274);
const enrich_attr_1 = __webpack_require__(2298);
class AbstractHighlighter {
    constructor() {
        this.color = null;
        this.mactionName = '';
        this.currentHighlights = [];
    }
    highlight(nodes) {
        this.currentHighlights.push(nodes.map((node) => {
            const info = this.highlightNode(node);
            this.setHighlighted(node);
            return info;
        }));
    }
    highlightAll(node) {
        const mactions = this.getMactionNodes(node);
        for (let i = 0, maction; (maction = mactions[i]); i++) {
            this.highlight([maction]);
        }
    }
    unhighlight() {
        const nodes = this.currentHighlights.pop();
        if (!nodes) {
            return;
        }
        nodes.forEach((highlight) => {
            if (this.isHighlighted(highlight.node)) {
                this.unhighlightNode(highlight);
                this.unsetHighlighted(highlight.node);
            }
        });
    }
    unhighlightAll() {
        while (this.currentHighlights.length > 0) {
            this.unhighlight();
        }
    }
    setColor(color) {
        this.color = color;
    }
    colorString() {
        return this.color.rgba();
    }
    addEvents(node, events) {
        const mactions = this.getMactionNodes(node);
        for (let i = 0, maction; (maction = mactions[i]); i++) {
            for (const event in events) {
                maction.addEventListener(event, events[event]);
            }
        }
    }
    getMactionNodes(node) {
        return Array.from(node.getElementsByClassName(this.mactionName));
    }
    isMactionNode(node) {
        const className = node.className || node.getAttribute('class');
        return className ? !!className.match(new RegExp(this.mactionName)) : false;
    }
    isHighlighted(node) {
        return node.hasAttribute(AbstractHighlighter.ATTR);
    }
    setHighlighted(node) {
        node.setAttribute(AbstractHighlighter.ATTR, 'true');
    }
    unsetHighlighted(node) {
        node.removeAttribute(AbstractHighlighter.ATTR);
    }
    colorizeAll(node) {
        const allNodes = XpathUtil.evalXPath(`.//*[@${enrich_attr_1.Attribute.ID}]`, node);
        allNodes.forEach((x) => this.colorize(x));
    }
    uncolorizeAll(node) {
        const allNodes = XpathUtil.evalXPath(`.//*[@${enrich_attr_1.Attribute.ID}]`, node);
        allNodes.forEach((x) => this.uncolorize(x));
    }
    colorize(node) {
        const fore = (0, enrich_attr_1.addPrefix)('foreground');
        if (node.hasAttribute(fore)) {
            node.setAttribute(fore + '-old', node.style.color);
            node.style.color = node.getAttribute(fore);
        }
    }
    uncolorize(node) {
        const fore = (0, enrich_attr_1.addPrefix)('foreground') + '-old';
        if (node.hasAttribute(fore)) {
            node.style.color = node.getAttribute(fore);
        }
    }
}
exports.AbstractHighlighter = AbstractHighlighter;
AbstractHighlighter.ATTR = 'sre-highlight';


/***/ }),

/***/ 6937:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ChtmlHighlighter = void 0;
const css_highlighter_1 = __webpack_require__(933);
class ChtmlHighlighter extends css_highlighter_1.CssHighlighter {
    constructor() {
        super();
    }
    isMactionNode(node) {
        return node.tagName.toUpperCase() === this.mactionName.toUpperCase();
    }
    getMactionNodes(node) {
        return Array.from(node.getElementsByTagName(this.mactionName));
    }
}
exports.ChtmlHighlighter = ChtmlHighlighter;


/***/ }),

/***/ 8396:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ContrastPicker = exports.ColorPicker = void 0;
const namedColors = {
    red: { red: 255, green: 0, blue: 0 },
    green: { red: 0, green: 255, blue: 0 },
    blue: { red: 0, green: 0, blue: 255 },
    yellow: { red: 255, green: 255, blue: 0 },
    cyan: { red: 0, green: 255, blue: 255 },
    magenta: { red: 255, green: 0, blue: 255 },
    white: { red: 255, green: 255, blue: 255 },
    black: { red: 0, green: 0, blue: 0 }
};
function getChannelColor(color, deflt) {
    const col = color || { color: deflt };
    let channel = Object.prototype.hasOwnProperty.call(col, 'color')
        ? namedColors[col.color]
        : col;
    if (!channel) {
        channel = namedColors[deflt];
    }
    channel.alpha = Object.prototype.hasOwnProperty.call(col, 'alpha')
        ? col.alpha
        : 1;
    return normalizeColor(channel);
}
function normalizeColor(color) {
    const normalizeCol = (col) => {
        col = Math.max(col, 0);
        col = Math.min(255, col);
        return Math.round(col);
    };
    color.red = normalizeCol(color.red);
    color.green = normalizeCol(color.green);
    color.blue = normalizeCol(color.blue);
    color.alpha = Math.max(color.alpha, 0);
    color.alpha = Math.min(1, color.alpha);
    return color;
}
class ColorPicker {
    constructor(background, foreground) {
        this.foreground = getChannelColor(foreground, ColorPicker.DEFAULT_FOREGROUND_);
        this.background = getChannelColor(background, ColorPicker.DEFAULT_BACKGROUND_);
    }
    static toHex(num) {
        const hex = num.toString(16);
        return hex.length === 1 ? '0' + hex : hex;
    }
    rgba() {
        const rgba = function (col) {
            return ('rgba(' +
                col.red +
                ',' +
                col.green +
                ',' +
                col.blue +
                ',' +
                col.alpha +
                ')');
        };
        return {
            background: rgba(this.background),
            foreground: rgba(this.foreground)
        };
    }
    rgb() {
        const rgb = function (col) {
            return 'rgb(' + col.red + ',' + col.green + ',' + col.blue + ')';
        };
        return {
            background: rgb(this.background),
            alphaback: this.background.alpha.toString(),
            foreground: rgb(this.foreground),
            alphafore: this.foreground.alpha.toString()
        };
    }
    hex() {
        const hex = function (col) {
            return ('#' +
                ColorPicker.toHex(col.red) +
                ColorPicker.toHex(col.green) +
                ColorPicker.toHex(col.blue));
        };
        return {
            background: hex(this.background),
            alphaback: this.background.alpha.toString(),
            foreground: hex(this.foreground),
            alphafore: this.foreground.alpha.toString()
        };
    }
}
exports.ColorPicker = ColorPicker;
ColorPicker.DEFAULT_BACKGROUND_ = 'blue';
ColorPicker.DEFAULT_FOREGROUND_ = 'black';
function hsl2rgb(h, s, l) {
    s = s > 1 ? s / 100 : s;
    l = l > 1 ? l / 100 : l;
    const c = (1 - Math.abs(2 * l - 1)) * s;
    const x = c * (1 - Math.abs(((h / 60) % 2) - 1));
    const m = l - c / 2;
    let r = 0, g = 0, b = 0;
    if (0 <= h && h < 60) {
        [r, g, b] = [c, x, 0];
    }
    else if (60 <= h && h < 120) {
        [r, g, b] = [x, c, 0];
    }
    else if (120 <= h && h < 180) {
        [r, g, b] = [0, c, x];
    }
    else if (180 <= h && h < 240) {
        [r, g, b] = [0, x, c];
    }
    else if (240 <= h && h < 300) {
        [r, g, b] = [x, 0, c];
    }
    else if (300 <= h && h < 360) {
        [r, g, b] = [c, 0, x];
    }
    return { red: r + m, green: g + m, blue: b + m };
}
function rgb2RGB(rgb) {
    return {
        red: Math.round(255 * rgb.red),
        green: Math.round(255 * rgb.green),
        blue: Math.round(255 * rgb.blue)
    };
}
function RGB2hex(col) {
    return 'rgb(' + col.red + ',' + col.green + ',' + col.blue + ')';
}
class ContrastPicker {
    constructor() {
        this.hue = 10;
        this.sat = 100;
        this.light = 50;
        this.incr = 50;
    }
    generate() {
        return RGB2hex(rgb2RGB(hsl2rgb(this.hue, this.sat, this.light)));
    }
    increment() {
        this.hue = (this.hue + this.incr) % 360;
    }
}
exports.ContrastPicker = ContrastPicker;


/***/ }),

/***/ 933:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CssHighlighter = void 0;
const abstract_highlighter_1 = __webpack_require__(5105);
class CssHighlighter extends abstract_highlighter_1.AbstractHighlighter {
    constructor() {
        super();
        this.mactionName = 'mjx-maction';
    }
    highlightNode(node) {
        const info = {
            node: node,
            background: node.style.backgroundColor,
            foreground: node.style.color
        };
        const color = this.colorString();
        node.style.backgroundColor = color.background;
        node.style.color = color.foreground;
        return info;
    }
    unhighlightNode(info) {
        info.node.style.backgroundColor = info.background;
        info.node.style.color = info.foreground;
    }
}
exports.CssHighlighter = CssHighlighter;


/***/ }),

/***/ 3090:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.highlighterMapping_ = exports.addEvents = exports.highlighter = void 0;
const chtml_highlighter_1 = __webpack_require__(6937);
const color_picker_1 = __webpack_require__(8396);
const css_highlighter_1 = __webpack_require__(933);
const html_highlighter_1 = __webpack_require__(2598);
const mml_css_highlighter_1 = __webpack_require__(4500);
const mml_highlighter_1 = __webpack_require__(7071);
const svg_highlighter_1 = __webpack_require__(4346);
const svg_v3_highlighter_1 = __webpack_require__(2222);
function highlighter(back, fore, rendererInfo) {
    const colorPicker = new color_picker_1.ColorPicker(back, fore);
    const renderer = rendererInfo.renderer === 'NativeMML' && rendererInfo.browser === 'Safari'
        ? 'MML-CSS'
        : rendererInfo.renderer === 'SVG' && rendererInfo.browser === 'v3'
            ? 'SVG-V3'
            : rendererInfo.renderer;
    const highlighter = new (exports.highlighterMapping_[renderer] ||
        exports.highlighterMapping_['NativeMML'])();
    highlighter.setColor(colorPicker);
    return highlighter;
}
exports.highlighter = highlighter;
function addEvents(node, events, rendererInfo) {
    const highlight = exports.highlighterMapping_[rendererInfo.renderer];
    if (highlight) {
        new highlight().addEvents(node, events);
    }
}
exports.addEvents = addEvents;
exports.highlighterMapping_ = {
    SVG: svg_highlighter_1.SvgHighlighter,
    'SVG-V3': svg_v3_highlighter_1.SvgV3Highlighter,
    NativeMML: mml_highlighter_1.MmlHighlighter,
    'HTML-CSS': html_highlighter_1.HtmlHighlighter,
    'MML-CSS': mml_css_highlighter_1.MmlCssHighlighter,
    CommonHTML: css_highlighter_1.CssHighlighter,
    CHTML: chtml_highlighter_1.ChtmlHighlighter
};


/***/ }),

/***/ 2598:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HtmlHighlighter = void 0;
const DomUtil = __webpack_require__(5740);
const abstract_highlighter_1 = __webpack_require__(5105);
class HtmlHighlighter extends abstract_highlighter_1.AbstractHighlighter {
    constructor() {
        super();
        this.mactionName = 'maction';
    }
    highlightNode(node) {
        const info = {
            node: node,
            foreground: node.style.color,
            position: node.style.position
        };
        const color = this.color.rgb();
        node.style.color = color.foreground;
        node.style.position = 'relative';
        const bbox = node.bbox;
        if (bbox && bbox.w) {
            const vpad = 0.05;
            const hpad = 0;
            const span = DomUtil.createElement('span');
            const left = parseFloat(node.style.paddingLeft || '0');
            span.style.backgroundColor = color.background;
            span.style.opacity = color.alphaback.toString();
            span.style.display = 'inline-block';
            span.style.height = bbox.h + bbox.d + 2 * vpad + 'em';
            span.style.verticalAlign = -bbox.d + 'em';
            span.style.marginTop = span.style.marginBottom = -vpad + 'em';
            span.style.width = bbox.w + 2 * hpad + 'em';
            span.style.marginLeft = left - hpad + 'em';
            span.style.marginRight = -bbox.w - hpad - left + 'em';
            node.parentNode.insertBefore(span, node);
            info.box = span;
        }
        return info;
    }
    unhighlightNode(info) {
        const node = info.node;
        node.style.color = info.foreground;
        node.style.position = info.position;
        if (info.box) {
            info.box.parentNode.removeChild(info.box);
        }
    }
}
exports.HtmlHighlighter = HtmlHighlighter;


/***/ }),

/***/ 4500:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlCssHighlighter = void 0;
const css_highlighter_1 = __webpack_require__(933);
class MmlCssHighlighter extends css_highlighter_1.CssHighlighter {
    constructor() {
        super();
        this.mactionName = 'maction';
    }
    getMactionNodes(node) {
        return Array.from(node.getElementsByTagName(this.mactionName));
    }
    isMactionNode(node) {
        return node.tagName === this.mactionName;
    }
}
exports.MmlCssHighlighter = MmlCssHighlighter;


/***/ }),

/***/ 7071:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MmlHighlighter = void 0;
const abstract_highlighter_1 = __webpack_require__(5105);
class MmlHighlighter extends abstract_highlighter_1.AbstractHighlighter {
    constructor() {
        super();
        this.mactionName = 'maction';
    }
    highlightNode(node) {
        let style = node.getAttribute('style');
        style += ';background-color: ' + this.colorString().background;
        style += ';color: ' + this.colorString().foreground;
        node.setAttribute('style', style);
        return { node: node };
    }
    unhighlightNode(info) {
        let style = info.node.getAttribute('style');
        style = style.replace(';background-color: ' + this.colorString().background, '');
        style = style.replace(';color: ' + this.colorString().foreground, '');
        info.node.setAttribute('style', style);
    }
    colorString() {
        return this.color.rgba();
    }
    getMactionNodes(node) {
        return Array.from(node.getElementsByTagName(this.mactionName));
    }
    isMactionNode(node) {
        return node.tagName === this.mactionName;
    }
}
exports.MmlHighlighter = MmlHighlighter;


/***/ }),

/***/ 4346:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SvgHighlighter = void 0;
const DomUtil = __webpack_require__(5740);
const abstract_highlighter_1 = __webpack_require__(5105);
class SvgHighlighter extends abstract_highlighter_1.AbstractHighlighter {
    constructor() {
        super();
        this.mactionName = 'mjx-svg-maction';
    }
    highlightNode(node) {
        let info;
        if (this.isHighlighted(node)) {
            info = {
                node: node.previousSibling || node,
                background: node.style.backgroundColor,
                foreground: node.style.color
            };
            return info;
        }
        if (node.tagName === 'svg') {
            const info = {
                node: node,
                background: node.style.backgroundColor,
                foreground: node.style.color
            };
            node.style.backgroundColor = this.colorString().background;
            node.style.color = this.colorString().foreground;
            return info;
        }
        const rect = DomUtil.createElementNS('http://www.w3.org/2000/svg', 'rect');
        const padding = 40;
        let bbox;
        if (node.nodeName === 'use') {
            const g = DomUtil.createElementNS('http://www.w3.org/2000/svg', 'g');
            node.parentNode.insertBefore(g, node);
            g.appendChild(node);
            bbox = g.getBBox();
            g.parentNode.replaceChild(node, g);
        }
        else {
            bbox = node.getBBox();
        }
        rect.setAttribute('x', (bbox.x - padding).toString());
        rect.setAttribute('y', (bbox.y - padding).toString());
        rect.setAttribute('width', (bbox.width + 2 * padding).toString());
        rect.setAttribute('height', (bbox.height + 2 * padding).toString());
        const transform = node.getAttribute('transform');
        if (transform) {
            rect.setAttribute('transform', transform);
        }
        rect.setAttribute('fill', this.colorString().background);
        rect.setAttribute(abstract_highlighter_1.AbstractHighlighter.ATTR, 'true');
        node.parentNode.insertBefore(rect, node);
        info = { node: rect, foreground: node.getAttribute('fill') };
        node.setAttribute('fill', this.colorString().foreground);
        return info;
    }
    setHighlighted(node) {
        if (node.tagName === 'svg') {
            super.setHighlighted(node);
        }
    }
    unhighlightNode(info) {
        if ('background' in info) {
            info.node.style.backgroundColor = info.background;
            info.node.style.color = info.foreground;
            return;
        }
        info.foreground
            ? info.node.nextSibling.setAttribute('fill', info.foreground)
            : info.node.nextSibling.removeAttribute('fill');
        info.node.parentNode.removeChild(info.node);
    }
    isMactionNode(node) {
        let className = node.className || node.getAttribute('class');
        className =
            className.baseVal !== undefined
                ? className.baseVal
                : className;
        return className ? !!className.match(new RegExp(this.mactionName)) : false;
    }
}
exports.SvgHighlighter = SvgHighlighter;


/***/ }),

/***/ 2222:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SvgV3Highlighter = void 0;
const DomUtil = __webpack_require__(5740);
const XpathUtil = __webpack_require__(5274);
const abstract_highlighter_1 = __webpack_require__(5105);
const color_picker_1 = __webpack_require__(8396);
const svg_highlighter_1 = __webpack_require__(4346);
class SvgV3Highlighter extends svg_highlighter_1.SvgHighlighter {
    constructor() {
        super();
        this.mactionName = 'maction';
    }
    highlightNode(node) {
        let info;
        if (this.isHighlighted(node)) {
            info = {
                node: node,
                background: this.colorString().background,
                foreground: this.colorString().foreground
            };
            return info;
        }
        if (node.tagName === 'svg' || node.tagName === 'MJX-CONTAINER') {
            info = {
                node: node,
                background: node.style.backgroundColor,
                foreground: node.style.color
            };
            node.style.backgroundColor = this.colorString().background;
            node.style.color = this.colorString().foreground;
            return info;
        }
        const rect = DomUtil.createElementNS('http://www.w3.org/2000/svg', 'rect');
        rect.setAttribute('sre-highlighter-added', 'true');
        const padding = 40;
        const bbox = node.getBBox();
        rect.setAttribute('x', (bbox.x - padding).toString());
        rect.setAttribute('y', (bbox.y - padding).toString());
        rect.setAttribute('width', (bbox.width + 2 * padding).toString());
        rect.setAttribute('height', (bbox.height + 2 * padding).toString());
        const transform = node.getAttribute('transform');
        if (transform) {
            rect.setAttribute('transform', transform);
        }
        rect.setAttribute('fill', this.colorString().background);
        node.setAttribute(abstract_highlighter_1.AbstractHighlighter.ATTR, 'true');
        node.parentNode.insertBefore(rect, node);
        info = { node: node, foreground: node.getAttribute('fill') };
        if (node.nodeName === 'rect') {
            const picker = new color_picker_1.ColorPicker({ alpha: 0, color: 'black' });
            node.setAttribute('fill', picker.rgba().foreground);
        }
        else {
            node.setAttribute('fill', this.colorString().foreground);
        }
        return info;
    }
    unhighlightNode(info) {
        const previous = info.node.previousSibling;
        if (previous && previous.hasAttribute('sre-highlighter-added')) {
            info.foreground
                ? info.node.setAttribute('fill', info.foreground)
                : info.node.removeAttribute('fill');
            info.node.parentNode.removeChild(previous);
            return;
        }
        info.node.style.backgroundColor = info.background;
        info.node.style.color = info.foreground;
    }
    isMactionNode(node) {
        return node.getAttribute('data-mml-node') === this.mactionName;
    }
    getMactionNodes(node) {
        return Array.from(XpathUtil.evalXPath(`.//*[@data-mml-node="${this.mactionName}"]`, node));
    }
}
exports.SvgV3Highlighter = SvgV3Highlighter;


/***/ }),

/***/ 7222:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StaticTrieNode = exports.AbstractTrieNode = void 0;
const debugger_1 = __webpack_require__(2057);
const trie_node_1 = __webpack_require__(4391);
class AbstractTrieNode {
    constructor(constraint, test) {
        this.constraint = constraint;
        this.test = test;
        this.children_ = {};
        this.kind = trie_node_1.TrieNodeKind.ROOT;
    }
    getConstraint() {
        return this.constraint;
    }
    getKind() {
        return this.kind;
    }
    applyTest(object) {
        return this.test(object);
    }
    addChild(node) {
        const constraint = node.getConstraint();
        const child = this.children_[constraint];
        this.children_[constraint] = node;
        return child;
    }
    getChild(constraint) {
        return this.children_[constraint];
    }
    getChildren() {
        const children = [];
        for (const key in this.children_) {
            children.push(this.children_[key]);
        }
        return children;
    }
    findChildren(object) {
        const children = [];
        for (const key in this.children_) {
            const child = this.children_[key];
            if (child.applyTest(object)) {
                children.push(child);
            }
        }
        return children;
    }
    removeChild(constraint) {
        delete this.children_[constraint];
    }
    toString() {
        return this.constraint;
    }
}
exports.AbstractTrieNode = AbstractTrieNode;
class StaticTrieNode extends AbstractTrieNode {
    constructor(constraint, test) {
        super(constraint, test);
        this.rule_ = null;
        this.kind = trie_node_1.TrieNodeKind.STATIC;
    }
    getRule() {
        return this.rule_;
    }
    setRule(rule) {
        if (this.rule_) {
            debugger_1.Debugger.getInstance().output('Replacing rule ' + this.rule_ + ' with ' + rule);
        }
        this.rule_ = rule;
    }
    toString() {
        const rule = this.getRule();
        return rule
            ? this.constraint + '\n' + '==> ' + this.getRule().action
            : this.constraint;
    }
}
exports.StaticTrieNode = StaticTrieNode;


/***/ }),

/***/ 4508:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Trie = void 0;
const trie_node_1 = __webpack_require__(4391);
const trie_node_factory_1 = __webpack_require__(9701);
class Trie {
    constructor() {
        this.root = (0, trie_node_factory_1.getNode)(trie_node_1.TrieNodeKind.ROOT, '', null);
    }
    static collectRules_(root) {
        const rules = [];
        let explore = [root];
        while (explore.length) {
            const node = explore.shift();
            if (node.getKind() === trie_node_1.TrieNodeKind.QUERY ||
                node.getKind() === trie_node_1.TrieNodeKind.BOOLEAN) {
                const rule = node.getRule();
                if (rule) {
                    rules.unshift(rule);
                }
            }
            explore = explore.concat(node.getChildren());
        }
        return rules;
    }
    static printWithDepth_(node, depth, str) {
        const prefix = new Array(depth + 2).join(depth.toString()) + ': ';
        str += prefix + node.toString() + '\n';
        const children = node.getChildren();
        for (let i = 0, child; (child = children[i]); i++) {
            str = Trie.printWithDepth_(child, depth + 1, str);
        }
        return str;
    }
    static order_(node) {
        const children = node.getChildren();
        if (!children.length) {
            return 0;
        }
        const max = Math.max.apply(null, children.map(Trie.order_));
        return Math.max(children.length, max);
    }
    addRule(rule) {
        let node = this.root;
        const context = rule.context;
        const dynamicCstr = rule.dynamicCstr.getValues();
        for (let i = 0, l = dynamicCstr.length; i < l; i++) {
            node = this.addNode_(node, dynamicCstr[i], trie_node_1.TrieNodeKind.DYNAMIC, context);
        }
        node = this.addNode_(node, rule.precondition.query, trie_node_1.TrieNodeKind.QUERY, context);
        const booleans = rule.precondition.constraints;
        for (let i = 0, l = booleans.length; i < l; i++) {
            node = this.addNode_(node, booleans[i], trie_node_1.TrieNodeKind.BOOLEAN, context);
        }
        node.setRule(rule);
    }
    lookupRules(xml, dynamic) {
        let nodes = [this.root];
        const rules = [];
        while (dynamic.length) {
            const dynamicSet = dynamic.shift();
            const newNodes = [];
            while (nodes.length) {
                const node = nodes.shift();
                const children = node.getChildren();
                children.forEach((child) => {
                    if (child.getKind() !== trie_node_1.TrieNodeKind.DYNAMIC ||
                        dynamicSet.indexOf(child.getConstraint()) !== -1) {
                        newNodes.push(child);
                    }
                });
            }
            nodes = newNodes.slice();
        }
        while (nodes.length) {
            const node = nodes.shift();
            if (node.getRule) {
                const rule = node.getRule();
                if (rule) {
                    rules.push(rule);
                }
            }
            const children = node.findChildren(xml);
            nodes = nodes.concat(children);
        }
        return rules;
    }
    hasSubtrie(cstrs) {
        let subtrie = this.root;
        for (let i = 0, l = cstrs.length; i < l; i++) {
            const cstr = cstrs[i];
            subtrie = subtrie.getChild(cstr);
            if (!subtrie) {
                return false;
            }
        }
        return true;
    }
    toString() {
        return Trie.printWithDepth_(this.root, 0, '');
    }
    collectRules() {
        return Trie.collectRules_(this.root);
    }
    order() {
        return Trie.order_(this.root);
    }
    enumerate(opt_info) {
        return this.enumerate_(this.root, opt_info);
    }
    byConstraint(constraint) {
        let node = this.root;
        while (constraint.length && node) {
            const cstr = constraint.shift();
            node = node.getChild(cstr);
        }
        return node || null;
    }
    enumerate_(node, info) {
        info = info || {};
        const children = node.getChildren();
        for (let i = 0, child; (child = children[i]); i++) {
            if (child.kind !== trie_node_1.TrieNodeKind.DYNAMIC) {
                continue;
            }
            info[child.getConstraint()] = this.enumerate_(child, info[child.getConstraint()]);
        }
        return info;
    }
    addNode_(node, constraint, kind, context) {
        let nextNode = node.getChild(constraint);
        if (!nextNode) {
            nextNode = (0, trie_node_factory_1.getNode)(kind, constraint, context);
            node.addChild(nextNode);
        }
        return nextNode;
    }
}
exports.Trie = Trie;


/***/ }),

/***/ 4391:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TrieNodeKind = void 0;
var TrieNodeKind;
(function (TrieNodeKind) {
    TrieNodeKind["ROOT"] = "root";
    TrieNodeKind["DYNAMIC"] = "dynamic";
    TrieNodeKind["QUERY"] = "query";
    TrieNodeKind["BOOLEAN"] = "boolean";
    TrieNodeKind["STATIC"] = "static";
})(TrieNodeKind = exports.TrieNodeKind || (exports.TrieNodeKind = {}));


/***/ }),

/***/ 9701:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BooleanTrieNode = exports.QueryTrieNode = exports.constraintTest_ = exports.DynamicTrieNode = exports.RootTrieNode = exports.getNode = void 0;
const DomUtil = __webpack_require__(5740);
const XpathUtil = __webpack_require__(5274);
const grammar_1 = __webpack_require__(2105);
const MathCompoundStore = __webpack_require__(2780);
const abstract_trie_node_1 = __webpack_require__(7222);
const abstract_trie_node_2 = __webpack_require__(7222);
const trie_node_1 = __webpack_require__(4391);
function getNode(kind, constraint, context) {
    switch (kind) {
        case trie_node_1.TrieNodeKind.ROOT:
            return new RootTrieNode();
        case trie_node_1.TrieNodeKind.DYNAMIC:
            return new DynamicTrieNode(constraint);
        case trie_node_1.TrieNodeKind.QUERY:
            return new QueryTrieNode(constraint, context);
        case trie_node_1.TrieNodeKind.BOOLEAN:
            return new BooleanTrieNode(constraint, context);
        default:
            return null;
    }
}
exports.getNode = getNode;
class RootTrieNode extends abstract_trie_node_1.AbstractTrieNode {
    constructor() {
        super('', () => true);
        this.kind = trie_node_1.TrieNodeKind.ROOT;
    }
}
exports.RootTrieNode = RootTrieNode;
class DynamicTrieNode extends abstract_trie_node_1.AbstractTrieNode {
    constructor(constraint) {
        super(constraint, (axis) => axis === constraint);
        this.kind = trie_node_1.TrieNodeKind.DYNAMIC;
    }
}
exports.DynamicTrieNode = DynamicTrieNode;
const comparator = {
    '=': (x, y) => x === y,
    '!=': (x, y) => x !== y,
    '<': (x, y) => x < y,
    '>': (x, y) => x > y,
    '<=': (x, y) => x <= y,
    '>=': (x, y) => x >= y
};
function constraintTest_(constraint) {
    if (constraint.match(/^self::\*$/)) {
        return (_node) => true;
    }
    if (constraint.match(/^self::\w+$/)) {
        const tag = constraint.slice(6).toUpperCase();
        return (node) => node.tagName && DomUtil.tagName(node) === tag;
    }
    if (constraint.match(/^self::\w+:\w+$/)) {
        const inter = constraint.split(':');
        const namespace = XpathUtil.resolveNameSpace(inter[2]);
        if (!namespace) {
            return null;
        }
        const tag = inter[3].toUpperCase();
        return (node) => node.localName &&
            node.localName.toUpperCase() === tag &&
            node.namespaceURI === namespace;
    }
    if (constraint.match(/^@\w+$/)) {
        const attr = constraint.slice(1);
        return (node) => node.hasAttribute && node.hasAttribute(attr);
    }
    if (constraint.match(/^@\w+="[\w\d ]+"$/)) {
        const split = constraint.split('=');
        const attr = split[0].slice(1);
        const value = split[1].slice(1, -1);
        return (node) => node.hasAttribute &&
            node.hasAttribute(attr) &&
            node.getAttribute(attr) === value;
    }
    if (constraint.match(/^@\w+!="[\w\d ]+"$/)) {
        const split = constraint.split('!=');
        const attr = split[0].slice(1);
        const value = split[1].slice(1, -1);
        return (node) => !node.hasAttribute ||
            !node.hasAttribute(attr) ||
            node.getAttribute(attr) !== value;
    }
    if (constraint.match(/^contains\(\s*@grammar\s*,\s*"[\w\d ]+"\s*\)$/)) {
        const split = constraint.split('"');
        const value = split[1];
        return (_node) => !!grammar_1.Grammar.getInstance().getParameter(value);
    }
    if (constraint.match(/^not\(\s*contains\(\s*@grammar\s*,\s*"[\w\d ]+"\s*\)\s*\)$/)) {
        const split = constraint.split('"');
        const value = split[1];
        return (_node) => !grammar_1.Grammar.getInstance().getParameter(value);
    }
    if (constraint.match(/^name\(\.\.\/\.\.\)="\w+"$/)) {
        const split = constraint.split('"');
        const tag = split[1].toUpperCase();
        return (node) => {
            var _a, _b;
            return ((_b = (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.parentNode) === null || _b === void 0 ? void 0 : _b.tagName) &&
                DomUtil.tagName(node.parentNode.parentNode) === tag;
        };
    }
    if (constraint.match(/^count\(preceding-sibling::\*\)=\d+$/)) {
        const split = constraint.split('=');
        const num = parseInt(split[1], 10);
        return (node) => { var _a; return ((_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.childNodes[num]) === node; };
    }
    if (constraint.match(/^.+\[@category!?=".+"\]$/)) {
        let [, query, equality, category] = constraint.match(/^(.+)\[@category(!?=)"(.+)"\]$/);
        const unit = category.match(/^unit:(.+)$/);
        let add = '';
        if (unit) {
            category = unit[1];
            add = ':unit';
        }
        return (node) => {
            const xpath = XpathUtil.evalXPath(query, node)[0];
            if (xpath) {
                const result = MathCompoundStore.lookupCategory(xpath.textContent + add);
                return equality === '=' ? result === category : result !== category;
            }
            return false;
        };
    }
    if (constraint.match(/^string-length\(.+\)\W+\d+/)) {
        const [, select, comp, count] = constraint.match(/^string-length\((.+)\)(\W+)(\d+)/);
        const func = comparator[comp] || comparator['='];
        const numb = parseInt(count, 10);
        return (node) => {
            const xpath = XpathUtil.evalXPath(select, node)[0];
            if (!xpath) {
                return false;
            }
            return func(Array.from(xpath.textContent).length, numb);
        };
    }
    return null;
}
exports.constraintTest_ = constraintTest_;
class QueryTrieNode extends abstract_trie_node_2.StaticTrieNode {
    constructor(constraint, context) {
        super(constraint, constraintTest_(constraint));
        this.context = context;
        this.kind = trie_node_1.TrieNodeKind.QUERY;
    }
    applyTest(object) {
        return this.test
            ? this.test(object)
            : this.context.applyQuery(object, this.constraint) === object;
    }
}
exports.QueryTrieNode = QueryTrieNode;
class BooleanTrieNode extends abstract_trie_node_2.StaticTrieNode {
    constructor(constraint, context) {
        super(constraint, constraintTest_(constraint));
        this.context = context;
        this.kind = trie_node_1.TrieNodeKind.BOOLEAN;
    }
    applyTest(object) {
        return this.test
            ? this.test(object)
            : this.context.applyConstraint(object, this.constraint);
    }
}
exports.BooleanTrieNode = BooleanTrieNode;


/***/ }),

/***/ 7491:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.completeLocale = exports.getLocale = exports.setLocale = exports.locales = void 0;
const engine_1 = __webpack_require__(5897);
const variables_1 = __webpack_require__(1377);
const grammar_1 = __webpack_require__(2105);
const locale_ca_1 = __webpack_require__(4249);
const locale_da_1 = __webpack_require__(8657);
const locale_de_1 = __webpack_require__(173);
const locale_en_1 = __webpack_require__(9393);
const locale_es_1 = __webpack_require__(7978);
const locale_fr_1 = __webpack_require__(5540);
const locale_hi_1 = __webpack_require__(5218);
const locale_it_1 = __webpack_require__(3887);
const locale_nb_1 = __webpack_require__(8384);
const locale_nemeth_1 = __webpack_require__(7206);
const locale_nn_1 = __webpack_require__(7734);
const locale_sv_1 = __webpack_require__(7264);
const locale_1 = __webpack_require__(4356);
exports.locales = {
    ca: locale_ca_1.ca,
    da: locale_da_1.da,
    de: locale_de_1.de,
    en: locale_en_1.en,
    es: locale_es_1.es,
    fr: locale_fr_1.fr,
    hi: locale_hi_1.hi,
    it: locale_it_1.it,
    nb: locale_nb_1.nb,
    nn: locale_nn_1.nn,
    sv: locale_sv_1.sv,
    nemeth: locale_nemeth_1.nemeth
};
function setLocale() {
    const msgs = getLocale();
    setSubiso(msgs);
    if (msgs) {
        for (const key of Object.getOwnPropertyNames(msgs)) {
            locale_1.LOCALE[key] = msgs[key];
        }
        for (const [key, func] of Object.entries(msgs.CORRECTIONS)) {
            grammar_1.Grammar.getInstance().setCorrection(key, func);
        }
    }
}
exports.setLocale = setLocale;
function setSubiso(msg) {
    const subiso = engine_1.default.getInstance().subiso;
    if (msg.SUBISO.all.indexOf(subiso) === -1) {
        engine_1.default.getInstance().subiso = msg.SUBISO.default;
    }
    msg.SUBISO.current = engine_1.default.getInstance().subiso;
}
function getLocale() {
    const locale = variables_1.Variables.ensureLocale(engine_1.default.getInstance().locale, engine_1.default.getInstance().defaultLocale);
    engine_1.default.getInstance().locale = locale;
    return exports.locales[locale]();
}
exports.getLocale = getLocale;
function completeLocale(json) {
    const locale = exports.locales[json.locale];
    if (!locale) {
        console.error('Locale ' + json.locale + ' does not exist!');
        return;
    }
    const kind = json.kind.toUpperCase();
    const messages = json.messages;
    if (!messages)
        return;
    const loc = locale();
    for (const [key, value] of Object.entries(messages)) {
        loc[kind][key] = value;
    }
}
exports.completeLocale = completeLocale;


/***/ }),

/***/ 4356:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createLocale = exports.LOCALE = void 0;
const messages_1 = __webpack_require__(7549);
exports.LOCALE = createLocale();
function createLocale() {
    return {
        FUNCTIONS: (0, messages_1.FUNCTIONS)(),
        MESSAGES: (0, messages_1.MESSAGES)(),
        ALPHABETS: (0, messages_1.ALPHABETS)(),
        NUMBERS: (0, messages_1.NUMBERS)(),
        COMBINERS: {},
        CORRECTIONS: {},
        SUBISO: (0, messages_1.SUBISO)()
    };
}
exports.createLocale = createLocale;


/***/ }),

/***/ 2536:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.localeFontCombiner = exports.extractString = exports.localEnclose = exports.localRole = exports.localFont = exports.combinePostfixIndex = exports.nestingToString = void 0;
const locale_1 = __webpack_require__(4356);
const transformers_1 = __webpack_require__(4977);
function nestingToString(count) {
    switch (count) {
        case 1:
            return locale_1.LOCALE.MESSAGES.MS.ONCE || '';
        case 2:
            return locale_1.LOCALE.MESSAGES.MS.TWICE;
        default:
            return count.toString();
    }
}
exports.nestingToString = nestingToString;
function combinePostfixIndex(postfix, index) {
    return postfix === locale_1.LOCALE.MESSAGES.MS.ROOTINDEX ||
        postfix === locale_1.LOCALE.MESSAGES.MS.INDEX
        ? postfix
        : postfix + ' ' + index;
}
exports.combinePostfixIndex = combinePostfixIndex;
function localFont(font) {
    return extractString(locale_1.LOCALE.MESSAGES.font[font], font);
}
exports.localFont = localFont;
function localRole(role) {
    return extractString(locale_1.LOCALE.MESSAGES.role[role], role);
}
exports.localRole = localRole;
function localEnclose(enclose) {
    return extractString(locale_1.LOCALE.MESSAGES.enclose[enclose], enclose);
}
exports.localEnclose = localEnclose;
function extractString(combiner, fallback) {
    if (combiner === undefined) {
        return fallback;
    }
    return typeof combiner === 'string' ? combiner : combiner[0];
}
exports.extractString = extractString;
function localeFontCombiner(font) {
    return typeof font === 'string'
        ? { font: font, combiner: locale_1.LOCALE.ALPHABETS.combiner }
        : {
            font: font[0],
            combiner: locale_1.LOCALE.COMBINERS[font[1]] ||
                transformers_1.Combiners[font[1]] ||
                locale_1.LOCALE.ALPHABETS.combiner
        };
}
exports.localeFontCombiner = localeFontCombiner;


/***/ }),

/***/ 4249:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ca = void 0;
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const numbers_ca_1 = __webpack_require__(614);
const transformers_1 = __webpack_require__(4977);
const sansserifCombiner = function (letter, font, cap) {
    letter = 'sans serif ' + (cap ? cap + ' ' + letter : letter);
    return font ? letter + ' ' + font : letter;
};
let locale = null;
function ca() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.ca = ca;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_ca_1.default;
    loc.COMBINERS['sansserif'] = sansserifCombiner;
    loc.FUNCTIONS.fracNestDepth = (_node) => false;
    (loc.FUNCTIONS.combineRootIndex = locale_util_1.combinePostfixIndex),
        (loc.FUNCTIONS.combineNestedRadical = (a, _b, c) => a + c);
    loc.FUNCTIONS.fontRegexp = (font) => RegExp('^' + font + ' ');
    (loc.FUNCTIONS.plural = (unit) => {
        if (/.*os$/.test(unit)) {
            return unit + 'sos';
        }
        if (/.*s$/.test(unit)) {
            return unit + 'os';
        }
        if (/.*ga$/.test(unit)) {
            return unit.slice(0, -2) + 'gues';
        }
        if (/.*ça$/.test(unit)) {
            return unit.slice(0, -2) + 'ces';
        }
        if (/.*ca$/.test(unit)) {
            return unit.slice(0, -2) + 'ques';
        }
        if (/.*ja$/.test(unit)) {
            return unit.slice(0, -2) + 'ges';
        }
        if (/.*qua$/.test(unit)) {
            return unit.slice(0, -3) + 'qües';
        }
        if (/.*a$/.test(unit)) {
            return unit.slice(0, -1) + 'es';
        }
        if (/.*(e|i)$/.test(unit)) {
            return unit + 'ns';
        }
        if (/.*í$/.test(unit)) {
            return unit.slice(0, -1) + 'ins';
        }
        return unit + 's';
    }),
        (loc.FUNCTIONS.si = (prefix, unit) => {
            if (unit.match(/^metre/)) {
                prefix = prefix
                    .replace(/a$/, 'à')
                    .replace(/o$/, 'ò')
                    .replace(/i$/, 'í');
            }
            return prefix + unit;
        });
    loc.ALPHABETS.combiner = transformers_1.Combiners.prefixCombiner;
    return loc;
}


/***/ }),

/***/ 8657:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.da = void 0;
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const numbers_da_1 = __webpack_require__(3866);
const tr = __webpack_require__(4977);
let locale = null;
function da() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.da = da;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_da_1.default;
    loc.FUNCTIONS.radicalNestDepth = locale_util_1.nestingToString;
    loc.FUNCTIONS.fontRegexp = (font) => {
        return font === loc.ALPHABETS.capPrefix['default']
            ? RegExp('^' + font + ' ')
            : RegExp(' ' + font + '$');
    };
    loc.ALPHABETS.combiner = tr.Combiners.postfixCombiner;
    loc.ALPHABETS.digitTrans.default = numbers_da_1.default.numberToWords;
    return loc;
}


/***/ }),

/***/ 173:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.de = void 0;
const grammar_1 = __webpack_require__(2105);
const locale_util_1 = __webpack_require__(2536);
const locale_1 = __webpack_require__(4356);
const numbers_de_1 = __webpack_require__(1435);
const germanPrefixCombiner = function (letter, font, cap) {
    if (cap === 's') {
        font = font
            .split(' ')
            .map(function (x) {
            return x.replace(/s$/, '');
        })
            .join(' ');
        cap = '';
    }
    letter = cap ? cap + ' ' + letter : letter;
    return font ? font + ' ' + letter : letter;
};
const germanPostfixCombiner = function (letter, font, cap) {
    letter = !cap || cap === 's' ? letter : cap + ' ' + letter;
    return font ? letter + ' ' + font : letter;
};
let locale = null;
function de() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.de = de;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_de_1.default;
    loc.COMBINERS['germanPostfix'] = germanPostfixCombiner;
    loc.ALPHABETS.combiner = germanPrefixCombiner;
    loc.FUNCTIONS.radicalNestDepth = (x) => {
        return x > 1 ? loc.NUMBERS.numberToWords(x) + 'fach' : '';
    };
    loc.FUNCTIONS.combineRootIndex = (postfix, index) => {
        const root = index ? index + 'wurzel' : '';
        return postfix.replace('Wurzel', root);
    };
    loc.FUNCTIONS.combineNestedRadical = (a, b, c) => {
        a = c.match(/exponent$/) ? a + 'r' : a;
        const count = (b ? b + ' ' : '') + a;
        return c.match(/ /) ? c.replace(/ /, ' ' + count + ' ') : count + ' ' + c;
    };
    loc.FUNCTIONS.fontRegexp = function (font) {
        font = font
            .split(' ')
            .map(function (x) {
            return x.replace(/s$/, '(|s)');
        })
            .join(' ');
        return new RegExp('((^' + font + ' )|( ' + font + '$))');
    };
    loc.CORRECTIONS.correctOne = (num) => num.replace(/^eins$/, 'ein');
    loc.CORRECTIONS.localFontNumber = (font) => {
        const realFont = (0, locale_util_1.localFont)(font);
        return realFont
            .split(' ')
            .map(function (x) {
            return x.replace(/s$/, '');
        })
            .join(' ');
    };
    loc.CORRECTIONS.lowercase = (name) => name.toLowerCase();
    loc.CORRECTIONS.article = (name) => {
        const decl = grammar_1.Grammar.getInstance().getParameter('case');
        const plural = grammar_1.Grammar.getInstance().getParameter('plural');
        if (decl === 'dative') {
            return { der: 'dem', die: plural ? 'den' : 'der', das: 'dem' }[name];
        }
        return name;
    };
    loc.CORRECTIONS.masculine = (name) => {
        const decl = grammar_1.Grammar.getInstance().getParameter('case');
        if (decl === 'dative') {
            return name + 'n';
        }
        return name;
    };
    return loc;
}


/***/ }),

/***/ 9393:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.en = void 0;
const grammar_1 = __webpack_require__(2105);
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const numbers_en_1 = __webpack_require__(310);
const tr = __webpack_require__(4977);
let locale = null;
function en() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.en = en;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_en_1.default;
    loc.FUNCTIONS.radicalNestDepth = locale_util_1.nestingToString;
    loc.FUNCTIONS.plural = (unit) => {
        return /.*s$/.test(unit) ? unit : unit + 's';
    };
    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;
    loc.ALPHABETS.digitTrans.default = numbers_en_1.default.numberToWords;
    loc.CORRECTIONS.article = (name) => {
        return grammar_1.Grammar.getInstance().getParameter('noArticle') ? '' : name;
    };
    return loc;
}


/***/ }),

/***/ 7978:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.es = void 0;
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const numbers_es_1 = __webpack_require__(4634);
const transformers_1 = __webpack_require__(4977);
const sansserifCombiner = function (letter, font, cap) {
    letter = 'sans serif ' + (cap ? cap + ' ' + letter : letter);
    return font ? letter + ' ' + font : letter;
};
let locale = null;
function es() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.es = es;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_es_1.default;
    loc.COMBINERS['sansserif'] = sansserifCombiner;
    loc.FUNCTIONS.fracNestDepth = (_node) => false;
    (loc.FUNCTIONS.combineRootIndex = locale_util_1.combinePostfixIndex),
        (loc.FUNCTIONS.combineNestedRadical = (a, _b, c) => a + c);
    loc.FUNCTIONS.fontRegexp = (font) => RegExp('^' + font + ' ');
    (loc.FUNCTIONS.plural = (unit) => {
        if (/.*(a|e|i|o|u)$/.test(unit)) {
            return unit + 's';
        }
        if (/.*z$/.test(unit)) {
            return unit.slice(0, -1) + 'ces';
        }
        if (/.*c$/.test(unit)) {
            return unit.slice(0, -1) + 'ques';
        }
        if (/.*g$/.test(unit)) {
            return unit + 'ues';
        }
        if (/.*\u00f3n$/.test(unit)) {
            return unit.slice(0, -2) + 'ones';
        }
        return unit + 'es';
    }),
        (loc.FUNCTIONS.si = (prefix, unit) => {
            if (unit.match(/^metro/)) {
                prefix = prefix
                    .replace(/a$/, 'á')
                    .replace(/o$/, 'ó')
                    .replace(/i$/, 'í');
            }
            return prefix + unit;
        });
    loc.ALPHABETS.combiner = transformers_1.Combiners.prefixCombiner;
    return loc;
}


/***/ }),

/***/ 5540:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fr = void 0;
const grammar_1 = __webpack_require__(2105);
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const numbers_fr_1 = __webpack_require__(2350);
const transformers_1 = __webpack_require__(4977);
let locale = null;
function fr() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.fr = fr;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_fr_1.default;
    loc.FUNCTIONS.radicalNestDepth = locale_util_1.nestingToString;
    loc.FUNCTIONS.combineRootIndex = locale_util_1.combinePostfixIndex;
    loc.FUNCTIONS.combineNestedFraction = (a, b, c) => c.replace(/ $/g, '') + b + a;
    loc.FUNCTIONS.combineNestedRadical = (a, _b, c) => c + ' ' + a;
    loc.FUNCTIONS.fontRegexp = (font) => RegExp(' (en |)' + font + '$');
    loc.FUNCTIONS.plural = (unit) => {
        return /.*s$/.test(unit) ? unit : unit + 's';
    };
    loc.CORRECTIONS.article = (name) => {
        return grammar_1.Grammar.getInstance().getParameter('noArticle') ? '' : name;
    };
    loc.ALPHABETS.combiner = transformers_1.Combiners.romanceCombiner;
    loc.SUBISO = {
        default: 'fr',
        current: 'fr',
        all: ['fr', 'be', 'ch']
    };
    return loc;
}


/***/ }),

/***/ 5218:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hi = void 0;
const locale_1 = __webpack_require__(4356);
const numbers_hi_1 = __webpack_require__(4438);
const transformers_1 = __webpack_require__(4977);
const locale_util_1 = __webpack_require__(2536);
let locale = null;
function hi() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.hi = hi;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_hi_1.default;
    loc.ALPHABETS.combiner = transformers_1.Combiners.prefixCombiner;
    loc.FUNCTIONS.radicalNestDepth = locale_util_1.nestingToString;
    return loc;
}


/***/ }),

/***/ 3887:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.it = void 0;
const locale_util_1 = __webpack_require__(2536);
const locale_1 = __webpack_require__(4356);
const numbers_it_1 = __webpack_require__(8825);
const transformers_1 = __webpack_require__(4977);
const italianPostfixCombiner = function (letter, font, cap) {
    if (letter.match(/^[a-zA-Z]$/)) {
        font = font.replace('cerchiato', 'cerchiata');
    }
    letter = cap ? letter + ' ' + cap : letter;
    return font ? letter + ' ' + font : letter;
};
let locale = null;
function it() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.it = it;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_it_1.default;
    loc.COMBINERS['italianPostfix'] = italianPostfixCombiner;
    loc.FUNCTIONS.radicalNestDepth = locale_util_1.nestingToString;
    loc.FUNCTIONS.combineRootIndex = locale_util_1.combinePostfixIndex;
    loc.FUNCTIONS.combineNestedFraction = (a, b, c) => c.replace(/ $/g, '') + b + a;
    loc.FUNCTIONS.combineNestedRadical = (a, _b, c) => c + ' ' + a;
    loc.FUNCTIONS.fontRegexp = (font) => RegExp(' (en |)' + font + '$');
    loc.ALPHABETS.combiner = transformers_1.Combiners.romanceCombiner;
    return loc;
}


/***/ }),

/***/ 8384:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nb = void 0;
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const numbers_nn_1 = __webpack_require__(8274);
const tr = __webpack_require__(4977);
let locale = null;
function nb() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.nb = nb;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_nn_1.default;
    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;
    loc.ALPHABETS.digitTrans.default = numbers_nn_1.default.numberToWords;
    loc.FUNCTIONS.radicalNestDepth = locale_util_1.nestingToString;
    return loc;
}


/***/ }),

/***/ 7206:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nemeth = void 0;
const locale_1 = __webpack_require__(4356);
const numbers_nemeth_1 = __webpack_require__(3720);
const transformers_1 = __webpack_require__(4977);
const simpleEnglish = function (letter) {
    return letter.match(RegExp('^' + locale.ALPHABETS.languagePrefix.english))
        ? letter.slice(1)
        : letter;
};
const postfixCombiner = function (letter, font, _number) {
    letter = simpleEnglish(letter);
    return font ? letter + font : letter;
};
const germanCombiner = function (letter, font, _cap) {
    return font + simpleEnglish(letter);
};
const embellishCombiner = function (letter, font, num) {
    letter = simpleEnglish(letter);
    return font + (num ? num : '') + letter + '⠻';
};
const doubleEmbellishCombiner = function (letter, font, num) {
    letter = simpleEnglish(letter);
    return font + (num ? num : '') + letter + '⠻⠻';
};
const parensCombiner = function (letter, font, _number) {
    letter = simpleEnglish(letter);
    return font + letter + '⠾';
};
let locale = null;
function nemeth() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.nemeth = nemeth;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_nemeth_1.default;
    loc.COMBINERS = {
        postfixCombiner: postfixCombiner,
        germanCombiner: germanCombiner,
        embellishCombiner: embellishCombiner,
        doubleEmbellishCombiner: doubleEmbellishCombiner,
        parensCombiner: parensCombiner
    };
    loc.FUNCTIONS.fracNestDepth = (_node) => false;
    loc.FUNCTIONS.fontRegexp = (font) => RegExp('^' + font);
    (loc.FUNCTIONS.si = transformers_1.identityTransformer),
        (loc.ALPHABETS.combiner = (letter, font, num) => {
            return font ? font + num + letter : simpleEnglish(letter);
        });
    loc.ALPHABETS.digitTrans = { default: numbers_nemeth_1.default.numberToWords };
    return loc;
}


/***/ }),

/***/ 7734:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nn = void 0;
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const numbers_nn_1 = __webpack_require__(8274);
const tr = __webpack_require__(4977);
let locale = null;
function nn() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.nn = nn;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_nn_1.default;
    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;
    loc.ALPHABETS.digitTrans.default = numbers_nn_1.default.numberToWords;
    loc.FUNCTIONS.radicalNestDepth = locale_util_1.nestingToString;
    loc.SUBISO = {
        default: '',
        current: '',
        all: ['', 'alt']
    };
    return loc;
}


/***/ }),

/***/ 7264:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sv = void 0;
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const numbers_sv_1 = __webpack_require__(3898);
const tr = __webpack_require__(4977);
let locale = null;
function sv() {
    if (!locale) {
        locale = create();
    }
    return locale;
}
exports.sv = sv;
function create() {
    const loc = (0, locale_1.createLocale)();
    loc.NUMBERS = numbers_sv_1.default;
    loc.FUNCTIONS.radicalNestDepth = locale_util_1.nestingToString;
    loc.FUNCTIONS.fontRegexp = function (font) {
        return new RegExp('((^' + font + ' )|( ' + font + '$))');
    };
    loc.ALPHABETS.combiner = tr.Combiners.prefixCombiner;
    loc.ALPHABETS.digitTrans.default = numbers_sv_1.default.numberToWords;
    loc.CORRECTIONS.correctOne = (num) => num.replace(/^ett$/, 'en');
    return loc;
}


/***/ }),

/***/ 7549:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SUBISO = exports.FUNCTIONS = exports.ALPHABETS = exports.NUMBERS = exports.MESSAGES = void 0;
const tr = __webpack_require__(4977);
function MESSAGES() {
    return {
        MS: {},
        MSroots: {},
        font: {},
        embellish: {},
        role: {},
        enclose: {},
        navigate: {},
        regexp: {},
        unitTimes: ''
    };
}
exports.MESSAGES = MESSAGES;
function NUMBERS() {
    return {
        zero: 'zero',
        ones: [],
        tens: [],
        large: [],
        special: {},
        wordOrdinal: tr.identityTransformer,
        numericOrdinal: tr.identityTransformer,
        numberToWords: tr.identityTransformer,
        numberToOrdinal: tr.pluralCase,
        vulgarSep: ' ',
        numSep: ' '
    };
}
exports.NUMBERS = NUMBERS;
function ALPHABETS() {
    return {
        latinSmall: [],
        latinCap: [],
        greekSmall: [],
        greekCap: [],
        capPrefix: { default: '' },
        smallPrefix: { default: '' },
        digitPrefix: { default: '' },
        languagePrefix: {},
        digitTrans: {
            default: tr.identityTransformer,
            mathspeak: tr.identityTransformer,
            clearspeak: tr.identityTransformer
        },
        letterTrans: { default: tr.identityTransformer },
        combiner: (letter, _font, _cap) => {
            return letter;
        }
    };
}
exports.ALPHABETS = ALPHABETS;
function FUNCTIONS() {
    return {
        fracNestDepth: (n) => tr.vulgarFractionSmall(n, 10, 100),
        radicalNestDepth: (_count) => '',
        combineRootIndex: function (postfix, _index) {
            return postfix;
        },
        combineNestedFraction: tr.Combiners.identityCombiner,
        combineNestedRadical: tr.Combiners.identityCombiner,
        fontRegexp: function (font) {
            return new RegExp('^' + font.split(/ |-/).join('( |-)') + '( |-)');
        },
        si: tr.siCombiner,
        plural: tr.identityTransformer
    };
}
exports.FUNCTIONS = FUNCTIONS;
function SUBISO() {
    return {
        default: '',
        current: '',
        all: []
    };
}
exports.SUBISO = SUBISO;


/***/ }),

/***/ 614:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const grammar_1 = __webpack_require__(2105);
const messages_1 = __webpack_require__(7549);
function tensToWords_(num) {
    const n = num % 100;
    if (n < 20) {
        return NUMBERS.ones[n];
    }
    const ten = Math.floor(n / 10);
    const tens = NUMBERS.tens[ten];
    const ones = NUMBERS.ones[n % 10];
    return tens && ones ? tens + (ten === 2 ? '-i-' : '-') + ones : tens || ones;
}
function hundredsToWords_(num) {
    const n = num % 1000;
    const hundred = Math.floor(n / 100);
    const hundreds = hundred
        ? hundred === 1
            ? 'cent'
            : NUMBERS.ones[hundred] + '-cents'
        : '';
    const tens = tensToWords_(n % 100);
    return hundreds && tens ? hundreds + NUMBERS.numSep + tens : hundreds || tens;
}
function numberToWords(num) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % (pos > 1 ? 1000000 : 1000);
        if (hundreds) {
            let large = NUMBERS.large[pos];
            if (!pos) {
                str = hundredsToWords_(hundreds);
            }
            else if (pos === 1) {
                str =
                    (hundreds === 1 ? '' : hundredsToWords_(hundreds) + NUMBERS.numSep) +
                        large +
                        (str ? NUMBERS.numSep + str : '');
            }
            else {
                const thousands = numberToWords(hundreds);
                large = hundreds === 1 ? large : large.replace(/\u00f3$/, 'ons');
                str =
                    thousands +
                        NUMBERS.numSep +
                        large +
                        (str ? NUMBERS.numSep + str : '');
            }
        }
        num = Math.floor(num / (pos > 1 ? 1000000 : 1000));
        pos++;
    }
    return str;
}
function numberToOrdinal(num, _plural) {
    if (num > 1999) {
        return numericOrdinal(num);
    }
    if (num <= 10) {
        return NUMBERS.special.onesOrdinals[num - 1];
    }
    const result = numberToWords(num);
    if (result.match(/mil$/)) {
        return result.replace(/mil$/, 'mil·lèsima');
    }
    if (result.match(/u$/)) {
        return result.replace(/u$/, 'vena');
    }
    if (result.match(/a$/)) {
        return result.replace(/a$/, 'ena');
    }
    return result + (result.match(/e$/) ? 'na' : 'ena');
}
function numericOrdinal(num) {
    const gender = grammar_1.Grammar.getInstance().getParameter('gender');
    return num.toString() + (gender === 'f' ? 'a' : 'n');
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 3866:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const messages_1 = __webpack_require__(7549);
function onePrefix_(num, mill = false) {
    return num === NUMBERS.ones[1] ? (mill ? 'et' : 'en') : num;
}
function hundredsToWords_(num, ordinal = false) {
    let n = num % 1000;
    let str = '';
    let ones = NUMBERS.ones[Math.floor(n / 100)];
    str += ones ? onePrefix_(ones, true) + ' hundrede' : '';
    n = n % 100;
    if (n) {
        str += str ? ' og ' : '';
        ones = ordinal ? NUMBERS.special.smallOrdinals[n] : NUMBERS.ones[n];
        if (ones) {
            str += ones;
        }
        else {
            const tens = ordinal
                ? NUMBERS.special.tensOrdinals[Math.floor(n / 10)]
                : NUMBERS.tens[Math.floor(n / 10)];
            ones = NUMBERS.ones[n % 10];
            str += ones ? onePrefix_(ones) + 'og' + tens : tens;
        }
    }
    return str;
}
function numberToWords(num, ordinal = false) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            const hund = hundredsToWords_(hundreds, ordinal && !pos);
            if (pos) {
                const large = NUMBERS.large[pos];
                const plural = hundreds > 1 ? 'er' : '';
                str =
                    onePrefix_(hund, pos <= 1) +
                        ' ' +
                        large +
                        plural +
                        (str ? ' og ' : '') +
                        str;
            }
            else {
                str = onePrefix_(hund) + str;
            }
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return str;
}
function numberToOrdinal(num, plural) {
    if (num === 1) {
        return plural ? 'hel' : 'hele';
    }
    if (num === 2) {
        return plural ? 'halv' : 'halve';
    }
    return wordOrdinal(num) + (plural ? 'dele' : 'del');
}
function wordOrdinal(num) {
    if (num % 100) {
        return numberToWords(num, true);
    }
    const ordinal = numberToWords(num);
    return ordinal.match(/e$/) ? ordinal : ordinal + 'e';
}
function numericOrdinal(num) {
    return num.toString() + '.';
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.wordOrdinal = wordOrdinal;
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 1435:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const messages_1 = __webpack_require__(7549);
function onePrefix_(num, mill = false) {
    return num === NUMBERS.ones[1] ? (mill ? 'eine' : 'ein') : num;
}
function hundredsToWords_(num) {
    let n = num % 1000;
    let str = '';
    let ones = NUMBERS.ones[Math.floor(n / 100)];
    str += ones ? onePrefix_(ones) + 'hundert' : '';
    n = n % 100;
    if (n) {
        str += str ? NUMBERS.numSep : '';
        ones = NUMBERS.ones[n];
        if (ones) {
            str += ones;
        }
        else {
            const tens = NUMBERS.tens[Math.floor(n / 10)];
            ones = NUMBERS.ones[n % 10];
            str += ones ? onePrefix_(ones) + 'und' + tens : tens;
        }
    }
    return str;
}
function numberToWords(num) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            const hund = hundredsToWords_(num % 1000);
            if (pos) {
                const large = NUMBERS.large[pos];
                const plural = pos > 1 && hundreds > 1 ? (large.match(/e$/) ? 'n' : 'en') : '';
                str = onePrefix_(hund, pos > 1) + large + plural + str;
            }
            else {
                str = onePrefix_(hund, pos > 1) + str;
            }
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return str.replace(/ein$/, 'eins');
}
function numberToOrdinal(num, plural) {
    if (num === 1) {
        return 'eintel';
    }
    if (num === 2) {
        return plural ? 'halbe' : 'halb';
    }
    return wordOrdinal(num) + 'l';
}
function wordOrdinal(num) {
    if (num === 1) {
        return 'erste';
    }
    if (num === 3) {
        return 'dritte';
    }
    if (num === 7) {
        return 'siebte';
    }
    if (num === 8) {
        return 'achte';
    }
    const ordinal = numberToWords(num);
    return ordinal + (num < 19 ? 'te' : 'ste');
}
function numericOrdinal(num) {
    return num.toString() + '.';
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.wordOrdinal = wordOrdinal;
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 310:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const messages_1 = __webpack_require__(7549);
function hundredsToWords_(num) {
    let n = num % 1000;
    let str = '';
    str += NUMBERS.ones[Math.floor(n / 100)]
        ? NUMBERS.ones[Math.floor(n / 100)] + NUMBERS.numSep + 'hundred'
        : '';
    n = n % 100;
    if (n) {
        str += str ? NUMBERS.numSep : '';
        str +=
            NUMBERS.ones[n] ||
                NUMBERS.tens[Math.floor(n / 10)] +
                    (n % 10 ? NUMBERS.numSep + NUMBERS.ones[n % 10] : '');
    }
    return str;
}
function numberToWords(num) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            str =
                hundredsToWords_(num % 1000) +
                    (pos ? '-' + NUMBERS.large[pos] + '-' : '') +
                    str;
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return str.replace(/-$/, '');
}
function numberToOrdinal(num, plural) {
    if (num === 1) {
        return plural ? 'oneths' : 'oneth';
    }
    if (num === 2) {
        return plural ? 'halves' : 'half';
    }
    const ordinal = wordOrdinal(num);
    return plural ? ordinal + 's' : ordinal;
}
function wordOrdinal(num) {
    let ordinal = numberToWords(num);
    if (ordinal.match(/one$/)) {
        ordinal = ordinal.slice(0, -3) + 'first';
    }
    else if (ordinal.match(/two$/)) {
        ordinal = ordinal.slice(0, -3) + 'second';
    }
    else if (ordinal.match(/three$/)) {
        ordinal = ordinal.slice(0, -5) + 'third';
    }
    else if (ordinal.match(/five$/)) {
        ordinal = ordinal.slice(0, -4) + 'fifth';
    }
    else if (ordinal.match(/eight$/)) {
        ordinal = ordinal.slice(0, -5) + 'eighth';
    }
    else if (ordinal.match(/nine$/)) {
        ordinal = ordinal.slice(0, -4) + 'ninth';
    }
    else if (ordinal.match(/twelve$/)) {
        ordinal = ordinal.slice(0, -6) + 'twelfth';
    }
    else if (ordinal.match(/ty$/)) {
        ordinal = ordinal.slice(0, -2) + 'tieth';
    }
    else {
        ordinal = ordinal + 'th';
    }
    return ordinal;
}
function numericOrdinal(num) {
    const tens = num % 100;
    const numStr = num.toString();
    if (tens > 10 && tens < 20) {
        return numStr + 'th';
    }
    switch (num % 10) {
        case 1:
            return numStr + 'st';
        case 2:
            return numStr + 'nd';
        case 3:
            return numStr + 'rd';
        default:
            return numStr + 'th';
    }
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.wordOrdinal = wordOrdinal;
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 4634:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const grammar_1 = __webpack_require__(2105);
const messages_1 = __webpack_require__(7549);
function tensToWords_(num) {
    const n = num % 100;
    if (n < 30) {
        return NUMBERS.ones[n];
    }
    const tens = NUMBERS.tens[Math.floor(n / 10)];
    const ones = NUMBERS.ones[n % 10];
    return tens && ones ? tens + ' y ' + ones : tens || ones;
}
function hundredsToWords_(num) {
    const n = num % 1000;
    const hundred = Math.floor(n / 100);
    const hundreds = NUMBERS.special.hundreds[hundred];
    const tens = tensToWords_(n % 100);
    if (hundred === 1) {
        if (!tens) {
            return hundreds;
        }
        return hundreds + 'to' + ' ' + tens;
    }
    return hundreds && tens ? hundreds + ' ' + tens : hundreds || tens;
}
function numberToWords(num) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            let large = NUMBERS.large[pos];
            const huns = hundredsToWords_(hundreds);
            if (!pos) {
                str = huns;
            }
            else if (hundreds === 1) {
                large = large.match('/^mil( |$)/') ? large : 'un ' + large;
                str = large + (str ? ' ' + str : '');
            }
            else {
                large = large.replace(/\u00f3n$/, 'ones');
                str = hundredsToWords_(hundreds) + ' ' + large + (str ? ' ' + str : '');
            }
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return str;
}
function numberToOrdinal(num, _plural) {
    if (num > 1999) {
        return num.toString() + 'a';
    }
    if (num <= 12) {
        return NUMBERS.special.onesOrdinals[num - 1];
    }
    const result = [];
    if (num >= 1000) {
        num = num - 1000;
        result.push('milésima');
    }
    if (!num) {
        return result.join(' ');
    }
    let pos = 0;
    pos = Math.floor(num / 100);
    if (pos > 0) {
        result.push(NUMBERS.special.hundredsOrdinals[pos - 1]);
        num = num % 100;
    }
    if (num <= 12) {
        result.push(NUMBERS.special.onesOrdinals[num - 1]);
    }
    else {
        pos = Math.floor(num / 10);
        if (pos > 0) {
            result.push(NUMBERS.special.tensOrdinals[pos - 1]);
            num = num % 10;
        }
        if (num > 0) {
            result.push(NUMBERS.special.onesOrdinals[num - 1]);
        }
    }
    return result.join(' ');
}
function numericOrdinal(num) {
    const gender = grammar_1.Grammar.getInstance().getParameter('gender');
    return num.toString() + (gender === 'f' ? 'a' : 'o');
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 2350:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const engine_1 = __webpack_require__(5897);
const grammar_1 = __webpack_require__(2105);
const messages_1 = __webpack_require__(7549);
function hundredsToWords_(num) {
    let n = num % 1000;
    let str = '';
    str += NUMBERS.ones[Math.floor(n / 100)]
        ? NUMBERS.ones[Math.floor(n / 100)] + '-cent'
        : '';
    n = n % 100;
    if (n) {
        str += str ? '-' : '';
        let ones = NUMBERS.ones[n];
        if (ones) {
            str += ones;
        }
        else {
            const tens = NUMBERS.tens[Math.floor(n / 10)];
            if (tens.match(/-dix$/)) {
                ones = NUMBERS.ones[(n % 10) + 10];
                str += tens.replace(/-dix$/, '') + '-' + ones;
            }
            else {
                str += tens + (n % 10 ? '-' + NUMBERS.ones[n % 10] : '');
            }
        }
    }
    const match = str.match(/s-\w+$/);
    return match
        ? str.replace(/s-\w+$/, match[0].slice(1))
        : str.replace(/-un$/, '-et-un');
}
function numberToWords(num) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    if (NUMBERS.special['tens-' + engine_1.default.getInstance().subiso]) {
        NUMBERS.tens = NUMBERS.special['tens-' + engine_1.default.getInstance().subiso];
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            let large = NUMBERS.large[pos];
            const huns = hundredsToWords_(hundreds);
            if (large && large.match(/^mille /)) {
                const rest = large.replace(/^mille /, '');
                if (str.match(RegExp(rest))) {
                    str = huns + (pos ? '-mille-' : '') + str;
                }
                else if (str.match(RegExp(rest.replace(/s$/, '')))) {
                    str =
                        huns +
                            (pos ? '-mille-' : '') +
                            str.replace(rest.replace(/s$/, ''), rest);
                }
                else {
                    str = huns + (pos ? '-' + large + '-' : '') + str;
                }
            }
            else {
                large = hundreds === 1 && large ? large.replace(/s$/, '') : large;
                str = huns + (pos ? '-' + large + '-' : '') + str;
            }
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return str.replace(/-$/, '');
}
const SMALL_ORDINAL = {
    1: 'unième',
    2: 'demi',
    3: 'tiers',
    4: 'quart'
};
function numberToOrdinal(num, plural) {
    const ordinal = SMALL_ORDINAL[num] || wordOrdinal(num);
    return num === 3 ? ordinal : plural ? ordinal + 's' : ordinal;
}
function wordOrdinal(num) {
    if (num === 1) {
        return 'première';
    }
    let ordinal = numberToWords(num);
    if (ordinal.match(/^neuf$/)) {
        ordinal = ordinal.slice(0, -1) + 'v';
    }
    else if (ordinal.match(/cinq$/)) {
        ordinal = ordinal + 'u';
    }
    else if (ordinal.match(/trois$/)) {
        ordinal = ordinal + '';
    }
    else if (ordinal.match(/e$/) || ordinal.match(/s$/)) {
        ordinal = ordinal.slice(0, -1);
    }
    ordinal = ordinal + 'ième';
    return ordinal;
}
function numericOrdinal(num) {
    const gender = grammar_1.Grammar.getInstance().getParameter('gender');
    return num === 1
        ? num.toString() + (gender === 'm' ? 'er' : 're')
        : num.toString() + 'e';
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.wordOrdinal = wordOrdinal;
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 4438:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const grammar_1 = __webpack_require__(2105);
const messages_1 = __webpack_require__(7549);
function hundredsToWords_(num) {
    let n = num % 1000;
    let str = '';
    str += NUMBERS.ones[Math.floor(n / 100)]
        ? NUMBERS.ones[Math.floor(n / 100)] +
            NUMBERS.numSep +
            NUMBERS.special.hundred
        : '';
    n = n % 100;
    if (n) {
        str += str ? NUMBERS.numSep : '';
        str += NUMBERS.ones[n];
    }
    return str;
}
function numberToWords(num) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 32)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    const hundreds = num % 1000;
    const hundredsWords = hundredsToWords_(hundreds);
    num = Math.floor(num / 1000);
    if (!num) {
        return hundredsWords;
    }
    while (num > 0) {
        const thousands = num % 100;
        if (thousands) {
            str =
                NUMBERS.ones[thousands] +
                    NUMBERS.numSep +
                    NUMBERS.large[pos] +
                    (str ? NUMBERS.numSep + str : '');
        }
        num = Math.floor(num / 100);
        pos++;
    }
    return hundredsWords ? str + NUMBERS.numSep + hundredsWords : str;
}
function numberToOrdinal(num, _plural) {
    if (num <= 10) {
        return NUMBERS.special.smallDenominators[num];
    }
    return wordOrdinal(num) + ' अंश';
}
function wordOrdinal(num) {
    const gender = grammar_1.Grammar.getInstance().getParameter('gender');
    if (num <= 0) {
        return num.toString();
    }
    if (num < 10) {
        return gender === 'f'
            ? NUMBERS.special.ordinalsFeminine[num]
            : NUMBERS.special.ordinalsMasculine[num];
    }
    const ordinal = numberToWords(num);
    return ordinal + (gender === 'f' ? 'वीं' : 'वाँ');
}
function numericOrdinal(num) {
    const gender = grammar_1.Grammar.getInstance().getParameter('gender');
    if (num > 0 && num < 10) {
        return gender === 'f'
            ? NUMBERS.special.simpleSmallOrdinalsFeminine[num]
            : NUMBERS.special.simpleSmallOrdinalsMasculine[num];
    }
    const ordinal = num
        .toString()
        .split('')
        .map(function (x) {
        const num = parseInt(x, 10);
        return isNaN(num) ? '' : NUMBERS.special.simpleNumbers[num];
    })
        .join('');
    return ordinal + (gender === 'f' ? 'वीं' : 'वाँ');
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.wordOrdinal = wordOrdinal;
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 8825:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const grammar_1 = __webpack_require__(2105);
const messages_1 = __webpack_require__(7549);
function hundredsToWords_(num) {
    let n = num % 1000;
    let str = '';
    str += NUMBERS.ones[Math.floor(n / 100)]
        ? NUMBERS.ones[Math.floor(n / 100)] + NUMBERS.numSep + 'cento'
        : '';
    n = n % 100;
    if (n) {
        str += str ? NUMBERS.numSep : '';
        const ones = NUMBERS.ones[n];
        if (ones) {
            str += ones;
        }
        else {
            let tens = NUMBERS.tens[Math.floor(n / 10)];
            const rest = n % 10;
            if (rest === 1 || rest === 8) {
                tens = tens.slice(0, -1);
            }
            str += tens;
            str += rest ? NUMBERS.numSep + NUMBERS.ones[n % 10] : '';
        }
    }
    return str;
}
function numberToWords(num) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    if (num === 1 && grammar_1.Grammar.getInstance().getParameter('fraction')) {
        return 'un';
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            str =
                hundredsToWords_(num % 1000) +
                    (pos ? '-' + NUMBERS.large[pos] + '-' : '') +
                    str;
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return str.replace(/-$/, '');
}
function numberToOrdinal(num, plural) {
    if (num === 2) {
        return plural ? 'mezzi' : 'mezzo';
    }
    const ordinal = wordOrdinal(num);
    if (!plural) {
        return ordinal;
    }
    const gender = ordinal.match(/o$/) ? 'i' : 'e';
    return ordinal.slice(0, -1) + gender;
}
function wordOrdinal(num) {
    const gender = grammar_1.Grammar.getInstance().getParameter('gender');
    const postfix = gender === 'm' ? 'o' : 'a';
    let ordinal = NUMBERS.special.onesOrdinals[num];
    if (ordinal) {
        return ordinal.slice(0, -1) + postfix;
    }
    ordinal = numberToWords(num);
    return ordinal.slice(0, -1) + 'esim' + postfix;
}
function numericOrdinal(num) {
    const gender = grammar_1.Grammar.getInstance().getParameter('gender');
    return num.toString() + (gender === 'm' ? 'o' : 'a');
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.wordOrdinal = wordOrdinal;
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 3720:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const messages_1 = __webpack_require__(7549);
function numberToWords(num) {
    const digits = num.toString().split('');
    return digits
        .map(function (digit) {
        return NUMBERS.ones[parseInt(digit, 10)];
    })
        .join('');
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToWords;
exports["default"] = NUMBERS;


/***/ }),

/***/ 8274:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const engine_1 = __webpack_require__(5897);
const messages_1 = __webpack_require__(7549);
function hundredsToWordsRo_(num, ordinal = false) {
    let n = num % 1000;
    let str = '';
    const count = Math.floor(n / 100);
    const ones = NUMBERS.ones[count];
    str += ones ? (count === 1 ? '' : ones) + 'hundre' : '';
    n = n % 100;
    if (n) {
        str += str ? 'og' : '';
        if (ordinal) {
            const ord = NUMBERS.special.smallOrdinals[n];
            if (ord) {
                return str + ord;
            }
            if (n % 10) {
                return (str +
                    NUMBERS.tens[Math.floor(n / 10)] +
                    NUMBERS.special.smallOrdinals[n % 10]);
            }
        }
        str +=
            NUMBERS.ones[n] ||
                NUMBERS.tens[Math.floor(n / 10)] + (n % 10 ? NUMBERS.ones[n % 10] : '');
    }
    return ordinal ? replaceOrdinal(str) : str;
}
function numberToWordsRo(num, ordinal = false) {
    if (num === 0) {
        return ordinal ? NUMBERS.special.smallOrdinals[0] : NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            const hund = hundredsToWordsRo_(num % 1000, pos ? false : ordinal);
            if (!pos && ordinal) {
                ordinal = !ordinal;
            }
            str =
                hund +
                    (pos
                        ? ' ' +
                            (NUMBERS.large[pos] + (pos > 1 && hundreds > 1 ? 'er' : '')) +
                            (str ? ' ' : '')
                        : '') +
                    str;
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return ordinal ? str + (str.match(/tusen$/) ? 'de' : 'te') : str;
}
function numberToOrdinal(num, _plural) {
    return wordOrdinal(num);
}
function replaceOrdinal(str) {
    const letOne = NUMBERS.special.endOrdinal[0];
    if (letOne === 'a' && str.match(/en$/)) {
        return str.slice(0, -2) + NUMBERS.special.endOrdinal;
    }
    if (str.match(/(d|n)$/) || str.match(/hundre$/)) {
        return str + 'de';
    }
    if (str.match(/i$/)) {
        return str + NUMBERS.special.endOrdinal;
    }
    if (letOne === 'a' && str.match(/e$/)) {
        return str.slice(0, -1) + NUMBERS.special.endOrdinal;
    }
    if (str.match(/e$/)) {
        return str + 'nde';
    }
    return str + 'nde';
}
function wordOrdinal(num) {
    const ordinal = numberToWords(num, true);
    return ordinal;
}
function numericOrdinal(num) {
    return num.toString() + '.';
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.wordOrdinal = wordOrdinal;
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;
function onePrefix_(num, thd = false) {
    const numOne = NUMBERS.ones[1];
    return num === numOne ? (num === 'ein' ? 'eitt ' : thd ? 'et' : 'ett') : num;
}
function hundredsToWordsGe_(num, ordinal = false) {
    let n = num % 1000;
    let str = '';
    let ones = NUMBERS.ones[Math.floor(n / 100)];
    str += ones ? onePrefix_(ones) + 'hundre' : '';
    n = n % 100;
    if (n) {
        str += str ? 'og' : '';
        if (ordinal) {
            const ord = NUMBERS.special.smallOrdinals[n];
            if (ord) {
                return (str += ord);
            }
        }
        ones = NUMBERS.ones[n];
        if (ones) {
            str += ones;
        }
        else {
            const tens = NUMBERS.tens[Math.floor(n / 10)];
            ones = NUMBERS.ones[n % 10];
            str += ones ? ones + 'og' + tens : tens;
        }
    }
    return ordinal ? replaceOrdinal(str) : str;
}
function numberToWordsGe(num, ordinal = false) {
    if (num === 0) {
        return ordinal ? NUMBERS.special.smallOrdinals[0] : NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            const hund = hundredsToWordsGe_(num % 1000, pos ? false : ordinal);
            if (!pos && ordinal) {
                ordinal = !ordinal;
            }
            str =
                (pos === 1 ? onePrefix_(hund, true) : hund) +
                    (pos > 1 ? NUMBERS.numSep : '') +
                    (pos
                        ?
                            NUMBERS.large[pos] + (pos > 1 && hundreds > 1 ? 'er' : '')
                        : '') +
                    (pos > 1 && str ? NUMBERS.numSep : '') +
                    str;
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return ordinal ? str + (str.match(/tusen$/) ? 'de' : 'te') : str;
}
function numberToWords(num, ordinal = false) {
    const word = engine_1.default.getInstance().subiso === 'alt'
        ? numberToWordsGe(num, ordinal)
        : numberToWordsRo(num, ordinal);
    return word;
}


/***/ }),

/***/ 3898:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const messages_1 = __webpack_require__(7549);
function hundredsToWords_(num) {
    let n = num % 1000;
    let str = '';
    const hundreds = Math.floor(n / 100);
    str += NUMBERS.ones[hundreds]
        ? (hundreds === 1 ? '' : NUMBERS.ones[hundreds] + NUMBERS.numSep) + 'hundra'
        : '';
    n = n % 100;
    if (n) {
        str += str ? NUMBERS.numSep : '';
        str +=
            NUMBERS.ones[n] ||
                NUMBERS.tens[Math.floor(n / 10)] +
                    (n % 10 ? NUMBERS.numSep + NUMBERS.ones[n % 10] : '');
    }
    return str;
}
function numberToWords(num, ordinal = false) {
    if (num === 0) {
        return NUMBERS.zero;
    }
    if (num >= Math.pow(10, 36)) {
        return num.toString();
    }
    let pos = 0;
    let str = '';
    while (num > 0) {
        const hundreds = num % 1000;
        if (hundreds) {
            const large = NUMBERS.large[pos];
            const plural = hundreds > 1 && pos > 1 && !ordinal ? 'er' : '';
            str =
                (pos === 1 && hundreds === 1
                    ? ''
                    : (pos > 1 && hundreds === 1 ? 'en' : hundredsToWords_(num % 1000)) +
                        (pos > 1 ? ' ' : '')) +
                    (pos ? large + plural + (pos > 1 ? ' ' : '') : '') +
                    str;
        }
        num = Math.floor(num / 1000);
        pos++;
    }
    return str.replace(/ $/, '');
}
function numberToOrdinal(num, plural) {
    if (num === 1) {
        return plural ? 'hel' : 'hel';
    }
    if (num === 2) {
        return plural ? 'halva' : 'halv';
    }
    let ordinal = wordOrdinal(num);
    ordinal = ordinal.match(/de$/) ? ordinal.replace(/de$/, '') : ordinal;
    return ordinal + (plural ? 'delar' : 'del');
}
function wordOrdinal(num) {
    let ordinal = numberToWords(num, true);
    if (ordinal.match(/^noll$/)) {
        ordinal = 'nollte';
    }
    else if (ordinal.match(/ett$/)) {
        ordinal = ordinal.replace(/ett$/, 'första');
    }
    else if (ordinal.match(/två$/)) {
        ordinal = ordinal.replace(/två$/, 'andra');
    }
    else if (ordinal.match(/tre$/)) {
        ordinal = ordinal.replace(/tre$/, 'tredje');
    }
    else if (ordinal.match(/fyra$/)) {
        ordinal = ordinal.replace(/fyra$/, 'fjärde');
    }
    else if (ordinal.match(/fem$/)) {
        ordinal = ordinal.replace(/fem$/, 'femte');
    }
    else if (ordinal.match(/sex$/)) {
        ordinal = ordinal.replace(/sex$/, 'sjätte');
    }
    else if (ordinal.match(/sju$/)) {
        ordinal = ordinal.replace(/sju$/, 'sjunde');
    }
    else if (ordinal.match(/åtta$/)) {
        ordinal = ordinal.replace(/åtta$/, 'åttonde');
    }
    else if (ordinal.match(/nio$/)) {
        ordinal = ordinal.replace(/nio$/, 'nionde');
    }
    else if (ordinal.match(/tio$/)) {
        ordinal = ordinal.replace(/tio$/, 'tionde');
    }
    else if (ordinal.match(/elva$/)) {
        ordinal = ordinal.replace(/elva$/, 'elfte');
    }
    else if (ordinal.match(/tolv$/)) {
        ordinal = ordinal.replace(/tolv$/, 'tolfte');
    }
    else if (ordinal.match(/tusen$/)) {
        ordinal = ordinal.replace(/tusen$/, 'tusonde');
    }
    else if (ordinal.match(/jard$/) || ordinal.match(/jon$/)) {
        ordinal = ordinal + 'te';
    }
    else {
        ordinal = ordinal + 'de';
    }
    return ordinal;
}
function numericOrdinal(num) {
    const str = num.toString();
    if (str.match(/11$|12$/)) {
        return str + ':e';
    }
    return str + (str.match(/1$|2$/) ? ':a' : ':e');
}
const NUMBERS = (0, messages_1.NUMBERS)();
NUMBERS.wordOrdinal = wordOrdinal;
NUMBERS.numericOrdinal = numericOrdinal;
NUMBERS.numberToWords = numberToWords;
NUMBERS.numberToOrdinal = numberToOrdinal;
exports["default"] = NUMBERS;


/***/ }),

/***/ 4977:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.vulgarFractionSmall = exports.convertVulgarFraction = exports.Combiners = exports.siCombiner = exports.identityTransformer = exports.pluralCase = void 0;
function pluralCase(num, _plural) {
    return num.toString();
}
exports.pluralCase = pluralCase;
function identityTransformer(input) {
    return input.toString();
}
exports.identityTransformer = identityTransformer;
function siCombiner(prefix, unit) {
    return prefix + unit.toLowerCase();
}
exports.siCombiner = siCombiner;
exports.Combiners = {};
exports.Combiners.identityCombiner = function (a, b, c) {
    return a + b + c;
};
exports.Combiners.prefixCombiner = function (letter, font, cap) {
    letter = cap ? cap + ' ' + letter : letter;
    return font ? font + ' ' + letter : letter;
};
exports.Combiners.postfixCombiner = function (letter, font, cap) {
    letter = cap ? cap + ' ' + letter : letter;
    return font ? letter + ' ' + font : letter;
};
exports.Combiners.romanceCombiner = function (letter, font, cap) {
    letter = cap ? letter + ' ' + cap : letter;
    return font ? letter + ' ' + font : letter;
};
function convertVulgarFraction(node, over = '') {
    if (!node.childNodes ||
        !node.childNodes[0] ||
        !node.childNodes[0].childNodes ||
        node.childNodes[0].childNodes.length < 2 ||
        node.childNodes[0].childNodes[0].tagName !==
            "number" ||
        node.childNodes[0].childNodes[0].getAttribute('role') !==
            "integer" ||
        node.childNodes[0].childNodes[1].tagName !==
            "number" ||
        node.childNodes[0].childNodes[1].getAttribute('role') !==
            "integer") {
        return { convertible: false, content: node.textContent };
    }
    const denStr = node.childNodes[0].childNodes[1].textContent;
    const enumStr = node.childNodes[0].childNodes[0].textContent;
    const denominator = Number(denStr);
    const enumerator = Number(enumStr);
    if (isNaN(denominator) || isNaN(enumerator)) {
        return {
            convertible: false,
            content: `${enumStr} ${over} ${denStr}`
        };
    }
    return {
        convertible: true,
        enumerator: enumerator,
        denominator: denominator
    };
}
exports.convertVulgarFraction = convertVulgarFraction;
function vulgarFractionSmall(node, enumer, denom) {
    const conversion = convertVulgarFraction(node);
    if (conversion.convertible) {
        const enumerator = conversion.enumerator;
        const denominator = conversion.denominator;
        return (enumerator > 0 &&
            enumerator < enumer &&
            denominator > 0 &&
            denominator < denom);
    }
    return false;
}
exports.vulgarFractionSmall = vulgarFractionSmall;


/***/ }),

/***/ 4504:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Condition = exports.BaseRuleStore = void 0;
const auditory_description_1 = __webpack_require__(7052);
const dynamic_cstr_1 = __webpack_require__(1676);
const speech_rule_1 = __webpack_require__(4650);
const speech_rule_context_1 = __webpack_require__(4106);
class BaseRuleStore {
    constructor() {
        this.context = new speech_rule_context_1.SpeechRuleContext();
        this.parseOrder = dynamic_cstr_1.DynamicCstr.DEFAULT_ORDER;
        this.parser = new dynamic_cstr_1.DynamicCstrParser(this.parseOrder);
        this.locale = dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.LOCALE];
        this.modality = dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.MODALITY];
        this.domain = '';
        this.initialized = false;
        this.inherits = null;
        this.kind = 'standard';
        this.customTranscriptions = {};
        this.preconditions = new Map();
        this.speechRules_ = [];
        this.rank = 0;
        this.parseMethods = {
            Rule: this.defineRule,
            Generator: this.generateRules,
            Action: this.defineAction,
            Precondition: this.definePrecondition,
            Ignore: this.ignoreRules
        };
    }
    static compareStaticConstraints_(cstr1, cstr2) {
        if (cstr1.length !== cstr2.length) {
            return false;
        }
        for (let i = 0, cstr; (cstr = cstr1[i]); i++) {
            if (cstr2.indexOf(cstr) === -1) {
                return false;
            }
        }
        return true;
    }
    static comparePreconditions_(rule1, rule2) {
        const prec1 = rule1.precondition;
        const prec2 = rule2.precondition;
        if (prec1.query !== prec2.query) {
            return false;
        }
        return BaseRuleStore.compareStaticConstraints_(prec1.constraints, prec2.constraints);
    }
    defineRule(name, dynamic, action, prec, ...args) {
        const postc = this.parseAction(action);
        const fullPrec = this.parsePrecondition(prec, args);
        const dynamicCstr = this.parseCstr(dynamic);
        if (!(postc && fullPrec && dynamicCstr)) {
            console.error(`Rule Error: ${prec}, (${dynamic}): ${action}`);
            return null;
        }
        const rule = new speech_rule_1.SpeechRule(name, dynamicCstr, fullPrec, postc);
        rule.precondition.rank = this.rank++;
        this.addRule(rule);
        return rule;
    }
    addRule(rule) {
        rule.context = this.context;
        this.speechRules_.unshift(rule);
    }
    deleteRule(rule) {
        const index = this.speechRules_.indexOf(rule);
        if (index !== -1) {
            this.speechRules_.splice(index, 1);
        }
    }
    findRule(pred) {
        for (let i = 0, rule; (rule = this.speechRules_[i]); i++) {
            if (pred(rule)) {
                return rule;
            }
        }
        return null;
    }
    findAllRules(pred) {
        return this.speechRules_.filter(pred);
    }
    evaluateDefault(node) {
        const rest = node.textContent.slice(0);
        if (rest.match(/^\s+$/)) {
            return this.evaluateWhitespace(rest);
        }
        return this.evaluateString(rest);
    }
    evaluateWhitespace(_str) {
        return [];
    }
    evaluateCustom(str) {
        const trans = this.customTranscriptions[str];
        return trans !== undefined
            ? auditory_description_1.AuditoryDescription.create({ text: trans }, { adjust: true, translate: false })
            : null;
    }
    evaluateCharacter(str) {
        return (this.evaluateCustom(str) ||
            auditory_description_1.AuditoryDescription.create({ text: str }, { adjust: true, translate: true }));
    }
    removeDuplicates(rule) {
        for (let i = this.speechRules_.length - 1, oldRule; (oldRule = this.speechRules_[i]); i--) {
            if (oldRule !== rule &&
                rule.dynamicCstr.equal(oldRule.dynamicCstr) &&
                BaseRuleStore.comparePreconditions_(oldRule, rule)) {
                this.speechRules_.splice(i, 1);
            }
        }
    }
    getSpeechRules() {
        return this.speechRules_;
    }
    setSpeechRules(rules) {
        this.speechRules_ = rules;
    }
    getPreconditions() {
        return this.preconditions;
    }
    parseCstr(cstr) {
        try {
            return this.parser.parse(this.locale +
                '.' +
                this.modality +
                (this.domain ? '.' + this.domain : '') +
                '.' +
                cstr);
        }
        catch (err) {
            if (err.name === 'RuleError') {
                console.error('Rule Error ', `Illegal Dynamic Constraint: ${cstr}.`, err.message);
                return null;
            }
            else {
                throw err;
            }
        }
    }
    parsePrecondition(query, rest) {
        try {
            const queryCstr = this.parsePrecondition_(query);
            query = queryCstr[0];
            let restCstr = queryCstr.slice(1);
            for (const cstr of rest) {
                restCstr = restCstr.concat(this.parsePrecondition_(cstr));
            }
            return new speech_rule_1.Precondition(query, ...restCstr);
        }
        catch (err) {
            if (err.name === 'RuleError') {
                console.error('Rule Error ', `Illegal preconditions: ${query}, ${rest}.`, err.message);
                return null;
            }
            else {
                throw err;
            }
        }
    }
    parseAction(action) {
        try {
            return speech_rule_1.Action.fromString(action);
        }
        catch (err) {
            if (err.name === 'RuleError') {
                console.error('Rule Error ', `Illegal action: ${action}.`, err.message);
                return null;
            }
            else {
                throw err;
            }
        }
    }
    parse(ruleSet) {
        this.modality = ruleSet.modality || this.modality;
        this.locale = ruleSet.locale || this.locale;
        this.domain = ruleSet.domain || this.domain;
        this.context.parse(ruleSet.functions || []);
        if (ruleSet.kind !== 'actions') {
            this.kind = ruleSet.kind || this.kind;
            this.inheritRules();
        }
        this.parseRules(ruleSet.rules || []);
    }
    parseRules(rules) {
        for (let i = 0, rule; (rule = rules[i]); i++) {
            const type = rule[0];
            const method = this.parseMethods[type];
            if (type && method) {
                method.apply(this, rule.slice(1));
            }
        }
    }
    generateRules(generator) {
        const method = this.context.customGenerators.lookup(generator);
        if (method) {
            method(this);
        }
    }
    defineAction(name, action) {
        let postc;
        try {
            postc = speech_rule_1.Action.fromString(action);
        }
        catch (err) {
            if (err.name === 'RuleError') {
                console.error('Action Error ', action, err.message);
                return;
            }
            else {
                throw err;
            }
        }
        const prec = this.getFullPreconditions(name);
        if (!prec) {
            console.error(`Action Error: No precondition for action ${name}`);
            return;
        }
        this.ignoreRules(name);
        const regexp = new RegExp('^\\w+\\.\\w+\\.' + (this.domain ? '\\w+\\.' : ''));
        prec.conditions.forEach(([dynamic, prec]) => {
            const newDynamic = this.parseCstr(dynamic.toString().replace(regexp, ''));
            this.addRule(new speech_rule_1.SpeechRule(name, newDynamic, prec, postc));
        });
    }
    getFullPreconditions(name) {
        const prec = this.preconditions.get(name);
        if (prec || !this.inherits) {
            return prec;
        }
        return this.inherits.getFullPreconditions(name);
    }
    definePrecondition(name, dynamic, prec, ...args) {
        const fullPrec = this.parsePrecondition(prec, args);
        const dynamicCstr = this.parseCstr(dynamic);
        if (!(fullPrec && dynamicCstr)) {
            console.error(`Precondition Error: ${prec}, (${dynamic})`);
            return;
        }
        fullPrec.rank = this.rank++;
        this.preconditions.set(name, new Condition(dynamicCstr, fullPrec));
    }
    inheritRules() {
        if (!this.inherits || !this.inherits.getSpeechRules().length) {
            return;
        }
        const regexp = new RegExp('^\\w+\\.\\w+\\.' + (this.domain ? '\\w+\\.' : ''));
        this.inherits.getSpeechRules().forEach((rule) => {
            const newDynamic = this.parseCstr(rule.dynamicCstr.toString().replace(regexp, ''));
            this.addRule(new speech_rule_1.SpeechRule(rule.name, newDynamic, rule.precondition, rule.action));
        });
    }
    ignoreRules(name, ...cstrs) {
        let rules = this.findAllRules((r) => r.name === name);
        if (!cstrs.length) {
            rules.forEach(this.deleteRule.bind(this));
            return;
        }
        let rest = [];
        for (const cstr of cstrs) {
            const dynamic = this.parseCstr(cstr);
            for (const rule of rules) {
                if (dynamic.equal(rule.dynamicCstr)) {
                    this.deleteRule(rule);
                }
                else {
                    rest.push(rule);
                }
            }
            rules = rest;
            rest = [];
        }
    }
    parsePrecondition_(cstr) {
        const generator = this.context.customGenerators.lookup(cstr);
        return generator ? generator() : [cstr];
    }
}
exports.BaseRuleStore = BaseRuleStore;
class Condition {
    constructor(base, condition) {
        this.base = base;
        this._conditions = [];
        this.constraints = [];
        this.allCstr = {};
        this.constraints.push(base);
        this.addCondition(base, condition);
    }
    get conditions() {
        return this._conditions;
    }
    addConstraint(dynamic) {
        if (this.constraints.filter((cstr) => cstr.equal(dynamic)).length) {
            return;
        }
        this.constraints.push(dynamic);
        const newConds = [];
        for (const [dyn, pre] of this.conditions) {
            if (this.base.equal(dyn)) {
                newConds.push([dynamic, pre]);
            }
        }
        this._conditions = this._conditions.concat(newConds);
    }
    addBaseCondition(cond) {
        this.addCondition(this.base, cond);
    }
    addFullCondition(cond) {
        this.constraints.forEach((cstr) => this.addCondition(cstr, cond));
    }
    addCondition(dynamic, cond) {
        const condStr = dynamic.toString() + ' ' + cond.toString();
        if (this.allCstr.condStr) {
            return;
        }
        this.allCstr[condStr] = true;
        this._conditions.push([dynamic, cond]);
    }
}
exports.Condition = Condition;


/***/ }),

/***/ 2469:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BrailleStore = void 0;
const semantic_annotations_1 = __webpack_require__(7630);
const math_store_1 = __webpack_require__(9935);
class BrailleStore extends math_store_1.MathStore {
    constructor() {
        super(...arguments);
        this.modality = 'braille';
        this.customTranscriptions = { '\u22ca': '⠈⠡⠳' };
    }
    evaluateString(str) {
        const descs = [];
        const text = Array.from(str);
        for (let i = 0; i < text.length; i++) {
            descs.push(this.evaluateCharacter(text[i]));
        }
        return descs;
    }
    annotations() {
        for (let i = 0, annotator; (annotator = this.annotators[i]); i++) {
            (0, semantic_annotations_1.activate)(this.locale, annotator);
        }
    }
}
exports.BrailleStore = BrailleStore;


/***/ }),

/***/ 1676:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultComparator = exports.DynamicCstrParser = exports.DynamicCstr = exports.DynamicProperties = exports.Axis = void 0;
var Axis;
(function (Axis) {
    Axis["DOMAIN"] = "domain";
    Axis["STYLE"] = "style";
    Axis["LOCALE"] = "locale";
    Axis["TOPIC"] = "topic";
    Axis["MODALITY"] = "modality";
})(Axis = exports.Axis || (exports.Axis = {}));
class DynamicProperties {
    constructor(properties, order = Object.keys(properties)) {
        this.properties = properties;
        this.order = order;
    }
    static createProp(...cstrList) {
        const axes = DynamicCstr.DEFAULT_ORDER;
        const dynamicCstr = {};
        for (let i = 0, l = cstrList.length, k = axes.length; i < l && i < k; i++) {
            dynamicCstr[axes[i]] = cstrList[i];
        }
        return new DynamicProperties(dynamicCstr);
    }
    getProperties() {
        return this.properties;
    }
    getOrder() {
        return this.order;
    }
    getAxes() {
        return this.order;
    }
    getProperty(key) {
        return this.properties[key];
    }
    updateProperties(props) {
        this.properties = props;
    }
    allProperties() {
        const propLists = [];
        this.order.forEach((key) => propLists.push(this.getProperty(key).slice()));
        return propLists;
    }
    toString() {
        const cstrStrings = [];
        this.order.forEach((key) => cstrStrings.push(key + ': ' + this.getProperty(key).toString()));
        return cstrStrings.join('\n');
    }
}
exports.DynamicProperties = DynamicProperties;
class DynamicCstr extends DynamicProperties {
    constructor(components_, order) {
        const properties = {};
        for (const [key, value] of Object.entries(components_)) {
            properties[key] = [value];
        }
        super(properties, order);
        this.components = components_;
    }
    static createCstr(...cstrList) {
        const axes = DynamicCstr.DEFAULT_ORDER;
        const dynamicCstr = {};
        for (let i = 0, l = cstrList.length, k = axes.length; i < l && i < k; i++) {
            dynamicCstr[axes[i]] = cstrList[i];
        }
        return new DynamicCstr(dynamicCstr);
    }
    static defaultCstr() {
        return DynamicCstr.createCstr.apply(null, DynamicCstr.DEFAULT_ORDER.map(function (x) {
            return DynamicCstr.DEFAULT_VALUES[x];
        }));
    }
    static validOrder(order) {
        const axes = DynamicCstr.DEFAULT_ORDER.slice();
        return order.every((x) => {
            const index = axes.indexOf(x);
            return index !== -1 && axes.splice(index, 1);
        });
    }
    getComponents() {
        return this.components;
    }
    getValue(key) {
        return this.components[key];
    }
    getValues() {
        return this.order.map((key) => this.getValue(key));
    }
    allProperties() {
        const propLists = super.allProperties();
        for (let i = 0, props, key; (props = propLists[i]), (key = this.order[i]); i++) {
            const value = this.getValue(key);
            if (props.indexOf(value) === -1) {
                props.unshift(value);
            }
        }
        return propLists;
    }
    toString() {
        return this.getValues().join('.');
    }
    equal(cstr) {
        const keys1 = cstr.getAxes();
        if (this.order.length !== keys1.length) {
            return false;
        }
        for (let j = 0, key; (key = keys1[j]); j++) {
            const comp2 = this.getValue(key);
            if (!comp2 || cstr.getValue(key) !== comp2) {
                return false;
            }
        }
        return true;
    }
}
exports.DynamicCstr = DynamicCstr;
DynamicCstr.DEFAULT_ORDER = [
    Axis.LOCALE,
    Axis.MODALITY,
    Axis.DOMAIN,
    Axis.STYLE,
    Axis.TOPIC
];
DynamicCstr.BASE_LOCALE = 'base';
DynamicCstr.DEFAULT_VALUE = 'default';
DynamicCstr.DEFAULT_VALUES = {
    [Axis.LOCALE]: 'en',
    [Axis.DOMAIN]: DynamicCstr.DEFAULT_VALUE,
    [Axis.STYLE]: DynamicCstr.DEFAULT_VALUE,
    [Axis.TOPIC]: DynamicCstr.DEFAULT_VALUE,
    [Axis.MODALITY]: 'speech'
};
class DynamicCstrParser {
    constructor(order) {
        this.order = order;
    }
    parse(str) {
        const order = str.split('.');
        const cstr = {};
        if (order.length > this.order.length) {
            throw new Error('Invalid dynamic constraint: ' + cstr);
        }
        let j = 0;
        for (let i = 0, key; (key = this.order[i]), order.length; i++, j++) {
            const value = order.shift();
            cstr[key] = value;
        }
        return new DynamicCstr(cstr, this.order.slice(0, j));
    }
}
exports.DynamicCstrParser = DynamicCstrParser;
class DefaultComparator {
    constructor(reference, fallback = new DynamicProperties(reference.getProperties(), reference.getOrder())) {
        this.reference = reference;
        this.fallback = fallback;
        this.order = this.reference.getOrder();
    }
    getReference() {
        return this.reference;
    }
    setReference(cstr, props) {
        this.reference = cstr;
        this.fallback =
            props || new DynamicProperties(cstr.getProperties(), cstr.getOrder());
        this.order = this.reference.getOrder();
    }
    match(cstr) {
        const keys1 = cstr.getAxes();
        return (keys1.length === this.reference.getAxes().length &&
            keys1.every((key) => {
                const value = cstr.getValue(key);
                return (value === this.reference.getValue(key) ||
                    this.fallback.getProperty(key).indexOf(value) !== -1);
            }));
    }
    compare(cstr1, cstr2) {
        let ignore = false;
        for (let i = 0, key; (key = this.order[i]); i++) {
            const value1 = cstr1.getValue(key);
            const value2 = cstr2.getValue(key);
            if (!ignore) {
                const ref = this.reference.getValue(key);
                if (ref === value1 && ref !== value2) {
                    return -1;
                }
                if (ref === value2 && ref !== value1) {
                    return 1;
                }
                if (ref === value1 && ref === value2) {
                    continue;
                }
                if (ref !== value1 && ref !== value2) {
                    ignore = true;
                }
            }
            const prop = this.fallback.getProperty(key);
            const index1 = prop.indexOf(value1);
            const index2 = prop.indexOf(value2);
            if (index1 < index2) {
                return -1;
            }
            if (index2 < index1) {
                return 1;
            }
        }
        return 0;
    }
    toString() {
        return this.reference.toString() + '\n' + this.fallback.toString();
    }
}
exports.DefaultComparator = DefaultComparator;


/***/ }),

/***/ 2105:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.numbersToAlpha = exports.Grammar = exports.ATTRIBUTE = void 0;
const DomUtil = __webpack_require__(5740);
const engine_1 = __webpack_require__(5897);
const LocaleUtil = __webpack_require__(2536);
const locale_1 = __webpack_require__(4356);
exports.ATTRIBUTE = 'grammar';
class Grammar {
    constructor() {
        this.currentFlags = {};
        this.parameters_ = {};
        this.corrections_ = {};
        this.preprocessors_ = {};
        this.stateStack_ = [];
    }
    static getInstance() {
        Grammar.instance = Grammar.instance || new Grammar();
        return Grammar.instance;
    }
    static parseInput(grammar) {
        const attributes = {};
        const components = grammar.split(':');
        for (let i = 0, l = components.length; i < l; i++) {
            const comp = components[i].split('=');
            const key = comp[0].trim();
            if (comp[1]) {
                attributes[key] = comp[1].trim();
                continue;
            }
            key.match(/^!/)
                ? (attributes[key.slice(1)] = false)
                : (attributes[key] = true);
        }
        return attributes;
    }
    static parseState(stateStr) {
        const state = {};
        const corrections = stateStr.split(' ');
        for (let i = 0, l = corrections.length; i < l; i++) {
            const corr = corrections[i].split(':');
            const key = corr[0];
            const value = corr[1];
            state[key] = value ? value : true;
        }
        return state;
    }
    static translateString_(text) {
        if (text.match(/:unit$/)) {
            return Grammar.translateUnit_(text);
        }
        const engine = engine_1.default.getInstance();
        let result = engine.evaluator(text, engine.dynamicCstr);
        result = result === null ? text : result;
        if (Grammar.getInstance().getParameter('plural')) {
            result = locale_1.LOCALE.FUNCTIONS.plural(result);
        }
        return result;
    }
    static translateUnit_(text) {
        text = Grammar.prepareUnit_(text);
        const engine = engine_1.default.getInstance();
        const plural = Grammar.getInstance().getParameter('plural');
        const strict = engine.strict;
        const baseCstr = `${engine.locale}.${engine.modality}.default`;
        engine.strict = true;
        let cstr;
        let result;
        if (plural) {
            cstr = engine.defaultParser.parse(baseCstr + '.plural');
            result = engine.evaluator(text, cstr);
        }
        if (result) {
            engine.strict = strict;
            return result;
        }
        cstr = engine.defaultParser.parse(baseCstr + '.default');
        result = engine.evaluator(text, cstr);
        engine.strict = strict;
        if (!result) {
            return Grammar.cleanUnit_(text);
        }
        if (plural) {
            result = locale_1.LOCALE.FUNCTIONS.plural(result);
        }
        return result;
    }
    static prepareUnit_(text) {
        const match = text.match(/:unit$/);
        return match
            ? text.slice(0, match.index).replace(/\s+/g, ' ') +
                text.slice(match.index)
            : text;
    }
    static cleanUnit_(text) {
        if (text.match(/:unit$/)) {
            return text.replace(/:unit$/, '');
        }
        return text;
    }
    clear() {
        this.parameters_ = {};
        this.stateStack_ = [];
    }
    setParameter(parameter, value) {
        const oldValue = this.parameters_[parameter];
        value
            ? (this.parameters_[parameter] = value)
            : delete this.parameters_[parameter];
        return oldValue;
    }
    getParameter(parameter) {
        return this.parameters_[parameter];
    }
    setCorrection(correction, func) {
        this.corrections_[correction] = func;
    }
    setPreprocessor(preprocessor, func) {
        this.preprocessors_[preprocessor] = func;
    }
    getCorrection(correction) {
        return this.corrections_[correction];
    }
    getState() {
        const pairs = [];
        for (const key in this.parameters_) {
            const value = this.parameters_[key];
            pairs.push(typeof value === 'string' ? key + ':' + value : key);
        }
        return pairs.join(' ');
    }
    pushState(assignment) {
        for (const key in assignment) {
            assignment[key] = this.setParameter(key, assignment[key]);
        }
        this.stateStack_.push(assignment);
    }
    popState() {
        const assignment = this.stateStack_.pop();
        for (const key in assignment) {
            this.setParameter(key, assignment[key]);
        }
    }
    setAttribute(node) {
        if (node && node.nodeType === DomUtil.NodeType.ELEMENT_NODE) {
            const state = this.getState();
            if (state) {
                node.setAttribute(exports.ATTRIBUTE, state);
            }
        }
    }
    preprocess(text) {
        return this.runProcessors_(text, this.preprocessors_);
    }
    correct(text) {
        return this.runProcessors_(text, this.corrections_);
    }
    apply(text, opt_flags) {
        this.currentFlags = opt_flags || {};
        text =
            this.currentFlags.adjust || this.currentFlags.preprocess
                ? Grammar.getInstance().preprocess(text)
                : text;
        if (this.parameters_['translate'] || this.currentFlags.translate) {
            text = Grammar.translateString_(text);
        }
        text =
            this.currentFlags.adjust || this.currentFlags.correct
                ? Grammar.getInstance().correct(text)
                : text;
        this.currentFlags = {};
        return text;
    }
    runProcessors_(text, funcs) {
        for (const key in this.parameters_) {
            const func = funcs[key];
            if (!func) {
                continue;
            }
            const value = this.parameters_[key];
            text = value === true ? func(text) : func(text, value);
        }
        return text;
    }
}
exports.Grammar = Grammar;
function correctFont_(text, correction) {
    if (!correction || !text) {
        return text;
    }
    const regexp = locale_1.LOCALE.FUNCTIONS.fontRegexp(LocaleUtil.localFont(correction));
    return text.replace(regexp, '');
}
function correctCaps_(text) {
    let cap = locale_1.LOCALE.ALPHABETS.capPrefix[engine_1.default.getInstance().domain];
    if (typeof cap === 'undefined') {
        cap = locale_1.LOCALE.ALPHABETS.capPrefix['default'];
    }
    return correctFont_(text, cap);
}
function addAnnotation_(text, annotation) {
    return text + ':' + annotation;
}
function numbersToAlpha(text) {
    return text.match(/\d+/)
        ? locale_1.LOCALE.NUMBERS.numberToWords(parseInt(text, 10))
        : text;
}
exports.numbersToAlpha = numbersToAlpha;
function noTranslateText_(text) {
    if (text.match(new RegExp('^[' + locale_1.LOCALE.MESSAGES.regexp.TEXT + ']+$'))) {
        Grammar.getInstance().currentFlags['translate'] = false;
    }
    return text;
}
Grammar.getInstance().setCorrection('localFont', LocaleUtil.localFont);
Grammar.getInstance().setCorrection('localRole', LocaleUtil.localRole);
Grammar.getInstance().setCorrection('localEnclose', LocaleUtil.localEnclose);
Grammar.getInstance().setCorrection('ignoreFont', correctFont_);
Grammar.getInstance().setPreprocessor('annotation', addAnnotation_);
Grammar.getInstance().setPreprocessor('noTranslateText', noTranslateText_);
Grammar.getInstance().setCorrection('ignoreCaps', correctCaps_);
Grammar.getInstance().setPreprocessor('numbers2alpha', numbersToAlpha);


/***/ }),

/***/ 2780:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.enumerate = exports.lookupString = exports.lookupCategory = exports.lookupRule = exports.addSiUnitRules = exports.addUnitRules = exports.addFunctionRules = exports.addSymbolRules = exports.defineRule = exports.defineRules = exports.setSiPrefixes = void 0;
const debugger_1 = __webpack_require__(2057);
const engine_1 = __webpack_require__(5897);
const l10n_1 = __webpack_require__(7491);
const math_simple_store_1 = __webpack_require__(4658);
const dynamic_cstr_1 = __webpack_require__(1676);
let locale = dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.LOCALE];
let modality = dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.MODALITY];
let siPrefixes = {};
function setSiPrefixes(prefixes) {
    siPrefixes = prefixes;
}
exports.setSiPrefixes = setSiPrefixes;
const subStores_ = {};
function defineRules(name, str, cat, mappings) {
    const store = getSubStore_(str);
    setupStore_(store, cat);
    store.defineRulesFromMappings(name, locale, modality, str, mappings);
}
exports.defineRules = defineRules;
function defineRule(name, domain, style, cat, str, content) {
    const store = getSubStore_(str);
    setupStore_(store, cat);
    store.defineRuleFromStrings(name, locale, modality, domain, style, str, content);
}
exports.defineRule = defineRule;
function addSymbolRules(json) {
    if (changeLocale_(json)) {
        return;
    }
    const key = math_simple_store_1.MathSimpleStore.parseUnicode(json['key']);
    defineRules(json['key'], key, json['category'], json['mappings']);
}
exports.addSymbolRules = addSymbolRules;
function addFunctionRules(json) {
    if (changeLocale_(json)) {
        return;
    }
    const names = json['names'];
    const mappings = json['mappings'];
    const category = json['category'];
    for (let j = 0, name; (name = names[j]); j++) {
        defineRules(name, name, category, mappings);
    }
}
exports.addFunctionRules = addFunctionRules;
function addUnitRules(json) {
    if (changeLocale_(json)) {
        return;
    }
    if (json['si']) {
        addSiUnitRules(json);
        return;
    }
    addUnitRules_(json);
}
exports.addUnitRules = addUnitRules;
function addSiUnitRules(json) {
    for (const key of Object.keys(siPrefixes)) {
        const newJson = Object.assign({}, json);
        newJson.mappings = {};
        const prefix = siPrefixes[key];
        newJson['key'] = key + newJson['key'];
        newJson['names'] = newJson['names'].map(function (name) {
            return key + name;
        });
        for (const domain of Object.keys(json['mappings'])) {
            newJson.mappings[domain] = {};
            for (const style of Object.keys(json['mappings'][domain])) {
                newJson['mappings'][domain][style] = l10n_1.locales[locale]().FUNCTIONS.si(prefix, json['mappings'][domain][style]);
            }
        }
        addUnitRules_(newJson);
    }
    addUnitRules_(json);
}
exports.addSiUnitRules = addSiUnitRules;
function lookupRule(node, dynamic) {
    const store = subStores_[node];
    return store ? store.lookupRule(null, dynamic) : null;
}
exports.lookupRule = lookupRule;
function lookupCategory(character) {
    const store = subStores_[character];
    return store ? store.category : '';
}
exports.lookupCategory = lookupCategory;
function lookupString(text, dynamic) {
    const rule = lookupRule(text, dynamic);
    if (!rule) {
        return null;
    }
    return rule.action;
}
exports.lookupString = lookupString;
engine_1.default.getInstance().evaluator = lookupString;
function enumerate(info = {}) {
    for (const store of Object.values(subStores_)) {
        for (const [, rules] of store.rules.entries()) {
            for (const { cstr: dynamic } of rules) {
                info = enumerate_(dynamic.getValues(), info);
            }
        }
    }
    return info;
}
exports.enumerate = enumerate;
function enumerate_(dynamic, info) {
    info = info || {};
    if (!dynamic.length) {
        return info;
    }
    info[dynamic[0]] = enumerate_(dynamic.slice(1), info[dynamic[0]]);
    return info;
}
function addUnitRules_(json) {
    const names = json['names'];
    if (names) {
        json['names'] = names.map(function (name) {
            return name + ':' + 'unit';
        });
    }
    addFunctionRules(json);
}
function changeLocale_(json) {
    if (!json['locale'] && !json['modality']) {
        return false;
    }
    locale = json['locale'] || locale;
    modality = json['modality'] || modality;
    return true;
}
function getSubStore_(key) {
    let store = subStores_[key];
    if (store) {
        debugger_1.Debugger.getInstance().output('Store exists! ' + key);
        return store;
    }
    store = new math_simple_store_1.MathSimpleStore();
    subStores_[key] = store;
    return store;
}
function setupStore_(store, opt_cat) {
    if (opt_cat) {
        store.category = opt_cat;
    }
}


/***/ }),

/***/ 4658:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathSimpleStore = void 0;
const engine_1 = __webpack_require__(5897);
const dynamic_cstr_1 = __webpack_require__(1676);
class MathSimpleStore {
    constructor() {
        this.category = '';
        this.rules = new Map();
    }
    static parseUnicode(num) {
        const keyValue = parseInt(num, 16);
        return String.fromCodePoint(keyValue);
    }
    static testDynamicConstraints_(dynamic, rule) {
        if (engine_1.default.getInstance().strict) {
            return rule.cstr.equal(dynamic);
        }
        return engine_1.default.getInstance().comparator.match(rule.cstr);
    }
    defineRulesFromMappings(name, locale, modality, str, mapping) {
        for (const domain in mapping) {
            for (const style in mapping[domain]) {
                const content = mapping[domain][style];
                this.defineRuleFromStrings(name, locale, modality, domain, style, str, content);
            }
        }
    }
    getRules(key) {
        let store = this.rules.get(key);
        if (!store) {
            store = [];
            this.rules.set(key, store);
        }
        return store;
    }
    defineRuleFromStrings(_name, locale, modality, domain, style, _str, content) {
        let store = this.getRules(locale);
        const parser = engine_1.default.getInstance().parsers[domain] ||
            engine_1.default.getInstance().defaultParser;
        const comp = engine_1.default.getInstance().comparators[domain];
        const cstr = `${locale}.${modality}.${domain}.${style}`;
        const dynamic = parser.parse(cstr);
        const comparator = comp ? comp() : engine_1.default.getInstance().comparator;
        const oldCstr = comparator.getReference();
        comparator.setReference(dynamic);
        const rule = { cstr: dynamic, action: content };
        store = store.filter((r) => !dynamic.equal(r.cstr));
        store.push(rule);
        this.rules.set(locale, store);
        comparator.setReference(oldCstr);
    }
    lookupRule(_node, dynamic) {
        let rules = this.getRules(dynamic.getValue(dynamic_cstr_1.Axis.LOCALE));
        rules = rules.filter(function (rule) {
            return MathSimpleStore.testDynamicConstraints_(dynamic, rule);
        });
        if (rules.length === 1) {
            return rules[0];
        }
        return rules.length
            ? rules.sort((r1, r2) => engine_1.default.getInstance().comparator.compare(r1.cstr, r2.cstr))[0]
            : null;
    }
}
exports.MathSimpleStore = MathSimpleStore;


/***/ }),

/***/ 9935:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathStore = void 0;
const BaseUtil = __webpack_require__(707);
const locale_1 = __webpack_require__(4356);
const semantic_annotations_1 = __webpack_require__(7630);
const base_rule_store_1 = __webpack_require__(4504);
const speech_rule_1 = __webpack_require__(4650);
class MathStore extends base_rule_store_1.BaseRuleStore {
    constructor() {
        super();
        this.annotators = [];
        this.parseMethods['Alias'] = this.defineAlias;
        this.parseMethods['SpecializedRule'] = this.defineSpecializedRule;
        this.parseMethods['Specialized'] = this.defineSpecialized;
    }
    initialize() {
        if (this.initialized) {
            return;
        }
        this.annotations();
        this.initialized = true;
    }
    annotations() {
        for (let i = 0, annotator; (annotator = this.annotators[i]); i++) {
            (0, semantic_annotations_1.activate)(this.domain, annotator);
        }
    }
    defineAlias(name, prec, ...args) {
        const fullPrec = this.parsePrecondition(prec, args);
        if (!fullPrec) {
            console.error(`Precondition Error: ${prec} ${args}`);
            return;
        }
        const condition = this.preconditions.get(name);
        if (!condition) {
            console.error(`Alias Error: No precondition by the name of ${name}`);
            return;
        }
        condition.addFullCondition(fullPrec);
    }
    defineRulesAlias(name, query, ...args) {
        const rules = this.findAllRules(function (rule) {
            return rule.name === name;
        });
        if (rules.length === 0) {
            throw new speech_rule_1.OutputError('Rule with name ' + name + ' does not exist.');
        }
        const keep = [];
        const findKeep = (rule) => {
            const cstr = rule.dynamicCstr.toString();
            const action = rule.action.toString();
            for (let i = 0, k; (k = keep[i]); i++) {
                if (k.action === action && k.cstr === cstr) {
                    return false;
                }
            }
            keep.push({ cstr: cstr, action: action });
            return true;
        };
        rules.forEach((rule) => {
            if (findKeep(rule)) {
                this.addAlias_(rule, query, args);
            }
        });
    }
    defineSpecializedRule(name, oldDynamic, newDynamic, opt_action) {
        const dynamicCstr = this.parseCstr(oldDynamic);
        const rule = this.findRule((rule) => rule.name === name && dynamicCstr.equal(rule.dynamicCstr));
        const newCstr = this.parseCstr(newDynamic);
        if (!rule && opt_action) {
            throw new speech_rule_1.OutputError('Rule named ' + name + ' with style ' + oldDynamic + ' does not exist.');
        }
        const action = opt_action ? speech_rule_1.Action.fromString(opt_action) : rule.action;
        const newRule = new speech_rule_1.SpeechRule(rule.name, newCstr, rule.precondition, action);
        this.addRule(newRule);
    }
    defineSpecialized(name, _old, dynamic) {
        const cstr = this.parseCstr(dynamic);
        if (!cstr) {
            console.error(`Dynamic Constraint Error: ${dynamic}`);
            return;
        }
        const condition = this.preconditions.get(name);
        if (!condition) {
            console.error(`Alias Error: No precondition by the name of ${name}`);
            return;
        }
        condition.addConstraint(cstr);
    }
    evaluateString(str) {
        const descs = [];
        if (str.match(/^\s+$/)) {
            return descs;
        }
        let num = this.matchNumber_(str);
        if (num && num.length === str.length) {
            descs.push(this.evaluateCharacter(num.number));
            return descs;
        }
        const split = BaseUtil.removeEmpty(str.replace(/\s/g, ' ').split(' '));
        for (let i = 0, s; (s = split[i]); i++) {
            if (s.length === 1) {
                descs.push(this.evaluateCharacter(s));
            }
            else if (s.match(new RegExp('^[' + locale_1.LOCALE.MESSAGES.regexp.TEXT + ']+$'))) {
                descs.push(this.evaluateCharacter(s));
            }
            else {
                let rest = s;
                while (rest) {
                    num = this.matchNumber_(rest);
                    const alpha = rest.match(new RegExp('^[' + locale_1.LOCALE.MESSAGES.regexp.TEXT + ']+'));
                    if (num) {
                        descs.push(this.evaluateCharacter(num.number));
                        rest = rest.substring(num.length);
                    }
                    else if (alpha) {
                        descs.push(this.evaluateCharacter(alpha[0]));
                        rest = rest.substring(alpha[0].length);
                    }
                    else {
                        const chars = Array.from(rest);
                        const chr = chars[0];
                        descs.push(this.evaluateCharacter(chr));
                        rest = chars.slice(1).join('');
                    }
                }
            }
        }
        return descs;
    }
    parse(ruleSet) {
        super.parse(ruleSet);
        this.annotators = ruleSet['annotators'] || [];
    }
    addAlias_(rule, query, cstrList) {
        const prec = this.parsePrecondition(query, cstrList);
        const newRule = new speech_rule_1.SpeechRule(rule.name, rule.dynamicCstr, prec, rule.action);
        newRule.name = rule.name;
        this.addRule(newRule);
    }
    matchNumber_(str) {
        const locNum = str.match(new RegExp('^' + locale_1.LOCALE.MESSAGES.regexp.NUMBER));
        const enNum = str.match(new RegExp('^' + MathStore.regexp.NUMBER));
        if (!locNum && !enNum) {
            return null;
        }
        const isEn = enNum && enNum[0] === str;
        const isLoc = (locNum && locNum[0] === str) || !isEn;
        if (isLoc) {
            return locNum ? { number: locNum[0], length: locNum[0].length } : null;
        }
        const num = enNum[0]
            .replace(new RegExp(MathStore.regexp.DIGIT_GROUP, 'g'), 'X')
            .replace(new RegExp(MathStore.regexp.DECIMAL_MARK, 'g'), locale_1.LOCALE.MESSAGES.regexp.DECIMAL_MARK)
            .replace(/X/g, locale_1.LOCALE.MESSAGES.regexp.DIGIT_GROUP.replace(/\\/g, ''));
        return { number: num, length: enNum[0].length };
    }
}
exports.MathStore = MathStore;
MathStore.regexp = {
    NUMBER: '((\\d{1,3})(?=(,| ))((,| )\\d{3})*(\\.\\d+)?)|^\\d*\\.\\d+|^\\d+',
    DECIMAL_MARK: '\\.',
    DIGIT_GROUP: ','
};


/***/ }),

/***/ 4650:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OutputError = exports.Precondition = exports.Action = exports.Component = exports.ActionType = exports.SpeechRule = void 0;
const engine_1 = __webpack_require__(5897);
const Grammar = __webpack_require__(2105);
class SpeechRule {
    constructor(name, dynamicCstr, precondition, action) {
        this.name = name;
        this.dynamicCstr = dynamicCstr;
        this.precondition = precondition;
        this.action = action;
        this.context = null;
    }
    toString() {
        return (this.name +
            ' | ' +
            this.dynamicCstr.toString() +
            ' | ' +
            this.precondition.toString() +
            ' ==> ' +
            this.action.toString());
    }
}
exports.SpeechRule = SpeechRule;
var ActionType;
(function (ActionType) {
    ActionType["NODE"] = "NODE";
    ActionType["MULTI"] = "MULTI";
    ActionType["TEXT"] = "TEXT";
    ActionType["PERSONALITY"] = "PERSONALITY";
})(ActionType = exports.ActionType || (exports.ActionType = {}));
function actionFromString(str) {
    switch (str) {
        case '[n]':
            return ActionType.NODE;
        case '[m]':
            return ActionType.MULTI;
        case '[t]':
            return ActionType.TEXT;
        case '[p]':
            return ActionType.PERSONALITY;
        default:
            throw 'Parse error: ' + str;
    }
}
function actionToString(speechType) {
    switch (speechType) {
        case ActionType.NODE:
            return '[n]';
        case ActionType.MULTI:
            return '[m]';
        case ActionType.TEXT:
            return '[t]';
        case ActionType.PERSONALITY:
            return '[p]';
        default:
            throw 'Unknown type error: ' + speechType;
    }
}
class Component {
    constructor({ type, content, attributes, grammar }) {
        this.type = type;
        this.content = content;
        this.attributes = attributes;
        this.grammar = grammar;
    }
    static grammarFromString(grammar) {
        return Grammar.Grammar.parseInput(grammar);
    }
    static fromString(input) {
        const output = {
            type: actionFromString(input.substring(0, 3))
        };
        let rest = input.slice(3).trim();
        if (!rest) {
            throw new OutputError('Missing content.');
        }
        switch (output.type) {
            case ActionType.TEXT:
                if (rest[0] === '"') {
                    const quotedString = splitString(rest, '\\(')[0].trim();
                    if (quotedString.slice(-1) !== '"') {
                        throw new OutputError('Invalid string syntax.');
                    }
                    output.content = quotedString;
                    rest = rest.slice(quotedString.length).trim();
                    if (rest.indexOf('(') === -1) {
                        rest = '';
                    }
                    break;
                }
            case ActionType.NODE:
            case ActionType.MULTI:
                {
                    const bracket = rest.indexOf(' (');
                    if (bracket === -1) {
                        output.content = rest.trim();
                        rest = '';
                        break;
                    }
                    output.content = rest.substring(0, bracket).trim();
                    rest = rest.slice(bracket).trim();
                }
                break;
        }
        if (rest) {
            const attributes = Component.attributesFromString(rest);
            if (attributes.grammar) {
                output.grammar = attributes.grammar;
                delete attributes.grammar;
            }
            if (Object.keys(attributes).length) {
                output.attributes = attributes;
            }
        }
        return new Component(output);
    }
    static attributesFromString(attrs) {
        if (attrs[0] !== '(' || attrs.slice(-1) !== ')') {
            throw new OutputError('Invalid attribute expression: ' + attrs);
        }
        const attributes = {};
        const attribs = splitString(attrs.slice(1, -1), ',');
        for (let i = 0, m = attribs.length; i < m; i++) {
            const attr = attribs[i];
            const colon = attr.indexOf(':');
            if (colon === -1) {
                attributes[attr.trim()] = 'true';
            }
            else {
                const key = attr.substring(0, colon).trim();
                const value = attr.slice(colon + 1).trim();
                attributes[key] =
                    key === Grammar.ATTRIBUTE
                        ? Component.grammarFromString(value)
                        : value;
            }
        }
        return attributes;
    }
    toString() {
        let strs = '';
        strs += actionToString(this.type);
        strs += this.content ? ' ' + this.content : '';
        const attrs = this.attributesToString();
        strs += attrs ? ' ' + attrs : '';
        return strs;
    }
    grammarToString() {
        return this.getGrammar().join(':');
    }
    getGrammar() {
        const attribs = [];
        for (const key in this.grammar) {
            if (this.grammar[key] === true) {
                attribs.push(key);
            }
            else if (this.grammar[key] === false) {
                attribs.push('!' + key);
            }
            else {
                attribs.push(key + '=' + this.grammar[key]);
            }
        }
        return attribs;
    }
    attributesToString() {
        const attribs = this.getAttributes();
        const grammar = this.grammarToString();
        if (grammar) {
            attribs.push('grammar:' + grammar);
        }
        return attribs.length > 0 ? '(' + attribs.join(', ') + ')' : '';
    }
    getAttributes() {
        const attribs = [];
        for (const key in this.attributes) {
            const value = this.attributes[key];
            value === 'true' ? attribs.push(key) : attribs.push(key + ':' + value);
        }
        return attribs;
    }
}
exports.Component = Component;
class Action {
    constructor(components) {
        this.components = components;
    }
    static fromString(input) {
        const comps = splitString(input, ';')
            .filter(function (x) {
            return x.match(/\S/);
        })
            .map(function (x) {
            return x.trim();
        });
        const newComps = [];
        for (let i = 0, m = comps.length; i < m; i++) {
            const comp = Component.fromString(comps[i]);
            if (comp) {
                newComps.push(comp);
            }
        }
        return new Action(newComps);
    }
    toString() {
        const comps = this.components.map(function (c) {
            return c.toString();
        });
        return comps.join('; ');
    }
}
exports.Action = Action;
class Precondition {
    constructor(query, ...cstr) {
        this.query = query;
        this.constraints = cstr;
        const [exists, user] = this.presetPriority();
        this.priority = exists ? user : this.calculatePriority();
    }
    static constraintValue(constr, priorities) {
        for (let i = 0, regexp; (regexp = priorities[i]); i++) {
            if (constr.match(regexp)) {
                return ++i;
            }
        }
        return 0;
    }
    toString() {
        const constrs = this.constraints.join(', ');
        return `${this.query}, ${constrs} (${this.priority}, ${this.rank})`;
    }
    calculatePriority() {
        const query = Precondition.constraintValue(this.query, Precondition.queryPriorities);
        if (!query) {
            return 0;
        }
        const inner = this.query.match(/^self::.+\[(.+)\]/)[1];
        const attr = Precondition.constraintValue(inner, Precondition.attributePriorities);
        return query * 100 + attr * 10;
    }
    presetPriority() {
        if (!this.constraints.length) {
            return [false, 0];
        }
        const last = this.constraints[this.constraints.length - 1].match(/^priority=(.*$)/);
        if (!last) {
            return [false, 0];
        }
        this.constraints.pop();
        const numb = parseFloat(last[1]);
        return [true, isNaN(numb) ? 0 : numb];
    }
}
exports.Precondition = Precondition;
Precondition.queryPriorities = [
    /^self::\*\[.+\]$/,
    /^self::[\w-]+\[.+\]$/
];
Precondition.attributePriorities = [
    /^@[\w-]+$/,
    /^@[\w-]+!=".+"$/,
    /^not\(contains\(@[\w-]+,\s*".+"\)\)$/,
    /^contains\(@[\w-]+,".+"\)$/,
    /^@[\w-]+=".+"$/
];
class OutputError extends engine_1.SREError {
    constructor(msg) {
        super(msg);
        this.name = 'RuleError';
    }
}
exports.OutputError = OutputError;
function splitString(str, sep) {
    const strList = [];
    let prefix = '';
    while (str !== '') {
        const sepPos = str.search(sep);
        if (sepPos === -1) {
            if ((str.match(/"/g) || []).length % 2 !== 0) {
                throw new OutputError('Invalid string in expression: ' + str);
            }
            strList.push(prefix + str);
            prefix = '';
            str = '';
        }
        else if ((str.substring(0, sepPos).match(/"/g) || []).length % 2 === 0) {
            strList.push(prefix + str.substring(0, sepPos));
            prefix = '';
            str = str.substring(sepPos + 1);
        }
        else {
            const nextQuot = str.substring(sepPos).search('"');
            if (nextQuot === -1) {
                throw new OutputError('Invalid string in expression: ' + str);
            }
            else {
                prefix = prefix + str.substring(0, sepPos + nextQuot + 1);
                str = str.substring(sepPos + nextQuot + 1);
            }
        }
    }
    if (prefix) {
        strList.push(prefix);
    }
    return strList;
}


/***/ }),

/***/ 4106:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SpeechRuleContext = void 0;
const XpathUtil = __webpack_require__(5274);
const srf = __webpack_require__(5662);
class SpeechRuleContext {
    constructor() {
        this.customQueries = new srf.CustomQueries();
        this.customStrings = new srf.CustomStrings();
        this.contextFunctions = new srf.ContextFunctions();
        this.customGenerators = new srf.CustomGenerators();
    }
    applyCustomQuery(node, funcName) {
        const func = this.customQueries.lookup(funcName);
        return func ? func(node) : null;
    }
    applySelector(node, expr) {
        const result = this.applyCustomQuery(node, expr);
        return result || XpathUtil.evalXPath(expr, node);
    }
    applyQuery(node, expr) {
        const results = this.applySelector(node, expr);
        if (results.length > 0) {
            return results[0];
        }
        return null;
    }
    applyConstraint(node, expr) {
        const result = this.applyQuery(node, expr);
        return !!result || XpathUtil.evaluateBoolean(expr, node);
    }
    constructString(node, expr) {
        if (!expr) {
            return '';
        }
        if (expr.charAt(0) === '"') {
            return expr.slice(1, -1);
        }
        const func = this.customStrings.lookup(expr);
        if (func) {
            return func(node);
        }
        return XpathUtil.evaluateString(expr, node);
    }
    parse(functions) {
        const functs = Array.isArray(functions)
            ? functions
            : Object.entries(functions);
        for (let i = 0, func; (func = functs[i]); i++) {
            const kind = func[0].slice(0, 3);
            switch (kind) {
                case 'CQF':
                    this.customQueries.add(func[0], func[1]);
                    break;
                case 'CSF':
                    this.customStrings.add(func[0], func[1]);
                    break;
                case 'CTF':
                    this.contextFunctions.add(func[0], func[1]);
                    break;
                case 'CGF':
                    this.customGenerators.add(func[0], func[1]);
                    break;
                default:
                    console.error('FunctionError: Invalid function name ' + func[0]);
            }
        }
    }
}
exports.SpeechRuleContext = SpeechRuleContext;


/***/ }),

/***/ 2362:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.storeFactory = exports.SpeechRuleEngine = void 0;
const auditory_description_1 = __webpack_require__(7052);
const debugger_1 = __webpack_require__(2057);
const DomUtil = __webpack_require__(5740);
const engine_1 = __webpack_require__(5897);
const EngineConst = __webpack_require__(4440);
const xpath_util_1 = __webpack_require__(5274);
const SpeechRules = __webpack_require__(7283);
const SpeechRuleStores = __webpack_require__(7599);
const braille_store_1 = __webpack_require__(2469);
const dynamic_cstr_1 = __webpack_require__(1676);
const grammar_1 = __webpack_require__(2105);
const math_store_1 = __webpack_require__(9935);
const speech_rule_1 = __webpack_require__(4650);
const trie_1 = __webpack_require__(4508);
class SpeechRuleEngine {
    constructor() {
        this.trie = null;
        this.evaluators_ = {};
        this.trie = new trie_1.Trie();
    }
    static getInstance() {
        SpeechRuleEngine.instance =
            SpeechRuleEngine.instance || new SpeechRuleEngine();
        return SpeechRuleEngine.instance;
    }
    static debugSpeechRule(rule, node) {
        const prec = rule.precondition;
        const queryResult = rule.context.applyQuery(node, prec.query);
        debugger_1.Debugger.getInstance().output(prec.query, queryResult ? queryResult.toString() : queryResult);
        prec.constraints.forEach((cstr) => debugger_1.Debugger.getInstance().output(cstr, rule.context.applyConstraint(node, cstr)));
    }
    static debugNamedSpeechRule(name, node) {
        const rules = SpeechRuleEngine.getInstance().trie.collectRules();
        const allRules = rules.filter((rule) => rule.name == name);
        for (let i = 0, rule; (rule = allRules[i]); i++) {
            debugger_1.Debugger.getInstance().output('Rule', name, 'DynamicCstr:', rule.dynamicCstr.toString(), 'number', i);
            SpeechRuleEngine.debugSpeechRule(rule, node);
        }
    }
    evaluateNode(node) {
        (0, xpath_util_1.updateEvaluator)(node);
        const timeIn = new Date().getTime();
        let result = [];
        try {
            result = this.evaluateNode_(node);
        }
        catch (err) {
            console.error('Something went wrong computing speech.');
            debugger_1.Debugger.getInstance().output(err);
        }
        const timeOut = new Date().getTime();
        debugger_1.Debugger.getInstance().output('Time:', timeOut - timeIn);
        return result;
    }
    toString() {
        const allRules = this.trie.collectRules();
        return allRules.map((rule) => rule.toString()).join('\n');
    }
    runInSetting(settings, callback) {
        const engine = engine_1.default.getInstance();
        const save = {};
        for (const key in settings) {
            save[key] = engine[key];
            engine[key] = settings[key];
        }
        engine.setDynamicCstr();
        const result = callback();
        for (const key in save) {
            engine[key] = save[key];
        }
        engine.setDynamicCstr();
        return result;
    }
    addStore(set) {
        const store = storeFactory(set);
        if (store.kind !== 'abstract') {
            store.getSpeechRules().forEach((x) => this.trie.addRule(x));
        }
        this.addEvaluator(store);
    }
    processGrammar(context, node, grammar) {
        const assignment = {};
        for (const key in grammar) {
            const value = grammar[key];
            assignment[key] =
                typeof value === 'string'
                    ?
                        context.constructString(node, value)
                    : value;
        }
        grammar_1.Grammar.getInstance().pushState(assignment);
    }
    addEvaluator(store) {
        const fun = store.evaluateDefault.bind(store);
        const loc = this.evaluators_[store.locale];
        if (loc) {
            loc[store.modality] = fun;
            return;
        }
        const mod = {};
        mod[store.modality] = fun;
        this.evaluators_[store.locale] = mod;
    }
    getEvaluator(locale, modality) {
        const loc = this.evaluators_[locale] ||
            this.evaluators_[dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.LOCALE]];
        return loc[modality] || loc[dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.MODALITY]];
    }
    enumerate(opt_info) {
        return this.trie.enumerate(opt_info);
    }
    evaluateNode_(node) {
        if (!node) {
            return [];
        }
        this.updateConstraint_();
        return this.evaluateTree_(node);
    }
    evaluateTree_(node) {
        const engine = engine_1.default.getInstance();
        let result;
        debugger_1.Debugger.getInstance().output(engine.mode !== EngineConst.Mode.HTTP ? node.toString() : node);
        grammar_1.Grammar.getInstance().setAttribute(node);
        const rule = this.lookupRule(node, engine.dynamicCstr);
        if (!rule) {
            if (engine.strict) {
                return [];
            }
            result = this.getEvaluator(engine.locale, engine.modality)(node);
            if (node.attributes) {
                this.addPersonality_(result, {}, false, node);
            }
            return result;
        }
        debugger_1.Debugger.getInstance().generateOutput(() => [
            'Apply Rule:',
            rule.name,
            rule.dynamicCstr.toString(),
            (engine.mode !== EngineConst.Mode.HTTP ? node : node).toString()
        ]);
        const context = rule.context;
        const components = rule.action.components;
        result = [];
        for (let i = 0, component; (component = components[i]); i++) {
            let descrs = [];
            const content = component.content || '';
            const attributes = component.attributes || {};
            let multi = false;
            if (component.grammar) {
                this.processGrammar(context, node, component.grammar);
            }
            let saveEngine = null;
            if (attributes.engine) {
                saveEngine = engine_1.default.getInstance().dynamicCstr.getComponents();
                const features = grammar_1.Grammar.parseInput(attributes.engine);
                engine_1.default.getInstance().setDynamicCstr(features);
            }
            switch (component.type) {
                case speech_rule_1.ActionType.NODE:
                    {
                        const selected = context.applyQuery(node, content);
                        if (selected) {
                            descrs = this.evaluateTree_(selected);
                        }
                    }
                    break;
                case speech_rule_1.ActionType.MULTI:
                    {
                        multi = true;
                        const selects = context.applySelector(node, content);
                        if (selects.length > 0) {
                            descrs = this.evaluateNodeList_(context, selects, attributes['sepFunc'], context.constructString(node, attributes['separator']), attributes['ctxtFunc'], context.constructString(node, attributes['context']));
                        }
                    }
                    break;
                case speech_rule_1.ActionType.TEXT:
                    {
                        const xpath = attributes['span'];
                        const attrs = {};
                        if (xpath) {
                            const nodes = (0, xpath_util_1.evalXPath)(xpath, node);
                            if (nodes.length) {
                                attrs.extid = nodes[0].getAttribute('extid');
                            }
                        }
                        const str = context.constructString(node, content);
                        if (str || str === '') {
                            if (Array.isArray(str)) {
                                descrs = str.map(function (span) {
                                    return auditory_description_1.AuditoryDescription.create({ text: span.speech, attributes: span.attributes }, { adjust: true });
                                });
                            }
                            else {
                                descrs = [
                                    auditory_description_1.AuditoryDescription.create({ text: str, attributes: attrs }, { adjust: true })
                                ];
                            }
                        }
                    }
                    break;
                case speech_rule_1.ActionType.PERSONALITY:
                default:
                    descrs = [auditory_description_1.AuditoryDescription.create({ text: content })];
            }
            if (descrs[0] && !multi) {
                if (attributes['context']) {
                    descrs[0]['context'] =
                        context.constructString(node, attributes['context']) +
                            (descrs[0]['context'] || '');
                }
                if (attributes['annotation']) {
                    descrs[0]['annotation'] = attributes['annotation'];
                }
            }
            this.addLayout(descrs, attributes, multi);
            if (component.grammar) {
                grammar_1.Grammar.getInstance().popState();
            }
            result = result.concat(this.addPersonality_(descrs, attributes, multi, node));
            if (saveEngine) {
                engine_1.default.getInstance().setDynamicCstr(saveEngine);
            }
        }
        return result;
    }
    evaluateNodeList_(context, nodes, sepFunc, sepStr, ctxtFunc, ctxtStr) {
        if (!nodes.length) {
            return [];
        }
        const sep = sepStr || '';
        const cont = ctxtStr || '';
        const cFunc = context.contextFunctions.lookup(ctxtFunc);
        const ctxtClosure = cFunc
            ? cFunc(nodes, cont)
            : function () {
                return cont;
            };
        const sFunc = context.contextFunctions.lookup(sepFunc);
        const sepClosure = sFunc
            ? sFunc(nodes, sep)
            : function () {
                return [
                    auditory_description_1.AuditoryDescription.create({ text: sep }, { translate: true })
                ];
            };
        let result = [];
        for (let i = 0, node; (node = nodes[i]); i++) {
            const descrs = this.evaluateTree_(node);
            if (descrs.length > 0) {
                descrs[0]['context'] = ctxtClosure() + (descrs[0]['context'] || '');
                result = result.concat(descrs);
                if (i < nodes.length - 1) {
                    const text = sepClosure();
                    result = result.concat(text);
                }
            }
        }
        return result;
    }
    addLayout(descrs, props, _multi) {
        const layout = props.layout;
        if (!layout) {
            return;
        }
        if (layout.match(/^begin/)) {
            descrs.unshift(new auditory_description_1.AuditoryDescription({ text: '', layout: layout }));
            return;
        }
        if (layout.match(/^end/)) {
            descrs.push(new auditory_description_1.AuditoryDescription({ text: '', layout: layout }));
            return;
        }
        descrs.unshift(new auditory_description_1.AuditoryDescription({ text: '', layout: `begin${layout}` }));
        descrs.push(new auditory_description_1.AuditoryDescription({ text: '', layout: `end${layout}` }));
    }
    addPersonality_(descrs, props, multi, node) {
        const personality = {};
        let pause = null;
        for (const key of EngineConst.personalityPropList) {
            const value = props[key];
            if (typeof value === 'undefined') {
                continue;
            }
            const numeral = parseFloat(value);
            const realValue = isNaN(numeral)
                ? value.charAt(0) === '"'
                    ? value.slice(1, -1)
                    : value
                : numeral;
            if (key === EngineConst.personalityProps.PAUSE) {
                pause = realValue;
            }
            else {
                personality[key] = realValue;
            }
        }
        for (let i = 0, descr; (descr = descrs[i]); i++) {
            this.addRelativePersonality_(descr, personality);
            this.addExternalAttributes_(descr, node);
        }
        if (multi && descrs.length) {
            delete descrs[descrs.length - 1].personality[EngineConst.personalityProps.JOIN];
        }
        if (pause && descrs.length) {
            const last = descrs[descrs.length - 1];
            if (last.text || Object.keys(last.personality).length) {
                descrs.push(auditory_description_1.AuditoryDescription.create({
                    text: '',
                    personality: { pause: pause }
                }));
            }
            else {
                last.personality[EngineConst.personalityProps.PAUSE] = pause;
            }
        }
        return descrs;
    }
    addExternalAttributes_(descr, node) {
        if (node.hasAttributes()) {
            const attrs = node.attributes;
            for (let i = attrs.length - 1; i >= 0; i--) {
                const key = attrs[i].name;
                if (!descr.attributes[key] && key.match(/^ext/)) {
                    descr.attributes[key] = attrs[i].value;
                }
            }
        }
    }
    addRelativePersonality_(descr, personality) {
        if (!descr['personality']) {
            descr['personality'] = personality;
            return descr;
        }
        const descrPersonality = descr['personality'];
        for (const p in personality) {
            if (descrPersonality[p] &&
                typeof descrPersonality[p] == 'number' &&
                typeof personality[p] == 'number') {
                descrPersonality[p] = descrPersonality[p] + personality[p];
            }
            else if (!descrPersonality[p]) {
                descrPersonality[p] = personality[p];
            }
        }
        return descr;
    }
    updateConstraint_() {
        const dynamic = engine_1.default.getInstance().dynamicCstr;
        const strict = engine_1.default.getInstance().strict;
        const trie = this.trie;
        const props = {};
        let locale = dynamic.getValue(dynamic_cstr_1.Axis.LOCALE);
        let modality = dynamic.getValue(dynamic_cstr_1.Axis.MODALITY);
        let domain = dynamic.getValue(dynamic_cstr_1.Axis.DOMAIN);
        if (!trie.hasSubtrie([locale, modality, domain])) {
            domain = dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.DOMAIN];
            if (!trie.hasSubtrie([locale, modality, domain])) {
                modality = dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.MODALITY];
                if (!trie.hasSubtrie([locale, modality, domain])) {
                    locale = dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.LOCALE];
                }
            }
        }
        props[dynamic_cstr_1.Axis.LOCALE] = [locale];
        props[dynamic_cstr_1.Axis.MODALITY] = [
            modality !== 'summary'
                ? modality
                : dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.MODALITY]
        ];
        props[dynamic_cstr_1.Axis.DOMAIN] = [
            modality !== 'speech' ? dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.DOMAIN] : domain
        ];
        const order = dynamic.getOrder();
        for (let i = 0, axis; (axis = order[i]); i++) {
            if (!props[axis]) {
                const value = dynamic.getValue(axis);
                const valueSet = this.makeSet_(value, dynamic.preference);
                const def = dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[axis];
                if (!strict && value !== def) {
                    valueSet.push(def);
                }
                props[axis] = valueSet;
            }
        }
        dynamic.updateProperties(props);
    }
    makeSet_(value, preferences) {
        if (!preferences || !Object.keys(preferences).length) {
            return [value];
        }
        return value.split(':');
    }
    lookupRule(node, dynamic) {
        if (!node ||
            (node.nodeType !== DomUtil.NodeType.ELEMENT_NODE &&
                node.nodeType !== DomUtil.NodeType.TEXT_NODE)) {
            return null;
        }
        const matchingRules = this.lookupRules(node, dynamic);
        return matchingRules.length > 0
            ? this.pickMostConstraint_(dynamic, matchingRules)
            : null;
    }
    lookupRules(node, dynamic) {
        return this.trie.lookupRules(node, dynamic.allProperties());
    }
    pickMostConstraint_(_dynamic, rules) {
        const comparator = engine_1.default.getInstance().comparator;
        rules.sort(function (r1, r2) {
            return (comparator.compare(r1.dynamicCstr, r2.dynamicCstr) ||
                r2.precondition.priority - r1.precondition.priority ||
                r2.precondition.constraints.length -
                    r1.precondition.constraints.length ||
                r2.precondition.rank - r1.precondition.rank);
        });
        debugger_1.Debugger.getInstance().generateOutput((() => {
            return rules.map((x) => x.name + '(' + x.dynamicCstr.toString() + ')');
        }).bind(this));
        return rules[0];
    }
}
exports.SpeechRuleEngine = SpeechRuleEngine;
const stores = new Map();
function getStore(modality) {
    if (modality === 'braille') {
        return new braille_store_1.BrailleStore();
    }
    return new math_store_1.MathStore();
}
function storeFactory(set) {
    const name = `${set.locale}.${set.modality}.${set.domain}`;
    if (set.kind === 'actions') {
        const store = stores.get(name);
        store.parse(set);
        return store;
    }
    SpeechRuleStores.init();
    if (set && !set.functions) {
        set.functions = SpeechRules.getStore(set.locale, set.modality, set.domain);
    }
    const store = getStore(set.modality);
    stores.set(name, store);
    if (set.inherits) {
        store.inherits = stores.get(`${set.inherits}.${set.modality}.${set.domain}`);
    }
    store.parse(set);
    store.initialize();
    return store;
}
exports.storeFactory = storeFactory;
engine_1.default.nodeEvaluator = SpeechRuleEngine.getInstance().evaluateNode.bind(SpeechRuleEngine.getInstance());


/***/ }),

/***/ 5662:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomGenerators = exports.ContextFunctions = exports.CustomStrings = exports.CustomQueries = void 0;
class FunctionsStore {
    constructor(prefix, store) {
        this.prefix = prefix;
        this.store = store;
    }
    add(name, func) {
        if (this.checkCustomFunctionSyntax_(name)) {
            this.store[name] = func;
        }
    }
    addStore(store) {
        const keys = Object.keys(store.store);
        for (let i = 0, key; (key = keys[i]); i++) {
            this.add(key, store.store[key]);
        }
    }
    lookup(name) {
        return this.store[name];
    }
    checkCustomFunctionSyntax_(name) {
        const reg = new RegExp('^' + this.prefix);
        if (!name.match(reg)) {
            console.error('FunctionError: Invalid function name. Expected prefix ' + this.prefix);
            return false;
        }
        return true;
    }
}
class CustomQueries extends FunctionsStore {
    constructor() {
        const store = {};
        super('CQF', store);
    }
}
exports.CustomQueries = CustomQueries;
class CustomStrings extends FunctionsStore {
    constructor() {
        const store = {};
        super('CSF', store);
    }
}
exports.CustomStrings = CustomStrings;
class ContextFunctions extends FunctionsStore {
    constructor() {
        const store = {};
        super('CTF', store);
    }
}
exports.ContextFunctions = ContextFunctions;
class CustomGenerators extends FunctionsStore {
    constructor() {
        const store = {};
        super('CGF', store);
    }
}
exports.CustomGenerators = CustomGenerators;


/***/ }),

/***/ 365:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.contentIterator = exports.pauseSeparator = exports.nodeCounter = void 0;
const auditory_description_1 = __webpack_require__(7052);
const XpathUtil = __webpack_require__(5274);
const engine_1 = __webpack_require__(5897);
function nodeCounter(nodes, context) {
    const localLength = nodes.length;
    let localCounter = 0;
    let localContext = context;
    if (!context) {
        localContext = '';
    }
    return function () {
        if (localCounter < localLength) {
            localCounter += 1;
        }
        return localContext + ' ' + localCounter;
    };
}
exports.nodeCounter = nodeCounter;
function pauseSeparator(_nodes, context) {
    const numeral = parseFloat(context);
    const value = isNaN(numeral) ? context : numeral;
    return function () {
        return [
            auditory_description_1.AuditoryDescription.create({
                text: '',
                personality: { pause: value }
            })
        ];
    };
}
exports.pauseSeparator = pauseSeparator;
function contentIterator(nodes, context) {
    let contentNodes;
    if (nodes.length > 0) {
        contentNodes = XpathUtil.evalXPath('../../content/*', nodes[0]);
    }
    else {
        contentNodes = [];
    }
    return function () {
        const content = contentNodes.shift();
        const contextDescr = context
            ? [auditory_description_1.AuditoryDescription.create({ text: context }, { translate: true })]
            : [];
        if (!content) {
            return contextDescr;
        }
        const descrs = engine_1.default.evaluateNode(content);
        return contextDescr.concat(descrs);
    };
}
exports.contentIterator = contentIterator;


/***/ }),

/***/ 1414:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getTreeFromString = exports.getTree = exports.xmlTree = void 0;
const DomUtil = __webpack_require__(5740);
const semantic_tree_1 = __webpack_require__(7075);
function xmlTree(mml) {
    return getTree(mml).xml();
}
exports.xmlTree = xmlTree;
function getTree(mml) {
    return new semantic_tree_1.SemanticTree(mml);
}
exports.getTree = getTree;
function getTreeFromString(expr) {
    const mml = DomUtil.parseInput(expr);
    return getTree(mml);
}
exports.getTreeFromString = getTreeFromString;


/***/ }),

/***/ 7630:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.annotate = exports.activate = exports.register = exports.visitors = exports.annotators = void 0;
const semantic_annotator_1 = __webpack_require__(9265);
exports.annotators = new Map();
exports.visitors = new Map();
function register(annotator) {
    const name = annotator.domain + ':' + annotator.name;
    annotator instanceof semantic_annotator_1.SemanticAnnotator
        ? exports.annotators.set(name, annotator)
        : exports.visitors.set(name, annotator);
}
exports.register = register;
function activate(domain, name) {
    const key = domain + ':' + name;
    const annotator = exports.annotators.get(key) || exports.visitors.get(key);
    if (annotator) {
        annotator.active = true;
    }
}
exports.activate = activate;
function annotate(node) {
    for (const annotator of exports.annotators.values()) {
        if (annotator.active) {
            annotator.annotate(node);
        }
    }
    for (const visitor of exports.visitors.values()) {
        if (visitor.active) {
            visitor.visit(node, Object.assign({}, visitor.def));
        }
    }
}
exports.annotate = annotate;


/***/ }),

/***/ 9265:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticVisitor = exports.SemanticAnnotator = void 0;
class SemanticAnnotator {
    constructor(domain, name, func) {
        this.domain = domain;
        this.name = name;
        this.func = func;
        this.active = false;
    }
    annotate(node) {
        node.childNodes.forEach(this.annotate.bind(this));
        node.addAnnotation(this.domain, this.func(node));
    }
}
exports.SemanticAnnotator = SemanticAnnotator;
class SemanticVisitor {
    constructor(domain, name, func, def = {}) {
        this.domain = domain;
        this.name = name;
        this.func = func;
        this.def = def;
        this.active = false;
    }
    visit(node, info) {
        let result = this.func(node, info);
        node.addAnnotation(this.domain, result[0]);
        for (let i = 0, child; (child = node.childNodes[i]); i++) {
            result = this.visit(child, result[1]);
        }
        return result;
    }
}
exports.SemanticVisitor = SemanticVisitor;


/***/ }),

/***/ 3588:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lookupSecondary = exports.isEmbellishedType = exports.isMatchingFence = exports.functionApplication = exports.invisibleComma = exports.invisiblePlus = exports.invisibleTimes = exports.lookupMeaning = exports.lookupRole = exports.lookupType = exports.equal = exports.allLettersRegExp = void 0;
const generalPunctuations = [
    '!',
    '"',
    '#',
    '%',
    '&',
    ';',
    '?',
    '@',
    '\\',
    '¡',
    '§',
    '¶',
    '¿',
    '‗',
    '†',
    '‡',
    '•',
    '‣',
    '․',
    '‥',
    '‧',
    '‰',
    '‱',
    '‸',
    '※',
    '‼',
    '‽',
    '‾',
    '⁁',
    '⁂',
    '⁃',
    '⁇',
    '⁈',
    '⁉',
    '⁋',
    '⁌',
    '⁍',
    '⁎',
    '⁏',
    '⁐',
    '⁑',
    '⁓',
    '⁕',
    '⁖',
    '⁘',
    '⁙',
    '⁚',
    '⁛',
    '⁜',
    '⁝',
    '⁞',
    '︐',
    '︔',
    '︕',
    '︖',
    '︰',
    '﹅',
    '﹆',
    '﹉',
    '﹊',
    '﹋',
    '﹌',
    '﹔',
    '﹖',
    '﹗',
    '﹟',
    '﹠',
    '﹡',
    '﹨',
    '﹪',
    '﹫',
    '！',
    '＂',
    '＃',
    '％',
    '＆',
    '＇',
    '＊',
    '／',
    '；',
    '？',
    '＠',
    '＼'
];
const colons = ['︓', ':', '：', '﹕'];
const invisibleComma_ = String.fromCodePoint(0x2063);
const commas = ['，', '﹐', ',', invisibleComma_];
const ellipses = ['…', '⋮', '⋯', '⋰', '⋱', '︙'];
const fullStops = ['.', '﹒', '．'];
const dashes = [
    '¯',
    '‒',
    '–',
    '—',
    '―',
    '﹘',
    '-',
    '⁻',
    '₋',
    '−',
    '➖',
    '﹣',
    '－',
    '‐',
    '‑',
    '‾',
    '_'
];
const tildes = ['~', '̃', '∼', '˜', '∽', '˷', '̴', '̰'];
const primes = ["'", '′', '″', '‴', '‵', '‶', '‷', '⁗', 'ʹ', 'ʺ'];
const degrees = ['°'];
const openClosePairs = {
    '(': ')',
    '[': ']',
    '{': '}',
    '\u2045': '⁆',
    '\u2329': '〉',
    '\u2768': '❩',
    '\u276a': '❫',
    '\u276c': '❭',
    '\u276e': '❯',
    '\u2770': '❱',
    '\u2772': '❳',
    '\u2774': '❵',
    '\u27c5': '⟆',
    '\u27e6': '⟧',
    '\u27e8': '⟩',
    '\u27ea': '⟫',
    '\u27ec': '⟭',
    '\u27ee': '⟯',
    '\u2983': '⦄',
    '\u2985': '⦆',
    '\u2987': '⦈',
    '\u2989': '⦊',
    '\u298b': '⦌',
    '\u298d': '⦎',
    '\u298f': '⦐',
    '\u2991': '⦒',
    '\u2993': '⦔',
    '\u2995': '⦖',
    '\u2997': '⦘',
    '\u29d8': '⧙',
    '\u29da': '⧛',
    '\u29fc': '⧽',
    '\u2e22': '⸣',
    '\u2e24': '⸥',
    '\u2e26': '⸧',
    '\u2e28': '⸩',
    '\u3008': '〉',
    '\u300a': '》',
    '\u300c': '」',
    '\u300e': '』',
    '\u3010': '】',
    '\u3014': '〕',
    '\u3016': '〗',
    '\u3018': '〙',
    '\u301a': '〛',
    '\u301d': '〞',
    '\ufd3e': '﴿',
    '\ufe17': '︘',
    '\ufe59': '﹚',
    '\ufe5b': '﹜',
    '\ufe5d': '﹞',
    '\uff08': '）',
    '\uff3b': '］',
    '\uff5b': '｝',
    '\uff5f': '｠',
    '\uff62': '｣',
    '\u2308': '⌉',
    '\u230a': '⌋',
    '\u230c': '⌍',
    '\u230e': '⌏',
    '\u231c': '⌝',
    '\u231e': '⌟',
    '\u239b': '⎞',
    '\u239c': '⎟',
    '\u239d': '⎠',
    '\u23a1': '⎤',
    '\u23a2': '⎥',
    '\u23a3': '⎦',
    '\u23a7': '⎫',
    '\u23a8': '⎬',
    '\u23a9': '⎭',
    '\u23b0': '⎱',
    '\u23b8': '⎹'
};
const topBottomPairs = {
    '\u23b4': '⎵',
    '\u23dc': '⏝',
    '\u23de': '⏟',
    '\u23e0': '⏡',
    '\ufe35': '︶',
    '\ufe37': '︸',
    '\ufe39': '︺',
    '\ufe3b': '︼',
    '\ufe3d': '︾',
    '\ufe3f': '﹀',
    '\ufe41': '﹂',
    '\ufe43': '﹄',
    '\ufe47': '﹈'
};
const leftFences = Object.keys(openClosePairs);
const rightFences = Object.values(openClosePairs);
rightFences.push('〟');
const topFences = Object.keys(topBottomPairs);
const bottomFences = Object.values(topBottomPairs);
const neutralFences = [
    '|',
    '¦',
    '∣',
    '⏐',
    '⎸',
    '⎹',
    '❘',
    '｜',
    '￤',
    '︱',
    '︲'
];
const metricFences = ['‖', '∥', '⦀', '⫴'];
const capitalLatin = [
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z'
];
const smallLatin = [
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    'ı',
    'ȷ'
];
const capitalLatinFullWidth = [
    'Ａ',
    'Ｂ',
    'Ｃ',
    'Ｄ',
    'Ｅ',
    'Ｆ',
    'Ｇ',
    'Ｈ',
    'Ｉ',
    'Ｊ',
    'Ｋ',
    'Ｌ',
    'Ｍ',
    'Ｎ',
    'Ｏ',
    'Ｐ',
    'Ｑ',
    'Ｒ',
    'Ｓ',
    'Ｔ',
    'Ｕ',
    'Ｖ',
    'Ｗ',
    'Ｘ',
    'Ｙ',
    'Ｚ'
];
const smallLatinFullWidth = [
    'ａ',
    'ｂ',
    'ｃ',
    'ｄ',
    'ｅ',
    'ｆ',
    'ｇ',
    'ｈ',
    'ｉ',
    'ｊ',
    'ｋ',
    'ｌ',
    'ｍ',
    'ｎ',
    'ｏ',
    'ｐ',
    'ｑ',
    'ｒ',
    'ｓ',
    'ｔ',
    'ｕ',
    'ｖ',
    'ｗ',
    'ｘ',
    'ｙ',
    'ｚ'
];
const capitalLatinBold = [
    '𝐀',
    '𝐁',
    '𝐂',
    '𝐃',
    '𝐄',
    '𝐅',
    '𝐆',
    '𝐇',
    '𝐈',
    '𝐉',
    '𝐊',
    '𝐋',
    '𝐌',
    '𝐍',
    '𝐎',
    '𝐏',
    '𝐐',
    '𝐑',
    '𝐒',
    '𝐓',
    '𝐔',
    '𝐕',
    '𝐖',
    '𝐗',
    '𝐘',
    '𝐙'
];
const smallLatinBold = [
    '𝐚',
    '𝐛',
    '𝐜',
    '𝐝',
    '𝐞',
    '𝐟',
    '𝐠',
    '𝐡',
    '𝐢',
    '𝐣',
    '𝐤',
    '𝐥',
    '𝐦',
    '𝐧',
    '𝐨',
    '𝐩',
    '𝐪',
    '𝐫',
    '𝐬',
    '𝐭',
    '𝐮',
    '𝐯',
    '𝐰',
    '𝐱',
    '𝐲',
    '𝐳'
];
const capitalLatinItalic = [
    '𝐴',
    '𝐵',
    '𝐶',
    '𝐷',
    '𝐸',
    '𝐹',
    '𝐺',
    '𝐻',
    '𝐼',
    '𝐽',
    '𝐾',
    '𝐿',
    '𝑀',
    '𝑁',
    '𝑂',
    '𝑃',
    '𝑄',
    '𝑅',
    '𝑆',
    '𝑇',
    '𝑈',
    '𝑉',
    '𝑊',
    '𝑋',
    '𝑌',
    '𝑍'
];
const smallLatinItalic = [
    '𝑎',
    '𝑏',
    '𝑐',
    '𝑑',
    '𝑒',
    '𝑓',
    '𝑔',
    'ℎ',
    '𝑖',
    '𝑗',
    '𝑘',
    '𝑙',
    '𝑚',
    '𝑛',
    '𝑜',
    '𝑝',
    '𝑞',
    '𝑟',
    '𝑠',
    '𝑡',
    '𝑢',
    '𝑣',
    '𝑤',
    '𝑥',
    '𝑦',
    '𝑧',
    '𝚤',
    '𝚥'
];
const capitalLatinBoldItalic = [
    '𝑨',
    '𝑩',
    '𝑪',
    '𝑫',
    '𝑬',
    '𝑭',
    '𝑮',
    '𝑯',
    '𝑰',
    '𝑱',
    '𝑲',
    '𝑳',
    '𝑴',
    '𝑵',
    '𝑶',
    '𝑷',
    '𝑸',
    '𝑹',
    '𝑺',
    '𝑻',
    '𝑼',
    '𝑽',
    '𝑾',
    '𝑿',
    '𝒀',
    '𝒁'
];
const smallLatinBoldItalic = [
    '𝒂',
    '𝒃',
    '𝒄',
    '𝒅',
    '𝒆',
    '𝒇',
    '𝒈',
    '𝒉',
    '𝒊',
    '𝒋',
    '𝒌',
    '𝒍',
    '𝒎',
    '𝒏',
    '𝒐',
    '𝒑',
    '𝒒',
    '𝒓',
    '𝒔',
    '𝒕',
    '𝒖',
    '𝒗',
    '𝒘',
    '𝒙',
    '𝒚',
    '𝒛'
];
const capitalLatinScript = [
    '𝒜',
    'ℬ',
    '𝒞',
    '𝒟',
    'ℰ',
    'ℱ',
    '𝒢',
    'ℋ',
    'ℐ',
    '𝒥',
    '𝒦',
    'ℒ',
    'ℳ',
    '𝒩',
    '𝒪',
    '𝒫',
    '𝒬',
    'ℛ',
    '𝒮',
    '𝒯',
    '𝒰',
    '𝒱',
    '𝒲',
    '𝒳',
    '𝒴',
    '𝒵',
    '℘'
];
const smallLatinScript = [
    '𝒶',
    '𝒷',
    '𝒸',
    '𝒹',
    'ℯ',
    '𝒻',
    'ℊ',
    '𝒽',
    '𝒾',
    '𝒿',
    '𝓀',
    '𝓁',
    '𝓂',
    '𝓃',
    'ℴ',
    '𝓅',
    '𝓆',
    '𝓇',
    '𝓈',
    '𝓉',
    '𝓊',
    '𝓋',
    '𝓌',
    '𝓍',
    '𝓎',
    '𝓏',
    'ℓ'
];
const capitalLatinBoldScript = [
    '𝓐',
    '𝓑',
    '𝓒',
    '𝓓',
    '𝓔',
    '𝓕',
    '𝓖',
    '𝓗',
    '𝓘',
    '𝓙',
    '𝓚',
    '𝓛',
    '𝓜',
    '𝓝',
    '𝓞',
    '𝓟',
    '𝓠',
    '𝓡',
    '𝓢',
    '𝓣',
    '𝓤',
    '𝓥',
    '𝓦',
    '𝓧',
    '𝓨',
    '𝓩'
];
const smallLatinBoldScript = [
    '𝓪',
    '𝓫',
    '𝓬',
    '𝓭',
    '𝓮',
    '𝓯',
    '𝓰',
    '𝓱',
    '𝓲',
    '𝓳',
    '𝓴',
    '𝓵',
    '𝓶',
    '𝓷',
    '𝓸',
    '𝓹',
    '𝓺',
    '𝓻',
    '𝓼',
    '𝓽',
    '𝓾',
    '𝓿',
    '𝔀',
    '𝔁',
    '𝔂',
    '𝔃'
];
const capitalLatinFraktur = [
    '𝔄',
    '𝔅',
    'ℭ',
    '𝔇',
    '𝔈',
    '𝔉',
    '𝔊',
    'ℌ',
    'ℑ',
    '𝔍',
    '𝔎',
    '𝔏',
    '𝔐',
    '𝔑',
    '𝔒',
    '𝔓',
    '𝔔',
    'ℜ',
    '𝔖',
    '𝔗',
    '𝔘',
    '𝔙',
    '𝔚',
    '𝔛',
    '𝔜',
    'ℨ'
];
const smallLatinFraktur = [
    '𝔞',
    '𝔟',
    '𝔠',
    '𝔡',
    '𝔢',
    '𝔣',
    '𝔤',
    '𝔥',
    '𝔦',
    '𝔧',
    '𝔨',
    '𝔩',
    '𝔪',
    '𝔫',
    '𝔬',
    '𝔭',
    '𝔮',
    '𝔯',
    '𝔰',
    '𝔱',
    '𝔲',
    '𝔳',
    '𝔴',
    '𝔵',
    '𝔶',
    '𝔷'
];
const capitalLatinDoubleStruck = [
    '𝔸',
    '𝔹',
    'ℂ',
    '𝔻',
    '𝔼',
    '𝔽',
    '𝔾',
    'ℍ',
    '𝕀',
    '𝕁',
    '𝕂',
    '𝕃',
    '𝕄',
    'ℕ',
    '𝕆',
    'ℙ',
    'ℚ',
    'ℝ',
    '𝕊',
    '𝕋',
    '𝕌',
    '𝕍',
    '𝕎',
    '𝕏',
    '𝕐',
    'ℤ'
];
const smallLatinDoubleStruck = [
    '𝕒',
    '𝕓',
    '𝕔',
    '𝕕',
    '𝕖',
    '𝕗',
    '𝕘',
    '𝕙',
    '𝕚',
    '𝕛',
    '𝕜',
    '𝕝',
    '𝕞',
    '𝕟',
    '𝕠',
    '𝕡',
    '𝕢',
    '𝕣',
    '𝕤',
    '𝕥',
    '𝕦',
    '𝕧',
    '𝕨',
    '𝕩',
    '𝕪',
    '𝕫'
];
const capitalLatinBoldFraktur = [
    '𝕬',
    '𝕭',
    '𝕮',
    '𝕯',
    '𝕰',
    '𝕱',
    '𝕲',
    '𝕳',
    '𝕴',
    '𝕵',
    '𝕶',
    '𝕷',
    '𝕸',
    '𝕹',
    '𝕺',
    '𝕻',
    '𝕼',
    '𝕽',
    '𝕾',
    '𝕿',
    '𝖀',
    '𝖁',
    '𝖂',
    '𝖃',
    '𝖄',
    '𝖅'
];
const smallLatinBoldFraktur = [
    '𝖆',
    '𝖇',
    '𝖈',
    '𝖉',
    '𝖊',
    '𝖋',
    '𝖌',
    '𝖍',
    '𝖎',
    '𝖏',
    '𝖐',
    '𝖑',
    '𝖒',
    '𝖓',
    '𝖔',
    '𝖕',
    '𝖖',
    '𝖗',
    '𝖘',
    '𝖙',
    '𝖚',
    '𝖛',
    '𝖜',
    '𝖝',
    '𝖞',
    '𝖟'
];
const capitalLatinSansSerif = [
    '𝖠',
    '𝖡',
    '𝖢',
    '𝖣',
    '𝖤',
    '𝖥',
    '𝖦',
    '𝖧',
    '𝖨',
    '𝖩',
    '𝖪',
    '𝖫',
    '𝖬',
    '𝖭',
    '𝖮',
    '𝖯',
    '𝖰',
    '𝖱',
    '𝖲',
    '𝖳',
    '𝖴',
    '𝖵',
    '𝖶',
    '𝖷',
    '𝖸',
    '𝖹'
];
const smallLatinSansSerif = [
    '𝖺',
    '𝖻',
    '𝖼',
    '𝖽',
    '𝖾',
    '𝖿',
    '𝗀',
    '𝗁',
    '𝗂',
    '𝗃',
    '𝗄',
    '𝗅',
    '𝗆',
    '𝗇',
    '𝗈',
    '𝗉',
    '𝗊',
    '𝗋',
    '𝗌',
    '𝗍',
    '𝗎',
    '𝗏',
    '𝗐',
    '𝗑',
    '𝗒',
    '𝗓'
];
const capitalLatinSansSerifBold = [
    '𝗔',
    '𝗕',
    '𝗖',
    '𝗗',
    '𝗘',
    '𝗙',
    '𝗚',
    '𝗛',
    '𝗜',
    '𝗝',
    '𝗞',
    '𝗟',
    '𝗠',
    '𝗡',
    '𝗢',
    '𝗣',
    '𝗤',
    '𝗥',
    '𝗦',
    '𝗧',
    '𝗨',
    '𝗩',
    '𝗪',
    '𝗫',
    '𝗬',
    '𝗭'
];
const smallLatinSansSerifBold = [
    '𝗮',
    '𝗯',
    '𝗰',
    '𝗱',
    '𝗲',
    '𝗳',
    '𝗴',
    '𝗵',
    '𝗶',
    '𝗷',
    '𝗸',
    '𝗹',
    '𝗺',
    '𝗻',
    '𝗼',
    '𝗽',
    '𝗾',
    '𝗿',
    '𝘀',
    '𝘁',
    '𝘂',
    '𝘃',
    '𝘄',
    '𝘅',
    '𝘆',
    '𝘇'
];
const capitalLatinSansSerifItalic = [
    '𝘈',
    '𝘉',
    '𝘊',
    '𝘋',
    '𝘌',
    '𝘍',
    '𝘎',
    '𝘏',
    '𝘐',
    '𝘑',
    '𝘒',
    '𝘓',
    '𝘔',
    '𝘕',
    '𝘖',
    '𝘗',
    '𝘘',
    '𝘙',
    '𝘚',
    '𝘛',
    '𝘜',
    '𝘝',
    '𝘞',
    '𝘟',
    '𝘠',
    '𝘡'
];
const smallLatinSansSerifItalic = [
    '𝘢',
    '𝘣',
    '𝘤',
    '𝘥',
    '𝘦',
    '𝘧',
    '𝘨',
    '𝘩',
    '𝘪',
    '𝘫',
    '𝘬',
    '𝘭',
    '𝘮',
    '𝘯',
    '𝘰',
    '𝘱',
    '𝘲',
    '𝘳',
    '𝘴',
    '𝘵',
    '𝘶',
    '𝘷',
    '𝘸',
    '𝘹',
    '𝘺',
    '𝘻'
];
const capitalLatinSansSerifBoldItalic = [
    '𝘼',
    '𝘽',
    '𝘾',
    '𝘿',
    '𝙀',
    '𝙁',
    '𝙂',
    '𝙃',
    '𝙄',
    '𝙅',
    '𝙆',
    '𝙇',
    '𝙈',
    '𝙉',
    '𝙊',
    '𝙋',
    '𝙌',
    '𝙍',
    '𝙎',
    '𝙏',
    '𝙐',
    '𝙑',
    '𝙒',
    '𝙓',
    '𝙔',
    '𝙕'
];
const smallLatinSansSerifBoldItalic = [
    '𝙖',
    '𝙗',
    '𝙘',
    '𝙙',
    '𝙚',
    '𝙛',
    '𝙜',
    '𝙝',
    '𝙞',
    '𝙟',
    '𝙠',
    '𝙡',
    '𝙢',
    '𝙣',
    '𝙤',
    '𝙥',
    '𝙦',
    '𝙧',
    '𝙨',
    '𝙩',
    '𝙪',
    '𝙫',
    '𝙬',
    '𝙭',
    '𝙮',
    '𝙯'
];
const capitalLatinMonospace = [
    '𝙰',
    '𝙱',
    '𝙲',
    '𝙳',
    '𝙴',
    '𝙵',
    '𝙶',
    '𝙷',
    '𝙸',
    '𝙹',
    '𝙺',
    '𝙻',
    '𝙼',
    '𝙽',
    '𝙾',
    '𝙿',
    '𝚀',
    '𝚁',
    '𝚂',
    '𝚃',
    '𝚄',
    '𝚅',
    '𝚆',
    '𝚇',
    '𝚈',
    '𝚉'
];
const smallLatinMonospace = [
    '𝚊',
    '𝚋',
    '𝚌',
    '𝚍',
    '𝚎',
    '𝚏',
    '𝚐',
    '𝚑',
    '𝚒',
    '𝚓',
    '𝚔',
    '𝚕',
    '𝚖',
    '𝚗',
    '𝚘',
    '𝚙',
    '𝚚',
    '𝚛',
    '𝚜',
    '𝚝',
    '𝚞',
    '𝚟',
    '𝚠',
    '𝚡',
    '𝚢',
    '𝚣'
];
const latinDoubleStruckItalic = ['ⅅ', 'ⅆ', 'ⅇ', 'ⅈ', 'ⅉ'];
const capitalGreek = [
    'Α',
    'Β',
    'Γ',
    'Δ',
    'Ε',
    'Ζ',
    'Η',
    'Θ',
    'Ι',
    'Κ',
    'Λ',
    'Μ',
    'Ν',
    'Ξ',
    'Ο',
    'Π',
    'Ρ',
    'Σ',
    'Τ',
    'Υ',
    'Φ',
    'Χ',
    'Ψ',
    'Ω'
];
const smallGreek = [
    'α',
    'β',
    'γ',
    'δ',
    'ε',
    'ζ',
    'η',
    'θ',
    'ι',
    'κ',
    'λ',
    'μ',
    'ν',
    'ξ',
    'ο',
    'π',
    'ρ',
    'ς',
    'σ',
    'τ',
    'υ',
    'φ',
    'χ',
    'ψ',
    'ω'
];
const capitalGreekBold = [
    '𝚨',
    '𝚩',
    '𝚪',
    '𝚫',
    '𝚬',
    '𝚭',
    '𝚮',
    '𝚯',
    '𝚰',
    '𝚱',
    '𝚲',
    '𝚳',
    '𝚴',
    '𝚵',
    '𝚶',
    '𝚷',
    '𝚸',
    '𝚺',
    '𝚻',
    '𝚼',
    '𝚽',
    '𝚾',
    '𝚿',
    '𝛀'
];
const smallGreekBold = [
    '𝛂',
    '𝛃',
    '𝛄',
    '𝛅',
    '𝛆',
    '𝛇',
    '𝛈',
    '𝛉',
    '𝛊',
    '𝛋',
    '𝛌',
    '𝛍',
    '𝛎',
    '𝛏',
    '𝛐',
    '𝛑',
    '𝛒',
    '𝛓',
    '𝛔',
    '𝛕',
    '𝛖',
    '𝛗',
    '𝛘',
    '𝛙',
    '𝛚'
];
const capitalGreekItalic = [
    '𝛢',
    '𝛣',
    '𝛤',
    '𝛥',
    '𝛦',
    '𝛧',
    '𝛨',
    '𝛩',
    '𝛪',
    '𝛫',
    '𝛬',
    '𝛭',
    '𝛮',
    '𝛯',
    '𝛰',
    '𝛱',
    '𝛲',
    '𝛴',
    '𝛵',
    '𝛶',
    '𝛷',
    '𝛸',
    '𝛹',
    '𝛺'
];
const smallGreekItalic = [
    '𝛼',
    '𝛽',
    '𝛾',
    '𝛿',
    '𝜀',
    '𝜁',
    '𝜂',
    '𝜃',
    '𝜄',
    '𝜅',
    '𝜆',
    '𝜇',
    '𝜈',
    '𝜉',
    '𝜊',
    '𝜋',
    '𝜌',
    '𝜍',
    '𝜎',
    '𝜏',
    '𝜐',
    '𝜑',
    '𝜒',
    '𝜓',
    '𝜔'
];
const capitalGreekBoldItalic = [
    '𝜜',
    '𝜝',
    '𝜞',
    '𝜟',
    '𝜠',
    '𝜡',
    '𝜢',
    '𝜣',
    '𝜤',
    '𝜥',
    '𝜦',
    '𝜧',
    '𝜨',
    '𝜩',
    '𝜪',
    '𝜫',
    '𝜬',
    '𝜮',
    '𝜯',
    '𝜰',
    '𝜱',
    '𝜲',
    '𝜳',
    '𝜴'
];
const smallGreekBoldItalic = [
    '𝜶',
    '𝜷',
    '𝜸',
    '𝜹',
    '𝜺',
    '𝜻',
    '𝜼',
    '𝜽',
    '𝜾',
    '𝜿',
    '𝝀',
    '𝝁',
    '𝝂',
    '𝝃',
    '𝝄',
    '𝝅',
    '𝝆',
    '𝝇',
    '𝝈',
    '𝝉',
    '𝝊',
    '𝝋',
    '𝝌',
    '𝝍',
    '𝝎'
];
const capitalGreekSansSerifBold = [
    '𝝖',
    '𝝗',
    '𝝘',
    '𝝙',
    '𝝚',
    '𝝛',
    '𝝜',
    '𝝝',
    '𝝞',
    '𝝟',
    '𝝠',
    '𝝡',
    '𝝢',
    '𝝣',
    '𝝤',
    '𝝥',
    '𝝦',
    '𝝨',
    '𝝩',
    '𝝪',
    '𝝫',
    '𝝬',
    '𝝭',
    '𝝮'
];
const smallGreekSansSerifBold = [
    '𝝰',
    '𝝱',
    '𝝲',
    '𝝳',
    '𝝴',
    '𝝵',
    '𝝶',
    '𝝷',
    '𝝸',
    '𝝹',
    '𝝺',
    '𝝻',
    '𝝼',
    '𝝽',
    '𝝾',
    '𝝿',
    '𝞀',
    '𝞁',
    '𝞂',
    '𝞃',
    '𝞄',
    '𝞅',
    '𝞆',
    '𝞇',
    '𝞈'
];
const capitalGreekSansSerifBoldItalic = [
    '𝞐',
    '𝞑',
    '𝞒',
    '𝞓',
    '𝞔',
    '𝞕',
    '𝞖',
    '𝞗',
    '𝞘',
    '𝞙',
    '𝞚',
    '𝞛',
    '𝞜',
    '𝞝',
    '𝞞',
    '𝞟',
    '𝞠',
    '𝞢',
    '𝞣',
    '𝞤',
    '𝞥',
    '𝞦',
    '𝞧',
    '𝞨'
];
const smallGreekSansSerifBoldItalic = [
    '𝞪',
    '𝞫',
    '𝞬',
    '𝞭',
    '𝞮',
    '𝞯',
    '𝞰',
    '𝞱',
    '𝞲',
    '𝞳',
    '𝞴',
    '𝞵',
    '𝞶',
    '𝞷',
    '𝞸',
    '𝞹',
    '𝞺',
    '𝞻',
    '𝞼',
    '𝞽',
    '𝞾',
    '𝞿',
    '𝟀',
    '𝟁',
    '𝟂'
];
const greekDoubleStruck = ['ℼ', 'ℽ', 'ℾ', 'ℿ'];
const greekSpecial = [
    'ϐ',
    'ϑ',
    'ϕ',
    'ϖ',
    'ϗ',
    'ϰ',
    'ϱ',
    'ϵ',
    '϶',
    'ϴ'
];
const greekSpecialBold = ['𝛜', '𝛝', '𝛞', '𝛟', '𝛠', '𝛡'];
const greekSpecialItalic = ['𝜖', '𝜗', '𝜘', '𝜙', '𝜚', '𝜛'];
const greekSpecialSansSerifBold = ['𝞊', '𝞋', '𝞌', '𝞍', '𝞎', '𝞏'];
const hebrewLetters = ['ℵ', 'ℶ', 'ℷ', 'ℸ'];
const allLetters = capitalLatin.concat(smallLatin, capitalLatinFullWidth, smallLatinFullWidth, capitalLatinBold, smallLatinBold, capitalLatinItalic, capitalLatinBoldItalic, smallLatinBoldItalic, smallLatinItalic, capitalLatinScript, smallLatinScript, capitalLatinBoldScript, smallLatinBoldScript, capitalLatinFraktur, smallLatinFraktur, capitalLatinDoubleStruck, smallLatinDoubleStruck, capitalLatinBoldFraktur, smallLatinBoldFraktur, capitalLatinSansSerif, smallLatinSansSerif, capitalLatinSansSerifBold, smallLatinSansSerifBold, capitalLatinSansSerifItalic, smallLatinSansSerifItalic, capitalLatinSansSerifBoldItalic, smallLatinSansSerifBoldItalic, capitalLatinMonospace, smallLatinMonospace, latinDoubleStruckItalic, capitalGreek, smallGreek, capitalGreekBold, smallGreekBold, capitalGreekItalic, smallGreekItalic, capitalGreekBoldItalic, smallGreekBoldItalic, capitalGreekSansSerifBold, smallGreekSansSerifBold, greekDoubleStruck, greekSpecial, capitalGreekSansSerifBoldItalic, smallGreekSansSerifBoldItalic, greekSpecialBold, greekSpecialItalic, greekSpecialSansSerifBold, hebrewLetters);
exports.allLettersRegExp = new RegExp(allLetters.join('|'));
const additions = [
    '+',
    '±',
    '∓',
    '∔',
    '∧',
    '∨',
    '∩',
    '∪',
    '⊌',
    '⊍',
    '⊎',
    '⊓',
    '⊔',
    '⊝',
    '⊞',
    '⊤',
    '⊥',
    '⊺',
    '⊻',
    '⊼',
    '⋄',
    '⋎',
    '⋏',
    '⋒',
    '⋓',
    '⩞',
    '⊕',
    '⋔'
];
const invisiblePlus_ = String.fromCodePoint(0x2064);
additions.push(invisiblePlus_);
const multiplications = [
    '†',
    '‡',
    '∐',
    '∗',
    '∘',
    '∙',
    '≀',
    '⊚',
    '⊛',
    '⊠',
    '⊡',
    '⋅',
    '⋆',
    '⋇',
    '⋈',
    '⋉',
    '⋊',
    '⋋',
    '⋌',
    '○',
    '·',
    '*',
    '⊗',
    '⊙'
];
const invisibleTimes_ = String.fromCodePoint(0x2062);
multiplications.push(invisibleTimes_);
const subtractions = [
    '¯',
    '-',
    '⁒',
    '⁻',
    '₋',
    '−',
    '∖',
    '∸',
    '≂',
    '⊖',
    '⊟',
    '➖',
    '⨩',
    '⨪',
    '⨫',
    '⨬',
    '⨺',
    '⩁',
    '﹣',
    '－',
    '‐',
    '‑'
];
const divisions = ['/', '÷', '⁄', '∕', '⊘', '⟌', '⦼', '⨸'];
const functionApplication_ = String.fromCodePoint(0x2061);
const equalities = [
    '=',
    '~',
    '⁼',
    '₌',
    '∼',
    '∽',
    '≃',
    '≅',
    '≈',
    '≊',
    '≋',
    '≌',
    '≍',
    '≎',
    '≑',
    '≒',
    '≓',
    '≔',
    '≕',
    '≖',
    '≗',
    '≘',
    '≙',
    '≚',
    '≛',
    '≜',
    '≝',
    '≞',
    '≟',
    '≡',
    '≣',
    '⧤',
    '⩦',
    '⩮',
    '⩯',
    '⩰',
    '⩱',
    '⩲',
    '⩳',
    '⩴',
    '⩵',
    '⩶',
    '⩷',
    '⩸',
    '⋕',
    '⩭',
    '⩪',
    '⩫',
    '⩬',
    '﹦',
    '＝',
    '⩬',
    '⊜',
    '∷'
];
const inequalities = [
    '<',
    '>',
    '≁',
    '≂',
    '≄',
    '≆',
    '≇',
    '≉',
    '≏',
    '≐',
    '≠',
    '≢',
    '≤',
    '≥',
    '≦',
    '≧',
    '≨',
    '≩',
    '≪',
    '≫',
    '≬',
    '≭',
    '≮',
    '≯',
    '≰',
    '≱',
    '≲',
    '≳',
    '≴',
    '≵',
    '≶',
    '≷',
    '≸',
    '≹',
    '≺',
    '≻',
    '≼',
    '≽',
    '≾',
    '≿',
    '⊀',
    '⊁',
    '⋖',
    '⋗',
    '⋘',
    '⋙',
    '⋚',
    '⋛',
    '⋜',
    '⋝',
    '⋞',
    '⋟',
    '⋠',
    '⋡',
    '⋦',
    '⋧',
    '⋨',
    '⋩',
    '⩹',
    '⩺',
    '⩻',
    '⩼',
    '⩽',
    '⩾',
    '⩿',
    '⪀',
    '⪁',
    '⪂',
    '⪃',
    '⪄',
    '⪅',
    '⪆',
    '⪇',
    '⪈',
    '⪉',
    '⪊',
    '⪋',
    '⪌',
    '⪍',
    '⪎',
    '⪏',
    '⪐',
    '⪑',
    '⪒',
    '⪓',
    '⪔',
    '⪕',
    '⪖',
    '⪗',
    '⪘',
    '⪙',
    '⪚',
    '⪛',
    '⪜',
    '⪝',
    '⪞',
    '⪟',
    '⪠',
    '⪡',
    '⪢',
    '⪣',
    '⪤',
    '⪥',
    '⪦',
    '⪧',
    '⪨',
    '⪩',
    '⪪',
    '⪫',
    '⪬',
    '⪭',
    '⪮',
    '⪯',
    '⪰',
    '⪱',
    '⪲',
    '⪳',
    '⪴',
    '⪵',
    '⪶',
    '⪷',
    '⪸',
    '⪹',
    '⪺',
    '⪻',
    '⪼',
    '⫷',
    '⫸',
    '⫹',
    '⫺',
    '⧀',
    '⧁',
    '﹤',
    '﹥',
    '＜',
    '＞'
];
const setRelations = [
    '⋢',
    '⋣',
    '⋤',
    '⋥',
    '⊂',
    '⊃',
    '⊄',
    '⊅',
    '⊆',
    '⊇',
    '⊈',
    '⊉',
    '⊊',
    '⊋',
    '⊏',
    '⊐',
    '⊑',
    '⊒',
    '⪽',
    '⪾',
    '⪿',
    '⫀',
    '⫁',
    '⫂',
    '⫃',
    '⫄',
    '⫅',
    '⫆',
    '⫇',
    '⫈',
    '⫉',
    '⫊',
    '⫋',
    '⫌',
    '⫍',
    '⫎',
    '⫏',
    '⫐',
    '⫑',
    '⫒',
    '⫓',
    '⫔',
    '⫕',
    '⫖',
    '⫗',
    '⫘',
    '⋐',
    '⋑',
    '⋪',
    '⋫',
    '⋬',
    '⋭',
    '⊲',
    '⊳',
    '⊴',
    '⊵'
];
const elementRelations = [
    '∈',
    '∊',
    '⋲',
    '⋳',
    '⋴',
    '⋵',
    '⋶',
    '⋷',
    '⋸',
    '⋹',
    '⋿'
];
const nonelementRelations = ['∉'];
const reelementRelations = ['∋', '∍', '⋺', '⋻', '⋼', '⋽', '⋾'];
const renonelementRelations = ['∌'];
const relations = [
    '⊢',
    '⊣',
    '⊦',
    '⊧',
    '⊨',
    '⊩',
    '⊪',
    '⊫',
    '⊬',
    '⊭',
    '⊮',
    '⊯',
    '⫞',
    '⫟',
    '⫠',
    '⫡',
    '⫢',
    '⫣',
    '⫤',
    '⫥',
    '⫦',
    '⫧',
    '⫨',
    '⫩',
    '⫪',
    '⫫',
    '⫬',
    '⫭'
];
const arrows = [
    '←',
    '↑',
    '→',
    '↓',
    '↔',
    '↕',
    '↖',
    '↗',
    '↘',
    '↙',
    '↚',
    '↛',
    '↜',
    '↝',
    '↞',
    '↟',
    '↠',
    '↡',
    '↢',
    '↣',
    '↤',
    '↥',
    '↦',
    '↧',
    '↨',
    '↩',
    '↪',
    '↫',
    '↬',
    '↭',
    '↮',
    '↯',
    '↰',
    '↱',
    '↲',
    '↳',
    '↴',
    '↵',
    '↶',
    '↷',
    '↸',
    '↹',
    '↺',
    '↻',
    '⇄',
    '⇅',
    '⇆',
    '⇇',
    '⇈',
    '⇉',
    '⇊',
    '⇍',
    '⇎',
    '⇏',
    '⇐',
    '⇑',
    '⇒',
    '⇓',
    '⇔',
    '⇕',
    '⇖',
    '⇗',
    '⇘',
    '⇙',
    '⇚',
    '⇛',
    '⇜',
    '⇝',
    '⇞',
    '⇟',
    '⇠',
    '⇡',
    '⇢',
    '⇣',
    '⇤',
    '⇥',
    '⇦',
    '⇧',
    '⇨',
    '⇩',
    '⇪',
    '⇫',
    '⇬',
    '⇭',
    '⇮',
    '⇯',
    '⇰',
    '⇱',
    '⇲',
    '⇳',
    '⇴',
    '⇵',
    '⇶',
    '⇷',
    '⇸',
    '⇹',
    '⇺',
    '⇻',
    '⇼',
    '⇽',
    '⇾',
    '⇿',
    '⌁',
    '⌃',
    '⌄',
    '⌤',
    '⎋',
    '➔',
    '➘',
    '➙',
    '➚',
    '➛',
    '➜',
    '➝',
    '➞',
    '➟',
    '➠',
    '➡',
    '➢',
    '➣',
    '➤',
    '➥',
    '➦',
    '➧',
    '➨',
    '➩',
    '➪',
    '➫',
    '➬',
    '➭',
    '➮',
    '➯',
    '➱',
    '➲',
    '➳',
    '➴',
    '➵',
    '➶',
    '➷',
    '➸',
    '➹',
    '➺',
    '➻',
    '➼',
    '➽',
    '➾',
    '⟰',
    '⟱',
    '⟲',
    '⟳',
    '⟴',
    '⟵',
    '⟶',
    '⟷',
    '⟸',
    '⟹',
    '⟺',
    '⟻',
    '⟼',
    '⟽',
    '⟾',
    '⟿',
    '⤀',
    '⤁',
    '⤂',
    '⤃',
    '⤄',
    '⤅',
    '⤆',
    '⤇',
    '⤈',
    '⤉',
    '⤊',
    '⤋',
    '⤌',
    '⤍',
    '⤎',
    '⤏',
    '⤐',
    '⤑',
    '⤒',
    '⤓',
    '⤔',
    '⤕',
    '⤖',
    '⤗',
    '⤘',
    '⤙',
    '⤚',
    '⤛',
    '⤜',
    '⤝',
    '⤞',
    '⤟',
    '⤠',
    '⤡',
    '⤢',
    '⤣',
    '⤤',
    '⤥',
    '⤦',
    '⤧',
    '⤨',
    '⤩',
    '⤪',
    '⤭',
    '⤮',
    '⤯',
    '⤰',
    '⤱',
    '⤲',
    '⤳',
    '⤴',
    '⤵',
    '⤶',
    '⤷',
    '⤸',
    '⤹',
    '⤺',
    '⤻',
    '⤼',
    '⤽',
    '⤾',
    '⤿',
    '⥀',
    '⥁',
    '⥂',
    '⥃',
    '⥄',
    '⥅',
    '⥆',
    '⥇',
    '⥈',
    '⥉',
    '⥰',
    '⥱',
    '⥲',
    '⥳',
    '⥴',
    '⥵',
    '⥶',
    '⥷',
    '⥸',
    '⥹',
    '⥺',
    '⥻',
    '⦳',
    '⦴',
    '⦽',
    '⧪',
    '⧬',
    '⧭',
    '⨗',
    '⬀',
    '⬁',
    '⬂',
    '⬃',
    '⬄',
    '⬅',
    '⬆',
    '⬇',
    '⬈',
    '⬉',
    '⬊',
    '⬋',
    '⬌',
    '⬍',
    '⬎',
    '⬏',
    '⬐',
    '⬑',
    '⬰',
    '⬱',
    '⬲',
    '⬳',
    '⬴',
    '⬵',
    '⬶',
    '⬷',
    '⬸',
    '⬹',
    '⬺',
    '⬻',
    '⬼',
    '⬽',
    '⬾',
    '⬿',
    '⭀',
    '⭁',
    '⭂',
    '⭃',
    '⭄',
    '⭅',
    '⭆',
    '⭇',
    '⭈',
    '⭉',
    '⭊',
    '⭋',
    '⭌',
    '￩',
    '￪',
    '￫',
    '￬',
    '↼',
    '↽',
    '↾',
    '↿',
    '⇀',
    '⇁',
    '⇂',
    '⇃',
    '⇋',
    '⇌',
    '⥊',
    '⥋',
    '⥌',
    '⥍',
    '⥎',
    '⥏',
    '⥐',
    '⥑',
    '⥒',
    '⥓',
    '⥔',
    '⥕',
    '⥖',
    '⥗',
    '⥘',
    '⥙',
    '⥚',
    '⥛',
    '⥜',
    '⥝',
    '⥞',
    '⥟',
    '⥠',
    '⥡',
    '⥢',
    '⥣',
    '⥤',
    '⥥',
    '⥦',
    '⥧',
    '⥨',
    '⥩',
    '⥪',
    '⥫',
    '⥬',
    '⥭',
    '⥮',
    '⥯',
    '⥼',
    '⥽',
    '⥾',
    '⥿'
];
const sumOps = [
    '⅀',
    '∏',
    '∐',
    '∑',
    '⋀',
    '⋁',
    '⋂',
    '⋃',
    '⨀',
    '⨁',
    '⨂',
    '⨃',
    '⨄',
    '⨅',
    '⨆',
    '⨇',
    '⨈',
    '⨉',
    '⨊',
    '⨋',
    '⫼',
    '⫿'
];
const intOps = [
    '∫',
    '∬',
    '∭',
    '∮',
    '∯',
    '∰',
    '∱',
    '∲',
    '∳',
    '⨌',
    '⨍',
    '⨎',
    '⨏',
    '⨐',
    '⨑',
    '⨒',
    '⨓',
    '⨔',
    '⨕',
    '⨖',
    '⨗',
    '⨘',
    '⨙',
    '⨚',
    '⨛',
    '⨜'
];
const geometryOps = [
    '∟',
    '∠',
    '∡',
    '∢',
    '⊾',
    '⊿',
    '△',
    '▷',
    '▽',
    '◁'
];
const prefixOps = ['∀', '∃', '∆', '∇', '∂', '∁', '∄'];
const prefixOpsBold = ['𝛁', '𝛛', '𝟊', '𝟋'];
const prefixOpsItalic = ['𝛻', '𝜕'];
const prefixOpsSansSerifBold = ['𝝯', '𝞉'];
const digitsNormal = [
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9'
];
const digitsFullWidth = [
    '０',
    '１',
    '２',
    '３',
    '４',
    '５',
    '６',
    '７',
    '８',
    '９'
];
const digitsBold = ['𝟎', '𝟏', '𝟐', '𝟑', '𝟒', '𝟓', '𝟔', '𝟕', '𝟖', '𝟗'];
const digitsDoubleStruck = [
    '𝟘',
    '𝟙',
    '𝟚',
    '𝟛',
    '𝟜',
    '𝟝',
    '𝟞',
    '𝟟',
    '𝟠',
    '𝟡'
];
const digitsSansSerif = [
    '𝟢',
    '𝟣',
    '𝟤',
    '𝟥',
    '𝟦',
    '𝟧',
    '𝟨',
    '𝟩',
    '𝟪',
    '𝟫'
];
const digitsSansSerifBold = [
    '𝟬',
    '𝟭',
    '𝟮',
    '𝟯',
    '𝟰',
    '𝟱',
    '𝟲',
    '𝟳',
    '𝟴',
    '𝟵'
];
const digitsMonospace = [
    '𝟶',
    '𝟷',
    '𝟸',
    '𝟹',
    '𝟺',
    '𝟻',
    '𝟼',
    '𝟽',
    '𝟾',
    '𝟿'
];
const digitsSuperscript = [
    '²',
    '³',
    '¹',
    '⁰',
    '⁴',
    '⁵',
    '⁶',
    '⁷',
    '⁸',
    '⁹'
];
const digitsSubscript = [
    '₀',
    '₁',
    '₂',
    '₃',
    '₄',
    '₅',
    '₆',
    '₇',
    '₈',
    '₉'
];
const fractions = [
    '¼',
    '½',
    '¾',
    '⅐',
    '⅑',
    '⅒',
    '⅓',
    '⅔',
    '⅕',
    '⅖',
    '⅗',
    '⅘',
    '⅙',
    '⅚',
    '⅛',
    '⅜',
    '⅝',
    '⅞',
    '⅟',
    '↉'
];
const enclosedNumbers = [
    '①',
    '②',
    '③',
    '④',
    '⑤',
    '⑥',
    '⑦',
    '⑧',
    '⑨',
    '⑩',
    '⑪',
    '⑫',
    '⑬',
    '⑭',
    '⑮',
    '⑯',
    '⑰',
    '⑱',
    '⑲',
    '⑳',
    '⓪',
    '⓫',
    '⓬',
    '⓭',
    '⓮',
    '⓯',
    '⓰',
    '⓱',
    '⓲',
    '⓳',
    '⓴',
    '⓵',
    '⓶',
    '⓷',
    '⓸',
    '⓹',
    '⓺',
    '⓻',
    '⓼',
    '⓽',
    '⓾',
    '⓿',
    '❶',
    '❷',
    '❸',
    '❹',
    '❺',
    '❻',
    '❼',
    '❽',
    '❾',
    '❿',
    '➀',
    '➁',
    '➂',
    '➃',
    '➄',
    '➅',
    '➆',
    '➇',
    '➈',
    '➉',
    '➊',
    '➋',
    '➌',
    '➍',
    '➎',
    '➏',
    '➐',
    '➑',
    '➒',
    '➓',
    '㉈',
    '㉉',
    '㉊',
    '㉋',
    '㉌',
    '㉍',
    '㉎',
    '㉏',
    '㉑',
    '㉒',
    '㉓',
    '㉔',
    '㉕',
    '㉖',
    '㉗',
    '㉘',
    '㉙',
    '㉚',
    '㉛',
    '㉜',
    '㉝',
    '㉞',
    '㉟',
    '㊱',
    '㊲',
    '㊳',
    '㊴',
    '㊵',
    '㊶',
    '㊷',
    '㊸',
    '㊹',
    '㊺',
    '㊻',
    '㊼',
    '㊽',
    '㊾',
    '㊿'
];
const fencedNumbers = [
    '⑴',
    '⑵',
    '⑶',
    '⑷',
    '⑸',
    '⑹',
    '⑺',
    '⑻',
    '⑼',
    '⑽',
    '⑾',
    '⑿',
    '⒀',
    '⒁',
    '⒂',
    '⒃',
    '⒄',
    '⒅',
    '⒆',
    '⒇'
];
const punctuatedNumbers = [
    '⒈',
    '⒉',
    '⒊',
    '⒋',
    '⒌',
    '⒍',
    '⒎',
    '⒏',
    '⒐',
    '⒑',
    '⒒',
    '⒓',
    '⒔',
    '⒕',
    '⒖',
    '⒗',
    '⒘',
    '⒙',
    '⒚',
    '⒛',
    '🄀',
    '🄁',
    '🄂',
    '🄃',
    '🄄',
    '🄅',
    '🄆',
    '🄇',
    '🄈',
    '🄉',
    '🄊'
];
const numbers = fractions;
const otherNumbers = digitsSuperscript.concat(digitsSubscript, enclosedNumbers, fencedNumbers, punctuatedNumbers);
const trigonometricFunctions = [
    'cos',
    'cot',
    'csc',
    'sec',
    'sin',
    'tan',
    'arccos',
    'arccot',
    'arccsc',
    'arcsec',
    'arcsin',
    'arctan',
    'arc cos',
    'arc cot',
    'arc csc',
    'arc sec',
    'arc sin',
    'arc tan'
];
const hyperbolicFunctions = [
    'cosh',
    'coth',
    'csch',
    'sech',
    'sinh',
    'tanh',
    'arcosh',
    'arcoth',
    'arcsch',
    'arsech',
    'arsinh',
    'artanh',
    'arccosh',
    'arccoth',
    'arccsch',
    'arcsech',
    'arcsinh',
    'arctanh'
];
const algebraicFunctions = [
    'deg',
    'det',
    'dim',
    'hom',
    'ker',
    'Tr',
    'tr'
];
const elementaryFunctions = [
    'log',
    'ln',
    'lg',
    'exp',
    'expt',
    'gcd',
    'gcd',
    'arg',
    'im',
    're',
    'Pr'
];
const prefixFunctions = trigonometricFunctions.concat(hyperbolicFunctions, algebraicFunctions, elementaryFunctions);
const limitFunctions = [
    'inf',
    'lim',
    'liminf',
    'limsup',
    'max',
    'min',
    'sup',
    'injlim',
    'projlim',
    'inj lim',
    'proj lim'
];
const infixFunctions = ['mod', 'rem'];
const symbolSetToSemantic_ = [
    {
        set: generalPunctuations,
        type: "punctuation",
        role: "unknown"
    },
    {
        set: colons,
        type: "punctuation",
        role: "colon"
    },
    {
        set: commas,
        type: "punctuation",
        role: "comma"
    },
    {
        set: ellipses,
        type: "punctuation",
        role: "ellipsis"
    },
    {
        set: fullStops,
        type: "punctuation",
        role: "fullstop"
    },
    {
        set: dashes,
        type: "operator",
        role: "dash"
    },
    {
        set: tildes,
        type: "operator",
        role: "tilde"
    },
    {
        set: primes,
        type: "punctuation",
        role: "prime"
    },
    {
        set: degrees,
        type: "punctuation",
        role: "degree"
    },
    {
        set: leftFences,
        type: "fence",
        role: "open"
    },
    {
        set: rightFences,
        type: "fence",
        role: "close"
    },
    {
        set: topFences,
        type: "fence",
        role: "top"
    },
    {
        set: bottomFences,
        type: "fence",
        role: "bottom"
    },
    {
        set: neutralFences,
        type: "fence",
        role: "neutral"
    },
    {
        set: metricFences,
        type: "fence",
        role: "metric"
    },
    {
        set: smallLatin,
        type: "identifier",
        role: "latinletter",
        font: "normal"
    },
    {
        set: capitalLatin,
        type: "identifier",
        role: "latinletter",
        font: "normal"
    },
    {
        set: smallLatinFullWidth,
        type: "identifier",
        role: "latinletter",
        font: "normal"
    },
    {
        set: capitalLatinFullWidth,
        type: "identifier",
        role: "latinletter",
        font: "normal"
    },
    {
        set: smallLatinBold,
        type: "identifier",
        role: "latinletter",
        font: "bold"
    },
    {
        set: capitalLatinBold,
        type: "identifier",
        role: "latinletter",
        font: "bold"
    },
    {
        set: smallLatinItalic,
        type: "identifier",
        role: "latinletter",
        font: "italic"
    },
    {
        set: capitalLatinItalic,
        type: "identifier",
        role: "latinletter",
        font: "italic"
    },
    {
        set: smallLatinBoldItalic,
        type: "identifier",
        role: "latinletter",
        font: "bold-italic"
    },
    {
        set: capitalLatinBoldItalic,
        type: "identifier",
        role: "latinletter",
        font: "bold-italic"
    },
    {
        set: smallLatinScript,
        type: "identifier",
        role: "latinletter",
        font: "script"
    },
    {
        set: capitalLatinScript,
        type: "identifier",
        role: "latinletter",
        font: "script"
    },
    {
        set: smallLatinBoldScript,
        type: "identifier",
        role: "latinletter",
        font: "bold-script"
    },
    {
        set: capitalLatinBoldScript,
        type: "identifier",
        role: "latinletter",
        font: "bold-script"
    },
    {
        set: smallLatinFraktur,
        type: "identifier",
        role: "latinletter",
        font: "fraktur"
    },
    {
        set: capitalLatinFraktur,
        type: "identifier",
        role: "latinletter",
        font: "fraktur"
    },
    {
        set: smallLatinDoubleStruck,
        type: "identifier",
        role: "latinletter",
        font: "double-struck"
    },
    {
        set: capitalLatinDoubleStruck,
        type: "identifier",
        role: "latinletter",
        font: "double-struck"
    },
    {
        set: smallLatinBoldFraktur,
        type: "identifier",
        role: "latinletter",
        font: "bold-fraktur"
    },
    {
        set: capitalLatinBoldFraktur,
        type: "identifier",
        role: "latinletter",
        font: "bold-fraktur"
    },
    {
        set: smallLatinSansSerif,
        type: "identifier",
        role: "latinletter",
        font: "sans-serif"
    },
    {
        set: capitalLatinSansSerif,
        type: "identifier",
        role: "latinletter",
        font: "sans-serif"
    },
    {
        set: smallLatinSansSerifBold,
        type: "identifier",
        role: "latinletter",
        font: "sans-serif-bold"
    },
    {
        set: capitalLatinSansSerifBold,
        type: "identifier",
        role: "latinletter",
        font: "sans-serif-bold"
    },
    {
        set: smallLatinSansSerifItalic,
        type: "identifier",
        role: "latinletter",
        font: "sans-serif-italic"
    },
    {
        set: capitalLatinSansSerifItalic,
        type: "identifier",
        role: "latinletter",
        font: "sans-serif-italic"
    },
    {
        set: smallLatinSansSerifBoldItalic,
        type: "identifier",
        role: "latinletter",
        font: "sans-serif-bold-italic"
    },
    {
        set: capitalLatinSansSerifBoldItalic,
        type: "identifier",
        role: "latinletter",
        font: "sans-serif-bold-italic"
    },
    {
        set: smallLatinMonospace,
        type: "identifier",
        role: "latinletter",
        font: "monospace"
    },
    {
        set: capitalLatinMonospace,
        type: "identifier",
        role: "latinletter",
        font: "monospace"
    },
    {
        set: latinDoubleStruckItalic,
        type: "identifier",
        role: "latinletter",
        font: "double-struck-italic"
    },
    {
        set: smallGreek,
        type: "identifier",
        role: "greekletter",
        font: "normal"
    },
    {
        set: capitalGreek,
        type: "identifier",
        role: "greekletter",
        font: "normal"
    },
    {
        set: smallGreekBold,
        type: "identifier",
        role: "greekletter",
        font: "bold"
    },
    {
        set: capitalGreekBold,
        type: "identifier",
        role: "greekletter",
        font: "bold"
    },
    {
        set: smallGreekItalic,
        type: "identifier",
        role: "greekletter",
        font: "italic"
    },
    {
        set: capitalGreekItalic,
        type: "identifier",
        role: "greekletter",
        font: "italic"
    },
    {
        set: smallGreekBoldItalic,
        type: "identifier",
        role: "greekletter",
        font: "bold-italic"
    },
    {
        set: capitalGreekBoldItalic,
        type: "identifier",
        role: "greekletter",
        font: "bold-italic"
    },
    {
        set: smallGreekSansSerifBold,
        type: "identifier",
        role: "greekletter",
        font: "sans-serif-bold"
    },
    {
        set: capitalGreekSansSerifBold,
        type: "identifier",
        role: "greekletter",
        font: "sans-serif-bold"
    },
    {
        set: capitalGreekSansSerifBoldItalic,
        type: "identifier",
        role: "greekletter",
        font: "sans-serif-bold-italic"
    },
    {
        set: smallGreekSansSerifBoldItalic,
        type: "identifier",
        role: "greekletter",
        font: "sans-serif-bold-italic"
    },
    {
        set: greekDoubleStruck,
        type: "identifier",
        role: "greekletter",
        font: "double-struck"
    },
    {
        set: greekSpecial,
        type: "identifier",
        role: "greekletter",
        font: "normal"
    },
    {
        set: greekSpecialBold,
        type: "identifier",
        role: "greekletter",
        font: "bold"
    },
    {
        set: greekSpecialItalic,
        type: "identifier",
        role: "greekletter",
        font: "italic"
    },
    {
        set: greekSpecialSansSerifBold,
        type: "identifier",
        role: "greekletter",
        font: "sans-serif-bold"
    },
    {
        set: hebrewLetters,
        type: "identifier",
        role: "otherletter",
        font: "normal"
    },
    {
        set: digitsNormal,
        type: "number",
        role: "integer",
        font: "normal"
    },
    {
        set: digitsFullWidth,
        type: "number",
        role: "integer",
        font: "normal"
    },
    {
        set: digitsBold,
        type: "number",
        role: "integer",
        font: "bold"
    },
    {
        set: digitsDoubleStruck,
        type: "number",
        role: "integer",
        font: "double-struck"
    },
    {
        set: digitsSansSerif,
        type: "number",
        role: "integer",
        font: "sans-serif"
    },
    {
        set: digitsSansSerifBold,
        type: "number",
        role: "integer",
        font: "sans-serif-bold"
    },
    {
        set: digitsMonospace,
        type: "number",
        role: "integer",
        font: "monospace"
    },
    {
        set: numbers,
        type: "number",
        role: "float"
    },
    {
        set: otherNumbers,
        type: "number",
        role: "othernumber"
    },
    {
        set: additions,
        type: "operator",
        role: "addition"
    },
    {
        set: multiplications,
        type: "operator",
        role: "multiplication"
    },
    {
        set: subtractions,
        type: "operator",
        role: "subtraction"
    },
    {
        set: divisions,
        type: "operator",
        role: "division"
    },
    {
        set: prefixOps,
        type: "operator",
        role: "prefix operator"
    },
    {
        set: prefixOpsBold,
        type: "operator",
        role: "prefix operator",
        font: "bold"
    },
    {
        set: prefixOpsItalic,
        type: "operator",
        role: "prefix operator",
        font: "italic"
    },
    {
        set: prefixOpsSansSerifBold,
        type: "operator",
        role: "prefix operator",
        font: "sans-serif-bold"
    },
    {
        set: equalities,
        type: "relation",
        role: "equality"
    },
    {
        set: inequalities,
        type: "relation",
        role: "inequality"
    },
    {
        set: setRelations,
        type: "relation",
        role: "set"
    },
    {
        set: relations,
        type: "relation",
        role: "unknown"
    },
    {
        set: arrows,
        type: "relation",
        role: "arrow"
    },
    {
        set: elementRelations,
        type: "operator",
        role: "element"
    },
    {
        set: nonelementRelations,
        type: "operator",
        role: "nonelement"
    },
    {
        set: reelementRelations,
        type: "operator",
        role: "reelement"
    },
    {
        set: renonelementRelations,
        type: "operator",
        role: "renonelement"
    },
    {
        set: sumOps,
        type: "largeop",
        role: "sum"
    },
    {
        set: intOps,
        type: "largeop",
        role: "integral"
    },
    {
        set: geometryOps,
        type: "operator",
        role: "geometry"
    },
    {
        set: limitFunctions,
        type: "function",
        role: "limit function"
    },
    {
        set: prefixFunctions,
        type: "function",
        role: "prefix function"
    },
    {
        set: infixFunctions,
        type: "operator",
        role: "prefix function"
    }
];
const meaning_ = (function () {
    const result = {};
    for (let i = 0, st; (st = symbolSetToSemantic_[i]); i++) {
        st.set.forEach(function (symbol) {
            result[symbol] = {
                role: st.role || "unknown",
                type: st.type || "unknown",
                font: st.font || "unknown"
            };
        });
    }
    return result;
})();
function equal(meaning1, meaning2) {
    return (meaning1.type === meaning2.type &&
        meaning1.role === meaning2.role &&
        meaning1.font === meaning2.font);
}
exports.equal = equal;
function lookupType(symbol) {
    var _a;
    return ((_a = meaning_[symbol]) === null || _a === void 0 ? void 0 : _a.type) || "unknown";
}
exports.lookupType = lookupType;
function lookupRole(symbol) {
    var _a;
    return ((_a = meaning_[symbol]) === null || _a === void 0 ? void 0 : _a.role) || "unknown";
}
exports.lookupRole = lookupRole;
function lookupMeaning(symbol) {
    return (meaning_[symbol] || {
        role: "unknown",
        type: "unknown",
        font: "unknown"
    });
}
exports.lookupMeaning = lookupMeaning;
function invisibleTimes() {
    return invisibleTimes_;
}
exports.invisibleTimes = invisibleTimes;
function invisiblePlus() {
    return invisiblePlus_;
}
exports.invisiblePlus = invisiblePlus;
function invisibleComma() {
    return invisibleComma_;
}
exports.invisibleComma = invisibleComma;
function functionApplication() {
    return functionApplication_;
}
exports.functionApplication = functionApplication;
function isMatchingFence(open, close) {
    if (neutralFences.indexOf(open) !== -1 || metricFences.indexOf(open) !== -1) {
        return open === close;
    }
    return openClosePairs[open] === close || topBottomPairs[open] === close;
}
exports.isMatchingFence = isMatchingFence;
function isEmbellishedType(type) {
    return (type === "operator" ||
        type === "relation" ||
        type === "fence" ||
        type === "punctuation");
}
exports.isEmbellishedType = isEmbellishedType;
const secondary_ = new Map();
function secKey(kind, char) {
    return `${kind} ${char}`;
}
function addSecondary_(kind, chars, annotation = '') {
    for (const char of chars) {
        secondary_.set(secKey(kind, char), annotation || kind);
    }
}
addSecondary_('d', [
    'd',
    'ⅆ',
    'ｄ',
    '𝐝',
    '𝑑',
    '𝒹',
    '𝓭',
    '𝔡',
    '𝕕',
    '𝖉',
    '𝖽',
    '𝗱',
    '𝘥',
    '𝚍'
]);
addSecondary_('bar', dashes);
addSecondary_('tilde', tildes);
function lookupSecondary(kind, char) {
    return secondary_.get(secKey(kind, char));
}
exports.lookupSecondary = lookupSecondary;


/***/ }),

/***/ 8158:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticMeaningCollator = exports.SemanticNodeCollator = exports.SemanticDefault = void 0;
const SemanticAttr = __webpack_require__(3588);
const semantic_ordering_1 = __webpack_require__(3882);
class SemanticDefault {
    constructor() {
        this.map = {};
    }
    static key(symbol, font) {
        return font ? symbol + ':' + font : symbol;
    }
    add(symbol, meaning) {
        this.map[SemanticDefault.key(symbol, meaning.font)] = meaning;
    }
    addNode(node) {
        this.add(node.textContent, node.meaning());
    }
    retrieve(symbol, font) {
        return this.map[SemanticDefault.key(symbol, font)];
    }
    retrieveNode(node) {
        return this.retrieve(node.textContent, node.font);
    }
    size() {
        return Object.keys(this.map).length;
    }
}
exports.SemanticDefault = SemanticDefault;
class SemanticCollator {
    constructor() {
        this.map = {};
    }
    add(symbol, entry) {
        const list = this.map[symbol];
        if (list) {
            list.push(entry);
        }
        else {
            this.map[symbol] = [entry];
        }
    }
    retrieve(symbol, font) {
        return this.map[SemanticDefault.key(symbol, font)];
    }
    retrieveNode(node) {
        return this.retrieve(node.textContent, node.font);
    }
    copy() {
        const collator = this.copyCollator();
        for (const key in this.map) {
            collator.map[key] = this.map[key];
        }
        return collator;
    }
    minimize() {
        for (const key in this.map) {
            if (this.map[key].length === 1) {
                delete this.map[key];
            }
        }
    }
    minimalCollator() {
        const collator = this.copy();
        for (const key in collator.map) {
            if (collator.map[key].length === 1) {
                delete collator.map[key];
            }
        }
        return collator;
    }
    isMultiValued() {
        for (const key in this.map) {
            if (this.map[key].length > 1) {
                return true;
            }
        }
        return false;
    }
    isEmpty() {
        return !Object.keys(this.map).length;
    }
}
class SemanticNodeCollator extends SemanticCollator {
    copyCollator() {
        return new SemanticNodeCollator();
    }
    add(symbol, entry) {
        const key = SemanticDefault.key(symbol, entry.font);
        super.add(key, entry);
    }
    addNode(node) {
        this.add(node.textContent, node);
    }
    toString() {
        const outer = [];
        for (const key in this.map) {
            const length = Array(key.length + 3).join(' ');
            const nodes = this.map[key];
            const inner = [];
            for (let i = 0, node; (node = nodes[i]); i++) {
                inner.push(node.toString());
            }
            outer.push(key + ': ' + inner.join('\n' + length));
        }
        return outer.join('\n');
    }
    collateMeaning() {
        const collator = new SemanticMeaningCollator();
        for (const key in this.map) {
            collator.map[key] = this.map[key].map(function (node) {
                return node.meaning();
            });
        }
        return collator;
    }
}
exports.SemanticNodeCollator = SemanticNodeCollator;
class SemanticMeaningCollator extends SemanticCollator {
    copyCollator() {
        return new SemanticMeaningCollator();
    }
    add(symbol, entry) {
        const list = this.retrieve(symbol, entry.font);
        if (!list ||
            !list.find(function (x) {
                return SemanticAttr.equal(x, entry);
            })) {
            const key = SemanticDefault.key(symbol, entry.font);
            super.add(key, entry);
        }
    }
    addNode(node) {
        this.add(node.textContent, node.meaning());
    }
    toString() {
        const outer = [];
        for (const key in this.map) {
            const length = Array(key.length + 3).join(' ');
            const nodes = this.map[key];
            const inner = [];
            for (let i = 0, node; (node = nodes[i]); i++) {
                inner.push('{type: ' +
                    node.type +
                    ', role: ' +
                    node.role +
                    ', font: ' +
                    node.font +
                    '}');
            }
            outer.push(key + ': ' + inner.join('\n' + length));
        }
        return outer.join('\n');
    }
    reduce() {
        for (const key in this.map) {
            if (this.map[key].length !== 1) {
                this.map[key] = (0, semantic_ordering_1.reduce)(this.map[key]);
            }
        }
    }
    default() {
        const def = new SemanticDefault();
        for (const key in this.map) {
            if (this.map[key].length === 1) {
                def.map[key] = this.map[key][0];
            }
        }
        return def;
    }
    newDefault() {
        const oldDefault = this.default();
        this.reduce();
        const newDefault = this.default();
        return oldDefault.size() !== newDefault.size() ? newDefault : null;
    }
}
exports.SemanticMeaningCollator = SemanticMeaningCollator;


/***/ }),

/***/ 9911:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticMultiHeuristic = exports.SemanticTreeHeuristic = exports.SemanticAbstractHeuristic = void 0;
class SemanticAbstractHeuristic {
    constructor(name, method, predicate = (_x) => false) {
        this.name = name;
        this.apply = method;
        this.applicable = predicate;
    }
}
exports.SemanticAbstractHeuristic = SemanticAbstractHeuristic;
class SemanticTreeHeuristic extends SemanticAbstractHeuristic {
}
exports.SemanticTreeHeuristic = SemanticTreeHeuristic;
class SemanticMultiHeuristic extends SemanticAbstractHeuristic {
}
exports.SemanticMultiHeuristic = SemanticMultiHeuristic;


/***/ }),

/***/ 7516:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lookup = exports.run = exports.add = exports.blacklist = exports.flags = exports.updateFactory = exports.factory = void 0;
exports.factory = null;
function updateFactory(nodeFactory) {
    exports.factory = nodeFactory;
}
exports.updateFactory = updateFactory;
const heuristics = new Map();
exports.flags = {
    combine_juxtaposition: true,
    convert_juxtaposition: true,
    multioperator: true
};
exports.blacklist = {};
function add(heuristic) {
    const name = heuristic.name;
    heuristics.set(name, heuristic);
    if (!exports.flags[name]) {
        exports.flags[name] = false;
    }
}
exports.add = add;
function run(name, root, opt_alternative) {
    const heuristic = lookup(name);
    return heuristic &&
        !exports.blacklist[name] &&
        (exports.flags[name] || heuristic.applicable(root))
        ? heuristic.apply(root)
        : opt_alternative
            ? opt_alternative(root)
            : root;
}
exports.run = run;
function lookup(name) {
    return heuristics.get(name);
}
exports.lookup = lookup;


/***/ }),

/***/ 94:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const debugger_1 = __webpack_require__(2057);
const engine_1 = __webpack_require__(5897);
const SemanticAttr = __webpack_require__(3588);
const SemanticHeuristics = __webpack_require__(7516);
const semantic_heuristic_1 = __webpack_require__(9911);
const SemanticPred = __webpack_require__(5609);
const semantic_processor_1 = __webpack_require__(3308);
const SemanticUtil = __webpack_require__(4795);
SemanticHeuristics.add(new semantic_heuristic_1.SemanticTreeHeuristic('combine_juxtaposition', combineJuxtaposition));
function combineJuxtaposition(root) {
    for (let i = root.childNodes.length - 1, child; (child = root.childNodes[i]); i--) {
        if (!SemanticPred.isImplicitOp(child) || child.nobreaking) {
            continue;
        }
        root.childNodes.splice(i, 1, ...child.childNodes);
        root.contentNodes.splice(i, 0, ...child.contentNodes);
        child.childNodes.concat(child.contentNodes).forEach(function (x) {
            x.parent = root;
        });
        root.addMathmlNodes(child.mathml);
    }
    return root;
}
SemanticHeuristics.add(new semantic_heuristic_1.SemanticTreeHeuristic('propagateSimpleFunction', (node) => {
    if ((node.type === "infixop" ||
        node.type === "fraction") &&
        node.childNodes.every(SemanticPred.isSimpleFunction)) {
        node.role = "composed function";
    }
    return node;
}, (_node) => engine_1.default.getInstance().domain === 'clearspeak'));
SemanticHeuristics.add(new semantic_heuristic_1.SemanticTreeHeuristic('simpleNamedFunction', (node) => {
    const specialFunctions = ['f', 'g', 'h', 'F', 'G', 'H'];
    if (node.role !== "unit" &&
        specialFunctions.indexOf(node.textContent) !== -1) {
        node.role = "simple function";
    }
    return node;
}, (_node) => engine_1.default.getInstance().domain === 'clearspeak'));
SemanticHeuristics.add(new semantic_heuristic_1.SemanticTreeHeuristic('propagateComposedFunction', (node) => {
    if (node.type === "fenced" &&
        node.childNodes[0].role === "composed function") {
        node.role = "composed function";
    }
    return node;
}, (_node) => engine_1.default.getInstance().domain === 'clearspeak'));
SemanticHeuristics.add(new semantic_heuristic_1.SemanticTreeHeuristic('multioperator', (node) => {
    if (node.role !== "unknown" || node.textContent.length <= 1) {
        return;
    }
    const content = [...node.textContent];
    const meaning = content.map(SemanticAttr.lookupMeaning);
    const singleRole = meaning.reduce(function (prev, curr) {
        if (!prev ||
            !curr.role ||
            curr.role === "unknown" ||
            curr.role === prev) {
            return prev;
        }
        if (prev === "unknown") {
            return curr.role;
        }
        return null;
    }, "unknown");
    if (singleRole) {
        node.role = singleRole;
    }
}));
SemanticHeuristics.add(new semantic_heuristic_1.SemanticMultiHeuristic('convert_juxtaposition', (nodes) => {
    let partition = SemanticUtil.partitionNodes(nodes, function (x) {
        return (x.textContent === SemanticAttr.invisibleTimes() &&
            x.type === "operator");
    });
    partition = partition.rel.length
        ? juxtapositionPrePost(partition)
        : partition;
    nodes = partition.comp[0];
    for (let i = 1, c, r; (c = partition.comp[i]), (r = partition.rel[i - 1]); i++) {
        nodes.push(r);
        nodes = nodes.concat(c);
    }
    partition = SemanticUtil.partitionNodes(nodes, function (x) {
        return (x.textContent === SemanticAttr.invisibleTimes() &&
            (x.type === "operator" || x.type === "infixop"));
    });
    if (!partition.rel.length) {
        return nodes;
    }
    return recurseJuxtaposition(partition.comp.shift(), partition.rel, partition.comp);
}));
SemanticHeuristics.add(new semantic_heuristic_1.SemanticTreeHeuristic('simple2prefix', (node) => {
    if (node.textContent.length > 1 &&
        !node.textContent[0].match(/[A-Z]/)) {
        node.role = "prefix function";
    }
    return node;
}, (node) => engine_1.default.getInstance().modality === 'braille' &&
    node.type === "identifier"));
SemanticHeuristics.add(new semantic_heuristic_1.SemanticTreeHeuristic('detect_cycle', (node) => {
    node.type = "matrix";
    node.role = "cycle";
    const row = node.childNodes[0];
    row.type = "row";
    row.role = "cycle";
    row.textContent = '';
    row.contentNodes = [];
    return node;
}, (node) => node.type === "fenced" &&
    node.childNodes[0].type === "infixop" &&
    node.childNodes[0].role === "implicit" &&
    node.childNodes[0].childNodes.every(function (x) {
        return x.type === "number";
    }) &&
    node.childNodes[0].contentNodes.every(function (x) {
        return x.role === "space";
    })));
function juxtapositionPrePost(partition) {
    const rels = [];
    const comps = [];
    let next = partition.comp.shift();
    let rel = null;
    let collect = [];
    while (partition.comp.length) {
        collect = [];
        if (next.length) {
            if (rel) {
                rels.push(rel);
            }
            comps.push(next);
            rel = partition.rel.shift();
            next = partition.comp.shift();
            continue;
        }
        if (rel) {
            collect.push(rel);
        }
        while (!next.length && partition.comp.length) {
            next = partition.comp.shift();
            collect.push(partition.rel.shift());
        }
        rel = convertPrePost(collect, next, comps);
    }
    if (!collect.length && !next.length) {
        collect.push(rel);
        convertPrePost(collect, next, comps);
    }
    else {
        rels.push(rel);
        comps.push(next);
    }
    return { rel: rels, comp: comps };
}
function convertPrePost(collect, next, comps) {
    let rel = null;
    if (!collect.length) {
        return rel;
    }
    const prev = comps[comps.length - 1];
    const prevExists = prev && prev.length;
    const nextExists = next && next.length;
    const processor = semantic_processor_1.default.getInstance();
    if (prevExists && nextExists) {
        if (next[0].type === "infixop" &&
            next[0].role === "implicit") {
            rel = collect.pop();
            prev.push(processor['postfixNode_'](prev.pop(), collect));
            return rel;
        }
        rel = collect.shift();
        const result = processor['prefixNode_'](next.shift(), collect);
        next.unshift(result);
        return rel;
    }
    if (prevExists) {
        prev.push(processor['postfixNode_'](prev.pop(), collect));
        return rel;
    }
    if (nextExists) {
        next.unshift(processor['prefixNode_'](next.shift(), collect));
    }
    return rel;
}
function recurseJuxtaposition(acc, ops, elements) {
    if (!ops.length) {
        return acc;
    }
    const left = acc.pop();
    const op = ops.shift();
    const first = elements.shift();
    if (SemanticPred.isImplicitOp(op)) {
        debugger_1.Debugger.getInstance().output('Juxta Heuristic Case 2');
        const right = (left ? [left, op] : [op]).concat(first);
        return recurseJuxtaposition(acc.concat(right), ops, elements);
    }
    if (!left) {
        debugger_1.Debugger.getInstance().output('Juxta Heuristic Case 3');
        return recurseJuxtaposition([op].concat(first), ops, elements);
    }
    const right = first.shift();
    if (!right) {
        debugger_1.Debugger.getInstance().output('Juxta Heuristic Case 9');
        const newOp = SemanticHeuristics.factory.makeBranchNode("infixop", [left, ops.shift()], [op], op.textContent);
        newOp.role = "implicit";
        SemanticHeuristics.run('combine_juxtaposition', newOp);
        ops.unshift(newOp);
        return recurseJuxtaposition(acc, ops, elements);
    }
    if (SemanticPred.isOperator(left) || SemanticPred.isOperator(right)) {
        debugger_1.Debugger.getInstance().output('Juxta Heuristic Case 4');
        return recurseJuxtaposition(acc.concat([left, op, right]).concat(first), ops, elements);
    }
    let result = null;
    if (SemanticPred.isImplicitOp(left) && SemanticPred.isImplicitOp(right)) {
        debugger_1.Debugger.getInstance().output('Juxta Heuristic Case 5');
        left.contentNodes.push(op);
        left.contentNodes = left.contentNodes.concat(right.contentNodes);
        left.childNodes.push(right);
        left.childNodes = left.childNodes.concat(right.childNodes);
        right.childNodes.forEach((x) => (x.parent = left));
        op.parent = left;
        left.addMathmlNodes(op.mathml);
        left.addMathmlNodes(right.mathml);
        result = left;
    }
    else if (SemanticPred.isImplicitOp(left)) {
        debugger_1.Debugger.getInstance().output('Juxta Heuristic Case 6');
        left.contentNodes.push(op);
        left.childNodes.push(right);
        right.parent = left;
        op.parent = left;
        left.addMathmlNodes(op.mathml);
        left.addMathmlNodes(right.mathml);
        result = left;
    }
    else if (SemanticPred.isImplicitOp(right)) {
        debugger_1.Debugger.getInstance().output('Juxta Heuristic Case 7');
        right.contentNodes.unshift(op);
        right.childNodes.unshift(left);
        left.parent = right;
        op.parent = right;
        right.addMathmlNodes(op.mathml);
        right.addMathmlNodes(left.mathml);
        result = right;
    }
    else {
        debugger_1.Debugger.getInstance().output('Juxta Heuristic Case 8');
        result = SemanticHeuristics.factory.makeBranchNode("infixop", [left, right], [op], op.textContent);
        result.role = "implicit";
    }
    acc.push(result);
    return recurseJuxtaposition(acc.concat(first), ops, elements);
}


/***/ }),

/***/ 7228:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticMathml = void 0;
const DomUtil = __webpack_require__(5740);
const semantic_parser_1 = __webpack_require__(5250);
const SemanticPred = __webpack_require__(5609);
const semantic_processor_1 = __webpack_require__(3308);
const SemanticUtil = __webpack_require__(4795);
class SemanticMathml extends semantic_parser_1.SemanticAbstractParser {
    constructor() {
        super('MathML');
        this.parseMap_ = {
            SEMANTICS: this.semantics_.bind(this),
            MATH: this.rows_.bind(this),
            MROW: this.rows_.bind(this),
            MPADDED: this.rows_.bind(this),
            MSTYLE: this.rows_.bind(this),
            MFRAC: this.fraction_.bind(this),
            MSUB: this.limits_.bind(this),
            MSUP: this.limits_.bind(this),
            MSUBSUP: this.limits_.bind(this),
            MOVER: this.limits_.bind(this),
            MUNDER: this.limits_.bind(this),
            MUNDEROVER: this.limits_.bind(this),
            MROOT: this.root_.bind(this),
            MSQRT: this.sqrt_.bind(this),
            MTABLE: this.table_.bind(this),
            MLABELEDTR: this.tableLabeledRow_.bind(this),
            MTR: this.tableRow_.bind(this),
            MTD: this.tableCell_.bind(this),
            MS: this.text_.bind(this),
            MTEXT: this.text_.bind(this),
            MSPACE: this.space_.bind(this),
            'ANNOTATION-XML': this.text_.bind(this),
            MI: this.identifier_.bind(this),
            MN: this.number_.bind(this),
            MO: this.operator_.bind(this),
            MFENCED: this.fenced_.bind(this),
            MENCLOSE: this.enclosed_.bind(this),
            MMULTISCRIPTS: this.multiscripts_.bind(this),
            ANNOTATION: this.empty_.bind(this),
            NONE: this.empty_.bind(this),
            MACTION: this.action_.bind(this)
        };
        const meaning = {
            type: "identifier",
            role: "numbersetletter",
            font: "double-struck"
        };
        [
            'C',
            'H',
            'N',
            'P',
            'Q',
            'R',
            'Z',
            'ℂ',
            'ℍ',
            'ℕ',
            'ℙ',
            'ℚ',
            'ℝ',
            'ℤ'
        ].forEach(((x) => this.getFactory().defaultMap.add(x, meaning)).bind(this));
    }
    static getAttribute_(node, attr, def) {
        if (!node.hasAttribute(attr)) {
            return def;
        }
        const value = node.getAttribute(attr);
        if (value.match(/^\s*$/)) {
            return null;
        }
        return value;
    }
    parse(mml) {
        semantic_processor_1.default.getInstance().setNodeFactory(this.getFactory());
        const children = DomUtil.toArray(mml.childNodes);
        const tag = DomUtil.tagName(mml);
        const func = this.parseMap_[tag];
        const newNode = (func ? func : this.dummy_.bind(this))(mml, children);
        SemanticUtil.addAttributes(newNode, mml);
        if (['MATH', 'MROW', 'MPADDED', 'MSTYLE', 'SEMANTICS'].indexOf(tag) !== -1) {
            return newNode;
        }
        newNode.mathml.unshift(mml);
        newNode.mathmlTree = mml;
        return newNode;
    }
    semantics_(_node, children) {
        return children.length
            ? this.parse(children[0])
            : this.getFactory().makeEmptyNode();
    }
    rows_(node, children) {
        const semantics = node.getAttribute('semantics');
        if (semantics && semantics.match('bspr_')) {
            return semantic_processor_1.default.proof(node, semantics, this.parseList.bind(this));
        }
        children = SemanticUtil.purgeNodes(children);
        let newNode;
        if (children.length === 1) {
            newNode = this.parse(children[0]);
            if (newNode.type === "empty" && !newNode.mathmlTree) {
                newNode.mathmlTree = node;
            }
        }
        else {
            newNode = semantic_processor_1.default.getInstance().row(this.parseList(children));
        }
        newNode.mathml.unshift(node);
        return newNode;
    }
    fraction_(node, children) {
        if (!children.length) {
            return this.getFactory().makeEmptyNode();
        }
        const upper = this.parse(children[0]);
        const lower = children[1]
            ? this.parse(children[1])
            : this.getFactory().makeEmptyNode();
        const sem = semantic_processor_1.default.getInstance().fractionLikeNode(upper, lower, node.getAttribute('linethickness'), node.getAttribute('bevelled') === 'true');
        return sem;
    }
    limits_(node, children) {
        return semantic_processor_1.default.getInstance().limitNode(DomUtil.tagName(node), this.parseList(children));
    }
    root_(node, children) {
        if (!children[1]) {
            return this.sqrt_(node, children);
        }
        return this.getFactory().makeBranchNode("root", [this.parse(children[1]), this.parse(children[0])], []);
    }
    sqrt_(_node, children) {
        const semNodes = this.parseList(SemanticUtil.purgeNodes(children));
        return this.getFactory().makeBranchNode("sqrt", [semantic_processor_1.default.getInstance().row(semNodes)], []);
    }
    table_(node, children) {
        const semantics = node.getAttribute('semantics');
        if (semantics && semantics.match('bspr_')) {
            return semantic_processor_1.default.proof(node, semantics, this.parseList.bind(this));
        }
        const newNode = this.getFactory().makeBranchNode("table", this.parseList(children), []);
        newNode.mathmlTree = node;
        semantic_processor_1.default.tableToMultiline(newNode);
        return newNode;
    }
    tableRow_(_node, children) {
        const newNode = this.getFactory().makeBranchNode("row", this.parseList(children), []);
        newNode.role = "table";
        return newNode;
    }
    tableLabeledRow_(node, children) {
        if (!children.length) {
            return this.tableRow_(node, children);
        }
        const label = this.parse(children[0]);
        label.role = "label";
        const newNode = this.getFactory().makeBranchNode("row", this.parseList(children.slice(1)), [label]);
        newNode.role = "table";
        return newNode;
    }
    tableCell_(_node, children) {
        const semNodes = this.parseList(SemanticUtil.purgeNodes(children));
        let childNodes;
        if (!semNodes.length) {
            childNodes = [];
        }
        else if (semNodes.length === 1 &&
            SemanticPred.isType(semNodes[0], "empty")) {
            childNodes = semNodes;
        }
        else {
            childNodes = [semantic_processor_1.default.getInstance().row(semNodes)];
        }
        const newNode = this.getFactory().makeBranchNode("cell", childNodes, []);
        newNode.role = "table";
        return newNode;
    }
    space_(node, children) {
        const width = node.getAttribute('width');
        const match = width && width.match(/[a-z]*$/);
        if (!match) {
            return this.empty_(node, children);
        }
        const sizes = {
            cm: 0.4,
            pc: 0.5,
            em: 0.5,
            ex: 1,
            in: 0.15,
            pt: 5,
            mm: 5
        };
        const unit = match[0];
        const measure = parseFloat(width.slice(0, match.index));
        const size = sizes[unit];
        if (!size || isNaN(measure) || measure < size) {
            return this.empty_(node, children);
        }
        const newNode = this.getFactory().makeUnprocessed(node);
        return semantic_processor_1.default.getInstance().text(newNode, DomUtil.tagName(node));
    }
    text_(node, children) {
        const newNode = this.leaf_(node, children);
        if (!node.textContent) {
            return newNode;
        }
        newNode.updateContent(node.textContent, true);
        return semantic_processor_1.default.getInstance().text(newNode, DomUtil.tagName(node));
    }
    identifier_(node, children) {
        const newNode = this.leaf_(node, children);
        return semantic_processor_1.default.getInstance().identifierNode(newNode, semantic_processor_1.default.getInstance().font(node.getAttribute('mathvariant')), node.getAttribute('class'));
    }
    number_(node, children) {
        const newNode = this.leaf_(node, children);
        semantic_processor_1.default.number(newNode);
        return newNode;
    }
    operator_(node, children) {
        const newNode = this.leaf_(node, children);
        semantic_processor_1.default.getInstance().operatorNode(newNode);
        return newNode;
    }
    fenced_(node, children) {
        const semNodes = this.parseList(SemanticUtil.purgeNodes(children));
        const sepValue = SemanticMathml.getAttribute_(node, 'separators', ',');
        const open = SemanticMathml.getAttribute_(node, 'open', '(');
        const close = SemanticMathml.getAttribute_(node, 'close', ')');
        const newNode = semantic_processor_1.default.getInstance().mfenced(open, close, sepValue, semNodes);
        const nodes = semantic_processor_1.default.getInstance().tablesInRow([newNode]);
        return nodes[0];
    }
    enclosed_(node, children) {
        const semNodes = this.parseList(SemanticUtil.purgeNodes(children));
        const newNode = this.getFactory().makeBranchNode("enclose", [semantic_processor_1.default.getInstance().row(semNodes)], []);
        newNode.role =
            node.getAttribute('notation') || "unknown";
        return newNode;
    }
    multiscripts_(_node, children) {
        if (!children.length) {
            return this.getFactory().makeEmptyNode();
        }
        const base = this.parse(children.shift());
        if (!children.length) {
            return base;
        }
        const lsup = [];
        const lsub = [];
        const rsup = [];
        const rsub = [];
        let prescripts = false;
        let scriptcount = 0;
        for (let i = 0, child; (child = children[i]); i++) {
            if (DomUtil.tagName(child) === 'MPRESCRIPTS') {
                prescripts = true;
                scriptcount = 0;
                continue;
            }
            prescripts
                ? scriptcount & 1
                    ? lsup.push(child)
                    : lsub.push(child)
                : scriptcount & 1
                    ? rsup.push(child)
                    : rsub.push(child);
            scriptcount++;
        }
        if (!SemanticUtil.purgeNodes(lsup).length &&
            !SemanticUtil.purgeNodes(lsub).length) {
            return semantic_processor_1.default.getInstance().pseudoTensor(base, this.parseList(rsub), this.parseList(rsup));
        }
        return semantic_processor_1.default.getInstance().tensor(base, this.parseList(lsub), this.parseList(lsup), this.parseList(rsub), this.parseList(rsup));
    }
    empty_(_node, _children) {
        return this.getFactory().makeEmptyNode();
    }
    action_(node, children) {
        return children.length > 1
            ? this.parse(children[1])
            : this.getFactory().makeUnprocessed(node);
    }
    dummy_(node, _children) {
        const unknown = this.getFactory().makeUnprocessed(node);
        unknown.role = node.tagName;
        unknown.textContent = node.textContent;
        return unknown;
    }
    leaf_(mml, children) {
        if (children.length === 1 &&
            children[0].nodeType !== DomUtil.NodeType.TEXT_NODE) {
            const node = this.getFactory().makeUnprocessed(mml);
            node.role = children[0].tagName;
            SemanticUtil.addAttributes(node, children[0]);
            return node;
        }
        return this.getFactory().makeLeafNode(mml.textContent, semantic_processor_1.default.getInstance().font(mml.getAttribute('mathvariant')));
    }
}
exports.SemanticMathml = SemanticMathml;


/***/ }),

/***/ 5952:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticNode = void 0;
const DomUtil = __webpack_require__(5740);
const semantic_attr_1 = __webpack_require__(3588);
const SemanticUtil = __webpack_require__(4795);
class SemanticNode {
    constructor(id) {
        this.id = id;
        this.mathml = [];
        this.parent = null;
        this.type = "unknown";
        this.role = "unknown";
        this.font = "unknown";
        this.embellished = null;
        this.fencePointer = '';
        this.childNodes = [];
        this.textContent = '';
        this.mathmlTree = null;
        this.contentNodes = [];
        this.annotation = {};
        this.attributes = {};
        this.nobreaking = false;
    }
    static fromXml(xml) {
        const id = parseInt(xml.getAttribute('id'), 10);
        const node = new SemanticNode(id);
        node.type = xml.tagName;
        SemanticNode.setAttribute(node, xml, 'role');
        SemanticNode.setAttribute(node, xml, 'font');
        SemanticNode.setAttribute(node, xml, 'embellished');
        SemanticNode.setAttribute(node, xml, 'fencepointer', 'fencePointer');
        if (xml.getAttribute('annotation')) {
            node.parseAnnotation(xml.getAttribute('annotation'));
        }
        SemanticUtil.addAttributes(node, xml);
        SemanticNode.processChildren(node, xml);
        return node;
    }
    static setAttribute(node, xml, attribute, opt_name) {
        opt_name = opt_name || attribute;
        const value = xml.getAttribute(attribute);
        if (value) {
            node[opt_name] = value;
        }
    }
    static processChildren(node, xml) {
        for (const child of DomUtil.toArray(xml.childNodes)) {
            if (child.nodeType === DomUtil.NodeType.TEXT_NODE) {
                node.textContent = child.textContent;
                continue;
            }
            const children = DomUtil.toArray(child.childNodes).map(SemanticNode.fromXml);
            children.forEach((x) => (x.parent = node));
            if (DomUtil.tagName(child) === 'CONTENT') {
                node.contentNodes = children;
            }
            else {
                node.childNodes = children;
            }
        }
    }
    querySelectorAll(pred) {
        let result = [];
        for (let i = 0, child; (child = this.childNodes[i]); i++) {
            result = result.concat(child.querySelectorAll(pred));
        }
        for (let i = 0, content; (content = this.contentNodes[i]); i++) {
            result = result.concat(content.querySelectorAll(pred));
        }
        if (pred(this)) {
            result.unshift(this);
        }
        return result;
    }
    xml(xml, brief) {
        const xmlNodeList = function (tag, nodes) {
            const xmlNodes = nodes.map(function (x) {
                return x.xml(xml, brief);
            });
            const tagNode = xml.createElementNS('', tag);
            for (let i = 0, child; (child = xmlNodes[i]); i++) {
                tagNode.appendChild(child);
            }
            return tagNode;
        };
        const node = xml.createElementNS('', this.type);
        if (!brief) {
            this.xmlAttributes(node);
        }
        node.textContent = this.textContent;
        if (this.contentNodes.length > 0) {
            node.appendChild(xmlNodeList("content", this.contentNodes));
        }
        if (this.childNodes.length > 0) {
            node.appendChild(xmlNodeList("children", this.childNodes));
        }
        return node;
    }
    toString(brief = false) {
        const xml = DomUtil.parseInput('<snode/>');
        return DomUtil.serializeXml(this.xml(xml, brief));
    }
    allAttributes() {
        const attributes = [];
        attributes.push(["role", this.role]);
        if (this.font !== "unknown") {
            attributes.push(["font", this.font]);
        }
        if (Object.keys(this.annotation).length) {
            attributes.push(["annotation", this.xmlAnnotation()]);
        }
        if (this.embellished) {
            attributes.push(["embellished", this.embellished]);
        }
        if (this.fencePointer) {
            attributes.push(["fencepointer", this.fencePointer]);
        }
        attributes.push(["id", this.id.toString()]);
        return attributes;
    }
    xmlAnnotation() {
        const result = [];
        for (const key in this.annotation) {
            this.annotation[key].forEach(function (mean) {
                result.push(key + ':' + mean);
            });
        }
        return result.join(';');
    }
    toJson() {
        const json = {};
        json["type"] = this.type;
        const attributes = this.allAttributes();
        for (let i = 0, attr; (attr = attributes[i]); i++) {
            json[attr[0]] = attr[1].toString();
        }
        if (this.textContent) {
            json["$t"] = this.textContent;
        }
        if (this.childNodes.length) {
            json["children"] = this.childNodes.map(function (child) {
                return child.toJson();
            });
        }
        if (this.contentNodes.length) {
            json["content"] = this.contentNodes.map(function (child) {
                return child.toJson();
            });
        }
        return json;
    }
    updateContent(content, text) {
        const newContent = text
            ? content
                .replace(/^[ \f\n\r\t\v\u200b]*/, '')
                .replace(/[ \f\n\r\t\v\u200b]*$/, '')
            : content.trim();
        content = content && !newContent ? content : newContent;
        if (this.textContent === content) {
            return;
        }
        const meaning = (0, semantic_attr_1.lookupMeaning)(content);
        this.textContent = content;
        this.role = meaning.role;
        this.type = meaning.type;
        this.font = meaning.font;
    }
    addMathmlNodes(mmlNodes) {
        for (let i = 0, mml; (mml = mmlNodes[i]); i++) {
            if (this.mathml.indexOf(mml) === -1) {
                this.mathml.push(mml);
            }
        }
    }
    appendChild(child) {
        this.childNodes.push(child);
        this.addMathmlNodes(child.mathml);
        child.parent = this;
    }
    replaceChild(oldNode, newNode) {
        const index = this.childNodes.indexOf(oldNode);
        if (index === -1) {
            return;
        }
        oldNode.parent = null;
        newNode.parent = this;
        this.childNodes[index] = newNode;
        const removeMathml = oldNode.mathml.filter(function (x) {
            return newNode.mathml.indexOf(x) === -1;
        });
        const addMathml = newNode.mathml.filter(function (x) {
            return oldNode.mathml.indexOf(x) === -1;
        });
        this.removeMathmlNodes(removeMathml);
        this.addMathmlNodes(addMathml);
    }
    appendContentNode(node) {
        if (node) {
            this.contentNodes.push(node);
            this.addMathmlNodes(node.mathml);
            node.parent = this;
        }
    }
    removeContentNode(node) {
        if (node) {
            const index = this.contentNodes.indexOf(node);
            if (index !== -1) {
                this.contentNodes.slice(index, 1);
            }
        }
    }
    equals(node) {
        if (!node) {
            return false;
        }
        if (this.type !== node.type ||
            this.role !== node.role ||
            this.textContent !== node.textContent ||
            this.childNodes.length !== node.childNodes.length ||
            this.contentNodes.length !== node.contentNodes.length) {
            return false;
        }
        for (let i = 0, node1, node2; (node1 = this.childNodes[i]), (node2 = node.childNodes[i]); i++) {
            if (!node1.equals(node2)) {
                return false;
            }
        }
        for (let i = 0, node1, node2; (node1 = this.contentNodes[i]), (node2 = node.contentNodes[i]); i++) {
            if (!node1.equals(node2)) {
                return false;
            }
        }
        return true;
    }
    displayTree() {
        console.info(this.displayTree_(0));
    }
    addAnnotation(domain, annotation) {
        if (annotation) {
            this.addAnnotation_(domain, annotation);
        }
    }
    getAnnotation(domain) {
        const content = this.annotation[domain];
        return content ? content : [];
    }
    hasAnnotation(domain, annotation) {
        const content = this.annotation[domain];
        if (!content) {
            return false;
        }
        return content.indexOf(annotation) !== -1;
    }
    parseAnnotation(stateStr) {
        const annotations = stateStr.split(';');
        for (let i = 0, l = annotations.length; i < l; i++) {
            const annotation = annotations[i].split(':');
            this.addAnnotation(annotation[0], annotation[1]);
        }
    }
    meaning() {
        return { type: this.type, role: this.role, font: this.font };
    }
    xmlAttributes(node) {
        const attributes = this.allAttributes();
        for (let i = 0, attr; (attr = attributes[i]); i++) {
            node.setAttribute(attr[0], attr[1]);
        }
        this.addExternalAttributes(node);
    }
    addExternalAttributes(node) {
        for (const attr in this.attributes) {
            node.setAttribute(attr, this.attributes[attr]);
        }
    }
    removeMathmlNodes(mmlNodes) {
        const mmlList = this.mathml;
        for (let i = 0, mml; (mml = mmlNodes[i]); i++) {
            const index = mmlList.indexOf(mml);
            if (index !== -1) {
                mmlList.splice(index, 1);
            }
        }
        this.mathml = mmlList;
    }
    displayTree_(depth) {
        depth++;
        const depthString = Array(depth).join('  ');
        let result = '';
        result += '\n' + depthString + this.toString();
        result += '\n' + depthString + 'MathmlTree:';
        result += '\n' + depthString + this.mathmlTreeString();
        result += '\n' + depthString + 'MathML:';
        for (let i = 0, mml; (mml = this.mathml[i]); i++) {
            result += '\n' + depthString + mml.toString();
        }
        result += '\n' + depthString + 'Begin Content';
        this.contentNodes.forEach(function (x) {
            result += x.displayTree_(depth);
        });
        result += '\n' + depthString + 'End Content';
        result += '\n' + depthString + 'Begin Children';
        this.childNodes.forEach(function (x) {
            result += x.displayTree_(depth);
        });
        result += '\n' + depthString + 'End Children';
        return result;
    }
    mathmlTreeString() {
        return this.mathmlTree ? this.mathmlTree.toString() : 'EMPTY';
    }
    addAnnotation_(domain, annotation) {
        const content = this.annotation[domain];
        if (content) {
            content.push(annotation);
        }
        else {
            this.annotation[domain] = [annotation];
        }
    }
}
exports.SemanticNode = SemanticNode;


/***/ }),

/***/ 6537:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticNodeFactory = void 0;
const semantic_default_1 = __webpack_require__(8158);
const semantic_default_2 = __webpack_require__(8158);
const semantic_node_1 = __webpack_require__(5952);
class SemanticNodeFactory {
    constructor() {
        this.leafMap = new semantic_default_2.SemanticNodeCollator();
        this.defaultMap = new semantic_default_1.SemanticDefault();
        this.idCounter_ = -1;
    }
    makeNode(id) {
        return this.createNode_(id);
    }
    makeUnprocessed(mml) {
        const node = this.createNode_();
        node.mathml = [mml];
        node.mathmlTree = mml;
        return node;
    }
    makeEmptyNode() {
        const node = this.createNode_();
        node.type = "empty";
        return node;
    }
    makeContentNode(content) {
        const node = this.createNode_();
        node.updateContent(content);
        return node;
    }
    makeMultipleContentNodes(num, content) {
        const nodes = [];
        for (let i = 0; i < num; i++) {
            nodes.push(this.makeContentNode(content));
        }
        return nodes;
    }
    makeLeafNode(content, font) {
        if (!content) {
            return this.makeEmptyNode();
        }
        const node = this.makeContentNode(content);
        node.font = font || node.font;
        const meaning = this.defaultMap.retrieveNode(node);
        if (meaning) {
            node.type = meaning.type;
            node.role = meaning.role;
            node.font = meaning.font;
        }
        this.leafMap.addNode(node);
        return node;
    }
    makeBranchNode(type, children, contentNodes, opt_content) {
        const node = this.createNode_();
        if (opt_content) {
            node.updateContent(opt_content);
        }
        node.type = type;
        node.childNodes = children;
        node.contentNodes = contentNodes;
        children.concat(contentNodes).forEach(function (x) {
            x.parent = node;
            node.addMathmlNodes(x.mathml);
        });
        return node;
    }
    createNode_(id) {
        if (typeof id !== 'undefined') {
            this.idCounter_ = Math.max(this.idCounter_, id);
        }
        else {
            id = ++this.idCounter_;
        }
        return new semantic_node_1.SemanticNode(id);
    }
}
exports.SemanticNodeFactory = SemanticNodeFactory;


/***/ }),

/***/ 3882:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticComparator = exports.reduce = exports.sort = exports.apply = exports.add = void 0;
const comparators = [];
function add(comparator) {
    comparators.push(comparator);
}
exports.add = add;
function apply(meaning1, meaning2) {
    for (let i = 0, comparator; (comparator = comparators[i]); i++) {
        const result = comparator.compare(meaning1, meaning2);
        if (result !== 0) {
            return result;
        }
    }
    return 0;
}
exports.apply = apply;
function sort(meanings) {
    meanings.sort(apply);
}
exports.sort = sort;
function reduce(meanings) {
    if (meanings.length <= 1) {
        return meanings;
    }
    const copy = meanings.slice();
    sort(copy);
    const result = [];
    let last;
    do {
        last = copy.pop();
        result.push(last);
    } while (last && copy.length && apply(copy[copy.length - 1], last) === 0);
    return result;
}
exports.reduce = reduce;
class SemanticComparator {
    constructor(comparator, type = null) {
        this.comparator = comparator;
        this.type = type;
        add(this);
    }
    compare(meaning1, meaning2) {
        return this.type &&
            this.type === meaning1.type &&
            this.type === meaning2.type
            ? this.comparator(meaning1, meaning2)
            : 0;
    }
}
exports.SemanticComparator = SemanticComparator;
function simpleFunction(meaning1, meaning2) {
    if (meaning1.role === "simple function") {
        return 1;
    }
    if (meaning2.role === "simple function") {
        return -1;
    }
    return 0;
}
new SemanticComparator(simpleFunction, "identifier");


/***/ }),

/***/ 5250:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticAbstractParser = void 0;
const semantic_node_factory_1 = __webpack_require__(6537);
class SemanticAbstractParser {
    constructor(type) {
        this.type = type;
        this.factory_ = new semantic_node_factory_1.SemanticNodeFactory();
    }
    getFactory() {
        return this.factory_;
    }
    setFactory(factory) {
        this.factory_ = factory;
    }
    getType() {
        return this.type;
    }
    parseList(list) {
        const result = [];
        for (let i = 0, element; (element = list[i]); i++) {
            result.push(this.parse(element));
        }
        return result;
    }
}
exports.SemanticAbstractParser = SemanticAbstractParser;


/***/ }),

/***/ 5609:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isMembership = exports.elligibleRightNeutral = exports.elligibleLeftNeutral = exports.compareNeutralFences = exports.isNeutralFence = exports.isImplicitOp = exports.isImplicit = exports.isPureUnit = exports.isUnitCounter = exports.isNumber = exports.isSingletonSetContent = exports.scriptedElement_ = exports.illegalSingleton_ = exports.isSetNode = exports.isRightBrace = exports.isLeftBrace = exports.isSimpleFunction = exports.singlePunctAtPosition = exports.isSimpleFunctionHead = exports.isLimitBase = exports.isBinomial = exports.lineIsLabelled = exports.tableIsMultiline = exports.tableIsCases = exports.isFencedElement = exports.tableIsMatrixOrVector = exports.isTableOrMultiline = exports.isElligibleEmbellishedFence = exports.isFence = exports.isPunctuation = exports.isRelation = exports.isOperator = exports.isEmbellished = exports.isGeneralFunctionBoundary = exports.isIntegralDxBoundarySingle = exports.isIntegralDxBoundary = exports.isBigOpBoundary = exports.isPrefixFunctionBoundary = exports.isSimpleFunctionScope = exports.isAccent = exports.isRole = exports.embellishedType = exports.isType = void 0;
const SemanticAttr = __webpack_require__(3588);
const semantic_util_1 = __webpack_require__(4795);
function isType(node, attr) {
    return node.type === attr;
}
exports.isType = isType;
function embellishedType(node, attr) {
    return node.embellished === attr;
}
exports.embellishedType = embellishedType;
function isRole(node, attr) {
    return node.role === attr;
}
exports.isRole = isRole;
function isAccent(node) {
    const inftyReg = new RegExp('∞|᪲');
    return (isType(node, "fence") ||
        isType(node, "punctuation") ||
        (isType(node, "operator") &&
            !node.textContent.match(inftyReg)) ||
        isType(node, "relation") ||
        (isType(node, "identifier") &&
            isRole(node, "unknown") &&
            !node.textContent.match(SemanticAttr.allLettersRegExp) &&
            !node.textContent.match(inftyReg)));
}
exports.isAccent = isAccent;
function isSimpleFunctionScope(node) {
    const children = node.childNodes;
    if (children.length === 0) {
        return true;
    }
    if (children.length > 1) {
        return false;
    }
    const child = children[0];
    if (child.type === "infixop") {
        if (child.role !== "implicit") {
            return false;
        }
        if (child.childNodes.some((x) => isType(x, "infixop"))) {
            return false;
        }
    }
    return true;
}
exports.isSimpleFunctionScope = isSimpleFunctionScope;
function isPrefixFunctionBoundary(node) {
    return ((isOperator(node) && !isRole(node, "division")) ||
        isType(node, "appl") ||
        isGeneralFunctionBoundary(node));
}
exports.isPrefixFunctionBoundary = isPrefixFunctionBoundary;
function isBigOpBoundary(node) {
    return isOperator(node) || isGeneralFunctionBoundary(node);
}
exports.isBigOpBoundary = isBigOpBoundary;
function isIntegralDxBoundary(firstNode, secondNode) {
    return (!!secondNode &&
        isType(secondNode, "identifier") &&
        SemanticAttr.lookupSecondary('d', firstNode.textContent));
}
exports.isIntegralDxBoundary = isIntegralDxBoundary;
function isIntegralDxBoundarySingle(node) {
    if (isType(node, "identifier")) {
        const firstChar = node.textContent[0];
        return (firstChar &&
            node.textContent[1] &&
            SemanticAttr.lookupSecondary('d', firstChar));
    }
    return false;
}
exports.isIntegralDxBoundarySingle = isIntegralDxBoundarySingle;
function isGeneralFunctionBoundary(node) {
    return isRelation(node) || isPunctuation(node);
}
exports.isGeneralFunctionBoundary = isGeneralFunctionBoundary;
function isEmbellished(node) {
    if (node.embellished) {
        return node.embellished;
    }
    if (SemanticAttr.isEmbellishedType(node.type)) {
        return node.type;
    }
    return null;
}
exports.isEmbellished = isEmbellished;
function isOperator(node) {
    return (isType(node, "operator") ||
        embellishedType(node, "operator"));
}
exports.isOperator = isOperator;
function isRelation(node) {
    return (isType(node, "relation") ||
        embellishedType(node, "relation"));
}
exports.isRelation = isRelation;
function isPunctuation(node) {
    return (isType(node, "punctuation") ||
        embellishedType(node, "punctuation"));
}
exports.isPunctuation = isPunctuation;
function isFence(node) {
    return (isType(node, "fence") ||
        embellishedType(node, "fence"));
}
exports.isFence = isFence;
function isElligibleEmbellishedFence(node) {
    if (!node || !isFence(node)) {
        return false;
    }
    if (!node.embellished) {
        return true;
    }
    return recurseBaseNode(node);
}
exports.isElligibleEmbellishedFence = isElligibleEmbellishedFence;
function bothSide(node) {
    return (isType(node, "tensor") &&
        (!isType(node.childNodes[1], "empty") ||
            !isType(node.childNodes[2], "empty")) &&
        (!isType(node.childNodes[3], "empty") ||
            !isType(node.childNodes[4], "empty")));
}
function recurseBaseNode(node) {
    if (!node.embellished) {
        return true;
    }
    if (bothSide(node)) {
        return false;
    }
    if (isRole(node, "close") && isType(node, "tensor")) {
        return false;
    }
    if (isRole(node, "open") &&
        (isType(node, "subscript") ||
            isType(node, "superscript"))) {
        return false;
    }
    return recurseBaseNode(node.childNodes[0]);
}
function isTableOrMultiline(node) {
    return (!!node &&
        (isType(node, "table") || isType(node, "multiline")));
}
exports.isTableOrMultiline = isTableOrMultiline;
function tableIsMatrixOrVector(node) {
    return (!!node && isFencedElement(node) && isTableOrMultiline(node.childNodes[0]));
}
exports.tableIsMatrixOrVector = tableIsMatrixOrVector;
function isFencedElement(node) {
    return (!!node &&
        isType(node, "fenced") &&
        (isRole(node, "leftright") || isNeutralFence(node)) &&
        node.childNodes.length === 1);
}
exports.isFencedElement = isFencedElement;
function tableIsCases(_table, prevNodes) {
    return (prevNodes.length > 0 &&
        isRole(prevNodes[prevNodes.length - 1], "openfence"));
}
exports.tableIsCases = tableIsCases;
function tableIsMultiline(table) {
    return table.childNodes.every(function (row) {
        const length = row.childNodes.length;
        return length <= 1;
    });
}
exports.tableIsMultiline = tableIsMultiline;
function lineIsLabelled(line) {
    return (isType(line, "line") &&
        line.contentNodes.length &&
        isRole(line.contentNodes[0], "label"));
}
exports.lineIsLabelled = lineIsLabelled;
function isBinomial(table) {
    return table.childNodes.length === 2;
}
exports.isBinomial = isBinomial;
function isLimitBase(node) {
    return (isType(node, "largeop") ||
        isType(node, "limboth") ||
        isType(node, "limlower") ||
        isType(node, "limupper") ||
        (isType(node, "function") &&
            isRole(node, "limit function")) ||
        ((isType(node, "overscore") ||
            isType(node, "underscore")) &&
            isLimitBase(node.childNodes[0])));
}
exports.isLimitBase = isLimitBase;
function isSimpleFunctionHead(node) {
    return (node.type === "identifier" ||
        node.role === "latinletter" ||
        node.role === "greekletter" ||
        node.role === "otherletter");
}
exports.isSimpleFunctionHead = isSimpleFunctionHead;
function singlePunctAtPosition(nodes, puncts, position) {
    return (puncts.length === 1 &&
        (nodes[position].type === "punctuation" ||
            nodes[position].embellished === "punctuation") &&
        nodes[position] === puncts[0]);
}
exports.singlePunctAtPosition = singlePunctAtPosition;
function isSimpleFunction(node) {
    return (isType(node, "identifier") &&
        isRole(node, "simple function"));
}
exports.isSimpleFunction = isSimpleFunction;
function isLeftBrace(node) {
    const leftBrace = ['{', '﹛', '｛'];
    return !!node && leftBrace.indexOf(node.textContent) !== -1;
}
exports.isLeftBrace = isLeftBrace;
function isRightBrace(node) {
    const rightBrace = ['}', '﹜', '｝'];
    return !!node && rightBrace.indexOf(node.textContent) !== -1;
}
exports.isRightBrace = isRightBrace;
function isSetNode(node) {
    return (isLeftBrace(node.contentNodes[0]) && isRightBrace(node.contentNodes[1]));
}
exports.isSetNode = isSetNode;
exports.illegalSingleton_ = [
    "punctuation",
    "punctuated",
    "relseq",
    "multirel",
    "table",
    "multiline",
    "cases",
    "inference"
];
exports.scriptedElement_ = [
    "limupper",
    "limlower",
    "limboth",
    "subscript",
    "superscript",
    "underscore",
    "overscore",
    "tensor"
];
function isSingletonSetContent(node) {
    const type = node.type;
    if (exports.illegalSingleton_.indexOf(type) !== -1 ||
        (type === "infixop" && node.role !== "implicit")) {
        return false;
    }
    if (type === "fenced") {
        return node.role === "leftright"
            ? isSingletonSetContent(node.childNodes[0])
            : true;
    }
    if (exports.scriptedElement_.indexOf(type) !== -1) {
        return isSingletonSetContent(node.childNodes[0]);
    }
    return true;
}
exports.isSingletonSetContent = isSingletonSetContent;
function isNumber(node) {
    return (node.type === "number" &&
        (node.role === "integer" || node.role === "float"));
}
exports.isNumber = isNumber;
function isUnitCounter(node) {
    return (isNumber(node) ||
        node.role === "vulgar" ||
        node.role === "mixed");
}
exports.isUnitCounter = isUnitCounter;
function isPureUnit(node) {
    const children = node.childNodes;
    return (node.role === "unit" &&
        (!children.length || children[0].role === "unit"));
}
exports.isPureUnit = isPureUnit;
function isImplicit(node) {
    return (node.role === "implicit" ||
        (node.role === "unit" &&
            !!node.contentNodes.length &&
            node.contentNodes[0].textContent === SemanticAttr.invisibleTimes()));
}
exports.isImplicit = isImplicit;
function isImplicitOp(node) {
    return (node.type === "infixop" && node.role === "implicit");
}
exports.isImplicitOp = isImplicitOp;
function isNeutralFence(fence) {
    return (fence.role === "neutral" || fence.role === "metric");
}
exports.isNeutralFence = isNeutralFence;
function compareNeutralFences(fence1, fence2) {
    return (isNeutralFence(fence1) &&
        isNeutralFence(fence2) &&
        (0, semantic_util_1.getEmbellishedInner)(fence1).textContent ===
            (0, semantic_util_1.getEmbellishedInner)(fence2).textContent);
}
exports.compareNeutralFences = compareNeutralFences;
function elligibleLeftNeutral(fence) {
    if (!isNeutralFence(fence)) {
        return false;
    }
    if (!fence.embellished) {
        return true;
    }
    if (fence.type === "superscript" ||
        fence.type === "subscript") {
        return false;
    }
    if (fence.type === "tensor" &&
        (fence.childNodes[3].type !== "empty" ||
            fence.childNodes[4].type !== "empty")) {
        return false;
    }
    return true;
}
exports.elligibleLeftNeutral = elligibleLeftNeutral;
function elligibleRightNeutral(fence) {
    if (!isNeutralFence(fence)) {
        return false;
    }
    if (!fence.embellished) {
        return true;
    }
    if (fence.type === "tensor" &&
        (fence.childNodes[1].type !== "empty" ||
            fence.childNodes[2].type !== "empty")) {
        return false;
    }
    return true;
}
exports.elligibleRightNeutral = elligibleRightNeutral;
function isMembership(element) {
    return [
        "element",
        "nonelement",
        "reelement",
        "renonelement"
    ].includes(element.role);
}
exports.isMembership = isMembership;


/***/ }),

/***/ 3308:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const DomUtil = __webpack_require__(5740);
const SemanticAttr = __webpack_require__(3588);
const SemanticHeuristics = __webpack_require__(7516);
const semantic_node_factory_1 = __webpack_require__(6537);
const SemanticPred = __webpack_require__(5609);
const SemanticUtil = __webpack_require__(4795);
class SemanticProcessor {
    constructor() {
        this.funcAppls = {};
        this.factory_ = new semantic_node_factory_1.SemanticNodeFactory();
        SemanticHeuristics.updateFactory(this.factory_);
    }
    static getInstance() {
        SemanticProcessor.instance =
            SemanticProcessor.instance || new SemanticProcessor();
        return SemanticProcessor.instance;
    }
    static tableToMultiline(table) {
        if (!SemanticPred.tableIsMultiline(table)) {
            SemanticProcessor.classifyTable(table);
            return;
        }
        table.type = "multiline";
        for (let i = 0, row; (row = table.childNodes[i]); i++) {
            SemanticProcessor.rowToLine_(row, "multiline");
        }
        if (table.childNodes.length === 1 &&
            !SemanticPred.lineIsLabelled(table.childNodes[0]) &&
            SemanticPred.isFencedElement(table.childNodes[0].childNodes[0])) {
            SemanticProcessor.tableToMatrixOrVector_(SemanticProcessor.rewriteFencedLine_(table));
        }
        SemanticProcessor.binomialForm_(table);
        SemanticProcessor.classifyMultiline(table);
    }
    static number(node) {
        if (node.type === "unknown" ||
            node.type === "identifier") {
            node.type = "number";
        }
        SemanticProcessor.numberRole_(node);
        SemanticProcessor.exprFont_(node);
    }
    static classifyMultiline(multiline) {
        let index = 0;
        const length = multiline.childNodes.length;
        let line;
        while (index < length &&
            (!(line = multiline.childNodes[index]) || !line.childNodes.length)) {
            index++;
        }
        if (index >= length) {
            return;
        }
        const firstRole = line.childNodes[0].role;
        if (firstRole !== "unknown" &&
            multiline.childNodes.every(function (x) {
                const cell = x.childNodes[0];
                return (!cell ||
                    (cell.role === firstRole &&
                        (SemanticPred.isType(cell, "relation") ||
                            SemanticPred.isType(cell, "relseq"))));
            })) {
            multiline.role = firstRole;
        }
    }
    static classifyTable(table) {
        const columns = SemanticProcessor.computeColumns_(table);
        SemanticProcessor.classifyByColumns_(table, columns, "equality") ||
            SemanticProcessor.classifyByColumns_(table, columns, "inequality", ["equality"]) ||
            SemanticProcessor.classifyByColumns_(table, columns, "arrow") ||
            SemanticProcessor.detectCaleyTable(table);
    }
    static detectCaleyTable(table) {
        if (!table.mathmlTree) {
            return false;
        }
        const tree = table.mathmlTree;
        const cl = tree.getAttribute('columnlines');
        const rl = tree.getAttribute('rowlines');
        if (!cl || !rl) {
            return false;
        }
        if (SemanticProcessor.cayleySpacing(cl) &&
            SemanticProcessor.cayleySpacing(rl)) {
            table.role = "cayley";
            return true;
        }
        return false;
    }
    static cayleySpacing(lines) {
        const list = lines.split(' ');
        return ((list[0] === 'solid' || list[0] === 'dashed') &&
            list.slice(1).every((x) => x === 'none'));
    }
    static proof(node, semantics, parse) {
        const attrs = SemanticProcessor.separateSemantics(semantics);
        return SemanticProcessor.getInstance().proof(node, attrs, parse);
    }
    static findSemantics(node, attr, opt_value) {
        const value = opt_value == null ? null : opt_value;
        const semantics = SemanticProcessor.getSemantics(node);
        if (!semantics) {
            return false;
        }
        if (!semantics[attr]) {
            return false;
        }
        return value == null ? true : semantics[attr] === value;
    }
    static getSemantics(node) {
        const semantics = node.getAttribute('semantics');
        if (!semantics) {
            return null;
        }
        return SemanticProcessor.separateSemantics(semantics);
    }
    static removePrefix(name) {
        const [, ...rest] = name.split('_');
        return rest.join('_');
    }
    static separateSemantics(attr) {
        const result = {};
        attr.split(';').forEach(function (x) {
            const [name, value] = x.split(':');
            result[SemanticProcessor.removePrefix(name)] = value;
        });
        return result;
    }
    static matchSpaces_(nodes, ops) {
        for (let i = 0, op; (op = ops[i]); i++) {
            const node = nodes[i];
            const mt1 = node.mathmlTree;
            const mt2 = nodes[i + 1].mathmlTree;
            if (!mt1 || !mt2) {
                continue;
            }
            const sibling = mt1.nextSibling;
            if (!sibling || sibling === mt2) {
                continue;
            }
            const spacer = SemanticProcessor.getSpacer_(sibling);
            if (spacer) {
                op.mathml.push(spacer);
                op.mathmlTree = spacer;
                op.role = "space";
            }
        }
    }
    static getSpacer_(node) {
        if (DomUtil.tagName(node) === 'MSPACE') {
            return node;
        }
        while (SemanticUtil.hasEmptyTag(node) && node.childNodes.length === 1) {
            node = node.childNodes[0];
            if (DomUtil.tagName(node) === 'MSPACE') {
                return node;
            }
        }
        return null;
    }
    static fenceToPunct_(fence) {
        const newRole = SemanticProcessor.FENCE_TO_PUNCT_[fence.role];
        if (!newRole) {
            return;
        }
        while (fence.embellished) {
            fence.embellished = "punctuation";
            if (!(SemanticPred.isRole(fence, "subsup") ||
                SemanticPred.isRole(fence, "underover"))) {
                fence.role = newRole;
            }
            fence = fence.childNodes[0];
        }
        fence.type = "punctuation";
        fence.role = newRole;
    }
    static classifyFunction_(funcNode, restNodes) {
        if (funcNode.type === "appl" ||
            funcNode.type === "bigop" ||
            funcNode.type === "integral") {
            return '';
        }
        if (restNodes[0] &&
            restNodes[0].textContent === SemanticAttr.functionApplication()) {
            SemanticProcessor.getInstance().funcAppls[funcNode.id] =
                restNodes.shift();
            let role = "simple function";
            SemanticHeuristics.run('simple2prefix', funcNode);
            if (funcNode.role === "prefix function" ||
                funcNode.role === "limit function") {
                role = funcNode.role;
            }
            SemanticProcessor.propagateFunctionRole_(funcNode, role);
            return 'prefix';
        }
        const kind = SemanticProcessor.CLASSIFY_FUNCTION_[funcNode.role];
        return kind
            ? kind
            : SemanticPred.isSimpleFunctionHead(funcNode)
                ? 'simple'
                : '';
    }
    static propagateFunctionRole_(funcNode, tag) {
        if (funcNode) {
            if (funcNode.type === "infixop") {
                return;
            }
            if (!(SemanticPred.isRole(funcNode, "subsup") ||
                SemanticPred.isRole(funcNode, "underover"))) {
                funcNode.role = tag;
            }
            SemanticProcessor.propagateFunctionRole_(funcNode.childNodes[0], tag);
        }
    }
    static getFunctionOp_(tree, pred) {
        if (pred(tree)) {
            return tree;
        }
        for (let i = 0, child; (child = tree.childNodes[i]); i++) {
            const op = SemanticProcessor.getFunctionOp_(child, pred);
            if (op) {
                return op;
            }
        }
        return null;
    }
    static tableToMatrixOrVector_(node) {
        const matrix = node.childNodes[0];
        SemanticPred.isType(matrix, "multiline")
            ? SemanticProcessor.tableToVector_(node)
            : SemanticProcessor.tableToMatrix_(node);
        node.contentNodes.forEach(matrix.appendContentNode.bind(matrix));
        for (let i = 0, row; (row = matrix.childNodes[i]); i++) {
            SemanticProcessor.assignRoleToRow_(row, SemanticProcessor.getComponentRoles_(matrix));
        }
        matrix.parent = null;
        return matrix;
    }
    static tableToVector_(node) {
        const vector = node.childNodes[0];
        vector.type = "vector";
        if (vector.childNodes.length === 1) {
            SemanticProcessor.tableToSquare_(node);
            return;
        }
        SemanticProcessor.binomialForm_(vector);
    }
    static binomialForm_(node) {
        if (SemanticPred.isBinomial(node)) {
            node.role = "binomial";
            node.childNodes[0].role = "binomial";
            node.childNodes[1].role = "binomial";
        }
    }
    static tableToMatrix_(node) {
        const matrix = node.childNodes[0];
        matrix.type = "matrix";
        if (matrix.childNodes &&
            matrix.childNodes.length > 0 &&
            matrix.childNodes[0].childNodes &&
            matrix.childNodes.length === matrix.childNodes[0].childNodes.length) {
            SemanticProcessor.tableToSquare_(node);
            return;
        }
        if (matrix.childNodes && matrix.childNodes.length === 1) {
            matrix.role = "rowvector";
        }
    }
    static tableToSquare_(node) {
        const matrix = node.childNodes[0];
        if (SemanticPred.isNeutralFence(node)) {
            matrix.role = "determinant";
            return;
        }
        matrix.role = "squarematrix";
    }
    static getComponentRoles_(node) {
        const role = node.role;
        if (role && role !== "unknown") {
            return role;
        }
        return node.type.toLowerCase() || "unknown";
    }
    static tableToCases_(table, openFence) {
        for (let i = 0, row; (row = table.childNodes[i]); i++) {
            SemanticProcessor.assignRoleToRow_(row, "cases");
        }
        table.type = "cases";
        table.appendContentNode(openFence);
        if (SemanticPred.tableIsMultiline(table)) {
            SemanticProcessor.binomialForm_(table);
        }
        return table;
    }
    static rewriteFencedLine_(table) {
        const line = table.childNodes[0];
        const fenced = table.childNodes[0].childNodes[0];
        const element = table.childNodes[0].childNodes[0].childNodes[0];
        fenced.parent = table.parent;
        table.parent = fenced;
        element.parent = line;
        fenced.childNodes = [table];
        line.childNodes = [element];
        return fenced;
    }
    static rowToLine_(row, opt_role) {
        const role = opt_role || "unknown";
        if (SemanticPred.isType(row, "row")) {
            row.type = "line";
            row.role = role;
            if (row.childNodes.length === 1 &&
                SemanticPred.isType(row.childNodes[0], "cell")) {
                row.childNodes = row.childNodes[0].childNodes;
                row.childNodes.forEach(function (x) {
                    x.parent = row;
                });
            }
        }
    }
    static assignRoleToRow_(row, role) {
        if (SemanticPred.isType(row, "line")) {
            row.role = role;
            return;
        }
        if (SemanticPred.isType(row, "row")) {
            row.role = role;
            row.childNodes.forEach(function (cell) {
                if (SemanticPred.isType(cell, "cell")) {
                    cell.role = role;
                }
            });
        }
    }
    static nextSeparatorFunction_(separators) {
        let sepList;
        if (separators) {
            if (separators.match(/^\s+$/)) {
                return null;
            }
            else {
                sepList = separators
                    .replace(/\s/g, '')
                    .split('')
                    .filter(function (x) {
                    return x;
                });
            }
        }
        else {
            sepList = [','];
        }
        return function () {
            if (sepList.length > 1) {
                return sepList.shift();
            }
            return sepList[0];
        };
    }
    static numberRole_(node) {
        if (node.role !== "unknown") {
            return;
        }
        const content = [...node.textContent].filter((x) => x.match(/[^\s]/));
        const meaning = content.map(SemanticAttr.lookupMeaning);
        if (meaning.every(function (x) {
            return ((x.type === "number" && x.role === "integer") ||
                (x.type === "punctuation" && x.role === "comma"));
        })) {
            node.role = "integer";
            if (content[0] === '0') {
                node.addAnnotation('general', 'basenumber');
            }
            return;
        }
        if (meaning.every(function (x) {
            return ((x.type === "number" && x.role === "integer") ||
                x.type === "punctuation");
        })) {
            node.role = "float";
            return;
        }
        node.role = "othernumber";
    }
    static exprFont_(node) {
        if (node.font !== "unknown") {
            return;
        }
        const content = [...node.textContent];
        const meaning = content.map(SemanticAttr.lookupMeaning);
        const singleFont = meaning.reduce(function (prev, curr) {
            if (!prev ||
                !curr.font ||
                curr.font === "unknown" ||
                curr.font === prev) {
                return prev;
            }
            if (prev === "unknown") {
                return curr.font;
            }
            return null;
        }, "unknown");
        if (singleFont) {
            node.font = singleFont;
        }
    }
    static purgeFences_(partition) {
        const rel = partition.rel;
        const comp = partition.comp;
        const newRel = [];
        const newComp = [];
        while (rel.length > 0) {
            const currentRel = rel.shift();
            let currentComp = comp.shift();
            if (SemanticPred.isElligibleEmbellishedFence(currentRel)) {
                newRel.push(currentRel);
                newComp.push(currentComp);
                continue;
            }
            SemanticProcessor.fenceToPunct_(currentRel);
            currentComp.push(currentRel);
            currentComp = currentComp.concat(comp.shift());
            comp.unshift(currentComp);
        }
        newComp.push(comp.shift());
        return { rel: newRel, comp: newComp };
    }
    static rewriteFencedNode_(fenced) {
        const ofence = fenced.contentNodes[0];
        const cfence = fenced.contentNodes[1];
        let rewritten = SemanticProcessor.rewriteFence_(fenced, ofence);
        fenced.contentNodes[0] = rewritten.fence;
        rewritten = SemanticProcessor.rewriteFence_(rewritten.node, cfence);
        fenced.contentNodes[1] = rewritten.fence;
        fenced.contentNodes[0].parent = fenced;
        fenced.contentNodes[1].parent = fenced;
        rewritten.node.parent = null;
        return rewritten.node;
    }
    static rewriteFence_(node, fence) {
        if (!fence.embellished) {
            return { node: node, fence: fence };
        }
        const newFence = fence.childNodes[0];
        const rewritten = SemanticProcessor.rewriteFence_(node, newFence);
        if (SemanticPred.isType(fence, "superscript") ||
            SemanticPred.isType(fence, "subscript") ||
            SemanticPred.isType(fence, "tensor")) {
            if (!SemanticPred.isRole(fence, "subsup")) {
                fence.role = node.role;
            }
            if (newFence !== rewritten.node) {
                fence.replaceChild(newFence, rewritten.node);
                newFence.parent = node;
            }
            SemanticProcessor.propagateFencePointer_(fence, newFence);
            return { node: fence, fence: rewritten.fence };
        }
        fence.replaceChild(newFence, rewritten.fence);
        if (fence.mathmlTree && fence.mathml.indexOf(fence.mathmlTree) === -1) {
            fence.mathml.push(fence.mathmlTree);
        }
        return { node: rewritten.node, fence: fence };
    }
    static propagateFencePointer_(oldNode, newNode) {
        oldNode.fencePointer = newNode.fencePointer || newNode.id.toString();
        oldNode.embellished = null;
    }
    static classifyByColumns_(table, columns, relation, _alternatives) {
        const test1 = (x) => SemanticProcessor.isPureRelation_(x, relation);
        const test2 = (x) => SemanticProcessor.isEndRelation_(x, relation) ||
            SemanticProcessor.isPureRelation_(x, relation);
        const test3 = (x) => SemanticProcessor.isEndRelation_(x, relation, true) ||
            SemanticProcessor.isPureRelation_(x, relation);
        if ((columns.length === 3 &&
            SemanticProcessor.testColumns_(columns, 1, test1)) ||
            (columns.length === 2 &&
                (SemanticProcessor.testColumns_(columns, 1, test2) ||
                    SemanticProcessor.testColumns_(columns, 0, test3)))) {
            table.role = relation;
            return true;
        }
        return false;
    }
    static isEndRelation_(node, relation, opt_right) {
        const position = opt_right ? node.childNodes.length - 1 : 0;
        return (SemanticPred.isType(node, "relseq") &&
            SemanticPred.isRole(node, relation) &&
            SemanticPred.isType(node.childNodes[position], "empty"));
    }
    static isPureRelation_(node, relation) {
        return (SemanticPred.isType(node, "relation") &&
            SemanticPred.isRole(node, relation));
    }
    static computeColumns_(table) {
        const columns = [];
        for (let i = 0, row; (row = table.childNodes[i]); i++) {
            for (let j = 0, cell; (cell = row.childNodes[j]); j++) {
                const column = columns[j];
                column ? columns[j].push(cell) : (columns[j] = [cell]);
            }
        }
        return columns;
    }
    static testColumns_(columns, index, pred) {
        const column = columns[index];
        return column
            ? column.some(function (cell) {
                return (cell.childNodes.length && pred(cell.childNodes[0]));
            }) &&
                column.every(function (cell) {
                    return (!cell.childNodes.length ||
                        pred(cell.childNodes[0]));
                })
            : false;
    }
    setNodeFactory(factory) {
        SemanticProcessor.getInstance().factory_ = factory;
        SemanticHeuristics.updateFactory(SemanticProcessor.getInstance().factory_);
    }
    getNodeFactory() {
        return SemanticProcessor.getInstance().factory_;
    }
    identifierNode(leaf, font, unit) {
        if (unit === 'MathML-Unit') {
            leaf.type = "identifier";
            leaf.role = "unit";
        }
        else if (!font &&
            leaf.textContent.length === 1 &&
            (leaf.role === "integer" ||
                leaf.role === "latinletter" ||
                leaf.role === "greekletter") &&
            leaf.font === "normal") {
            leaf.font = "italic";
            return SemanticHeuristics.run('simpleNamedFunction', leaf);
        }
        if (leaf.type === "unknown") {
            leaf.type = "identifier";
        }
        SemanticProcessor.exprFont_(leaf);
        return SemanticHeuristics.run('simpleNamedFunction', leaf);
    }
    implicitNode(nodes) {
        nodes = SemanticProcessor.getInstance().getMixedNumbers_(nodes);
        nodes = SemanticProcessor.getInstance().combineUnits_(nodes);
        if (nodes.length === 1) {
            return nodes[0];
        }
        const node = SemanticProcessor.getInstance().implicitNode_(nodes);
        return SemanticHeuristics.run('combine_juxtaposition', node);
    }
    text(leaf, type) {
        SemanticProcessor.exprFont_(leaf);
        leaf.type = "text";
        if (type === 'MS') {
            leaf.role = "string";
            return leaf;
        }
        if (type === 'MSPACE' || leaf.textContent.match(/^\s*$/)) {
            leaf.role = "space";
            return leaf;
        }
        return leaf;
    }
    row(nodes) {
        nodes = nodes.filter(function (x) {
            return !SemanticPred.isType(x, "empty");
        });
        if (nodes.length === 0) {
            return SemanticProcessor.getInstance().factory_.makeEmptyNode();
        }
        nodes = SemanticProcessor.getInstance().getFencesInRow_(nodes);
        nodes = SemanticProcessor.getInstance().tablesInRow(nodes);
        nodes = SemanticProcessor.getInstance().getPunctuationInRow_(nodes);
        nodes = SemanticProcessor.getInstance().getTextInRow_(nodes);
        nodes = SemanticProcessor.getInstance().getFunctionsInRow_(nodes);
        return SemanticProcessor.getInstance().relationsInRow_(nodes);
    }
    limitNode(mmlTag, children) {
        if (!children.length) {
            return SemanticProcessor.getInstance().factory_.makeEmptyNode();
        }
        let center = children[0];
        let type = "unknown";
        if (!children[1]) {
            return center;
        }
        let result;
        if (SemanticPred.isLimitBase(center)) {
            result = SemanticProcessor.MML_TO_LIMIT_[mmlTag];
            const length = result.length;
            type = result.type;
            children = children.slice(0, result.length + 1);
            if ((length === 1 && SemanticPred.isAccent(children[1])) ||
                (length === 2 &&
                    SemanticPred.isAccent(children[1]) &&
                    SemanticPred.isAccent(children[2]))) {
                result = SemanticProcessor.MML_TO_BOUNDS_[mmlTag];
                return SemanticProcessor.getInstance().accentNode_(center, children, result.type, result.length, result.accent);
            }
            if (length === 2) {
                if (SemanticPred.isAccent(children[1])) {
                    center = SemanticProcessor.getInstance().accentNode_(center, [center, children[1]], {
                        MSUBSUP: "subscript",
                        MUNDEROVER: "underscore"
                    }[mmlTag], 1, true);
                    return !children[2]
                        ? center
                        : SemanticProcessor.getInstance().makeLimitNode_(center, [center, children[2]], null, "limupper");
                }
                if (children[2] && SemanticPred.isAccent(children[2])) {
                    center = SemanticProcessor.getInstance().accentNode_(center, [center, children[2]], {
                        MSUBSUP: "superscript",
                        MUNDEROVER: "overscore"
                    }[mmlTag], 1, true);
                    return SemanticProcessor.getInstance().makeLimitNode_(center, [center, children[1]], null, "limlower");
                }
                if (!children[length]) {
                    type = "limlower";
                }
            }
            return SemanticProcessor.getInstance().makeLimitNode_(center, children, null, type);
        }
        result = SemanticProcessor.MML_TO_BOUNDS_[mmlTag];
        return SemanticProcessor.getInstance().accentNode_(center, children, result.type, result.length, result.accent);
    }
    tablesInRow(nodes) {
        let partition = SemanticUtil.partitionNodes(nodes, SemanticPred.tableIsMatrixOrVector);
        let result = [];
        for (let i = 0, matrix; (matrix = partition.rel[i]); i++) {
            result = result.concat(partition.comp.shift());
            result.push(SemanticProcessor.tableToMatrixOrVector_(matrix));
        }
        result = result.concat(partition.comp.shift());
        partition = SemanticUtil.partitionNodes(result, SemanticPred.isTableOrMultiline);
        result = [];
        for (let i = 0, table; (table = partition.rel[i]); i++) {
            const prevNodes = partition.comp.shift();
            if (SemanticPred.tableIsCases(table, prevNodes)) {
                SemanticProcessor.tableToCases_(table, prevNodes.pop());
            }
            result = result.concat(prevNodes);
            result.push(table);
        }
        return result.concat(partition.comp.shift());
    }
    mfenced(open, close, sepValue, children) {
        if (sepValue && children.length > 0) {
            const separators = SemanticProcessor.nextSeparatorFunction_(sepValue);
            const newChildren = [children.shift()];
            children.forEach((child) => {
                newChildren.push(SemanticProcessor.getInstance().factory_.makeContentNode(separators()));
                newChildren.push(child);
            });
            children = newChildren;
        }
        if (open && close) {
            return SemanticProcessor.getInstance().horizontalFencedNode_(SemanticProcessor.getInstance().factory_.makeContentNode(open), SemanticProcessor.getInstance().factory_.makeContentNode(close), children);
        }
        if (open) {
            children.unshift(SemanticProcessor.getInstance().factory_.makeContentNode(open));
        }
        if (close) {
            children.push(SemanticProcessor.getInstance().factory_.makeContentNode(close));
        }
        return SemanticProcessor.getInstance().row(children);
    }
    fractionLikeNode(denom, enume, linethickness, bevelled) {
        let node;
        if (!bevelled && SemanticUtil.isZeroLength(linethickness)) {
            const child0 = SemanticProcessor.getInstance().factory_.makeBranchNode("line", [denom], []);
            const child1 = SemanticProcessor.getInstance().factory_.makeBranchNode("line", [enume], []);
            node = SemanticProcessor.getInstance().factory_.makeBranchNode("multiline", [child0, child1], []);
            SemanticProcessor.binomialForm_(node);
            SemanticProcessor.classifyMultiline(node);
            return node;
        }
        else {
            node = SemanticProcessor.getInstance().fractionNode_(denom, enume);
            if (bevelled) {
                node.addAnnotation('general', 'bevelled');
            }
            return node;
        }
    }
    tensor(base, lsub, lsup, rsub, rsup) {
        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode("tensor", [
            base,
            SemanticProcessor.getInstance().scriptNode_(lsub, "leftsub"),
            SemanticProcessor.getInstance().scriptNode_(lsup, "leftsuper"),
            SemanticProcessor.getInstance().scriptNode_(rsub, "rightsub"),
            SemanticProcessor.getInstance().scriptNode_(rsup, "rightsuper")
        ], []);
        newNode.role = base.role;
        newNode.embellished = SemanticPred.isEmbellished(base);
        return newNode;
    }
    pseudoTensor(base, sub, sup) {
        const isEmpty = (x) => !SemanticPred.isType(x, "empty");
        const nonEmptySub = sub.filter(isEmpty).length;
        const nonEmptySup = sup.filter(isEmpty).length;
        if (!nonEmptySub && !nonEmptySup) {
            return base;
        }
        const mmlTag = nonEmptySub ? (nonEmptySup ? 'MSUBSUP' : 'MSUB') : 'MSUP';
        const mmlchild = [base];
        if (nonEmptySub) {
            mmlchild.push(SemanticProcessor.getInstance().scriptNode_(sub, "rightsub", true));
        }
        if (nonEmptySup) {
            mmlchild.push(SemanticProcessor.getInstance().scriptNode_(sup, "rightsuper", true));
        }
        return SemanticProcessor.getInstance().limitNode(mmlTag, mmlchild);
    }
    font(font) {
        const mathjaxFont = SemanticProcessor.MATHJAX_FONTS[font];
        return mathjaxFont ? mathjaxFont : font;
    }
    proof(node, semantics, parse) {
        if (!semantics['inference'] && !semantics['axiom']) {
            console.log('Noise');
        }
        if (semantics['axiom']) {
            const cleaned = SemanticProcessor.getInstance().cleanInference(node.childNodes);
            const axiom = cleaned.length
                ? SemanticProcessor.getInstance().factory_.makeBranchNode("inference", parse(cleaned), [])
                : SemanticProcessor.getInstance().factory_.makeEmptyNode();
            axiom.role = "axiom";
            axiom.mathmlTree = node;
            return axiom;
        }
        const inference = SemanticProcessor.getInstance().inference(node, semantics, parse);
        if (semantics['proof']) {
            inference.role = "proof";
            inference.childNodes[0].role = "final";
        }
        return inference;
    }
    inference(node, semantics, parse) {
        if (semantics['inferenceRule']) {
            const formulas = SemanticProcessor.getInstance().getFormulas(node, [], parse);
            const inference = SemanticProcessor.getInstance().factory_.makeBranchNode("inference", [formulas.conclusion, formulas.premises], []);
            return inference;
        }
        const label = semantics['labelledRule'];
        const children = DomUtil.toArray(node.childNodes);
        const content = [];
        if (label === 'left' || label === 'both') {
            content.push(SemanticProcessor.getInstance().getLabel(node, children, parse, "left"));
        }
        if (label === 'right' || label === 'both') {
            content.push(SemanticProcessor.getInstance().getLabel(node, children, parse, "right"));
        }
        const formulas = SemanticProcessor.getInstance().getFormulas(node, children, parse);
        const inference = SemanticProcessor.getInstance().factory_.makeBranchNode("inference", [formulas.conclusion, formulas.premises], content);
        inference.mathmlTree = node;
        return inference;
    }
    getLabel(_node, children, parse, side) {
        const label = SemanticProcessor.getInstance().findNestedRow(children, 'prooflabel', side);
        const sem = SemanticProcessor.getInstance().factory_.makeBranchNode("rulelabel", parse(DomUtil.toArray(label.childNodes)), []);
        sem.role = side;
        sem.mathmlTree = label;
        return sem;
    }
    getFormulas(node, children, parse) {
        const inf = children.length
            ? SemanticProcessor.getInstance().findNestedRow(children, 'inferenceRule')
            : node;
        const up = SemanticProcessor.getSemantics(inf)['inferenceRule'] === 'up';
        const premRow = up ? inf.childNodes[1] : inf.childNodes[0];
        const concRow = up ? inf.childNodes[0] : inf.childNodes[1];
        const premTable = premRow.childNodes[0].childNodes[0];
        const topRow = DomUtil.toArray(premTable.childNodes[0].childNodes);
        const premNodes = [];
        let i = 1;
        for (const cell of topRow) {
            if (i % 2) {
                premNodes.push(cell.childNodes[0]);
            }
            i++;
        }
        const premises = parse(premNodes);
        const conclusion = parse(DomUtil.toArray(concRow.childNodes[0].childNodes))[0];
        const prem = SemanticProcessor.getInstance().factory_.makeBranchNode("premises", premises, []);
        prem.mathmlTree = premTable;
        const conc = SemanticProcessor.getInstance().factory_.makeBranchNode("conclusion", [conclusion], []);
        conc.mathmlTree = concRow.childNodes[0].childNodes[0];
        return { conclusion: conc, premises: prem };
    }
    findNestedRow(nodes, semantic, opt_value) {
        return SemanticProcessor.getInstance().findNestedRow_(nodes, semantic, 0, opt_value);
    }
    cleanInference(nodes) {
        return DomUtil.toArray(nodes).filter(function (x) {
            return DomUtil.tagName(x) !== 'MSPACE';
        });
    }
    operatorNode(node) {
        if (node.type === "unknown") {
            node.type = "operator";
        }
        return SemanticHeuristics.run('multioperator', node);
    }
    implicitNode_(nodes) {
        const operators = SemanticProcessor.getInstance().factory_.makeMultipleContentNodes(nodes.length - 1, SemanticAttr.invisibleTimes());
        SemanticProcessor.matchSpaces_(nodes, operators);
        const newNode = SemanticProcessor.getInstance().infixNode_(nodes, operators[0]);
        newNode.role = "implicit";
        operators.forEach(function (op) {
            op.parent = newNode;
        });
        newNode.contentNodes = operators;
        return newNode;
    }
    infixNode_(children, opNode) {
        const node = SemanticProcessor.getInstance().factory_.makeBranchNode("infixop", children, [opNode], SemanticUtil.getEmbellishedInner(opNode).textContent);
        node.role = opNode.role;
        return SemanticHeuristics.run('propagateSimpleFunction', node);
    }
    explicitMixed_(nodes) {
        const partition = SemanticUtil.partitionNodes(nodes, function (x) {
            return x.textContent === SemanticAttr.invisiblePlus();
        });
        if (!partition.rel.length) {
            return nodes;
        }
        let result = [];
        for (let i = 0, rel; (rel = partition.rel[i]); i++) {
            const prev = partition.comp[i];
            const next = partition.comp[i + 1];
            const last = prev.length - 1;
            if (prev[last] &&
                next[0] &&
                SemanticPred.isType(prev[last], "number") &&
                !SemanticPred.isRole(prev[last], "mixed") &&
                SemanticPred.isType(next[0], "fraction")) {
                const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode("number", [prev[last], next[0]], []);
                newNode.role = "mixed";
                result = result.concat(prev.slice(0, last));
                result.push(newNode);
                next.shift();
            }
            else {
                result = result.concat(prev);
                result.push(rel);
            }
        }
        return result.concat(partition.comp[partition.comp.length - 1]);
    }
    concatNode_(inner, nodeList, type) {
        if (nodeList.length === 0) {
            return inner;
        }
        const content = nodeList
            .map(function (x) {
            return SemanticUtil.getEmbellishedInner(x).textContent;
        })
            .join(' ');
        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(type, [inner], nodeList, content);
        if (nodeList.length > 1) {
            newNode.role = "multiop";
        }
        return newNode;
    }
    prefixNode_(node, prefixes) {
        const negatives = SemanticUtil.partitionNodes(prefixes, (x) => SemanticPred.isRole(x, "subtraction"));
        let newNode = SemanticProcessor.getInstance().concatNode_(node, negatives.comp.pop(), "prefixop");
        if (newNode.contentNodes.length === 1 &&
            newNode.contentNodes[0].role === "addition" &&
            newNode.contentNodes[0].textContent === '+') {
            newNode.role = "positive";
        }
        while (negatives.rel.length > 0) {
            newNode = SemanticProcessor.getInstance().concatNode_(newNode, [negatives.rel.pop()], "prefixop");
            newNode.role = "negative";
            newNode = SemanticProcessor.getInstance().concatNode_(newNode, negatives.comp.pop(), "prefixop");
        }
        return newNode;
    }
    postfixNode_(node, postfixes) {
        if (!postfixes.length) {
            return node;
        }
        return SemanticProcessor.getInstance().concatNode_(node, postfixes, "postfixop");
    }
    combineUnits_(nodes) {
        const partition = SemanticUtil.partitionNodes(nodes, function (x) {
            return !SemanticPred.isRole(x, "unit");
        });
        if (nodes.length === partition.rel.length) {
            return partition.rel;
        }
        const result = [];
        let rel;
        let last;
        do {
            const comp = partition.comp.shift();
            rel = partition.rel.shift();
            let unitNode = null;
            last = result.pop();
            if (last) {
                if (!comp.length || !SemanticPred.isUnitCounter(last)) {
                    result.push(last);
                }
                else {
                    comp.unshift(last);
                }
            }
            if (comp.length === 1) {
                unitNode = comp.pop();
            }
            if (comp.length > 1) {
                unitNode = SemanticProcessor.getInstance().implicitNode_(comp);
                unitNode.role = "unit";
            }
            if (unitNode) {
                result.push(unitNode);
            }
            if (rel) {
                result.push(rel);
            }
        } while (rel);
        return result;
    }
    getMixedNumbers_(nodes) {
        const partition = SemanticUtil.partitionNodes(nodes, function (x) {
            return (SemanticPred.isType(x, "fraction") &&
                SemanticPred.isRole(x, "vulgar"));
        });
        if (!partition.rel.length) {
            return nodes;
        }
        let result = [];
        for (let i = 0, rel; (rel = partition.rel[i]); i++) {
            const comp = partition.comp[i];
            const last = comp.length - 1;
            if (comp[last] &&
                SemanticPred.isType(comp[last], "number") &&
                (SemanticPred.isRole(comp[last], "integer") ||
                    SemanticPred.isRole(comp[last], "float"))) {
                const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode("number", [comp[last], rel], []);
                newNode.role = "mixed";
                result = result.concat(comp.slice(0, last));
                result.push(newNode);
            }
            else {
                result = result.concat(comp);
                result.push(rel);
            }
        }
        return result.concat(partition.comp[partition.comp.length - 1]);
    }
    getTextInRow_(nodes) {
        if (nodes.length <= 1) {
            return nodes;
        }
        const partition = SemanticUtil.partitionNodes(nodes, (x) => SemanticPred.isType(x, "text"));
        if (partition.rel.length === 0) {
            return nodes;
        }
        const result = [];
        let nextComp = partition.comp[0];
        if (nextComp.length > 0) {
            result.push(SemanticProcessor.getInstance().row(nextComp));
        }
        for (let i = 0, text; (text = partition.rel[i]); i++) {
            result.push(text);
            nextComp = partition.comp[i + 1];
            if (nextComp.length > 0) {
                result.push(SemanticProcessor.getInstance().row(nextComp));
            }
        }
        return [SemanticProcessor.getInstance().dummyNode_(result)];
    }
    relationsInRow_(nodes) {
        const partition = SemanticUtil.partitionNodes(nodes, SemanticPred.isRelation);
        const firstRel = partition.rel[0];
        if (!firstRel) {
            return SemanticProcessor.getInstance().operationsInRow_(nodes);
        }
        if (nodes.length === 1) {
            return nodes[0];
        }
        const children = partition.comp.map(SemanticProcessor.getInstance().operationsInRow_);
        let node;
        if (partition.rel.some(function (x) {
            return !x.equals(firstRel);
        })) {
            node = SemanticProcessor.getInstance().factory_.makeBranchNode("multirel", children, partition.rel);
            if (partition.rel.every(function (x) {
                return x.role === firstRel.role;
            })) {
                node.role = firstRel.role;
            }
            return node;
        }
        node = SemanticProcessor.getInstance().factory_.makeBranchNode("relseq", children, partition.rel, SemanticUtil.getEmbellishedInner(firstRel).textContent);
        node.role = firstRel.role;
        return node;
    }
    operationsInRow_(nodes) {
        if (nodes.length === 0) {
            return SemanticProcessor.getInstance().factory_.makeEmptyNode();
        }
        nodes = SemanticProcessor.getInstance().explicitMixed_(nodes);
        if (nodes.length === 1) {
            return nodes[0];
        }
        const prefix = [];
        while (nodes.length > 0 && SemanticPred.isOperator(nodes[0])) {
            prefix.push(nodes.shift());
        }
        if (nodes.length === 0) {
            return SemanticProcessor.getInstance().prefixNode_(prefix.pop(), prefix);
        }
        if (nodes.length === 1) {
            return SemanticProcessor.getInstance().prefixNode_(nodes[0], prefix);
        }
        nodes = SemanticHeuristics.run('convert_juxtaposition', nodes);
        const split = SemanticUtil.sliceNodes(nodes, SemanticPred.isOperator);
        const node = SemanticProcessor.getInstance().prefixNode_(SemanticProcessor.getInstance().implicitNode(split.head), prefix);
        if (!split.div) {
            return node;
        }
        return SemanticProcessor.getInstance().operationsTree_(split.tail, node, split.div);
    }
    operationsTree_(nodes, root, lastop, opt_prefixes) {
        const prefixes = opt_prefixes || [];
        if (nodes.length === 0) {
            prefixes.unshift(lastop);
            if (root.type === "infixop") {
                const node = SemanticProcessor.getInstance().postfixNode_(root.childNodes.pop(), prefixes);
                root.appendChild(node);
                return root;
            }
            return SemanticProcessor.getInstance().postfixNode_(root, prefixes);
        }
        const split = SemanticUtil.sliceNodes(nodes, SemanticPred.isOperator);
        if (split.head.length === 0) {
            prefixes.push(split.div);
            return SemanticProcessor.getInstance().operationsTree_(split.tail, root, lastop, prefixes);
        }
        const node = SemanticProcessor.getInstance().prefixNode_(SemanticProcessor.getInstance().implicitNode(split.head), prefixes);
        const newNode = SemanticProcessor.getInstance().appendOperand_(root, lastop, node);
        if (!split.div) {
            return newNode;
        }
        return SemanticProcessor.getInstance().operationsTree_(split.tail, newNode, split.div, []);
    }
    appendOperand_(root, op, node) {
        if (root.type !== "infixop") {
            return SemanticProcessor.getInstance().infixNode_([root, node], op);
        }
        const division = SemanticProcessor.getInstance().appendDivisionOp_(root, op, node);
        if (division) {
            return division;
        }
        if (SemanticProcessor.getInstance().appendExistingOperator_(root, op, node)) {
            return root;
        }
        return op.role === "multiplication"
            ? SemanticProcessor.getInstance().appendMultiplicativeOp_(root, op, node)
            : SemanticProcessor.getInstance().appendAdditiveOp_(root, op, node);
    }
    appendDivisionOp_(root, op, node) {
        if (op.role === "division") {
            if (SemanticPred.isImplicit(root)) {
                return SemanticProcessor.getInstance().infixNode_([root, node], op);
            }
            return SemanticProcessor.getInstance().appendLastOperand_(root, op, node);
        }
        return root.role === "division"
            ? SemanticProcessor.getInstance().infixNode_([root, node], op)
            : null;
    }
    appendLastOperand_(root, op, node) {
        let lastRoot = root;
        let lastChild = root.childNodes[root.childNodes.length - 1];
        while (lastChild &&
            lastChild.type === "infixop" &&
            !SemanticPred.isImplicit(lastChild)) {
            lastRoot = lastChild;
            lastChild = lastRoot.childNodes[root.childNodes.length - 1];
        }
        const newNode = SemanticProcessor.getInstance().infixNode_([lastRoot.childNodes.pop(), node], op);
        lastRoot.appendChild(newNode);
        return root;
    }
    appendMultiplicativeOp_(root, op, node) {
        if (SemanticPred.isImplicit(root)) {
            return SemanticProcessor.getInstance().infixNode_([root, node], op);
        }
        let lastRoot = root;
        let lastChild = root.childNodes[root.childNodes.length - 1];
        while (lastChild &&
            lastChild.type === "infixop" &&
            !SemanticPred.isImplicit(lastChild)) {
            lastRoot = lastChild;
            lastChild = lastRoot.childNodes[root.childNodes.length - 1];
        }
        const newNode = SemanticProcessor.getInstance().infixNode_([lastRoot.childNodes.pop(), node], op);
        lastRoot.appendChild(newNode);
        return root;
    }
    appendAdditiveOp_(root, op, node) {
        return SemanticProcessor.getInstance().infixNode_([root, node], op);
    }
    appendExistingOperator_(root, op, node) {
        if (!root ||
            root.type !== "infixop" ||
            SemanticPred.isImplicit(root)) {
            return false;
        }
        if (root.contentNodes[0].equals(op)) {
            root.appendContentNode(op);
            root.appendChild(node);
            return true;
        }
        return SemanticProcessor.getInstance().appendExistingOperator_(root.childNodes[root.childNodes.length - 1], op, node);
    }
    getFencesInRow_(nodes) {
        let partition = SemanticUtil.partitionNodes(nodes, SemanticPred.isFence);
        partition = SemanticProcessor.purgeFences_(partition);
        const felem = partition.comp.shift();
        return SemanticProcessor.getInstance().fences_(partition.rel, partition.comp, [], [felem]);
    }
    fences_(fences, content, openStack, contentStack) {
        if (fences.length === 0 && openStack.length === 0) {
            return contentStack[0];
        }
        const openPred = (x) => SemanticPred.isRole(x, "open");
        if (fences.length === 0) {
            const result = contentStack.shift();
            while (openStack.length > 0) {
                if (openPred(openStack[0])) {
                    const firstOpen = openStack.shift();
                    SemanticProcessor.fenceToPunct_(firstOpen);
                    result.push(firstOpen);
                }
                else {
                    const split = SemanticUtil.sliceNodes(openStack, openPred);
                    const cutLength = split.head.length - 1;
                    const innerNodes = SemanticProcessor.getInstance().neutralFences_(split.head, contentStack.slice(0, cutLength));
                    contentStack = contentStack.slice(cutLength);
                    result.push(...innerNodes);
                    if (split.div) {
                        split.tail.unshift(split.div);
                    }
                    openStack = split.tail;
                }
                result.push(...contentStack.shift());
            }
            return result;
        }
        const lastOpen = openStack[openStack.length - 1];
        const firstRole = fences[0].role;
        if (firstRole === "open" ||
            (SemanticPred.isNeutralFence(fences[0]) &&
                !(lastOpen && SemanticPred.compareNeutralFences(fences[0], lastOpen)))) {
            openStack.push(fences.shift());
            const cont = content.shift();
            if (cont) {
                contentStack.push(cont);
            }
            return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);
        }
        if (lastOpen &&
            firstRole === "close" &&
            lastOpen.role === "open") {
            const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(openStack.pop(), fences.shift(), contentStack.pop());
            contentStack.push(contentStack.pop().concat([fenced], content.shift()));
            return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);
        }
        if (lastOpen &&
            SemanticPred.compareNeutralFences(fences[0], lastOpen)) {
            if (!SemanticPred.elligibleLeftNeutral(lastOpen) ||
                !SemanticPred.elligibleRightNeutral(fences[0])) {
                openStack.push(fences.shift());
                const cont = content.shift();
                if (cont) {
                    contentStack.push(cont);
                }
                return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);
            }
            const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(openStack.pop(), fences.shift(), contentStack.pop());
            contentStack.push(contentStack.pop().concat([fenced], content.shift()));
            return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);
        }
        if (lastOpen &&
            firstRole === "close" &&
            SemanticPred.isNeutralFence(lastOpen) &&
            openStack.some(openPred)) {
            const split = SemanticUtil.sliceNodes(openStack, openPred, true);
            const rightContent = contentStack.pop();
            const cutLength = contentStack.length - split.tail.length + 1;
            const innerNodes = SemanticProcessor.getInstance().neutralFences_(split.tail, contentStack.slice(cutLength));
            contentStack = contentStack.slice(0, cutLength);
            const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(split.div, fences.shift(), contentStack.pop().concat(innerNodes, rightContent));
            contentStack.push(contentStack.pop().concat([fenced], content.shift()));
            return SemanticProcessor.getInstance().fences_(fences, content, split.head, contentStack);
        }
        const fenced = fences.shift();
        SemanticProcessor.fenceToPunct_(fenced);
        contentStack.push(contentStack.pop().concat([fenced], content.shift()));
        return SemanticProcessor.getInstance().fences_(fences, content, openStack, contentStack);
    }
    neutralFences_(fences, content) {
        if (fences.length === 0) {
            return fences;
        }
        if (fences.length === 1) {
            SemanticProcessor.fenceToPunct_(fences[0]);
            return fences;
        }
        const firstFence = fences.shift();
        if (!SemanticPred.elligibleLeftNeutral(firstFence)) {
            SemanticProcessor.fenceToPunct_(firstFence);
            const restContent = content.shift();
            restContent.unshift(firstFence);
            return restContent.concat(SemanticProcessor.getInstance().neutralFences_(fences, content));
        }
        const split = SemanticUtil.sliceNodes(fences, function (x) {
            return SemanticPred.compareNeutralFences(x, firstFence);
        });
        if (!split.div) {
            SemanticProcessor.fenceToPunct_(firstFence);
            const restContent = content.shift();
            restContent.unshift(firstFence);
            return restContent.concat(SemanticProcessor.getInstance().neutralFences_(fences, content));
        }
        if (!SemanticPred.elligibleRightNeutral(split.div)) {
            SemanticProcessor.fenceToPunct_(split.div);
            fences.unshift(firstFence);
            return SemanticProcessor.getInstance().neutralFences_(fences, content);
        }
        const newContent = SemanticProcessor.getInstance().combineFencedContent_(firstFence, split.div, split.head, content);
        if (split.tail.length > 0) {
            const leftContent = newContent.shift();
            const result = SemanticProcessor.getInstance().neutralFences_(split.tail, newContent);
            return leftContent.concat(result);
        }
        return newContent[0];
    }
    combineFencedContent_(leftFence, rightFence, midFences, content) {
        if (midFences.length === 0) {
            const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(leftFence, rightFence, content.shift());
            if (content.length > 0) {
                content[0].unshift(fenced);
            }
            else {
                content = [[fenced]];
            }
            return content;
        }
        const leftContent = content.shift();
        const cutLength = midFences.length - 1;
        const midContent = content.slice(0, cutLength);
        content = content.slice(cutLength);
        const rightContent = content.shift();
        const innerNodes = SemanticProcessor.getInstance().neutralFences_(midFences, midContent);
        leftContent.push(...innerNodes);
        leftContent.push(...rightContent);
        const fenced = SemanticProcessor.getInstance().horizontalFencedNode_(leftFence, rightFence, leftContent);
        if (content.length > 0) {
            content[0].unshift(fenced);
        }
        else {
            content = [[fenced]];
        }
        return content;
    }
    horizontalFencedNode_(ofence, cfence, content) {
        const childNode = SemanticProcessor.getInstance().row(content);
        let newNode = SemanticProcessor.getInstance().factory_.makeBranchNode("fenced", [childNode], [ofence, cfence]);
        if (ofence.role === "open") {
            SemanticProcessor.getInstance().classifyHorizontalFence_(newNode);
            newNode = SemanticHeuristics.run('propagateComposedFunction', newNode);
        }
        else {
            newNode.role = ofence.role;
        }
        newNode = SemanticHeuristics.run('detect_cycle', newNode);
        return SemanticProcessor.rewriteFencedNode_(newNode);
    }
    classifyHorizontalFence_(node) {
        node.role = "leftright";
        const children = node.childNodes;
        if (!SemanticPred.isSetNode(node) || children.length > 1) {
            return;
        }
        if (children.length === 0 || children[0].type === "empty") {
            node.role = "set empty";
            return;
        }
        const type = children[0].type;
        if (children.length === 1 &&
            SemanticPred.isSingletonSetContent(children[0])) {
            node.role = "set singleton";
            return;
        }
        const role = children[0].role;
        if (type !== "punctuated" || role !== "sequence") {
            return;
        }
        if (children[0].contentNodes[0].role === "comma") {
            node.role = "set collection";
            return;
        }
        if (children[0].contentNodes.length === 1 &&
            (children[0].contentNodes[0].role === "vbar" ||
                children[0].contentNodes[0].role === "colon")) {
            node.role = "set extended";
            SemanticProcessor.getInstance().setExtension_(node);
            return;
        }
    }
    setExtension_(set) {
        const extender = set.childNodes[0].childNodes[0];
        if (extender &&
            extender.type === "infixop" &&
            extender.contentNodes.length === 1 &&
            SemanticPred.isMembership(extender.contentNodes[0])) {
            extender.addAnnotation('set', 'intensional');
            extender.contentNodes[0].addAnnotation('set', 'intensional');
        }
    }
    getPunctuationInRow_(nodes) {
        if (nodes.length <= 1) {
            return nodes;
        }
        const allowedType = (x) => {
            const type = x.type;
            return (type === 'punctuation' ||
                type === 'text' ||
                type === 'operator' ||
                type === 'relation');
        };
        const partition = SemanticUtil.partitionNodes(nodes, function (x) {
            if (!SemanticPred.isPunctuation(x)) {
                return false;
            }
            if (SemanticPred.isPunctuation(x) &&
                !SemanticPred.isRole(x, "ellipsis")) {
                return true;
            }
            const index = nodes.indexOf(x);
            if (index === 0) {
                if (nodes[1] && allowedType(nodes[1])) {
                    return false;
                }
                return true;
            }
            const prev = nodes[index - 1];
            if (index === nodes.length - 1) {
                if (allowedType(prev)) {
                    return false;
                }
                return true;
            }
            const next = nodes[index + 1];
            if (allowedType(prev) && allowedType(next)) {
                return false;
            }
            return true;
        });
        if (partition.rel.length === 0) {
            return nodes;
        }
        const newNodes = [];
        let firstComp = partition.comp.shift();
        if (firstComp.length > 0) {
            newNodes.push(SemanticProcessor.getInstance().row(firstComp));
        }
        let relCounter = 0;
        while (partition.comp.length > 0) {
            newNodes.push(partition.rel[relCounter++]);
            firstComp = partition.comp.shift();
            if (firstComp.length > 0) {
                newNodes.push(SemanticProcessor.getInstance().row(firstComp));
            }
        }
        return [
            SemanticProcessor.getInstance().punctuatedNode_(newNodes, partition.rel)
        ];
    }
    punctuatedNode_(nodes, punctuations) {
        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode("punctuated", nodes, punctuations);
        if (punctuations.length === nodes.length) {
            const firstRole = punctuations[0].role;
            if (firstRole !== "unknown" &&
                punctuations.every(function (punct) {
                    return punct.role === firstRole;
                })) {
                newNode.role = firstRole;
                return newNode;
            }
        }
        if (SemanticPred.singlePunctAtPosition(nodes, punctuations, 0)) {
            newNode.role = "startpunct";
        }
        else if (SemanticPred.singlePunctAtPosition(nodes, punctuations, nodes.length - 1)) {
            newNode.role = "endpunct";
        }
        else if (punctuations.every((x) => SemanticPred.isRole(x, "dummy"))) {
            newNode.role = "text";
        }
        else if (punctuations.every((x) => SemanticPred.isRole(x, "space"))) {
            newNode.role = "space";
        }
        else {
            newNode.role = "sequence";
        }
        return newNode;
    }
    dummyNode_(children) {
        const commata = SemanticProcessor.getInstance().factory_.makeMultipleContentNodes(children.length - 1, SemanticAttr.invisibleComma());
        commata.forEach(function (comma) {
            comma.role = "dummy";
        });
        return SemanticProcessor.getInstance().punctuatedNode_(children, commata);
    }
    accentRole_(node, type) {
        if (!SemanticPred.isAccent(node)) {
            return false;
        }
        const content = node.textContent;
        const role = SemanticAttr.lookupSecondary('bar', content) ||
            SemanticAttr.lookupSecondary('tilde', content) ||
            node.role;
        node.role =
            type === "underscore"
                ? "underaccent"
                : "overaccent";
        node.addAnnotation('accent', role);
        return true;
    }
    accentNode_(center, children, type, length, accent) {
        children = children.slice(0, length + 1);
        const child1 = children[1];
        const child2 = children[2];
        let innerNode;
        if (!accent && child2) {
            innerNode = SemanticProcessor.getInstance().factory_.makeBranchNode("subscript", [center, child1], []);
            innerNode.role = "subsup";
            children = [innerNode, child2];
            type = "superscript";
        }
        if (accent) {
            const underAccent = SemanticProcessor.getInstance().accentRole_(child1, type);
            if (child2) {
                const overAccent = SemanticProcessor.getInstance().accentRole_(child2, "overscore");
                if (overAccent && !underAccent) {
                    innerNode = SemanticProcessor.getInstance().factory_.makeBranchNode("overscore", [center, child2], []);
                    children = [innerNode, child1];
                    type = "underscore";
                }
                else {
                    innerNode = SemanticProcessor.getInstance().factory_.makeBranchNode("underscore", [center, child1], []);
                    children = [innerNode, child2];
                    type = "overscore";
                }
                innerNode.role = "underover";
            }
        }
        return SemanticProcessor.getInstance().makeLimitNode_(center, children, innerNode, type);
    }
    makeLimitNode_(center, children, innerNode, type) {
        if (type === "limupper" &&
            center.type === "limlower") {
            center.childNodes.push(children[1]);
            children[1].parent = center;
            center.type = "limboth";
            return center;
        }
        if (type === "limlower" &&
            center.type === "limupper") {
            center.childNodes.splice(1, -1, children[1]);
            children[1].parent = center;
            center.type = "limboth";
            return center;
        }
        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(type, children, []);
        const embellished = SemanticPred.isEmbellished(center);
        if (innerNode) {
            innerNode.embellished = embellished;
        }
        newNode.embellished = embellished;
        newNode.role = center.role;
        return newNode;
    }
    getFunctionsInRow_(restNodes, opt_result) {
        const result = opt_result || [];
        if (restNodes.length === 0) {
            return result;
        }
        const firstNode = restNodes.shift();
        const heuristic = SemanticProcessor.classifyFunction_(firstNode, restNodes);
        if (!heuristic) {
            result.push(firstNode);
            return SemanticProcessor.getInstance().getFunctionsInRow_(restNodes, result);
        }
        const processedRest = SemanticProcessor.getInstance().getFunctionsInRow_(restNodes, []);
        const newRest = SemanticProcessor.getInstance().getFunctionArgs_(firstNode, processedRest, heuristic);
        return result.concat(newRest);
    }
    getFunctionArgs_(func, rest, heuristic) {
        let partition, arg, funcNode;
        switch (heuristic) {
            case 'integral': {
                const components = SemanticProcessor.getInstance().getIntegralArgs_(rest);
                if (!components.intvar && !components.integrand.length) {
                    components.rest.unshift(func);
                    return components.rest;
                }
                const integrand = SemanticProcessor.getInstance().row(components.integrand);
                funcNode = SemanticProcessor.getInstance().integralNode_(func, integrand, components.intvar);
                components.rest.unshift(funcNode);
                return components.rest;
            }
            case 'prefix': {
                if (rest[0] && rest[0].type === "fenced") {
                    const arg = rest.shift();
                    if (!SemanticPred.isNeutralFence(arg)) {
                        arg.role = "leftright";
                    }
                    funcNode = SemanticProcessor.getInstance().functionNode_(func, arg);
                    rest.unshift(funcNode);
                    return rest;
                }
                partition = SemanticUtil.sliceNodes(rest, SemanticPred.isPrefixFunctionBoundary);
                if (!partition.head.length) {
                    if (!partition.div ||
                        !SemanticPred.isType(partition.div, "appl")) {
                        rest.unshift(func);
                        return rest;
                    }
                    arg = partition.div;
                }
                else {
                    arg = SemanticProcessor.getInstance().row(partition.head);
                    if (partition.div) {
                        partition.tail.unshift(partition.div);
                    }
                }
                funcNode = SemanticProcessor.getInstance().functionNode_(func, arg);
                partition.tail.unshift(funcNode);
                return partition.tail;
            }
            case 'bigop': {
                partition = SemanticUtil.sliceNodes(rest, SemanticPred.isBigOpBoundary);
                if (!partition.head.length) {
                    rest.unshift(func);
                    return rest;
                }
                arg = SemanticProcessor.getInstance().row(partition.head);
                funcNode = SemanticProcessor.getInstance().bigOpNode_(func, arg);
                if (partition.div) {
                    partition.tail.unshift(partition.div);
                }
                partition.tail.unshift(funcNode);
                return partition.tail;
            }
            case 'simple':
            default: {
                if (rest.length === 0) {
                    return [func];
                }
                const firstArg = rest[0];
                if (firstArg.type === "fenced" &&
                    !SemanticPred.isNeutralFence(firstArg) &&
                    SemanticPred.isSimpleFunctionScope(firstArg)) {
                    firstArg.role = "leftright";
                    SemanticProcessor.propagateFunctionRole_(func, "simple function");
                    funcNode = SemanticProcessor.getInstance().functionNode_(func, rest.shift());
                    rest.unshift(funcNode);
                    return rest;
                }
                rest.unshift(func);
                return rest;
            }
        }
    }
    getIntegralArgs_(nodes, args = []) {
        if (nodes.length === 0) {
            return { integrand: args, intvar: null, rest: nodes };
        }
        const firstNode = nodes[0];
        if (SemanticPred.isGeneralFunctionBoundary(firstNode)) {
            return { integrand: args, intvar: null, rest: nodes };
        }
        if (SemanticPred.isIntegralDxBoundarySingle(firstNode)) {
            firstNode.role = "integral";
            return { integrand: args, intvar: firstNode, rest: nodes.slice(1) };
        }
        if (nodes[1] && SemanticPred.isIntegralDxBoundary(firstNode, nodes[1])) {
            const intvar = SemanticProcessor.getInstance().prefixNode_(nodes[1], [firstNode]);
            intvar.role = "integral";
            return { integrand: args, intvar: intvar, rest: nodes.slice(2) };
        }
        args.push(nodes.shift());
        return SemanticProcessor.getInstance().getIntegralArgs_(nodes, args);
    }
    functionNode_(func, arg) {
        const applNode = SemanticProcessor.getInstance().factory_.makeContentNode(SemanticAttr.functionApplication());
        const appl = SemanticProcessor.getInstance().funcAppls[func.id];
        if (appl) {
            applNode.mathmlTree = appl.mathmlTree;
            applNode.mathml = appl.mathml;
            applNode.annotation = appl.annotation;
            applNode.attributes = appl.attributes;
            delete SemanticProcessor.getInstance().funcAppls[func.id];
        }
        applNode.type = "punctuation";
        applNode.role = "application";
        const funcop = SemanticProcessor.getFunctionOp_(func, function (node) {
            return (SemanticPred.isType(node, "function") ||
                (SemanticPred.isType(node, "identifier") &&
                    SemanticPred.isRole(node, "simple function")));
        });
        return SemanticProcessor.getInstance().functionalNode_("appl", [func, arg], funcop, [applNode]);
    }
    bigOpNode_(bigOp, arg) {
        const largeop = SemanticProcessor.getFunctionOp_(bigOp, (x) => SemanticPred.isType(x, "largeop"));
        return SemanticProcessor.getInstance().functionalNode_("bigop", [bigOp, arg], largeop, []);
    }
    integralNode_(integral, integrand, intvar) {
        integrand =
            integrand || SemanticProcessor.getInstance().factory_.makeEmptyNode();
        intvar = intvar || SemanticProcessor.getInstance().factory_.makeEmptyNode();
        const largeop = SemanticProcessor.getFunctionOp_(integral, (x) => SemanticPred.isType(x, "largeop"));
        return SemanticProcessor.getInstance().functionalNode_("integral", [integral, integrand, intvar], largeop, []);
    }
    functionalNode_(type, children, operator, content) {
        const funcop = children[0];
        let oldParent;
        if (operator) {
            oldParent = operator.parent;
            content.push(operator);
        }
        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode(type, children, content);
        newNode.role = funcop.role;
        if (oldParent) {
            operator.parent = oldParent;
        }
        return newNode;
    }
    fractionNode_(denom, enume) {
        const newNode = SemanticProcessor.getInstance().factory_.makeBranchNode("fraction", [denom, enume], []);
        newNode.role = newNode.childNodes.every(function (x) {
            return (SemanticPred.isType(x, "number") &&
                SemanticPred.isRole(x, "integer"));
        })
            ? "vulgar"
            : newNode.childNodes.every(SemanticPred.isPureUnit)
                ? "unit"
                : "division";
        return SemanticHeuristics.run('propagateSimpleFunction', newNode);
    }
    scriptNode_(nodes, role, opt_noSingle) {
        let newNode;
        switch (nodes.length) {
            case 0:
                newNode = SemanticProcessor.getInstance().factory_.makeEmptyNode();
                break;
            case 1:
                newNode = nodes[0];
                if (opt_noSingle) {
                    return newNode;
                }
                break;
            default:
                newNode = SemanticProcessor.getInstance().dummyNode_(nodes);
        }
        newNode.role = role;
        return newNode;
    }
    findNestedRow_(nodes, semantic, level, value) {
        if (level > 3) {
            return null;
        }
        for (let i = 0, node; (node = nodes[i]); i++) {
            const tag = DomUtil.tagName(node);
            if (tag !== 'MSPACE') {
                if (tag === 'MROW') {
                    return SemanticProcessor.getInstance().findNestedRow_(DomUtil.toArray(node.childNodes), semantic, level + 1, value);
                }
                if (SemanticProcessor.findSemantics(node, semantic, value)) {
                    return node;
                }
            }
        }
        return null;
    }
}
exports["default"] = SemanticProcessor;
SemanticProcessor.FENCE_TO_PUNCT_ = {
    ["metric"]: "metric",
    ["neutral"]: "vbar",
    ["open"]: "openfence",
    ["close"]: "closefence"
};
SemanticProcessor.MML_TO_LIMIT_ = {
    MSUB: { type: "limlower", length: 1 },
    MUNDER: { type: "limlower", length: 1 },
    MSUP: { type: "limupper", length: 1 },
    MOVER: { type: "limupper", length: 1 },
    MSUBSUP: { type: "limboth", length: 2 },
    MUNDEROVER: { type: "limboth", length: 2 }
};
SemanticProcessor.MML_TO_BOUNDS_ = {
    MSUB: { type: "subscript", length: 1, accent: false },
    MSUP: { type: "superscript", length: 1, accent: false },
    MSUBSUP: { type: "subscript", length: 2, accent: false },
    MUNDER: { type: "underscore", length: 1, accent: true },
    MOVER: { type: "overscore", length: 1, accent: true },
    MUNDEROVER: { type: "underscore", length: 2, accent: true }
};
SemanticProcessor.CLASSIFY_FUNCTION_ = {
    ["integral"]: 'integral',
    ["sum"]: 'bigop',
    ["prefix function"]: 'prefix',
    ["limit function"]: 'prefix',
    ["simple function"]: 'prefix',
    ["composed function"]: 'prefix'
};
SemanticProcessor.MATHJAX_FONTS = {
    '-tex-caligraphic': "caligraphic",
    '-tex-caligraphic-bold': "caligraphic-bold",
    '-tex-calligraphic': "caligraphic",
    '-tex-calligraphic-bold': "caligraphic-bold",
    '-tex-oldstyle': "oldstyle",
    '-tex-oldstyle-bold': "oldstyle-bold",
    '-tex-mathit': "italic"
};


/***/ }),

/***/ 5656:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticSkeleton = void 0;
const BaseUtil = __webpack_require__(707);
const XpathUtil = __webpack_require__(5274);
const enrich_attr_1 = __webpack_require__(2298);
class SemanticSkeleton {
    constructor(skeleton) {
        this.parents = null;
        this.levelsMap = null;
        skeleton = skeleton === 0 ? skeleton : skeleton || [];
        this.array = skeleton;
    }
    static fromTree(tree) {
        return SemanticSkeleton.fromNode(tree.root);
    }
    static fromNode(node) {
        return new SemanticSkeleton(SemanticSkeleton.fromNode_(node));
    }
    static fromString(skel) {
        return new SemanticSkeleton(SemanticSkeleton.fromString_(skel));
    }
    static simpleCollapseStructure(strct) {
        return typeof strct === 'number';
    }
    static contentCollapseStructure(strct) {
        return (!!strct &&
            !SemanticSkeleton.simpleCollapseStructure(strct) &&
            strct[0] === 'c');
    }
    static interleaveIds(first, second) {
        return BaseUtil.interleaveLists(SemanticSkeleton.collapsedLeafs(first), SemanticSkeleton.collapsedLeafs(second));
    }
    static collapsedLeafs(...args) {
        const collapseStructure = (coll) => {
            if (SemanticSkeleton.simpleCollapseStructure(coll)) {
                return [coll];
            }
            coll = coll;
            return SemanticSkeleton.contentCollapseStructure(coll[1])
                ? coll.slice(2)
                : coll.slice(1);
        };
        return args.reduce((x, y) => x.concat(collapseStructure(y)), []);
    }
    static fromStructure(mml, tree) {
        return new SemanticSkeleton(SemanticSkeleton.tree_(mml, tree.root));
    }
    static combineContentChildren(semantic, content, children) {
        switch (semantic.type) {
            case "relseq":
            case "infixop":
            case "multirel":
                return BaseUtil.interleaveLists(children, content);
            case "prefixop":
                return content.concat(children);
            case "postfixop":
                return children.concat(content);
            case "fenced":
                children.unshift(content[0]);
                children.push(content[1]);
                return children;
            case "appl":
                return [children[0], content[0], children[1]];
            case "root":
                return [children[1], children[0]];
            case "row":
            case "line":
                if (content.length) {
                    children.unshift(content[0]);
                }
                return children;
            default:
                return children;
        }
    }
    static makeSexp_(struct) {
        if (SemanticSkeleton.simpleCollapseStructure(struct)) {
            return struct.toString();
        }
        if (SemanticSkeleton.contentCollapseStructure(struct)) {
            return ('(' +
                'c ' +
                struct.slice(1).map(SemanticSkeleton.makeSexp_).join(' ') +
                ')');
        }
        return ('(' + struct.map(SemanticSkeleton.makeSexp_).join(' ') + ')');
    }
    static fromString_(skeleton) {
        let str = skeleton.replace(/\(/g, '[');
        str = str.replace(/\)/g, ']');
        str = str.replace(/ /g, ',');
        str = str.replace(/c/g, '"c"');
        return JSON.parse(str);
    }
    static fromNode_(node) {
        if (!node) {
            return [];
        }
        const content = node.contentNodes;
        let contentStructure;
        if (content.length) {
            contentStructure = content.map(SemanticSkeleton.fromNode_);
            contentStructure.unshift('c');
        }
        const children = node.childNodes;
        if (!children.length) {
            return content.length ? [node.id, contentStructure] : node.id;
        }
        const structure = children.map(SemanticSkeleton.fromNode_);
        if (content.length) {
            structure.unshift(contentStructure);
        }
        structure.unshift(node.id);
        return structure;
    }
    static tree_(mml, node) {
        if (!node) {
            return [];
        }
        if (!node.childNodes.length) {
            return node.id;
        }
        const id = node.id;
        const skeleton = [id];
        const mmlChild = XpathUtil.evalXPath(`.//self::*[@${enrich_attr_1.Attribute.ID}=${id}]`, mml)[0];
        const children = SemanticSkeleton.combineContentChildren(node, node.contentNodes.map(function (x) {
            return x;
        }), node.childNodes.map(function (x) {
            return x;
        }));
        if (mmlChild) {
            SemanticSkeleton.addOwns_(mmlChild, children);
        }
        for (let i = 0, child; (child = children[i]); i++) {
            skeleton.push(SemanticSkeleton.tree_(mml, child));
        }
        return skeleton;
    }
    static addOwns_(node, children) {
        const collapsed = node.getAttribute(enrich_attr_1.Attribute.COLLAPSED);
        const leafs = collapsed
            ? SemanticSkeleton.realLeafs_(SemanticSkeleton.fromString(collapsed).array)
            : children.map((x) => x.id);
        node.setAttribute(enrich_attr_1.Attribute.OWNS, leafs.join(' '));
    }
    static realLeafs_(sexp) {
        if (SemanticSkeleton.simpleCollapseStructure(sexp)) {
            return [sexp];
        }
        if (SemanticSkeleton.contentCollapseStructure(sexp)) {
            return [];
        }
        sexp = sexp;
        let result = [];
        for (let i = 1; i < sexp.length; i++) {
            result = result.concat(SemanticSkeleton.realLeafs_(sexp[i]));
        }
        return result;
    }
    populate() {
        if (this.parents && this.levelsMap) {
            return;
        }
        this.parents = {};
        this.levelsMap = {};
        this.populate_(this.array, this.array, []);
    }
    toString() {
        return SemanticSkeleton.makeSexp_(this.array);
    }
    populate_(element, layer, parents) {
        if (SemanticSkeleton.simpleCollapseStructure(element)) {
            element = element;
            this.levelsMap[element] = layer;
            this.parents[element] =
                element === parents[0] ? parents.slice(1) : parents;
            return;
        }
        const newElement = SemanticSkeleton.contentCollapseStructure(element)
            ? element.slice(1)
            : element;
        const newParents = [newElement[0]].concat(parents);
        for (let i = 0, l = newElement.length; i < l; i++) {
            const current = newElement[i];
            this.populate_(current, element, newParents);
        }
    }
    isRoot(id) {
        const level = this.levelsMap[id];
        return id === level[0];
    }
    directChildren(id) {
        if (!this.isRoot(id)) {
            return [];
        }
        const level = this.levelsMap[id];
        return level.slice(1).map((child) => {
            if (SemanticSkeleton.simpleCollapseStructure(child)) {
                return child;
            }
            if (SemanticSkeleton.contentCollapseStructure(child)) {
                return child[1];
            }
            return child[0];
        });
    }
    subtreeNodes(id) {
        if (!this.isRoot(id)) {
            return [];
        }
        const subtreeNodes_ = (tree, nodes) => {
            if (SemanticSkeleton.simpleCollapseStructure(tree)) {
                nodes.push(tree);
                return;
            }
            tree = tree;
            if (SemanticSkeleton.contentCollapseStructure(tree)) {
                tree = tree.slice(1);
            }
            tree.forEach((x) => subtreeNodes_(x, nodes));
        };
        const level = this.levelsMap[id];
        const subtree = [];
        subtreeNodes_(level.slice(1), subtree);
        return subtree;
    }
}
exports.SemanticSkeleton = SemanticSkeleton;


/***/ }),

/***/ 7075:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticTree = void 0;
const DomUtil = __webpack_require__(5740);
const semantic_annotations_1 = __webpack_require__(7630);
const semantic_annotator_1 = __webpack_require__(9265);
const semantic_mathml_1 = __webpack_require__(7228);
const semantic_node_1 = __webpack_require__(5952);
const SemanticPred = __webpack_require__(5609);
__webpack_require__(94);
class SemanticTree {
    constructor(mathml) {
        this.mathml = mathml;
        this.parser = new semantic_mathml_1.SemanticMathml();
        this.root = this.parser.parse(mathml);
        this.collator = this.parser.getFactory().leafMap.collateMeaning();
        const newDefault = this.collator.newDefault();
        if (newDefault) {
            this.parser = new semantic_mathml_1.SemanticMathml();
            this.parser.getFactory().defaultMap = newDefault;
            this.root = this.parser.parse(mathml);
        }
        unitVisitor.visit(this.root, {});
        (0, semantic_annotations_1.annotate)(this.root);
    }
    static empty() {
        const empty = DomUtil.parseInput('<math/>');
        const stree = new SemanticTree(empty);
        stree.mathml = empty;
        return stree;
    }
    static fromNode(semantic, opt_mathml) {
        const stree = SemanticTree.empty();
        stree.root = semantic;
        if (opt_mathml) {
            stree.mathml = opt_mathml;
        }
        return stree;
    }
    static fromRoot(semantic, opt_mathml) {
        let root = semantic;
        while (root.parent) {
            root = root.parent;
        }
        const stree = SemanticTree.fromNode(root);
        if (opt_mathml) {
            stree.mathml = opt_mathml;
        }
        return stree;
    }
    static fromXml(xml) {
        const stree = SemanticTree.empty();
        if (xml.childNodes[0]) {
            stree.root = semantic_node_1.SemanticNode.fromXml(xml.childNodes[0]);
        }
        return stree;
    }
    xml(opt_brief) {
        const xml = DomUtil.parseInput('<stree></stree>');
        const xmlRoot = this.root.xml(xml.ownerDocument, opt_brief);
        xml.appendChild(xmlRoot);
        return xml;
    }
    toString(opt_brief) {
        return DomUtil.serializeXml(this.xml(opt_brief));
    }
    formatXml(opt_brief) {
        const xml = this.toString(opt_brief);
        return DomUtil.formatXml(xml);
    }
    displayTree() {
        this.root.displayTree();
    }
    replaceNode(oldNode, newNode) {
        const parent = oldNode.parent;
        if (!parent) {
            this.root = newNode;
            return;
        }
        parent.replaceChild(oldNode, newNode);
    }
    toJson() {
        const json = {};
        json['stree'] = this.root.toJson();
        return json;
    }
}
exports.SemanticTree = SemanticTree;
const unitVisitor = new semantic_annotator_1.SemanticVisitor('general', 'unit', (node, _info) => {
    if (node.type === "infixop" &&
        (node.role === "multiplication" ||
            node.role === "implicit")) {
        const children = node.childNodes;
        if (children.length &&
            (SemanticPred.isPureUnit(children[0]) ||
                SemanticPred.isUnitCounter(children[0])) &&
            node.childNodes.slice(1).every(SemanticPred.isPureUnit)) {
            node.role = "unit";
        }
    }
    return false;
});


/***/ }),

/***/ 4795:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.partitionNodes = exports.sliceNodes = exports.getEmbellishedInner = exports.addAttributes = exports.isZeroLength = exports.purgeNodes = exports.isOrphanedGlyph = exports.hasDisplayTag = exports.hasEmptyTag = exports.hasIgnoreTag = exports.hasLeafTag = exports.hasMathTag = exports.directSpeechKeys = exports.DISPLAYTAGS = exports.EMPTYTAGS = exports.IGNORETAGS = exports.LEAFTAGS = void 0;
const DomUtil = __webpack_require__(5740);
exports.LEAFTAGS = ['MO', 'MI', 'MN', 'MTEXT', 'MS', 'MSPACE'];
exports.IGNORETAGS = [
    'MERROR',
    'MPHANTOM',
    'MALIGNGROUP',
    'MALIGNMARK',
    'MPRESCRIPTS',
    'ANNOTATION',
    'ANNOTATION-XML'
];
exports.EMPTYTAGS = [
    'MATH',
    'MROW',
    'MPADDED',
    'MACTION',
    'NONE',
    'MSTYLE',
    'SEMANTICS'
];
exports.DISPLAYTAGS = ['MROOT', 'MSQRT'];
exports.directSpeechKeys = ['aria-label', 'exact-speech', 'alt'];
function hasMathTag(node) {
    return !!node && DomUtil.tagName(node) === 'MATH';
}
exports.hasMathTag = hasMathTag;
function hasLeafTag(node) {
    return !!node && exports.LEAFTAGS.indexOf(DomUtil.tagName(node)) !== -1;
}
exports.hasLeafTag = hasLeafTag;
function hasIgnoreTag(node) {
    return !!node && exports.IGNORETAGS.indexOf(DomUtil.tagName(node)) !== -1;
}
exports.hasIgnoreTag = hasIgnoreTag;
function hasEmptyTag(node) {
    return !!node && exports.EMPTYTAGS.indexOf(DomUtil.tagName(node)) !== -1;
}
exports.hasEmptyTag = hasEmptyTag;
function hasDisplayTag(node) {
    return !!node && exports.DISPLAYTAGS.indexOf(DomUtil.tagName(node)) !== -1;
}
exports.hasDisplayTag = hasDisplayTag;
function isOrphanedGlyph(node) {
    return (!!node &&
        DomUtil.tagName(node) === 'MGLYPH' &&
        !hasLeafTag(node.parentNode));
}
exports.isOrphanedGlyph = isOrphanedGlyph;
function purgeNodes(nodes) {
    const nodeArray = [];
    for (let i = 0, node; (node = nodes[i]); i++) {
        if (node.nodeType !== DomUtil.NodeType.ELEMENT_NODE) {
            continue;
        }
        const tagName = DomUtil.tagName(node);
        if (exports.IGNORETAGS.indexOf(tagName) !== -1) {
            continue;
        }
        if (exports.EMPTYTAGS.indexOf(tagName) !== -1 && node.childNodes.length === 0) {
            continue;
        }
        nodeArray.push(node);
    }
    return nodeArray;
}
exports.purgeNodes = purgeNodes;
function isZeroLength(length) {
    if (!length) {
        return false;
    }
    const negativeNamedSpaces = [
        'negativeveryverythinmathspace',
        'negativeverythinmathspace',
        'negativethinmathspace',
        'negativemediummathspace',
        'negativethickmathspace',
        'negativeverythickmathspace',
        'negativeveryverythickmathspace'
    ];
    if (negativeNamedSpaces.indexOf(length) !== -1) {
        return true;
    }
    const value = length.match(/[0-9.]+/);
    if (!value) {
        return false;
    }
    return parseFloat(value[0]) === 0;
}
exports.isZeroLength = isZeroLength;
function addAttributes(to, from) {
    if (from.hasAttributes()) {
        const attrs = from.attributes;
        for (let i = attrs.length - 1; i >= 0; i--) {
            const key = attrs[i].name;
            if (key.match(/^ext/)) {
                to.attributes[key] = attrs[i].value;
                to.nobreaking = true;
            }
            if (exports.directSpeechKeys.indexOf(key) !== -1) {
                to.attributes['ext-speech'] = attrs[i].value;
                to.nobreaking = true;
            }
            if (key.match(/texclass$/)) {
                to.attributes['texclass'] = attrs[i].value;
            }
            if (key === 'href') {
                to.attributes['href'] = attrs[i].value;
                to.nobreaking = true;
            }
        }
    }
}
exports.addAttributes = addAttributes;
function getEmbellishedInner(node) {
    if (node && node.embellished && node.childNodes.length > 0) {
        return getEmbellishedInner(node.childNodes[0]);
    }
    return node;
}
exports.getEmbellishedInner = getEmbellishedInner;
function sliceNodes(nodes, pred, opt_reverse) {
    if (opt_reverse) {
        nodes.reverse();
    }
    const head = [];
    for (let i = 0, node; (node = nodes[i]); i++) {
        if (pred(node)) {
            if (opt_reverse) {
                return {
                    head: nodes.slice(i + 1).reverse(),
                    div: node,
                    tail: head.reverse()
                };
            }
            return { head: head, div: node, tail: nodes.slice(i + 1) };
        }
        head.push(node);
    }
    if (opt_reverse) {
        return { head: [], div: null, tail: head.reverse() };
    }
    return { head: head, div: null, tail: [] };
}
exports.sliceNodes = sliceNodes;
function partitionNodes(nodes, pred) {
    let restNodes = nodes;
    const rel = [];
    const comp = [];
    let result = null;
    do {
        result = sliceNodes(restNodes, pred);
        comp.push(result.head);
        rel.push(result.div);
        restNodes = result.tail;
    } while (result.div);
    rel.pop();
    return { rel: rel, comp: comp };
}
exports.partitionNodes = partitionNodes;


/***/ }),

/***/ 6278:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractSpeechGenerator = void 0;
const engine_setup_1 = __webpack_require__(6828);
const EnrichAttr = __webpack_require__(2298);
const rebuild_stree_1 = __webpack_require__(1214);
const SpeechGeneratorUtil = __webpack_require__(9543);
class AbstractSpeechGenerator {
    constructor() {
        this.modality = EnrichAttr.addPrefix('speech');
        this.rebuilt_ = null;
        this.options_ = {};
    }
    getRebuilt() {
        return this.rebuilt_;
    }
    setRebuilt(rebuilt) {
        this.rebuilt_ = rebuilt;
    }
    setOptions(options) {
        this.options_ = options || {};
        this.modality = EnrichAttr.addPrefix(this.options_.modality || 'speech');
    }
    getOptions() {
        return this.options_;
    }
    start() { }
    end() { }
    generateSpeech(_node, xml) {
        if (!this.rebuilt_) {
            this.rebuilt_ = new rebuild_stree_1.RebuildStree(xml);
        }
        (0, engine_setup_1.setup)(this.options_);
        return SpeechGeneratorUtil.computeMarkup(this.getRebuilt().xml);
    }
}
exports.AbstractSpeechGenerator = AbstractSpeechGenerator;


/***/ }),

/***/ 1452:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AdhocSpeechGenerator = void 0;
const abstract_speech_generator_1 = __webpack_require__(6278);
class AdhocSpeechGenerator extends abstract_speech_generator_1.AbstractSpeechGenerator {
    getSpeech(node, xml) {
        const speech = this.generateSpeech(node, xml);
        node.setAttribute(this.modality, speech);
        return speech;
    }
}
exports.AdhocSpeechGenerator = AdhocSpeechGenerator;


/***/ }),

/***/ 5152:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorGenerator = void 0;
const enrich_attr_1 = __webpack_require__(2298);
const color_picker_1 = __webpack_require__(8396);
const rebuild_stree_1 = __webpack_require__(1214);
const WalkerUtil = __webpack_require__(1204);
const abstract_speech_generator_1 = __webpack_require__(6278);
class ColorGenerator extends abstract_speech_generator_1.AbstractSpeechGenerator {
    constructor() {
        super(...arguments);
        this.modality = (0, enrich_attr_1.addPrefix)('foreground');
        this.contrast = new color_picker_1.ContrastPicker();
    }
    static visitStree_(tree, leaves, ignore) {
        if (!tree.childNodes.length) {
            if (!ignore[tree.id]) {
                leaves.push(tree.id);
            }
            return;
        }
        if (tree.contentNodes.length) {
            if (tree.type === 'punctuated') {
                tree.contentNodes.forEach((x) => (ignore[x.id] = true));
            }
            if (tree.role !== 'implicit') {
                leaves.push(tree.contentNodes.map((x) => x.id));
            }
        }
        if (tree.childNodes.length) {
            if (tree.role === 'implicit') {
                const factors = [];
                let rest = [];
                for (const child of tree.childNodes) {
                    const tt = [];
                    ColorGenerator.visitStree_(child, tt, ignore);
                    if (tt.length <= 2) {
                        factors.push(tt.shift());
                    }
                    rest = rest.concat(tt);
                }
                leaves.push(factors);
                rest.forEach((x) => leaves.push(x));
                return;
            }
            tree.childNodes.forEach((x) => ColorGenerator.visitStree_(x, leaves, ignore));
        }
    }
    getSpeech(node, _xml) {
        return WalkerUtil.getAttribute(node, this.modality);
    }
    generateSpeech(node, _xml) {
        if (!this.getRebuilt()) {
            this.setRebuilt(new rebuild_stree_1.RebuildStree(node));
        }
        this.colorLeaves_(node);
        return WalkerUtil.getAttribute(node, this.modality);
    }
    colorLeaves_(node) {
        const leaves = [];
        ColorGenerator.visitStree_(this.getRebuilt().streeRoot, leaves, {});
        for (const id of leaves) {
            const color = this.contrast.generate();
            let success = false;
            if (Array.isArray(id)) {
                success = id
                    .map((x) => this.colorLeave_(node, x, color))
                    .reduce((x, y) => x || y, false);
            }
            else {
                success = this.colorLeave_(node, id.toString(), color);
            }
            if (success) {
                this.contrast.increment();
            }
        }
    }
    colorLeave_(node, id, color) {
        const aux = WalkerUtil.getBySemanticId(node, id);
        if (aux) {
            aux.setAttribute(this.modality, color);
            return true;
        }
        return false;
    }
}
exports.ColorGenerator = ColorGenerator;


/***/ }),

/***/ 6604:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DirectSpeechGenerator = void 0;
const WalkerUtil = __webpack_require__(1204);
const abstract_speech_generator_1 = __webpack_require__(6278);
class DirectSpeechGenerator extends abstract_speech_generator_1.AbstractSpeechGenerator {
    getSpeech(node, _xml) {
        return WalkerUtil.getAttribute(node, this.modality);
    }
}
exports.DirectSpeechGenerator = DirectSpeechGenerator;


/***/ }),

/***/ 3123:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DummySpeechGenerator = void 0;
const abstract_speech_generator_1 = __webpack_require__(6278);
class DummySpeechGenerator extends abstract_speech_generator_1.AbstractSpeechGenerator {
    getSpeech(_node, _xml) {
        return '';
    }
}
exports.DummySpeechGenerator = DummySpeechGenerator;


/***/ }),

/***/ 5858:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NodeSpeechGenerator = void 0;
const WalkerUtil = __webpack_require__(1204);
const tree_speech_generator_1 = __webpack_require__(4598);
class NodeSpeechGenerator extends tree_speech_generator_1.TreeSpeechGenerator {
    getSpeech(node, _xml) {
        super.getSpeech(node, _xml);
        return WalkerUtil.getAttribute(node, this.modality);
    }
}
exports.NodeSpeechGenerator = NodeSpeechGenerator;


/***/ }),

/***/ 9552:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.generatorMapping_ = exports.generator = void 0;
const adhoc_speech_generator_1 = __webpack_require__(1452);
const color_generator_1 = __webpack_require__(5152);
const direct_speech_generator_1 = __webpack_require__(6604);
const dummy_speech_generator_1 = __webpack_require__(3123);
const node_speech_generator_1 = __webpack_require__(5858);
const summary_speech_generator_1 = __webpack_require__(597);
const tree_speech_generator_1 = __webpack_require__(4598);
function generator(type) {
    const constructor = exports.generatorMapping_[type] || exports.generatorMapping_.Direct;
    return constructor();
}
exports.generator = generator;
exports.generatorMapping_ = {
    Adhoc: () => new adhoc_speech_generator_1.AdhocSpeechGenerator(),
    Color: () => new color_generator_1.ColorGenerator(),
    Direct: () => new direct_speech_generator_1.DirectSpeechGenerator(),
    Dummy: () => new dummy_speech_generator_1.DummySpeechGenerator(),
    Node: () => new node_speech_generator_1.NodeSpeechGenerator(),
    Summary: () => new summary_speech_generator_1.SummarySpeechGenerator(),
    Tree: () => new tree_speech_generator_1.TreeSpeechGenerator()
};


/***/ }),

/***/ 9543:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.computeSummary_ = exports.retrieveSummary = exports.connectAllMactions = exports.connectMactions = exports.nodeAtPosition_ = exports.computePrefix_ = exports.retrievePrefix = exports.addPrefix = exports.addModality = exports.addSpeech = exports.recomputeMarkup = exports.computeMarkup = exports.recomputeSpeech = exports.computeSpeech = void 0;
const AuralRendering = __webpack_require__(8290);
const DomUtil = __webpack_require__(5740);
const XpathUtil = __webpack_require__(5274);
const enrich_attr_1 = __webpack_require__(2298);
const speech_rule_engine_1 = __webpack_require__(2362);
const semantic_tree_1 = __webpack_require__(7075);
const WalkerUtil = __webpack_require__(1204);
function computeSpeech(xml) {
    return speech_rule_engine_1.SpeechRuleEngine.getInstance().evaluateNode(xml);
}
exports.computeSpeech = computeSpeech;
function recomputeSpeech(semantic) {
    const tree = semantic_tree_1.SemanticTree.fromNode(semantic);
    return computeSpeech(tree.xml());
}
exports.recomputeSpeech = recomputeSpeech;
function computeMarkup(tree) {
    const descrs = computeSpeech(tree);
    return AuralRendering.markup(descrs);
}
exports.computeMarkup = computeMarkup;
function recomputeMarkup(semantic) {
    const descrs = recomputeSpeech(semantic);
    return AuralRendering.markup(descrs);
}
exports.recomputeMarkup = recomputeMarkup;
function addSpeech(mml, semantic, snode) {
    const sxml = DomUtil.querySelectorAllByAttrValue(snode, 'id', semantic.id.toString())[0];
    const speech = sxml
        ? AuralRendering.markup(computeSpeech(sxml))
        : recomputeMarkup(semantic);
    mml.setAttribute(enrich_attr_1.Attribute.SPEECH, speech);
}
exports.addSpeech = addSpeech;
function addModality(mml, semantic, modality) {
    const markup = recomputeMarkup(semantic);
    mml.setAttribute(modality, markup);
}
exports.addModality = addModality;
function addPrefix(mml, semantic) {
    const speech = retrievePrefix(semantic);
    if (speech) {
        mml.setAttribute(enrich_attr_1.Attribute.PREFIX, speech);
    }
}
exports.addPrefix = addPrefix;
function retrievePrefix(semantic) {
    const descrs = computePrefix_(semantic);
    return AuralRendering.markup(descrs);
}
exports.retrievePrefix = retrievePrefix;
function computePrefix_(semantic) {
    const tree = semantic_tree_1.SemanticTree.fromRoot(semantic);
    const nodes = XpathUtil.evalXPath('.//*[@id="' + semantic.id + '"]', tree.xml());
    let node = nodes[0];
    if (nodes.length > 1) {
        node = nodeAtPosition_(semantic, nodes) || node;
    }
    return node
        ? speech_rule_engine_1.SpeechRuleEngine.getInstance().runInSetting({
            modality: 'prefix',
            domain: 'default',
            style: 'default',
            strict: true,
            speech: true
        }, function () {
            return speech_rule_engine_1.SpeechRuleEngine.getInstance().evaluateNode(node);
        })
        : [];
}
exports.computePrefix_ = computePrefix_;
function nodeAtPosition_(semantic, nodes) {
    const node = nodes[0];
    if (!semantic.parent) {
        return node;
    }
    const path = [];
    while (semantic) {
        path.push(semantic.id);
        semantic = semantic.parent;
    }
    const pathEquals = function (xml, path) {
        while (path.length &&
            path.shift().toString() === xml.getAttribute('id') &&
            xml.parentNode &&
            xml.parentNode.parentNode) {
            xml = xml.parentNode.parentNode;
        }
        return !path.length;
    };
    for (let i = 0, xml; (xml = nodes[i]); i++) {
        if (pathEquals(xml, path.slice())) {
            return xml;
        }
    }
    return node;
}
exports.nodeAtPosition_ = nodeAtPosition_;
function connectMactions(node, mml, stree) {
    const mactions = DomUtil.querySelectorAll(mml, 'maction');
    for (let i = 0, maction; (maction = mactions[i]); i++) {
        const aid = maction.getAttribute('id');
        const span = DomUtil.querySelectorAllByAttrValue(node, 'id', aid)[0];
        if (!span) {
            continue;
        }
        const lchild = maction.childNodes[1];
        const mid = lchild.getAttribute(enrich_attr_1.Attribute.ID);
        let cspan = WalkerUtil.getBySemanticId(node, mid);
        if (cspan && cspan.getAttribute(enrich_attr_1.Attribute.TYPE) !== 'dummy') {
            continue;
        }
        cspan = span.childNodes[0];
        if (cspan.getAttribute('sre-highlighter-added')) {
            continue;
        }
        const pid = lchild.getAttribute(enrich_attr_1.Attribute.PARENT);
        if (pid) {
            cspan.setAttribute(enrich_attr_1.Attribute.PARENT, pid);
        }
        cspan.setAttribute(enrich_attr_1.Attribute.TYPE, 'dummy');
        cspan.setAttribute(enrich_attr_1.Attribute.ID, mid);
        const cst = DomUtil.querySelectorAllByAttrValue(stree, 'id', mid)[0];
        cst.setAttribute('alternative', mid);
    }
}
exports.connectMactions = connectMactions;
function connectAllMactions(mml, stree) {
    const mactions = DomUtil.querySelectorAll(mml, 'maction');
    for (let i = 0, maction; (maction = mactions[i]); i++) {
        const lchild = maction.childNodes[1];
        const mid = lchild.getAttribute(enrich_attr_1.Attribute.ID);
        const cst = DomUtil.querySelectorAllByAttrValue(stree, 'id', mid)[0];
        cst.setAttribute('alternative', mid);
    }
}
exports.connectAllMactions = connectAllMactions;
function retrieveSummary(node) {
    const descrs = computeSummary_(node);
    return AuralRendering.markup(descrs);
}
exports.retrieveSummary = retrieveSummary;
function computeSummary_(node) {
    return node
        ? speech_rule_engine_1.SpeechRuleEngine.getInstance().runInSetting({ modality: 'summary', strict: false, speech: true }, function () {
            return speech_rule_engine_1.SpeechRuleEngine.getInstance().evaluateNode(node);
        })
        : [];
}
exports.computeSummary_ = computeSummary_;


/***/ }),

/***/ 597:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SummarySpeechGenerator = void 0;
const abstract_speech_generator_1 = __webpack_require__(6278);
const SpeechGeneratorUtil = __webpack_require__(9543);
class SummarySpeechGenerator extends abstract_speech_generator_1.AbstractSpeechGenerator {
    getSpeech(node, xml) {
        SpeechGeneratorUtil.connectAllMactions(xml, this.getRebuilt().xml);
        return this.generateSpeech(node, xml);
    }
}
exports.SummarySpeechGenerator = SummarySpeechGenerator;


/***/ }),

/***/ 4598:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TreeSpeechGenerator = void 0;
const enrich_attr_1 = __webpack_require__(2298);
const WalkerUtil = __webpack_require__(1204);
const abstract_speech_generator_1 = __webpack_require__(6278);
const SpeechGeneratorUtil = __webpack_require__(9543);
class TreeSpeechGenerator extends abstract_speech_generator_1.AbstractSpeechGenerator {
    getSpeech(node, xml) {
        const speech = this.generateSpeech(node, xml);
        const nodes = this.getRebuilt().nodeDict;
        for (const key in nodes) {
            const snode = nodes[key];
            const innerMml = WalkerUtil.getBySemanticId(xml, key);
            const innerNode = WalkerUtil.getBySemanticId(node, key);
            if (!innerMml || !innerNode) {
                continue;
            }
            if (!this.modality || this.modality === enrich_attr_1.Attribute.SPEECH) {
                SpeechGeneratorUtil.addSpeech(innerNode, snode, this.getRebuilt().xml);
            }
            else {
                SpeechGeneratorUtil.addModality(innerNode, snode, this.modality);
            }
            if (this.modality === enrich_attr_1.Attribute.SPEECH) {
                SpeechGeneratorUtil.addPrefix(innerNode, snode);
            }
        }
        return speech;
    }
}
exports.TreeSpeechGenerator = TreeSpeechGenerator;


/***/ }),

/***/ 313:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.INTERVALS = exports.makeLetter = exports.numberRules = exports.alphabetRules = exports.getFont = exports.makeInterval = exports.generate = exports.makeDomains_ = exports.Domains_ = exports.Base = exports.Embellish = exports.Font = void 0;
const engine_1 = __webpack_require__(5897);
const L10n = __webpack_require__(7491);
const locale_1 = __webpack_require__(4356);
const locale_util_1 = __webpack_require__(2536);
const MathCompoundStore = __webpack_require__(2780);
var Font;
(function (Font) {
    Font["BOLD"] = "bold";
    Font["BOLDFRAKTUR"] = "bold-fraktur";
    Font["BOLDITALIC"] = "bold-italic";
    Font["BOLDSCRIPT"] = "bold-script";
    Font["DOUBLESTRUCK"] = "double-struck";
    Font["FULLWIDTH"] = "fullwidth";
    Font["FRAKTUR"] = "fraktur";
    Font["ITALIC"] = "italic";
    Font["MONOSPACE"] = "monospace";
    Font["NORMAL"] = "normal";
    Font["SCRIPT"] = "script";
    Font["SANSSERIF"] = "sans-serif";
    Font["SANSSERIFITALIC"] = "sans-serif-italic";
    Font["SANSSERIFBOLD"] = "sans-serif-bold";
    Font["SANSSERIFBOLDITALIC"] = "sans-serif-bold-italic";
})(Font = exports.Font || (exports.Font = {}));
var Embellish;
(function (Embellish) {
    Embellish["SUPER"] = "super";
    Embellish["SUB"] = "sub";
    Embellish["CIRCLED"] = "circled";
    Embellish["PARENTHESIZED"] = "parenthesized";
    Embellish["PERIOD"] = "period";
    Embellish["NEGATIVECIRCLED"] = "negative-circled";
    Embellish["DOUBLECIRCLED"] = "double-circled";
    Embellish["CIRCLEDSANSSERIF"] = "circled-sans-serif";
    Embellish["NEGATIVECIRCLEDSANSSERIF"] = "negative-circled-sans-serif";
    Embellish["COMMA"] = "comma";
    Embellish["SQUARED"] = "squared";
    Embellish["NEGATIVESQUARED"] = "negative-squared";
})(Embellish = exports.Embellish || (exports.Embellish = {}));
var Base;
(function (Base) {
    Base["LATINCAP"] = "latinCap";
    Base["LATINSMALL"] = "latinSmall";
    Base["GREEKCAP"] = "greekCap";
    Base["GREEKSMALL"] = "greekSmall";
    Base["DIGIT"] = "digit";
})(Base = exports.Base || (exports.Base = {}));
exports.Domains_ = {
    small: ['default'],
    capital: ['default'],
    digit: ['default']
};
function makeDomains_() {
    const alph = locale_1.LOCALE.ALPHABETS;
    const combineKeys = (obj1, obj2) => {
        const result = {};
        Object.keys(obj1).forEach((k) => (result[k] = true));
        Object.keys(obj2).forEach((k) => (result[k] = true));
        return Object.keys(result);
    };
    exports.Domains_.small = combineKeys(alph.smallPrefix, alph.letterTrans);
    exports.Domains_.capital = combineKeys(alph.capPrefix, alph.letterTrans);
    exports.Domains_.digit = combineKeys(alph.digitPrefix, alph.digitTrans);
}
exports.makeDomains_ = makeDomains_;
function generate(locale) {
    const oldLocale = engine_1.default.getInstance().locale;
    engine_1.default.getInstance().locale = locale;
    L10n.setLocale();
    MathCompoundStore.addSymbolRules({ locale: locale });
    makeDomains_();
    const intervals = exports.INTERVALS;
    for (let i = 0, int; (int = intervals[i]); i++) {
        const keys = makeInterval(int.interval, int.subst);
        const letters = keys.map(function (x) {
            return String.fromCodePoint(parseInt(x, 16));
        });
        if ('offset' in int) {
            numberRules(keys, letters, int.font, int.category, int.offset || 0);
        }
        else {
            const alphabet = locale_1.LOCALE.ALPHABETS[int.base];
            alphabetRules(keys, letters, alphabet, int.font, int.category, !!int.capital);
        }
    }
    engine_1.default.getInstance().locale = oldLocale;
    L10n.setLocale();
}
exports.generate = generate;
function num2str(num) {
    const str = num.toString(16).toUpperCase();
    return str.length > 3 ? str : ('000' + str).slice(-4);
}
function makeInterval([a, b], subst) {
    const start = parseInt(a, 16);
    const end = parseInt(b, 16);
    const result = [];
    for (let i = start; i <= end; i++) {
        let key = num2str(i);
        const sub = subst[key];
        if (sub === false) {
            continue;
        }
        key = subst[key] || key;
        result.push(key);
    }
    return result;
}
exports.makeInterval = makeInterval;
function getFont(font) {
    const realFont = font === 'normal' || font === 'fullwidth'
        ? ''
        : locale_1.LOCALE.MESSAGES.font[font] || locale_1.LOCALE.MESSAGES.embellish[font] || '';
    return (0, locale_util_1.localeFontCombiner)(realFont);
}
exports.getFont = getFont;
function alphabetRules(keys, unicodes, letters, font, category, cap) {
    const realFont = getFont(font);
    for (let i = 0, key, unicode, letter; (key = keys[i]), (unicode = unicodes[i]), (letter = letters[i]); i++) {
        const prefixes = cap
            ? locale_1.LOCALE.ALPHABETS.capPrefix
            : locale_1.LOCALE.ALPHABETS.smallPrefix;
        const domains = cap ? exports.Domains_.capital : exports.Domains_.small;
        makeLetter(realFont.combiner, key, unicode, letter, realFont.font, prefixes, category, locale_1.LOCALE.ALPHABETS.letterTrans, domains);
    }
}
exports.alphabetRules = alphabetRules;
function numberRules(keys, unicodes, font, category, offset) {
    const realFont = getFont(font);
    for (let i = 0, key, unicode; (key = keys[i]), (unicode = unicodes[i]); i++) {
        const prefixes = locale_1.LOCALE.ALPHABETS.digitPrefix;
        const num = i + offset;
        makeLetter(realFont.combiner, key, unicode, num, realFont.font, prefixes, category, locale_1.LOCALE.ALPHABETS.digitTrans, exports.Domains_.digit);
    }
}
exports.numberRules = numberRules;
function makeLetter(combiner, key, unicode, letter, font, prefixes, category, transformers, domains) {
    for (let i = 0, domain; (domain = domains[i]); i++) {
        const transformer = domain in transformers ? transformers[domain] : transformers['default'];
        const prefix = domain in prefixes ? prefixes[domain] : prefixes['default'];
        MathCompoundStore.defineRule(key.toString(), domain, 'default', category, unicode, combiner(transformer(letter), font, prefix));
    }
}
exports.makeLetter = makeLetter;
exports.INTERVALS = [
    {
        interval: ['1D400', '1D419'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.BOLD
    },
    {
        interval: ['1D41A', '1D433'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.BOLD
    },
    {
        interval: ['1D56C', '1D585'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.BOLDFRAKTUR
    },
    {
        interval: ['1D586', '1D59F'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.BOLDFRAKTUR
    },
    {
        interval: ['1D468', '1D481'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.BOLDITALIC
    },
    {
        interval: ['1D482', '1D49B'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.BOLDITALIC
    },
    {
        interval: ['1D4D0', '1D4E9'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.BOLDSCRIPT
    },
    {
        interval: ['1D4EA', '1D503'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.BOLDSCRIPT
    },
    {
        interval: ['1D538', '1D551'],
        base: Base.LATINCAP,
        subst: {
            '1D53A': '2102',
            '1D53F': '210D',
            '1D545': '2115',
            '1D547': '2119',
            '1D548': '211A',
            '1D549': '211D',
            '1D551': '2124'
        },
        capital: true,
        category: 'Lu',
        font: Font.DOUBLESTRUCK
    },
    {
        interval: ['1D552', '1D56B'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.DOUBLESTRUCK
    },
    {
        interval: ['1D504', '1D51D'],
        base: Base.LATINCAP,
        subst: {
            '1D506': '212D',
            '1D50B': '210C',
            '1D50C': '2111',
            '1D515': '211C',
            '1D51D': '2128'
        },
        capital: true,
        category: 'Lu',
        font: Font.FRAKTUR
    },
    {
        interval: ['1D51E', '1D537'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.FRAKTUR
    },
    {
        interval: ['FF21', 'FF3A'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.FULLWIDTH
    },
    {
        interval: ['FF41', 'FF5A'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.FULLWIDTH
    },
    {
        interval: ['1D434', '1D44D'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.ITALIC
    },
    {
        interval: ['1D44E', '1D467'],
        base: Base.LATINSMALL,
        subst: { '1D455': '210E' },
        capital: false,
        category: 'Ll',
        font: Font.ITALIC
    },
    {
        interval: ['1D670', '1D689'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.MONOSPACE
    },
    {
        interval: ['1D68A', '1D6A3'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.MONOSPACE
    },
    {
        interval: ['0041', '005A'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.NORMAL
    },
    {
        interval: ['0061', '007A'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.NORMAL
    },
    {
        interval: ['1D49C', '1D4B5'],
        base: Base.LATINCAP,
        subst: {
            '1D49D': '212C',
            '1D4A0': '2130',
            '1D4A1': '2131',
            '1D4A3': '210B',
            '1D4A4': '2110',
            '1D4A7': '2112',
            '1D4A8': '2133',
            '1D4AD': '211B'
        },
        capital: true,
        category: 'Lu',
        font: Font.SCRIPT
    },
    {
        interval: ['1D4B6', '1D4CF'],
        base: Base.LATINSMALL,
        subst: { '1D4BA': '212F', '1D4BC': '210A', '1D4C4': '2134' },
        capital: false,
        category: 'Ll',
        font: Font.SCRIPT
    },
    {
        interval: ['1D5A0', '1D5B9'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.SANSSERIF
    },
    {
        interval: ['1D5BA', '1D5D3'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.SANSSERIF
    },
    {
        interval: ['1D608', '1D621'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.SANSSERIFITALIC
    },
    {
        interval: ['1D622', '1D63B'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.SANSSERIFITALIC
    },
    {
        interval: ['1D5D4', '1D5ED'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.SANSSERIFBOLD
    },
    {
        interval: ['1D5EE', '1D607'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.SANSSERIFBOLD
    },
    {
        interval: ['1D63C', '1D655'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.SANSSERIFBOLDITALIC
    },
    {
        interval: ['1D656', '1D66F'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.SANSSERIFBOLDITALIC
    },
    {
        interval: ['0391', '03A9'],
        base: Base.GREEKCAP,
        subst: { '03A2': '03F4' },
        capital: true,
        category: 'Lu',
        font: Font.NORMAL
    },
    {
        interval: ['03B0', '03D0'],
        base: Base.GREEKSMALL,
        subst: {
            '03B0': '2207',
            '03CA': '2202',
            '03CB': '03F5',
            '03CC': '03D1',
            '03CD': '03F0',
            '03CE': '03D5',
            '03CF': '03F1',
            '03D0': '03D6'
        },
        capital: false,
        category: 'Ll',
        font: Font.NORMAL
    },
    {
        interval: ['1D6A8', '1D6C0'],
        base: Base.GREEKCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.BOLD
    },
    {
        interval: ['1D6C1', '1D6E1'],
        base: Base.GREEKSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.BOLD
    },
    {
        interval: ['1D6E2', '1D6FA'],
        base: Base.GREEKCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.ITALIC
    },
    {
        interval: ['1D6FB', '1D71B'],
        base: Base.GREEKSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.ITALIC
    },
    {
        interval: ['1D71C', '1D734'],
        base: Base.GREEKCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.BOLDITALIC
    },
    {
        interval: ['1D735', '1D755'],
        base: Base.GREEKSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.BOLDITALIC
    },
    {
        interval: ['1D756', '1D76E'],
        base: Base.GREEKCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.SANSSERIFBOLD
    },
    {
        interval: ['1D76F', '1D78F'],
        base: Base.GREEKSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.SANSSERIFBOLD
    },
    {
        interval: ['1D790', '1D7A8'],
        base: Base.GREEKCAP,
        subst: {},
        capital: true,
        category: 'Lu',
        font: Font.SANSSERIFBOLDITALIC
    },
    {
        interval: ['1D7A9', '1D7C9'],
        base: Base.GREEKSMALL,
        subst: {},
        capital: false,
        category: 'Ll',
        font: Font.SANSSERIFBOLDITALIC
    },
    {
        interval: ['0030', '0039'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'Nd',
        font: Font.NORMAL
    },
    {
        interval: ['2070', '2079'],
        base: Base.DIGIT,
        subst: { 2071: '00B9', 2072: '00B2', 2073: '00B3' },
        offset: 0,
        category: 'No',
        font: Embellish.SUPER
    },
    {
        interval: ['2080', '2089'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'No',
        font: Embellish.SUB
    },
    {
        interval: ['245F', '2473'],
        base: Base.DIGIT,
        subst: { '245F': '24EA' },
        offset: 0,
        category: 'No',
        font: Embellish.CIRCLED
    },
    {
        interval: ['3251', '325F'],
        base: Base.DIGIT,
        subst: {},
        offset: 21,
        category: 'No',
        font: Embellish.CIRCLED
    },
    {
        interval: ['32B1', '32BF'],
        base: Base.DIGIT,
        subst: {},
        offset: 36,
        category: 'No',
        font: Embellish.CIRCLED
    },
    {
        interval: ['2474', '2487'],
        base: Base.DIGIT,
        subst: {},
        offset: 1,
        category: 'No',
        font: Embellish.PARENTHESIZED
    },
    {
        interval: ['2487', '249B'],
        base: Base.DIGIT,
        subst: { 2487: '1F100' },
        offset: 0,
        category: 'No',
        font: Embellish.PERIOD
    },
    {
        interval: ['2775', '277F'],
        base: Base.DIGIT,
        subst: { 2775: '24FF' },
        offset: 0,
        category: 'No',
        font: Embellish.NEGATIVECIRCLED
    },
    {
        interval: ['24EB', '24F4'],
        base: Base.DIGIT,
        subst: {},
        offset: 11,
        category: 'No',
        font: Embellish.NEGATIVECIRCLED
    },
    {
        interval: ['24F5', '24FE'],
        base: Base.DIGIT,
        subst: {},
        offset: 1,
        category: 'No',
        font: Embellish.DOUBLECIRCLED
    },
    {
        interval: ['277F', '2789'],
        base: Base.DIGIT,
        subst: { '277F': '1F10B' },
        offset: 0,
        category: 'No',
        font: Embellish.CIRCLEDSANSSERIF
    },
    {
        interval: ['2789', '2793'],
        base: Base.DIGIT,
        subst: { 2789: '1F10C' },
        offset: 0,
        category: 'No',
        font: Embellish.NEGATIVECIRCLEDSANSSERIF
    },
    {
        interval: ['FF10', 'FF19'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'Nd',
        font: Font.FULLWIDTH
    },
    {
        interval: ['1D7CE', '1D7D7'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'Nd',
        font: Font.BOLD
    },
    {
        interval: ['1D7D8', '1D7E1'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'Nd',
        font: Font.DOUBLESTRUCK
    },
    {
        interval: ['1D7E2', '1D7EB'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'Nd',
        font: Font.SANSSERIF
    },
    {
        interval: ['1D7EC', '1D7F5'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'Nd',
        font: Font.SANSSERIFBOLD
    },
    {
        interval: ['1D7F6', '1D7FF'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'Nd',
        font: Font.MONOSPACE
    },
    {
        interval: ['1F101', '1F10A'],
        base: Base.DIGIT,
        subst: {},
        offset: 0,
        category: 'No',
        font: Embellish.COMMA
    },
    {
        interval: ['24B6', '24CF'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'So',
        font: Embellish.CIRCLED
    },
    {
        interval: ['24D0', '24E9'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'So',
        font: Embellish.CIRCLED
    },
    {
        interval: ['1F110', '1F129'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'So',
        font: Embellish.PARENTHESIZED
    },
    {
        interval: ['249C', '24B5'],
        base: Base.LATINSMALL,
        subst: {},
        capital: false,
        category: 'So',
        font: Embellish.PARENTHESIZED
    },
    {
        interval: ['1F130', '1F149'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'So',
        font: Embellish.SQUARED
    },
    {
        interval: ['1F170', '1F189'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'So',
        font: Embellish.NEGATIVESQUARED
    },
    {
        interval: ['1F150', '1F169'],
        base: Base.LATINCAP,
        subst: {},
        capital: true,
        category: 'So',
        font: Embellish.NEGATIVECIRCLED
    }
];


/***/ }),

/***/ 8504:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Parser = exports.Comparator = exports.ClearspeakPreferences = void 0;
const engine_1 = __webpack_require__(5897);
const EngineConst = __webpack_require__(4440);
const dynamic_cstr_1 = __webpack_require__(1676);
const dynamic_cstr_2 = __webpack_require__(1676);
const MathCompoundStore = __webpack_require__(2780);
const speech_rule_engine_1 = __webpack_require__(2362);
class ClearspeakPreferences extends dynamic_cstr_1.DynamicCstr {
    constructor(cstr, preference) {
        super(cstr);
        this.preference = preference;
    }
    static comparator() {
        return new Comparator(engine_1.default.getInstance().dynamicCstr, dynamic_cstr_2.DynamicProperties.createProp([dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_2.Axis.LOCALE]], [dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_2.Axis.MODALITY]], [dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_2.Axis.DOMAIN]], [dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_2.Axis.STYLE]]));
    }
    static fromPreference(pref) {
        const pairs = pref.split(':');
        const preferences = {};
        const properties = PREFERENCES.getProperties();
        const validKeys = Object.keys(properties);
        for (let i = 0, key; (key = pairs[i]); i++) {
            const pair = key.split('_');
            if (validKeys.indexOf(pair[0]) === -1) {
                continue;
            }
            const value = pair[1];
            if (value &&
                value !== ClearspeakPreferences.AUTO &&
                properties[pair[0]].indexOf(value) !== -1) {
                preferences[pair[0]] = pair[1];
            }
        }
        return preferences;
    }
    static toPreference(pref) {
        const keys = Object.keys(pref);
        const str = [];
        for (let i = 0; i < keys.length; i++) {
            str.push(keys[i] + '_' + pref[keys[i]]);
        }
        return str.length ? str.join(':') : dynamic_cstr_1.DynamicCstr.DEFAULT_VALUE;
    }
    static getLocalePreferences(opt_dynamic) {
        const dynamic = opt_dynamic ||
            MathCompoundStore.enumerate(speech_rule_engine_1.SpeechRuleEngine.getInstance().enumerate());
        return ClearspeakPreferences.getLocalePreferences_(dynamic);
    }
    static smartPreferences(item, locale) {
        const prefs = ClearspeakPreferences.getLocalePreferences();
        const loc = prefs[locale];
        if (!loc) {
            return [];
        }
        const explorer = item['explorers']['speech'];
        const smart = ClearspeakPreferences.relevantPreferences(explorer.walker.getFocus().getSemanticPrimary());
        const previous = EngineConst.DOMAIN_TO_STYLES['clearspeak'];
        const items = [
            {
                type: 'radio',
                content: 'No Preferences',
                id: 'clearspeak-default',
                variable: 'speechRules'
            },
            {
                type: 'radio',
                content: 'Current Preferences',
                id: 'clearspeak-' + previous,
                variable: 'speechRules'
            },
            { type: 'rule' },
            { type: 'label', content: 'Preferences for ' + smart },
            { type: 'rule' }
        ];
        return items.concat(loc[smart].map(function (x) {
            const pair = x.split('_');
            return {
                type: 'radio',
                content: pair[1],
                id: 'clearspeak-' +
                    ClearspeakPreferences.addPreference(previous, pair[0], pair[1]),
                variable: 'speechRules'
            };
        }));
    }
    static relevantPreferences(node) {
        const roles = SEMANTIC_MAPPING_[node.type];
        if (!roles) {
            return 'ImpliedTimes';
        }
        return roles[node.role] || roles[''] || 'ImpliedTimes';
    }
    static findPreference(prefs, kind) {
        if (prefs === 'default') {
            return ClearspeakPreferences.AUTO;
        }
        const parsed = ClearspeakPreferences.fromPreference(prefs);
        return parsed[kind] || ClearspeakPreferences.AUTO;
    }
    static addPreference(prefs, kind, value) {
        if (prefs === 'default') {
            return kind + '_' + value;
        }
        const parsed = ClearspeakPreferences.fromPreference(prefs);
        parsed[kind] = value;
        return ClearspeakPreferences.toPreference(parsed);
    }
    static getLocalePreferences_(dynamic) {
        const result = {};
        for (const locale in dynamic) {
            if (!dynamic[locale]['speech'] ||
                !dynamic[locale]['speech']['clearspeak']) {
                continue;
            }
            const locPrefs = Object.keys(dynamic[locale]['speech']['clearspeak']);
            const prefs = (result[locale] = {});
            for (const axis in PREFERENCES.getProperties()) {
                const allSty = PREFERENCES.getProperties()[axis];
                const values = [axis + '_Auto'];
                if (allSty) {
                    for (const sty of allSty) {
                        if (locPrefs.indexOf(axis + '_' + sty) !== -1) {
                            values.push(axis + '_' + sty);
                        }
                    }
                }
                prefs[axis] = values;
            }
        }
        return result;
    }
    equal(cstr) {
        const top = super.equal(cstr);
        if (!top) {
            return false;
        }
        const keys = Object.keys(this.preference);
        const preference = cstr.preference;
        if (keys.length !== Object.keys(preference).length) {
            return false;
        }
        for (let i = 0, key; (key = keys[i]); i++) {
            if (this.preference[key] !== preference[key]) {
                return false;
            }
        }
        return true;
    }
}
exports.ClearspeakPreferences = ClearspeakPreferences;
ClearspeakPreferences.AUTO = 'Auto';
const PREFERENCES = new dynamic_cstr_2.DynamicProperties({
    AbsoluteValue: ['Auto', 'AbsEnd', 'Cardinality', 'Determinant'],
    Bar: ['Auto', 'Conjugate'],
    Caps: ['Auto', 'SayCaps'],
    CombinationPermutation: ['Auto', 'ChoosePermute'],
    Currency: ['Auto', 'Position', 'Prefix'],
    Ellipses: ['Auto', 'AndSoOn'],
    Enclosed: ['Auto', 'EndEnclose'],
    Exponent: [
        'Auto',
        'AfterPower',
        'Ordinal',
        'OrdinalPower',
        'Exponent'
    ],
    Fraction: [
        'Auto',
        'EndFrac',
        'FracOver',
        'General',
        'GeneralEndFrac',
        'Ordinal',
        'Over',
        'OverEndFrac',
        'Per'
    ],
    Functions: [
        'Auto',
        'None',
        'Reciprocal'
    ],
    ImpliedTimes: ['Auto', 'MoreImpliedTimes', 'None'],
    Log: ['Auto', 'LnAsNaturalLog'],
    Matrix: [
        'Auto',
        'Combinatoric',
        'EndMatrix',
        'EndVector',
        'SilentColNum',
        'SpeakColNum',
        'Vector'
    ],
    MultiLineLabel: [
        'Auto',
        'Case',
        'Constraint',
        'Equation',
        'Line',
        'None',
        'Row',
        'Step'
    ],
    MultiLineOverview: ['Auto', 'None'],
    MultiLinePausesBetweenColumns: ['Auto', 'Long', 'Short'],
    MultsymbolDot: ['Auto', 'Dot'],
    MultsymbolX: ['Auto', 'By', 'Cross'],
    Paren: [
        'Auto',
        'CoordPoint',
        'Interval',
        'Silent',
        'Speak',
        'SpeakNestingLevel'
    ],
    Prime: ['Auto', 'Angle', 'Length'],
    Roots: ['Auto', 'PosNegSqRoot', 'PosNegSqRootEnd', 'RootEnd'],
    SetMemberSymbol: ['Auto', 'Belongs', 'Element', 'Member', 'In'],
    Sets: ['Auto', 'SilentBracket', 'woAll'],
    TriangleSymbol: ['Auto', 'Delta'],
    Trig: [
        'Auto',
        'ArcTrig',
        'TrigInverse',
        'Reciprocal'
    ],
    VerticalLine: ['Auto', 'Divides', 'Given', 'SuchThat']
});
class Comparator extends dynamic_cstr_2.DefaultComparator {
    constructor(cstr, props) {
        super(cstr, props);
        this.preference =
            cstr instanceof ClearspeakPreferences ? cstr.preference : {};
    }
    match(cstr) {
        if (!(cstr instanceof ClearspeakPreferences)) {
            return super.match(cstr);
        }
        if (cstr.getComponents()[dynamic_cstr_2.Axis.STYLE] === 'default') {
            return true;
        }
        const keys = Object.keys(cstr.preference);
        for (let i = 0, key; (key = keys[i]); i++) {
            if (this.preference[key] !== cstr.preference[key]) {
                return false;
            }
        }
        return true;
    }
    compare(cstr1, cstr2) {
        const top = super.compare(cstr1, cstr2);
        if (top !== 0) {
            return top;
        }
        const pref1 = cstr1 instanceof ClearspeakPreferences;
        const pref2 = cstr2 instanceof ClearspeakPreferences;
        if (!pref1 && pref2) {
            return 1;
        }
        if (pref1 && !pref2) {
            return -1;
        }
        if (!pref1 && !pref2) {
            return 0;
        }
        const length1 = Object.keys(cstr1.preference).length;
        const length2 = Object.keys(cstr2.preference).length;
        return length1 > length2 ? -1 : length1 < length2 ? 1 : 0;
    }
}
exports.Comparator = Comparator;
class Parser extends dynamic_cstr_2.DynamicCstrParser {
    constructor() {
        super([dynamic_cstr_2.Axis.LOCALE, dynamic_cstr_2.Axis.MODALITY, dynamic_cstr_2.Axis.DOMAIN, dynamic_cstr_2.Axis.STYLE]);
    }
    parse(str) {
        const initial = super.parse(str);
        let style = initial.getValue(dynamic_cstr_2.Axis.STYLE);
        const locale = initial.getValue(dynamic_cstr_2.Axis.LOCALE);
        const modality = initial.getValue(dynamic_cstr_2.Axis.MODALITY);
        let pref = {};
        if (style !== dynamic_cstr_1.DynamicCstr.DEFAULT_VALUE) {
            pref = this.fromPreference(style);
            style = this.toPreference(pref);
        }
        return new ClearspeakPreferences({
            locale: locale,
            modality: modality,
            domain: 'clearspeak',
            style: style
        }, pref);
    }
    fromPreference(pref) {
        return ClearspeakPreferences.fromPreference(pref);
    }
    toPreference(pref) {
        return ClearspeakPreferences.toPreference(pref);
    }
}
exports.Parser = Parser;
const REVERSE_MAPPING = [
    [
        'AbsoluteValue',
        "fenced",
        "neutral",
        "metric"
    ],
    ['Bar', "overscore", "overaccent"],
    ['Caps', "identifier", "latinletter"],
    ['CombinationPermutation', "appl", "unknown"],
    ['Ellipses', "punctuation", "ellipsis"],
    ['Exponent', "superscript", ''],
    ['Fraction', "fraction", ''],
    ['Functions', "appl", "simple function"],
    ['ImpliedTimes', "operator", "implicit"],
    ['Log', "appl", "prefix function"],
    ['Matrix', "matrix", ''],
    ['Matrix', "vector", ''],
    ['MultiLineLabel', "multiline", "label"],
    ['MultiLineOverview', "multiline", "table"],
    ['MultiLinePausesBetweenColumns', "multiline", "table"],
    ['MultiLineLabel', "table", "label"],
    ['MultiLineOverview', "table", "table"],
    ['MultiLinePausesBetweenColumns', "table", "table"],
    ['MultiLineLabel', "cases", "label"],
    ['MultiLineOverview', "cases", "table"],
    ['MultiLinePausesBetweenColumns', "cases", "table"],
    ['MultsymbolDot', "operator", "multiplication"],
    ['MultsymbolX', "operator", "multiplication"],
    ['Paren', "fenced", "leftright"],
    ['Prime', "superscript", "prime"],
    ['Roots', "root", ''],
    ['Roots', "sqrt", ''],
    ['SetMemberSymbol', "relation", "element"],
    ['Sets', "fenced", "set extended"],
    ['TriangleSymbol', "identifier", "greekletter"],
    ['Trig', "appl", "prefix function"],
    ['VerticalLine', "punctuated", "vbar"]
];
const SEMANTIC_MAPPING_ = (function () {
    const result = {};
    for (let i = 0, triple; (triple = REVERSE_MAPPING[i]); i++) {
        const pref = triple[0];
        let role = result[triple[1]];
        if (!role) {
            role = {};
            result[triple[1]] = role;
        }
        role[triple[2]] = pref;
    }
    return result;
})();
engine_1.default.getInstance().comparators['clearspeak'] =
    ClearspeakPreferences.comparator;
engine_1.default.getInstance().parsers['clearspeak'] = new Parser();


/***/ }),

/***/ 5425:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ClearspeakRules = void 0;
const dynamic_cstr_1 = __webpack_require__(1676);
const StoreUtil = __webpack_require__(365);
const ClearspeakUtil = __webpack_require__(9912);
const MathspeakUtil = __webpack_require__(1378);
const NumbersUtil = __webpack_require__(8437);
const SpeechRules = __webpack_require__(7283);
function ClearspeakRules() {
    SpeechRules.addStore(dynamic_cstr_1.DynamicCstr.BASE_LOCALE + '.speech.clearspeak', '', {
        CTFpauseSeparator: StoreUtil.pauseSeparator,
        CTFnodeCounter: ClearspeakUtil.nodeCounter,
        CTFcontentIterator: StoreUtil.contentIterator,
        CSFvulgarFraction: NumbersUtil.vulgarFraction,
        CQFvulgarFractionSmall: ClearspeakUtil.isSmallVulgarFraction,
        CQFcellsSimple: ClearspeakUtil.allCellsSimple,
        CSFordinalExponent: ClearspeakUtil.ordinalExponent,
        CSFwordOrdinal: ClearspeakUtil.wordOrdinal,
        CQFmatchingFences: ClearspeakUtil.matchingFences,
        CSFnestingDepth: ClearspeakUtil.nestingDepth,
        CQFfencedArguments: ClearspeakUtil.fencedArguments,
        CQFsimpleArguments: ClearspeakUtil.simpleArguments,
        CQFspaceoutNumber: MathspeakUtil.spaceoutNumber
    });
}
exports.ClearspeakRules = ClearspeakRules;


/***/ }),

/***/ 9912:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wordOrdinal = exports.layoutFactor_ = exports.fencedFactor_ = exports.simpleFactor_ = exports.simpleArguments = exports.fencedArguments = exports.insertNesting = exports.matchingFences = exports.nestingDepth = exports.NESTING_DEPTH = exports.ordinalExponent = exports.allTextLastContent_ = exports.isUnitExpression = exports.isSmallVulgarFraction = exports.allCellsSimple = exports.allIndices_ = exports.isInteger_ = exports.simpleCell_ = exports.simpleNode = exports.hasPreference = exports.isSimpleFraction_ = exports.isSimpleNumber_ = exports.isNumber_ = exports.isLetter_ = exports.isSimple_ = exports.isSimpleLetters_ = exports.isSimpleDegree_ = exports.isSimpleNegative_ = exports.isSimpleFunction_ = exports.isSimpleExpression = exports.nodeCounter = void 0;
const DomUtil = __webpack_require__(5740);
const engine_1 = __webpack_require__(5897);
const XpathUtil = __webpack_require__(5274);
const locale_1 = __webpack_require__(4356);
const transformers_1 = __webpack_require__(4977);
const grammar_1 = __webpack_require__(2105);
const StoreUtil = __webpack_require__(365);
const semantic_annotations_1 = __webpack_require__(7630);
const semantic_annotator_1 = __webpack_require__(9265);
const semantic_attr_1 = __webpack_require__(3588);
function nodeCounter(nodes, context) {
    const split = context.split('-');
    const func = StoreUtil.nodeCounter(nodes, split[0] || '');
    const sep = split[1] || '';
    const init = split[2] || '';
    let first = true;
    return function () {
        const result = func();
        if (first) {
            first = false;
            return init + result + sep;
        }
        else {
            return result + sep;
        }
    };
}
exports.nodeCounter = nodeCounter;
function isSimpleExpression(node) {
    return (isSimpleNumber_(node) ||
        isSimpleLetters_(node) ||
        isSimpleDegree_(node) ||
        isSimpleNegative_(node) ||
        isSimpleFunction_(node));
}
exports.isSimpleExpression = isSimpleExpression;
function isSimpleFunction_(node) {
    return (node.type === "appl" &&
        (node.childNodes[0].role === "prefix function" ||
            node.childNodes[0].role === "simple function") &&
        (isSimple_(node.childNodes[1]) ||
            (node.childNodes[1].type === "fenced" &&
                isSimple_(node.childNodes[1].childNodes[0]))));
}
exports.isSimpleFunction_ = isSimpleFunction_;
function isSimpleNegative_(node) {
    return (node.type === "prefixop" &&
        node.role === "negative" &&
        isSimple_(node.childNodes[0]) &&
        node.childNodes[0].type !== "prefixop" &&
        node.childNodes[0].type !== "appl" &&
        node.childNodes[0].type !== "punctuated");
}
exports.isSimpleNegative_ = isSimpleNegative_;
function isSimpleDegree_(node) {
    return (node.type === "punctuated" &&
        node.role === "endpunct" &&
        node.childNodes.length === 2 &&
        node.childNodes[1].role === "degree" &&
        (isLetter_(node.childNodes[0]) ||
            isNumber_(node.childNodes[0]) ||
            (node.childNodes[0].type === "prefixop" &&
                node.childNodes[0].role === "negative" &&
                (isLetter_(node.childNodes[0].childNodes[0]) ||
                    isNumber_(node.childNodes[0].childNodes[0])))));
}
exports.isSimpleDegree_ = isSimpleDegree_;
function isSimpleLetters_(node) {
    return (isLetter_(node) ||
        (node.type === "infixop" &&
            node.role === "implicit" &&
            ((node.childNodes.length === 2 &&
                (isLetter_(node.childNodes[0]) ||
                    isSimpleNumber_(node.childNodes[0])) &&
                isLetter_(node.childNodes[1])) ||
                (node.childNodes.length === 3 &&
                    isSimpleNumber_(node.childNodes[0]) &&
                    isLetter_(node.childNodes[1]) &&
                    isLetter_(node.childNodes[2])))));
}
exports.isSimpleLetters_ = isSimpleLetters_;
function isSimple_(node) {
    return node.hasAnnotation('clearspeak', 'simple');
}
exports.isSimple_ = isSimple_;
function isLetter_(node) {
    return (node.type === "identifier" &&
        (node.role === "latinletter" ||
            node.role === "greekletter" ||
            node.role === "otherletter" ||
            node.role === "simple function"));
}
exports.isLetter_ = isLetter_;
function isNumber_(node) {
    return (node.type === "number" &&
        (node.role === "integer" || node.role === "float"));
}
exports.isNumber_ = isNumber_;
function isSimpleNumber_(node) {
    return isNumber_(node) || isSimpleFraction_(node);
}
exports.isSimpleNumber_ = isSimpleNumber_;
function isSimpleFraction_(node) {
    if (hasPreference('Fraction_Over') || hasPreference('Fraction_FracOver')) {
        return false;
    }
    if (node.type !== "fraction" ||
        node.role !== "vulgar") {
        return false;
    }
    if (hasPreference('Fraction_Ordinal')) {
        return true;
    }
    const enumerator = parseInt(node.childNodes[0].textContent, 10);
    const denominator = parseInt(node.childNodes[1].textContent, 10);
    return (enumerator > 0 && enumerator < 20 && denominator > 0 && denominator < 11);
}
exports.isSimpleFraction_ = isSimpleFraction_;
function hasPreference(pref) {
    return engine_1.default.getInstance().style === pref;
}
exports.hasPreference = hasPreference;
(0, semantic_annotations_1.register)(new semantic_annotator_1.SemanticAnnotator('clearspeak', 'simple', function (node) {
    return isSimpleExpression(node) ? 'simple' : '';
}));
function simpleNode(node) {
    if (!node.hasAttribute('annotation')) {
        return false;
    }
    const annotation = node.getAttribute('annotation');
    return !!/clearspeak:simple$|clearspeak:simple;/.exec(annotation);
}
exports.simpleNode = simpleNode;
function simpleCell_(node) {
    if (simpleNode(node)) {
        return true;
    }
    if (node.tagName !== "subscript") {
        return false;
    }
    const children = node.childNodes[0].childNodes;
    const index = children[1];
    return (children[0].tagName === "identifier" &&
        (isInteger_(index) ||
            (index.tagName === "infixop" &&
                index.hasAttribute('role') &&
                index.getAttribute('role') === "implicit" &&
                allIndices_(index))));
}
exports.simpleCell_ = simpleCell_;
function isInteger_(node) {
    return (node.tagName === "number" &&
        node.hasAttribute('role') &&
        node.getAttribute('role') === "integer");
}
exports.isInteger_ = isInteger_;
function allIndices_(node) {
    const nodes = XpathUtil.evalXPath('children/*', node);
    return nodes.every((x) => isInteger_(x) || x.tagName === "identifier");
}
exports.allIndices_ = allIndices_;
function allCellsSimple(node) {
    const xpath = node.tagName === "matrix"
        ? 'children/row/children/cell/children/*'
        : 'children/line/children/*';
    const nodes = XpathUtil.evalXPath(xpath, node);
    const result = nodes.every(simpleCell_);
    return result ? [node] : [];
}
exports.allCellsSimple = allCellsSimple;
function isSmallVulgarFraction(node) {
    return (0, transformers_1.vulgarFractionSmall)(node, 20, 11) ? [node] : [];
}
exports.isSmallVulgarFraction = isSmallVulgarFraction;
function isUnitExpression(node) {
    return (node.type === "text" ||
        (node.type === "punctuated" &&
            node.role === "text" &&
            isNumber_(node.childNodes[0]) &&
            allTextLastContent_(node.childNodes.slice(1))) ||
        (node.type === "identifier" &&
            node.role === "unit") ||
        (node.type === "infixop" &&
            (node.role === "implicit" || node.role === "unit")));
}
exports.isUnitExpression = isUnitExpression;
function allTextLastContent_(nodes) {
    for (let i = 0; i < nodes.length - 1; i++) {
        if (!(nodes[i].type === "text" && nodes[i].textContent === '')) {
            return false;
        }
    }
    return nodes[nodes.length - 1].type === "text";
}
exports.allTextLastContent_ = allTextLastContent_;
(0, semantic_annotations_1.register)(new semantic_annotator_1.SemanticAnnotator('clearspeak', 'unit', function (node) {
    return isUnitExpression(node) ? 'unit' : '';
}));
function ordinalExponent(node) {
    const num = parseInt(node.textContent, 10);
    if (isNaN(num)) {
        return node.textContent;
    }
    return num > 10
        ? locale_1.LOCALE.NUMBERS.numericOrdinal(num)
        : locale_1.LOCALE.NUMBERS.wordOrdinal(num);
}
exports.ordinalExponent = ordinalExponent;
exports.NESTING_DEPTH = null;
function nestingDepth(node) {
    let count = 0;
    const fence = node.textContent;
    const index = node.getAttribute('role') === 'open' ? 0 : 1;
    let parent = node.parentNode;
    while (parent) {
        if (parent.tagName === "fenced" &&
            parent.childNodes[0].childNodes[index].textContent === fence) {
            count++;
        }
        parent = parent.parentNode;
    }
    exports.NESTING_DEPTH = count > 1 ? locale_1.LOCALE.NUMBERS.wordOrdinal(count) : '';
    return exports.NESTING_DEPTH;
}
exports.nestingDepth = nestingDepth;
function matchingFences(node) {
    const sibling = node.previousSibling;
    let left, right;
    if (sibling) {
        left = sibling;
        right = node;
    }
    else {
        left = node;
        right = node.nextSibling;
    }
    if (!right) {
        return [];
    }
    return (0, semantic_attr_1.isMatchingFence)(left.textContent, right.textContent) ? [node] : [];
}
exports.matchingFences = matchingFences;
function insertNesting(text, correction) {
    if (!correction || !text) {
        return text;
    }
    const start = text.match(/^(open|close) /);
    if (!start) {
        return correction + ' ' + text;
    }
    return start[0] + correction + ' ' + text.substring(start[0].length);
}
exports.insertNesting = insertNesting;
grammar_1.Grammar.getInstance().setCorrection('insertNesting', insertNesting);
function fencedArguments(node) {
    const content = DomUtil.toArray(node.parentNode.childNodes);
    const children = XpathUtil.evalXPath('../../children/*', node);
    const index = content.indexOf(node);
    return fencedFactor_(children[index]) || fencedFactor_(children[index + 1])
        ? [node]
        : [];
}
exports.fencedArguments = fencedArguments;
function simpleArguments(node) {
    const content = DomUtil.toArray(node.parentNode.childNodes);
    const children = XpathUtil.evalXPath('../../children/*', node);
    const index = content.indexOf(node);
    return simpleFactor_(children[index]) &&
        children[index + 1] &&
        (simpleFactor_(children[index + 1]) ||
            children[index + 1].tagName === "root" ||
            children[index + 1].tagName === "sqrt" ||
            (children[index + 1].tagName === "superscript" &&
                children[index + 1].childNodes[0].childNodes[0] &&
                (children[index + 1].childNodes[0].childNodes[0]
                    .tagName === "number" ||
                    children[index + 1].childNodes[0].childNodes[0]
                        .tagName === "identifier") &&
                (children[index + 1].childNodes[0].childNodes[1].textContent === '2' ||
                    children[index + 1].childNodes[0].childNodes[1].textContent === '3')))
        ? [node]
        : [];
}
exports.simpleArguments = simpleArguments;
function simpleFactor_(node) {
    return (!!node &&
        (node.tagName === "number" ||
            node.tagName === "identifier" ||
            node.tagName === "function" ||
            node.tagName === "appl" ||
            node.tagName === "fraction"));
}
exports.simpleFactor_ = simpleFactor_;
function fencedFactor_(node) {
    return (node &&
        (node.tagName === "fenced" ||
            (node.hasAttribute('role') &&
                node.getAttribute('role') === "leftright") ||
            layoutFactor_(node)));
}
exports.fencedFactor_ = fencedFactor_;
function layoutFactor_(node) {
    return (!!node &&
        (node.tagName === "matrix" ||
            node.tagName === "vector"));
}
exports.layoutFactor_ = layoutFactor_;
function wordOrdinal(node) {
    return locale_1.LOCALE.NUMBERS.wordOrdinal(parseInt(node.textContent, 10));
}
exports.wordOrdinal = wordOrdinal;


/***/ }),

/***/ 6141:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadAjax = exports.loadFileSync = exports.loadFile = exports.parseMaps = exports.retrieveFiles = exports.standardLoader = exports.loadLocale = exports.store = void 0;
const BrowserUtil = __webpack_require__(2139);
const engine_1 = __webpack_require__(5897);
const EngineConst = __webpack_require__(4440);
const FileUtil = __webpack_require__(7248);
const system_external_1 = __webpack_require__(2315);
const dynamic_cstr_1 = __webpack_require__(1676);
const MathCompoundStore = __webpack_require__(2780);
const speech_rule_engine_1 = __webpack_require__(2362);
const l10n_1 = __webpack_require__(7491);
const AlphabetGenerator = __webpack_require__(313);
exports.store = MathCompoundStore;
const addSymbols = {
    functions: MathCompoundStore.addFunctionRules,
    symbols: MathCompoundStore.addSymbolRules,
    units: MathCompoundStore.addUnitRules,
    si: MathCompoundStore.setSiPrefixes
};
let _init = false;
function loadLocale(locale = engine_1.default.getInstance().locale) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!_init) {
            _loadLocale(dynamic_cstr_1.DynamicCstr.BASE_LOCALE);
            _init = true;
        }
        return engine_1.EnginePromise.promises[dynamic_cstr_1.DynamicCstr.BASE_LOCALE].then(() => __awaiter(this, void 0, void 0, function* () {
            const defLoc = engine_1.default.getInstance().defaultLocale;
            if (defLoc) {
                _loadLocale(defLoc);
                return engine_1.EnginePromise.promises[defLoc].then(() => __awaiter(this, void 0, void 0, function* () {
                    _loadLocale(locale);
                    return engine_1.EnginePromise.promises[locale];
                }));
            }
            _loadLocale(locale);
            return engine_1.EnginePromise.promises[locale];
        }));
    });
}
exports.loadLocale = loadLocale;
function _loadLocale(locale = engine_1.default.getInstance().locale) {
    if (!engine_1.EnginePromise.loaded[locale]) {
        engine_1.EnginePromise.loaded[locale] = [false, false];
        retrieveMaps(locale);
    }
}
function loadMethod() {
    if (engine_1.default.getInstance().customLoader) {
        return engine_1.default.getInstance().customLoader;
    }
    return standardLoader();
}
function standardLoader() {
    switch (engine_1.default.getInstance().mode) {
        case EngineConst.Mode.ASYNC:
            return loadFile;
        case EngineConst.Mode.HTTP:
            return loadAjax;
        case EngineConst.Mode.SYNC:
        default:
            return loadFileSync;
    }
}
exports.standardLoader = standardLoader;
function retrieveFiles(locale) {
    const loader = loadMethod();
    const promise = new Promise((res) => {
        const inner = loader(locale);
        inner.then((str) => {
            parseMaps(str);
            engine_1.EnginePromise.loaded[locale] = [true, true];
            res(locale);
        }, (_err) => {
            engine_1.EnginePromise.loaded[locale] = [true, false];
            console.error(`Unable to load locale: ${locale}`);
            engine_1.default.getInstance().locale = engine_1.default.getInstance().defaultLocale;
            res(locale);
        });
    });
    engine_1.EnginePromise.promises[locale] = promise;
}
exports.retrieveFiles = retrieveFiles;
function parseMaps(json) {
    const js = JSON.parse(json);
    addMaps(js);
}
exports.parseMaps = parseMaps;
function addMaps(json, opt_locale) {
    let generate = true;
    for (let i = 0, key; (key = Object.keys(json)[i]); i++) {
        const info = key.split('/');
        if (opt_locale && opt_locale !== info[0]) {
            continue;
        }
        if (info[1] === 'rules') {
            speech_rule_engine_1.SpeechRuleEngine.getInstance().addStore(json[key]);
        }
        else if (info[1] === 'messages') {
            (0, l10n_1.completeLocale)(json[key]);
        }
        else {
            if (generate) {
                AlphabetGenerator.generate(info[0]);
                generate = false;
            }
            json[key].forEach(addSymbols[info[1]]);
        }
    }
}
function retrieveMaps(locale) {
    if (engine_1.default.getInstance().isIE &&
        engine_1.default.getInstance().mode === EngineConst.Mode.HTTP) {
        getJsonIE_(locale);
        return;
    }
    retrieveFiles(locale);
}
function getJsonIE_(locale, opt_count) {
    let count = opt_count || 1;
    if (!BrowserUtil.mapsForIE) {
        if (count <= 5) {
            setTimeout((() => getJsonIE_(locale, count++)).bind(this), 300);
        }
        return;
    }
    addMaps(BrowserUtil.mapsForIE, locale);
}
function loadFile(locale) {
    const file = FileUtil.localePath(locale);
    return new Promise((res, rej) => {
        system_external_1.default.fs.readFile(file, 'utf8', (err, json) => {
            if (err) {
                return rej(err);
            }
            res(json);
        });
    });
}
exports.loadFile = loadFile;
function loadFileSync(locale) {
    const file = FileUtil.localePath(locale);
    return new Promise((res, rej) => {
        let str = '{}';
        try {
            str = system_external_1.default.fs.readFileSync(file, 'utf8');
        }
        catch (err) {
            return rej(err);
        }
        res(str);
    });
}
exports.loadFileSync = loadFileSync;
function loadAjax(locale) {
    const file = FileUtil.localePath(locale);
    const httpRequest = new XMLHttpRequest();
    return new Promise((res, rej) => {
        httpRequest.onreadystatechange = function () {
            if (httpRequest.readyState === 4) {
                const status = httpRequest.status;
                if (status === 0 || (status >= 200 && status < 400)) {
                    res(httpRequest.responseText);
                }
                else {
                    rej(status);
                }
            }
        };
        httpRequest.open('GET', file, true);
        httpRequest.send();
    });
}
exports.loadAjax = loadAjax;


/***/ }),

/***/ 7088:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.leftSubscriptBrief = exports.leftSuperscriptBrief = exports.leftSubscriptVerbose = exports.leftSuperscriptVerbose = exports.baselineBrief = exports.baselineVerbose = void 0;
const MathspeakUtil = __webpack_require__(1378);
function baselineVerbose(node) {
    const baseline = MathspeakUtil.baselineVerbose(node);
    return baseline.replace(/-$/, '');
}
exports.baselineVerbose = baselineVerbose;
function baselineBrief(node) {
    const baseline = MathspeakUtil.baselineBrief(node);
    return baseline.replace(/-$/, '');
}
exports.baselineBrief = baselineBrief;
function leftSuperscriptVerbose(node) {
    const leftIndex = MathspeakUtil.superscriptVerbose(node);
    return leftIndex.replace(/^exposant/, 'exposant gauche');
}
exports.leftSuperscriptVerbose = leftSuperscriptVerbose;
function leftSubscriptVerbose(node) {
    const leftIndex = MathspeakUtil.subscriptVerbose(node);
    return leftIndex.replace(/^indice/, 'indice gauche');
}
exports.leftSubscriptVerbose = leftSubscriptVerbose;
function leftSuperscriptBrief(node) {
    const leftIndex = MathspeakUtil.superscriptBrief(node);
    return leftIndex.replace(/^sup/, 'sup gauche');
}
exports.leftSuperscriptBrief = leftSuperscriptBrief;
function leftSubscriptBrief(node) {
    const leftIndex = MathspeakUtil.subscriptBrief(node);
    return leftIndex.replace(/^sub/, 'sub gauche');
}
exports.leftSubscriptBrief = leftSubscriptBrief;


/***/ }),

/***/ 9577:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MathspeakRules = void 0;
const dynamic_cstr_1 = __webpack_require__(1676);
const StoreUtil = __webpack_require__(365);
const MathspeakFrenchUtil = __webpack_require__(7088);
const MathspeakUtil = __webpack_require__(1378);
const NumbersUtil = __webpack_require__(8437);
const SpeechRules = __webpack_require__(7283);
const UnitUtil = __webpack_require__(7598);
function MathspeakRules() {
    SpeechRules.addStore(dynamic_cstr_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', '', {
        CQFspaceoutNumber: MathspeakUtil.spaceoutNumber,
        CQFspaceoutIdentifier: MathspeakUtil.spaceoutIdentifier,
        CSFspaceoutText: MathspeakUtil.spaceoutText,
        CSFopenFracVerbose: MathspeakUtil.openingFractionVerbose,
        CSFcloseFracVerbose: MathspeakUtil.closingFractionVerbose,
        CSFoverFracVerbose: MathspeakUtil.overFractionVerbose,
        CSFopenFracBrief: MathspeakUtil.openingFractionBrief,
        CSFcloseFracBrief: MathspeakUtil.closingFractionBrief,
        CSFopenFracSbrief: MathspeakUtil.openingFractionSbrief,
        CSFcloseFracSbrief: MathspeakUtil.closingFractionSbrief,
        CSFoverFracSbrief: MathspeakUtil.overFractionSbrief,
        CSFvulgarFraction: NumbersUtil.vulgarFraction,
        CQFvulgarFractionSmall: MathspeakUtil.isSmallVulgarFraction,
        CSFopenRadicalVerbose: MathspeakUtil.openingRadicalVerbose,
        CSFcloseRadicalVerbose: MathspeakUtil.closingRadicalVerbose,
        CSFindexRadicalVerbose: MathspeakUtil.indexRadicalVerbose,
        CSFopenRadicalBrief: MathspeakUtil.openingRadicalBrief,
        CSFcloseRadicalBrief: MathspeakUtil.closingRadicalBrief,
        CSFindexRadicalBrief: MathspeakUtil.indexRadicalBrief,
        CSFopenRadicalSbrief: MathspeakUtil.openingRadicalSbrief,
        CSFindexRadicalSbrief: MathspeakUtil.indexRadicalSbrief,
        CQFisSmallRoot: MathspeakUtil.smallRoot,
        CSFsuperscriptVerbose: MathspeakUtil.superscriptVerbose,
        CSFsuperscriptBrief: MathspeakUtil.superscriptBrief,
        CSFsubscriptVerbose: MathspeakUtil.subscriptVerbose,
        CSFsubscriptBrief: MathspeakUtil.subscriptBrief,
        CSFbaselineVerbose: MathspeakUtil.baselineVerbose,
        CSFbaselineBrief: MathspeakUtil.baselineBrief,
        CSFleftsuperscriptVerbose: MathspeakUtil.superscriptVerbose,
        CSFleftsubscriptVerbose: MathspeakUtil.subscriptVerbose,
        CSFrightsuperscriptVerbose: MathspeakUtil.superscriptVerbose,
        CSFrightsubscriptVerbose: MathspeakUtil.subscriptVerbose,
        CSFleftsuperscriptBrief: MathspeakUtil.superscriptBrief,
        CSFleftsubscriptBrief: MathspeakUtil.subscriptBrief,
        CSFrightsuperscriptBrief: MathspeakUtil.superscriptBrief,
        CSFrightsubscriptBrief: MathspeakUtil.subscriptBrief,
        CSFunderscript: MathspeakUtil.nestedUnderscript,
        CSFoverscript: MathspeakUtil.nestedOverscript,
        CSFendscripts: MathspeakUtil.endscripts,
        CTFordinalCounter: NumbersUtil.ordinalCounter,
        CTFwordCounter: NumbersUtil.wordCounter,
        CTFcontentIterator: StoreUtil.contentIterator,
        CQFdetIsSimple: MathspeakUtil.determinantIsSimple,
        CSFRemoveParens: MathspeakUtil.removeParens,
        CQFresetNesting: MathspeakUtil.resetNestingDepth,
        CGFbaselineConstraint: MathspeakUtil.generateBaselineConstraint,
        CGFtensorRules: MathspeakUtil.generateTensorRules
    });
    SpeechRules.addStore('es.speech.mathspeak', dynamic_cstr_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', {
        CTFunitMultipliers: UnitUtil.unitMultipliers,
        CQFoneLeft: UnitUtil.oneLeft
    });
    SpeechRules.addStore('fr.speech.mathspeak', dynamic_cstr_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', {
        CSFbaselineVerbose: MathspeakFrenchUtil.baselineVerbose,
        CSFbaselineBrief: MathspeakFrenchUtil.baselineBrief,
        CSFleftsuperscriptVerbose: MathspeakFrenchUtil.leftSuperscriptVerbose,
        CSFleftsubscriptVerbose: MathspeakFrenchUtil.leftSubscriptVerbose,
        CSFleftsuperscriptBrief: MathspeakFrenchUtil.leftSuperscriptBrief,
        CSFleftsubscriptBrief: MathspeakFrenchUtil.leftSubscriptBrief
    });
}
exports.MathspeakRules = MathspeakRules;


/***/ }),

/***/ 1378:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.smallRoot = exports.generateTensorRules = exports.removeParens = exports.generateBaselineConstraint = exports.determinantIsSimple = exports.nestedOverscript = exports.endscripts = exports.overscoreNestingDepth = exports.nestedUnderscript = exports.underscoreNestingDepth = exports.indexRadicalSbrief = exports.openingRadicalSbrief = exports.indexRadicalBrief = exports.closingRadicalBrief = exports.openingRadicalBrief = exports.indexRadicalVerbose = exports.closingRadicalVerbose = exports.openingRadicalVerbose = exports.getRootIndex = exports.nestedRadical = exports.radicalNestingDepth = exports.baselineBrief = exports.baselineVerbose = exports.superscriptBrief = exports.superscriptVerbose = exports.subscriptBrief = exports.subscriptVerbose = exports.nestedSubSuper = exports.isSmallVulgarFraction = exports.overFractionSbrief = exports.closingFractionSbrief = exports.openingFractionSbrief = exports.closingFractionBrief = exports.openingFractionBrief = exports.overFractionVerbose = exports.closingFractionVerbose = exports.openingFractionVerbose = exports.nestedFraction = exports.fractionNestingDepth = exports.computeNestingDepth_ = exports.containsAttr = exports.getNestingDepth = exports.resetNestingDepth = exports.nestingBarriers = exports.spaceoutIdentifier = exports.spaceoutNumber = exports.spaceoutNodes = exports.spaceoutText = void 0;
const BaseUtil = __webpack_require__(707);
const DomUtil = __webpack_require__(5740);
const XpathUtil = __webpack_require__(5274);
const locale_1 = __webpack_require__(4356);
const semantic_processor_1 = __webpack_require__(3308);
let nestingDepth = {};
function spaceoutText(node) {
    return Array.from(node.textContent).join(' ');
}
exports.spaceoutText = spaceoutText;
function spaceoutNodes(node, correction) {
    const content = Array.from(node.textContent);
    const result = [];
    const processor = semantic_processor_1.default.getInstance();
    const doc = node.ownerDocument;
    for (let i = 0, chr; (chr = content[i]); i++) {
        const leaf = processor
            .getNodeFactory()
            .makeLeafNode(chr, "unknown");
        const sn = processor.identifierNode(leaf, "unknown", '');
        correction(sn);
        result.push(sn.xml(doc));
    }
    return result;
}
exports.spaceoutNodes = spaceoutNodes;
function spaceoutNumber(node) {
    return spaceoutNodes(node, function (sn) {
        if (!sn.textContent.match(/\W/)) {
            sn.type = "number";
        }
    });
}
exports.spaceoutNumber = spaceoutNumber;
function spaceoutIdentifier(node) {
    return spaceoutNodes(node, function (sn) {
        sn.font = "unknown";
        sn.type = "identifier";
    });
}
exports.spaceoutIdentifier = spaceoutIdentifier;
exports.nestingBarriers = [
    "cases",
    "cell",
    "integral",
    "line",
    "matrix",
    "multiline",
    "overscore",
    "root",
    "row",
    "sqrt",
    "subscript",
    "superscript",
    "table",
    "underscore",
    "vector"
];
function resetNestingDepth(node) {
    nestingDepth = {};
    return [node];
}
exports.resetNestingDepth = resetNestingDepth;
function getNestingDepth(type, node, tags, opt_barrierTags, opt_barrierAttrs, opt_func) {
    opt_barrierTags = opt_barrierTags || exports.nestingBarriers;
    opt_barrierAttrs = opt_barrierAttrs || {};
    opt_func =
        opt_func ||
            function (_node) {
                return false;
            };
    const xmlText = DomUtil.serializeXml(node);
    if (!nestingDepth[type]) {
        nestingDepth[type] = {};
    }
    if (nestingDepth[type][xmlText]) {
        return nestingDepth[type][xmlText];
    }
    if (opt_func(node) || tags.indexOf(node.tagName) < 0) {
        return 0;
    }
    const depth = computeNestingDepth_(node, tags, BaseUtil.setdifference(opt_barrierTags, tags), opt_barrierAttrs, opt_func, 0);
    nestingDepth[type][xmlText] = depth;
    return depth;
}
exports.getNestingDepth = getNestingDepth;
function containsAttr(node, attrs) {
    if (!node.attributes) {
        return false;
    }
    const attributes = DomUtil.toArray(node.attributes);
    for (let i = 0, attr; (attr = attributes[i]); i++) {
        if (attrs[attr.nodeName] === attr.nodeValue) {
            return true;
        }
    }
    return false;
}
exports.containsAttr = containsAttr;
function computeNestingDepth_(node, tags, barriers, attrs, func, depth) {
    if (func(node) ||
        barriers.indexOf(node.tagName) > -1 ||
        containsAttr(node, attrs)) {
        return depth;
    }
    if (tags.indexOf(node.tagName) > -1) {
        depth++;
    }
    if (!node.childNodes || node.childNodes.length === 0) {
        return depth;
    }
    const children = DomUtil.toArray(node.childNodes);
    return Math.max.apply(null, children.map(function (subNode) {
        return computeNestingDepth_(subNode, tags, barriers, attrs, func, depth);
    }));
}
exports.computeNestingDepth_ = computeNestingDepth_;
function fractionNestingDepth(node) {
    return getNestingDepth('fraction', node, ['fraction'], exports.nestingBarriers, {}, locale_1.LOCALE.FUNCTIONS.fracNestDepth);
}
exports.fractionNestingDepth = fractionNestingDepth;
function nestedFraction(node, expr, opt_end) {
    const depth = fractionNestingDepth(node);
    const annotation = Array(depth).fill(expr);
    if (opt_end) {
        annotation.push(opt_end);
    }
    return annotation.join(locale_1.LOCALE.MESSAGES.regexp.JOINER_FRAC);
}
exports.nestedFraction = nestedFraction;
function openingFractionVerbose(node) {
    return nestedFraction(node, locale_1.LOCALE.MESSAGES.MS.START, locale_1.LOCALE.MESSAGES.MS.FRAC_V);
}
exports.openingFractionVerbose = openingFractionVerbose;
function closingFractionVerbose(node) {
    return nestedFraction(node, locale_1.LOCALE.MESSAGES.MS.END, locale_1.LOCALE.MESSAGES.MS.FRAC_V);
}
exports.closingFractionVerbose = closingFractionVerbose;
function overFractionVerbose(node) {
    return nestedFraction(node, locale_1.LOCALE.MESSAGES.MS.FRAC_OVER);
}
exports.overFractionVerbose = overFractionVerbose;
function openingFractionBrief(node) {
    return nestedFraction(node, locale_1.LOCALE.MESSAGES.MS.START, locale_1.LOCALE.MESSAGES.MS.FRAC_B);
}
exports.openingFractionBrief = openingFractionBrief;
function closingFractionBrief(node) {
    return nestedFraction(node, locale_1.LOCALE.MESSAGES.MS.END, locale_1.LOCALE.MESSAGES.MS.FRAC_B);
}
exports.closingFractionBrief = closingFractionBrief;
function openingFractionSbrief(node) {
    const depth = fractionNestingDepth(node);
    if (depth === 1) {
        return locale_1.LOCALE.MESSAGES.MS.FRAC_S;
    }
    return locale_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_1.LOCALE.MESSAGES.MS.FRAC_S);
}
exports.openingFractionSbrief = openingFractionSbrief;
function closingFractionSbrief(node) {
    const depth = fractionNestingDepth(node);
    if (depth === 1) {
        return locale_1.LOCALE.MESSAGES.MS.ENDFRAC;
    }
    return locale_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_1.LOCALE.MESSAGES.MS.ENDFRAC);
}
exports.closingFractionSbrief = closingFractionSbrief;
function overFractionSbrief(node) {
    const depth = fractionNestingDepth(node);
    if (depth === 1) {
        return locale_1.LOCALE.MESSAGES.MS.FRAC_OVER;
    }
    return locale_1.LOCALE.FUNCTIONS.combineNestedFraction(locale_1.LOCALE.MESSAGES.MS.NEST_FRAC, locale_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), locale_1.LOCALE.MESSAGES.MS.FRAC_OVER);
}
exports.overFractionSbrief = overFractionSbrief;
function isSmallVulgarFraction(node) {
    return locale_1.LOCALE.FUNCTIONS.fracNestDepth(node) ? [node] : [];
}
exports.isSmallVulgarFraction = isSmallVulgarFraction;
function nestedSubSuper(node, init, replace) {
    while (node.parentNode) {
        const children = node.parentNode;
        const parent = children.parentNode;
        if (!parent) {
            break;
        }
        const nodeRole = node.getAttribute && node.getAttribute('role');
        if ((parent.tagName === "subscript" &&
            node === children.childNodes[1]) ||
            (parent.tagName === "tensor" &&
                nodeRole &&
                (nodeRole === "leftsub" ||
                    nodeRole === "rightsub"))) {
            init = replace.sub + locale_1.LOCALE.MESSAGES.regexp.JOINER_SUBSUPER + init;
        }
        if ((parent.tagName === "superscript" &&
            node === children.childNodes[1]) ||
            (parent.tagName === "tensor" &&
                nodeRole &&
                (nodeRole === "leftsuper" ||
                    nodeRole === "rightsuper"))) {
            init = replace.sup + locale_1.LOCALE.MESSAGES.regexp.JOINER_SUBSUPER + init;
        }
        node = parent;
    }
    return init.trim();
}
exports.nestedSubSuper = nestedSubSuper;
function subscriptVerbose(node) {
    return nestedSubSuper(node, locale_1.LOCALE.MESSAGES.MS.SUBSCRIPT, {
        sup: locale_1.LOCALE.MESSAGES.MS.SUPER,
        sub: locale_1.LOCALE.MESSAGES.MS.SUB
    });
}
exports.subscriptVerbose = subscriptVerbose;
function subscriptBrief(node) {
    return nestedSubSuper(node, locale_1.LOCALE.MESSAGES.MS.SUB, {
        sup: locale_1.LOCALE.MESSAGES.MS.SUP,
        sub: locale_1.LOCALE.MESSAGES.MS.SUB
    });
}
exports.subscriptBrief = subscriptBrief;
function superscriptVerbose(node) {
    return nestedSubSuper(node, locale_1.LOCALE.MESSAGES.MS.SUPERSCRIPT, {
        sup: locale_1.LOCALE.MESSAGES.MS.SUPER,
        sub: locale_1.LOCALE.MESSAGES.MS.SUB
    });
}
exports.superscriptVerbose = superscriptVerbose;
function superscriptBrief(node) {
    return nestedSubSuper(node, locale_1.LOCALE.MESSAGES.MS.SUP, {
        sup: locale_1.LOCALE.MESSAGES.MS.SUP,
        sub: locale_1.LOCALE.MESSAGES.MS.SUB
    });
}
exports.superscriptBrief = superscriptBrief;
function baselineVerbose(node) {
    const baseline = nestedSubSuper(node, '', {
        sup: locale_1.LOCALE.MESSAGES.MS.SUPER,
        sub: locale_1.LOCALE.MESSAGES.MS.SUB
    });
    if (!baseline) {
        return locale_1.LOCALE.MESSAGES.MS.BASELINE;
    }
    return baseline
        .replace(new RegExp(locale_1.LOCALE.MESSAGES.MS.SUB + '$'), locale_1.LOCALE.MESSAGES.MS.SUBSCRIPT)
        .replace(new RegExp(locale_1.LOCALE.MESSAGES.MS.SUPER + '$'), locale_1.LOCALE.MESSAGES.MS.SUPERSCRIPT);
}
exports.baselineVerbose = baselineVerbose;
function baselineBrief(node) {
    const baseline = nestedSubSuper(node, '', {
        sup: locale_1.LOCALE.MESSAGES.MS.SUP,
        sub: locale_1.LOCALE.MESSAGES.MS.SUB
    });
    return baseline || locale_1.LOCALE.MESSAGES.MS.BASE;
}
exports.baselineBrief = baselineBrief;
function radicalNestingDepth(node) {
    return getNestingDepth('radical', node, ['sqrt', 'root'], exports.nestingBarriers, {});
}
exports.radicalNestingDepth = radicalNestingDepth;
function nestedRadical(node, prefix, postfix) {
    const depth = radicalNestingDepth(node);
    const index = getRootIndex(node);
    postfix = index ? locale_1.LOCALE.FUNCTIONS.combineRootIndex(postfix, index) : postfix;
    if (depth === 1) {
        return postfix;
    }
    return locale_1.LOCALE.FUNCTIONS.combineNestedRadical(prefix, locale_1.LOCALE.FUNCTIONS.radicalNestDepth(depth - 1), postfix);
}
exports.nestedRadical = nestedRadical;
function getRootIndex(node) {
    const content = node.tagName === 'sqrt'
        ? '2'
        :
            XpathUtil.evalXPath('children/*[1]', node)[0].textContent.trim();
    return locale_1.LOCALE.MESSAGES.MSroots[content] || '';
}
exports.getRootIndex = getRootIndex;
function openingRadicalVerbose(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.NESTED, locale_1.LOCALE.MESSAGES.MS.STARTROOT);
}
exports.openingRadicalVerbose = openingRadicalVerbose;
function closingRadicalVerbose(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.NESTED, locale_1.LOCALE.MESSAGES.MS.ENDROOT);
}
exports.closingRadicalVerbose = closingRadicalVerbose;
function indexRadicalVerbose(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.NESTED, locale_1.LOCALE.MESSAGES.MS.ROOTINDEX);
}
exports.indexRadicalVerbose = indexRadicalVerbose;
function openingRadicalBrief(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_1.LOCALE.MESSAGES.MS.STARTROOT);
}
exports.openingRadicalBrief = openingRadicalBrief;
function closingRadicalBrief(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_1.LOCALE.MESSAGES.MS.ENDROOT);
}
exports.closingRadicalBrief = closingRadicalBrief;
function indexRadicalBrief(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_1.LOCALE.MESSAGES.MS.ROOTINDEX);
}
exports.indexRadicalBrief = indexRadicalBrief;
function openingRadicalSbrief(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_1.LOCALE.MESSAGES.MS.ROOT);
}
exports.openingRadicalSbrief = openingRadicalSbrief;
function indexRadicalSbrief(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.NEST_ROOT, locale_1.LOCALE.MESSAGES.MS.INDEX);
}
exports.indexRadicalSbrief = indexRadicalSbrief;
function underscoreNestingDepth(node) {
    return getNestingDepth('underscore', node, ['underscore'], exports.nestingBarriers, {}, function (node) {
        return (node.tagName &&
            node.tagName === "underscore" &&
            node.childNodes[0].childNodes[1].getAttribute('role') ===
                "underaccent");
    });
}
exports.underscoreNestingDepth = underscoreNestingDepth;
function nestedUnderscript(node) {
    const depth = underscoreNestingDepth(node);
    return (Array(depth).join(locale_1.LOCALE.MESSAGES.MS.UNDER) + locale_1.LOCALE.MESSAGES.MS.UNDERSCRIPT);
}
exports.nestedUnderscript = nestedUnderscript;
function overscoreNestingDepth(node) {
    return getNestingDepth('overscore', node, ['overscore'], exports.nestingBarriers, {}, function (node) {
        return (node.tagName &&
            node.tagName === "overscore" &&
            node.childNodes[0].childNodes[1].getAttribute('role') ===
                "overaccent");
    });
}
exports.overscoreNestingDepth = overscoreNestingDepth;
function endscripts(_node) {
    return locale_1.LOCALE.MESSAGES.MS.ENDSCRIPTS;
}
exports.endscripts = endscripts;
function nestedOverscript(node) {
    const depth = overscoreNestingDepth(node);
    return (Array(depth).join(locale_1.LOCALE.MESSAGES.MS.OVER) + locale_1.LOCALE.MESSAGES.MS.OVERSCRIPT);
}
exports.nestedOverscript = nestedOverscript;
function determinantIsSimple(node) {
    if (node.tagName !== "matrix" ||
        node.getAttribute('role') !== "determinant") {
        return [];
    }
    const cells = XpathUtil.evalXPath('children/row/children/cell/children/*', node);
    for (let i = 0, cell; (cell = cells[i]); i++) {
        if (cell.tagName === "number") {
            continue;
        }
        if (cell.tagName === "identifier") {
            const role = cell.getAttribute('role');
            if (role === "latinletter" ||
                role === "greekletter" ||
                role === "otherletter") {
                continue;
            }
        }
        return [];
    }
    return [node];
}
exports.determinantIsSimple = determinantIsSimple;
function generateBaselineConstraint() {
    const ignoreElems = ['subscript', 'superscript', 'tensor'];
    const mainElems = ['relseq', 'multrel'];
    const breakElems = ['fraction', 'punctuation', 'fenced', 'sqrt', 'root'];
    const ancestrify = (elemList) => elemList.map((elem) => 'ancestor::' + elem);
    const notify = (elem) => 'not(' + elem + ')';
    const prefix = 'ancestor::*/following-sibling::*';
    const middle = notify(ancestrify(ignoreElems).join(' or '));
    const mainList = ancestrify(mainElems);
    const breakList = ancestrify(breakElems);
    let breakCstrs = [];
    for (let i = 0, brk; (brk = breakList[i]); i++) {
        breakCstrs = breakCstrs.concat(mainList.map(function (elem) {
            return brk + '/' + elem;
        }));
    }
    const postfix = notify(breakCstrs.join(' | '));
    return [[prefix, middle, postfix].join(' and ')];
}
exports.generateBaselineConstraint = generateBaselineConstraint;
function removeParens(node) {
    if (!node.childNodes.length ||
        !node.childNodes[0].childNodes.length ||
        !node.childNodes[0].childNodes[0].childNodes.length) {
        return '';
    }
    const content = node.childNodes[0].childNodes[0].childNodes[0].textContent;
    return content.match(/^\(.+\)$/) ? content.slice(1, -1) : content;
}
exports.removeParens = removeParens;
const componentString = new Map([
    [3, 'CSFleftsuperscript'],
    [4, 'CSFleftsubscript'],
    [2, 'CSFbaseline'],
    [1, 'CSFrightsubscript'],
    [0, 'CSFrightsuperscript']
]);
const childNumber = new Map([
    [4, 2],
    [3, 3],
    [2, 1],
    [1, 4],
    [0, 5]
]);
function generateTensorRuleStrings_(constellation) {
    const constraints = [];
    let verbString = '';
    let briefString = '';
    let constel = parseInt(constellation, 2);
    for (let i = 0; i < 5; i++) {
        const childString = 'children/*[' + childNumber.get(i) + ']';
        if (constel & 1) {
            const compString = componentString.get(i % 5);
            verbString =
                '[t] ' + compString + 'Verbose; [n] ' + childString + ';' + verbString;
            briefString =
                '[t] ' + compString + 'Brief; [n] ' + childString + ';' + briefString;
        }
        else {
            constraints.unshift('name(' + childString + ')="empty"');
        }
        constel >>= 1;
    }
    return [constraints, verbString, briefString];
}
function generateTensorRules(store, brief = true) {
    const constellations = [
        '11111',
        '11110',
        '11101',
        '11100',
        '10111',
        '10110',
        '10101',
        '10100',
        '01111',
        '01110',
        '01101',
        '01100'
    ];
    for (let i = 0, constel; (constel = constellations[i]); i++) {
        let name = 'tensor' + constel;
        let [components, verbStr, briefStr] = generateTensorRuleStrings_(constel);
        store.defineRule(name, 'default', verbStr, 'self::tensor', ...components);
        if (brief) {
            store.defineRule(name, 'brief', briefStr, 'self::tensor', ...components);
            store.defineRule(name, 'sbrief', briefStr, 'self::tensor', ...components);
        }
        const baselineStr = componentString.get(2);
        verbStr += '; [t]' + baselineStr + 'Verbose';
        briefStr += '; [t]' + baselineStr + 'Brief';
        name = name + '-baseline';
        const cstr = '((.//*[not(*)])[last()]/@id)!=(((.//ancestor::fraction|' +
            'ancestor::root|ancestor::sqrt|ancestor::cell|ancestor::line|' +
            'ancestor::stree)[1]//*[not(*)])[last()]/@id)';
        store.defineRule(name, 'default', verbStr, 'self::tensor', cstr, ...components);
        if (brief) {
            store.defineRule(name, 'brief', briefStr, 'self::tensor', cstr, ...components);
            store.defineRule(name, 'sbrief', briefStr, 'self::tensor', cstr, ...components);
        }
    }
}
exports.generateTensorRules = generateTensorRules;
function smallRoot(node) {
    let max = Object.keys(locale_1.LOCALE.MESSAGES.MSroots).length;
    if (!max) {
        return [];
    }
    else {
        max++;
    }
    if (!node.childNodes ||
        node.childNodes.length === 0 ||
        !node.childNodes[0].childNodes) {
        return [];
    }
    const index = node.childNodes[0].childNodes[0].textContent;
    if (!/^\d+$/.test(index)) {
        return [];
    }
    const num = parseInt(index, 10);
    return num > 1 && num <= max ? [node] : [];
}
exports.smallRoot = smallRoot;


/***/ }),

/***/ 6922:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.implicitIterator = exports.relationIterator = exports.propagateNumber = exports.checkParent_ = exports.NUMBER_INHIBITORS_ = exports.NUMBER_PROPAGATORS_ = exports.enlargeFence = exports.indexRadical = exports.closingRadical = exports.openingRadical = exports.radicalNestingDepth = exports.nestedRadical = exports.overBevelledFraction = exports.overFraction = exports.closingFraction = exports.openingFraction = void 0;
const auditory_description_1 = __webpack_require__(7052);
const DomUtil = __webpack_require__(5740);
const XpathUtil = __webpack_require__(5274);
const grammar_1 = __webpack_require__(2105);
const engine_1 = __webpack_require__(5897);
const semantic_annotations_1 = __webpack_require__(7630);
const semantic_annotator_1 = __webpack_require__(9265);
const locale_1 = __webpack_require__(4356);
const MathspeakUtil = __webpack_require__(1378);
function openingFraction(node) {
    const depth = MathspeakUtil.fractionNestingDepth(node);
    return (new Array(depth).join(locale_1.LOCALE.MESSAGES.MS.FRACTION_REPEAT) +
        locale_1.LOCALE.MESSAGES.MS.FRACTION_START);
}
exports.openingFraction = openingFraction;
function closingFraction(node) {
    const depth = MathspeakUtil.fractionNestingDepth(node);
    return (new Array(depth).join(locale_1.LOCALE.MESSAGES.MS.FRACTION_REPEAT) +
        locale_1.LOCALE.MESSAGES.MS.FRACTION_END);
}
exports.closingFraction = closingFraction;
function overFraction(node) {
    const depth = MathspeakUtil.fractionNestingDepth(node);
    return (new Array(depth).join(locale_1.LOCALE.MESSAGES.MS.FRACTION_REPEAT) +
        locale_1.LOCALE.MESSAGES.MS.FRACTION_OVER);
}
exports.overFraction = overFraction;
function overBevelledFraction(node) {
    const depth = MathspeakUtil.fractionNestingDepth(node);
    return (new Array(depth).join(locale_1.LOCALE.MESSAGES.MS.FRACTION_REPEAT) +
        '⠸' +
        locale_1.LOCALE.MESSAGES.MS.FRACTION_OVER);
}
exports.overBevelledFraction = overBevelledFraction;
function nestedRadical(node, postfix) {
    const depth = radicalNestingDepth(node);
    if (depth === 1) {
        return postfix;
    }
    return new Array(depth).join(locale_1.LOCALE.MESSAGES.MS.NESTED) + postfix;
}
exports.nestedRadical = nestedRadical;
function radicalNestingDepth(node, opt_depth) {
    const depth = opt_depth || 0;
    if (!node.parentNode) {
        return depth;
    }
    return radicalNestingDepth(node.parentNode, node.tagName === 'root' || node.tagName === 'sqrt' ? depth + 1 : depth);
}
exports.radicalNestingDepth = radicalNestingDepth;
function openingRadical(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.STARTROOT);
}
exports.openingRadical = openingRadical;
function closingRadical(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.ENDROOT);
}
exports.closingRadical = closingRadical;
function indexRadical(node) {
    return nestedRadical(node, locale_1.LOCALE.MESSAGES.MS.ROOTINDEX);
}
exports.indexRadical = indexRadical;
function enlargeFence(text) {
    const start = '⠠';
    if (text.length === 1) {
        return start + text;
    }
    const neut = '⠳';
    const split = text.split('');
    if (split.every(function (x) {
        return x === neut;
    })) {
        return start + split.join(start);
    }
    return text.slice(0, -1) + start + text.slice(-1);
}
exports.enlargeFence = enlargeFence;
grammar_1.Grammar.getInstance().setCorrection('enlargeFence', enlargeFence);
exports.NUMBER_PROPAGATORS_ = [
    "multirel",
    "relseq",
    "appl",
    "row",
    "line"
];
exports.NUMBER_INHIBITORS_ = [
    "subscript",
    "superscript",
    "overscore",
    "underscore"
];
function checkParent_(node, info) {
    const parent = node.parent;
    if (!parent) {
        return false;
    }
    const type = parent.type;
    if (exports.NUMBER_PROPAGATORS_.indexOf(type) !== -1 ||
        (type === "prefixop" &&
            parent.role === "negative" &&
            !info.script) ||
        (type === "prefixop" &&
            parent.role === "geometry")) {
        return true;
    }
    if (type === "punctuated") {
        if (!info.enclosed || parent.role === "text") {
            return true;
        }
    }
    return false;
}
exports.checkParent_ = checkParent_;
function propagateNumber(node, info) {
    if (!node.childNodes.length) {
        if (checkParent_(node, info)) {
            info.number = true;
            info.script = false;
            info.enclosed = false;
        }
        return [
            info['number'] ? 'number' : '',
            { number: false, enclosed: info.enclosed, script: info.script }
        ];
    }
    if (exports.NUMBER_INHIBITORS_.indexOf(node.type) !== -1) {
        info.script = true;
    }
    if (node.type === "fenced") {
        info.number = false;
        info.enclosed = true;
        return ['', info];
    }
    if (checkParent_(node, info)) {
        info.number = true;
        info.enclosed = false;
    }
    return ['', info];
}
exports.propagateNumber = propagateNumber;
(0, semantic_annotations_1.register)(new semantic_annotator_1.SemanticVisitor('nemeth', 'number', propagateNumber, { number: true }));
function relationIterator(nodes, context) {
    const childNodes = nodes.slice(0);
    let first = true;
    let contentNodes;
    if (nodes.length > 0) {
        contentNodes = XpathUtil.evalXPath('../../content/*', nodes[0]);
    }
    else {
        contentNodes = [];
    }
    return function () {
        const content = contentNodes.shift();
        const leftChild = childNodes.shift();
        const rightChild = childNodes[0];
        const contextDescr = context
            ? [auditory_description_1.AuditoryDescription.create({ text: context }, { translate: true })]
            : [];
        if (!content) {
            return contextDescr;
        }
        const base = leftChild
            ? MathspeakUtil.nestedSubSuper(leftChild, '', {
                sup: locale_1.LOCALE.MESSAGES.MS.SUPER,
                sub: locale_1.LOCALE.MESSAGES.MS.SUB
            })
            : '';
        const left = (leftChild && DomUtil.tagName(leftChild) !== 'EMPTY') ||
            (first &&
                content.parentNode.parentNode &&
                content.parentNode.parentNode.previousSibling)
            ? [auditory_description_1.AuditoryDescription.create({ text: '⠀' + base }, {})]
            : [];
        const right = (rightChild && DomUtil.tagName(rightChild) !== 'EMPTY') ||
            (!contentNodes.length &&
                content.parentNode.parentNode &&
                content.parentNode.parentNode.nextSibling)
            ? [auditory_description_1.AuditoryDescription.create({ text: '⠀' }, {})]
            : [];
        const descrs = engine_1.default.evaluateNode(content);
        first = false;
        return contextDescr.concat(left, descrs, right);
    };
}
exports.relationIterator = relationIterator;
function implicitIterator(nodes, context) {
    const childNodes = nodes.slice(0);
    let contentNodes;
    if (nodes.length > 0) {
        contentNodes = XpathUtil.evalXPath('../../content/*', nodes[0]);
    }
    else {
        contentNodes = [];
    }
    return function () {
        const leftChild = childNodes.shift();
        const rightChild = childNodes[0];
        const content = contentNodes.shift();
        const contextDescr = context
            ? [auditory_description_1.AuditoryDescription.create({ text: context }, { translate: true })]
            : [];
        if (!content) {
            return contextDescr;
        }
        const left = leftChild && DomUtil.tagName(leftChild) === 'NUMBER';
        const right = rightChild && DomUtil.tagName(rightChild) === 'NUMBER';
        return contextDescr.concat(left && right && content.getAttribute('role') === "space"
            ? [auditory_description_1.AuditoryDescription.create({ text: '⠀' }, {})]
            : []);
    };
}
exports.implicitIterator = implicitIterator;


/***/ }),

/***/ 8437:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ordinalPosition = exports.vulgarFraction = exports.wordCounter = exports.ordinalCounter = void 0;
const span_1 = __webpack_require__(9536);
const DomUtil = __webpack_require__(5740);
const locale_1 = __webpack_require__(4356);
const transformers_1 = __webpack_require__(4977);
function ordinalCounter(_node, context) {
    let counter = 0;
    return function () {
        return locale_1.LOCALE.NUMBERS.numericOrdinal(++counter) + ' ' + context;
    };
}
exports.ordinalCounter = ordinalCounter;
function wordCounter(_node, context) {
    let counter = 0;
    return function () {
        return locale_1.LOCALE.NUMBERS.numberToOrdinal(++counter, false) + ' ' + context;
    };
}
exports.wordCounter = wordCounter;
function vulgarFraction(node) {
    const conversion = (0, transformers_1.convertVulgarFraction)(node, locale_1.LOCALE.MESSAGES.MS.FRAC_OVER);
    if (conversion.convertible &&
        conversion.enumerator &&
        conversion.denominator) {
        return [
            new span_1.Span(locale_1.LOCALE.NUMBERS.numberToWords(conversion.enumerator), {
                extid: node.childNodes[0].childNodes[0].getAttribute('extid'),
                separator: ''
            }),
            new span_1.Span(locale_1.LOCALE.NUMBERS.vulgarSep, { separator: '' }),
            new span_1.Span(locale_1.LOCALE.NUMBERS.numberToOrdinal(conversion.denominator, conversion.enumerator !== 1), {
                extid: node.childNodes[0].childNodes[1].getAttribute('extid')
            })
        ];
    }
    return [
        new span_1.Span(conversion.content || '', { extid: node.getAttribute('extid') })
    ];
}
exports.vulgarFraction = vulgarFraction;
function ordinalPosition(node) {
    const children = DomUtil.toArray(node.parentNode.childNodes);
    return locale_1.LOCALE.NUMBERS.numericOrdinal(children.indexOf(node) + 1).toString();
}
exports.ordinalPosition = ordinalPosition;


/***/ }),

/***/ 9284:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BrailleRules = exports.OtherRules = exports.PrefixRules = void 0;
const dynamic_cstr_1 = __webpack_require__(1676);
const StoreUtil = __webpack_require__(365);
const MathspeakUtil = __webpack_require__(1378);
const NemethUtil = __webpack_require__(6922);
const NumbersUtil = __webpack_require__(8437);
const SpeechRules = __webpack_require__(7283);
function PrefixRules() {
    SpeechRules.addStore('en.prefix.default', '', {
        CSFordinalPosition: NumbersUtil.ordinalPosition
    });
}
exports.PrefixRules = PrefixRules;
function OtherRules() {
    SpeechRules.addStore('en.speech.chromevox', '', {
        CTFnodeCounter: StoreUtil.nodeCounter,
        CTFcontentIterator: StoreUtil.contentIterator
    });
    SpeechRules.addStore('en.speech.emacspeak', 'en.speech.chromevox', {
        CQFvulgarFractionSmall: MathspeakUtil.isSmallVulgarFraction,
        CSFvulgarFraction: NumbersUtil.vulgarFraction
    });
}
exports.OtherRules = OtherRules;
function BrailleRules() {
    SpeechRules.addStore('nemeth.braille.default', dynamic_cstr_1.DynamicCstr.BASE_LOCALE + '.speech.mathspeak', {
        CSFopenFraction: NemethUtil.openingFraction,
        CSFcloseFraction: NemethUtil.closingFraction,
        CSFoverFraction: NemethUtil.overFraction,
        CSFoverBevFraction: NemethUtil.overBevelledFraction,
        CSFopenRadical: NemethUtil.openingRadical,
        CSFcloseRadical: NemethUtil.closingRadical,
        CSFindexRadical: NemethUtil.indexRadical,
        CSFsubscript: MathspeakUtil.subscriptVerbose,
        CSFsuperscript: MathspeakUtil.superscriptVerbose,
        CSFbaseline: MathspeakUtil.baselineVerbose,
        CGFtensorRules: (st) => MathspeakUtil.generateTensorRules(st, false),
        CTFrelationIterator: NemethUtil.relationIterator,
        CTFimplicitIterator: NemethUtil.implicitIterator
    });
}
exports.BrailleRules = BrailleRules;


/***/ }),

/***/ 7599:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.init = exports.INIT_ = void 0;
const clearspeak_rules_1 = __webpack_require__(5425);
const mathspeak_rules_1 = __webpack_require__(9577);
const other_rules_1 = __webpack_require__(9284);
exports.INIT_ = false;
function init() {
    if (exports.INIT_) {
        return;
    }
    (0, mathspeak_rules_1.MathspeakRules)();
    (0, clearspeak_rules_1.ClearspeakRules)();
    (0, other_rules_1.PrefixRules)();
    (0, other_rules_1.OtherRules)();
    (0, other_rules_1.BrailleRules)();
    exports.INIT_ = true;
}
exports.init = init;


/***/ }),

/***/ 7283:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getStore = exports.addStore = exports.funcStore = void 0;
const dynamic_cstr_1 = __webpack_require__(1676);
exports.funcStore = new Map();
function addStore(constr, inherit, store) {
    const values = {};
    if (inherit) {
        const inherits = exports.funcStore.get(inherit) || {};
        Object.assign(values, inherits);
    }
    exports.funcStore.set(constr, Object.assign(values, store));
}
exports.addStore = addStore;
function getStore(locale, modality, domain) {
    return (exports.funcStore.get([locale, modality, domain].join('.')) ||
        exports.funcStore.get([dynamic_cstr_1.DynamicCstr.DEFAULT_VALUES[dynamic_cstr_1.Axis.LOCALE], modality, domain].join('.')) ||
        exports.funcStore.get([dynamic_cstr_1.DynamicCstr.BASE_LOCALE, modality, domain].join('.')) ||
        {});
}
exports.getStore = getStore;


/***/ }),

/***/ 7598:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.oneLeft = exports.leftMostUnit = exports.rightMostUnit = exports.unitMultipliers = void 0;
const auditory_description_1 = __webpack_require__(7052);
const XpathUtil = __webpack_require__(5274);
const locale_1 = __webpack_require__(4356);
function unitMultipliers(nodes, _context) {
    const children = nodes;
    let counter = 0;
    return function () {
        const descr = auditory_description_1.AuditoryDescription.create({
            text: rightMostUnit(children[counter]) &&
                leftMostUnit(children[counter + 1])
                ? locale_1.LOCALE.MESSAGES.unitTimes
                : ''
        }, {});
        counter++;
        return [descr];
    };
}
exports.unitMultipliers = unitMultipliers;
const SCRIPT_ELEMENTS = [
    "superscript",
    "subscript",
    "overscore",
    "underscore"
];
function rightMostUnit(node) {
    while (node) {
        if (node.getAttribute('role') === 'unit') {
            return true;
        }
        const tag = node.tagName;
        const children = XpathUtil.evalXPath('children/*', node);
        node = (SCRIPT_ELEMENTS.indexOf(tag) !== -1
            ? children[0]
            : children[children.length - 1]);
    }
    return false;
}
exports.rightMostUnit = rightMostUnit;
function leftMostUnit(node) {
    while (node) {
        if (node.getAttribute('role') === 'unit') {
            return true;
        }
        const children = XpathUtil.evalXPath('children/*', node);
        node = children[0];
    }
    return false;
}
exports.leftMostUnit = leftMostUnit;
function oneLeft(node) {
    while (node) {
        if (node.tagName === 'number' && node.textContent === '1') {
            return [node];
        }
        if (node.tagName !== 'infixop' ||
            (node.getAttribute('role') !== 'multiplication' &&
                node.getAttribute('role') !== 'implicit')) {
            return [];
        }
        node = XpathUtil.evalXPath('children/*', node)[0];
    }
    return [];
}
exports.oneLeft = oneLeft;


/***/ }),

/***/ 3284:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractWalker = void 0;
const auditory_description_1 = __webpack_require__(7052);
const AuralRendering = __webpack_require__(8290);
const DomUtil = __webpack_require__(5740);
const EngineConst = __webpack_require__(4440);
const engine_setup_1 = __webpack_require__(6828);
const event_util_1 = __webpack_require__(8496);
const enrich_attr_1 = __webpack_require__(2298);
const locale_1 = __webpack_require__(4356);
const grammar_1 = __webpack_require__(2105);
const semantic_skeleton_1 = __webpack_require__(5656);
const SpeechGeneratorFactory = __webpack_require__(9552);
const SpeechGeneratorUtil = __webpack_require__(9543);
const clearspeak_preferences_1 = __webpack_require__(8504);
const focus_1 = __webpack_require__(7730);
const rebuild_stree_1 = __webpack_require__(1214);
const walker_1 = __webpack_require__(179);
const WalkerUtil = __webpack_require__(1204);
const XpathUtil = __webpack_require__(5274);
class AbstractWalker {
    constructor(node, generator, highlighter, xml) {
        this.node = node;
        this.generator = generator;
        this.highlighter = highlighter;
        this.modifier = false;
        this.keyMapping = new Map([
            [event_util_1.KeyCode.UP, this.up.bind(this)],
            [event_util_1.KeyCode.DOWN, this.down.bind(this)],
            [event_util_1.KeyCode.RIGHT, this.right.bind(this)],
            [event_util_1.KeyCode.LEFT, this.left.bind(this)],
            [event_util_1.KeyCode.TAB, this.repeat.bind(this)],
            [event_util_1.KeyCode.DASH, this.expand.bind(this)],
            [event_util_1.KeyCode.SPACE, this.depth.bind(this)],
            [event_util_1.KeyCode.HOME, this.home.bind(this)],
            [event_util_1.KeyCode.X, this.summary.bind(this)],
            [event_util_1.KeyCode.Z, this.detail.bind(this)],
            [event_util_1.KeyCode.V, this.virtualize.bind(this)],
            [event_util_1.KeyCode.P, this.previous.bind(this)],
            [event_util_1.KeyCode.U, this.undo.bind(this)],
            [event_util_1.KeyCode.LESS, this.previousRules.bind(this)],
            [event_util_1.KeyCode.GREATER, this.nextRules.bind(this)]
        ]);
        this.cursors = [];
        this.xml_ = null;
        this.rebuilt_ = null;
        this.focus_ = null;
        this.active_ = false;
        if (this.node.id) {
            this.id = this.node.id;
        }
        else if (this.node.hasAttribute(AbstractWalker.SRE_ID_ATTR)) {
            this.id = this.node.getAttribute(AbstractWalker.SRE_ID_ATTR);
        }
        else {
            this.node.setAttribute(AbstractWalker.SRE_ID_ATTR, AbstractWalker.ID_COUNTER.toString());
            this.id = AbstractWalker.ID_COUNTER++;
        }
        this.rootNode = WalkerUtil.getSemanticRoot(node);
        this.rootId = this.rootNode.getAttribute(enrich_attr_1.Attribute.ID);
        this.xmlString_ = xml;
        this.moved = walker_1.WalkerMoves.ENTER;
    }
    getXml() {
        if (!this.xml_) {
            this.xml_ = DomUtil.parseInput(this.xmlString_);
        }
        return this.xml_;
    }
    getRebuilt() {
        if (!this.rebuilt_) {
            this.rebuildStree();
        }
        return this.rebuilt_;
    }
    isActive() {
        return this.active_;
    }
    activate() {
        if (this.isActive()) {
            return;
        }
        this.generator.start();
        this.toggleActive_();
    }
    deactivate() {
        if (!this.isActive()) {
            return;
        }
        walker_1.WalkerState.setState(this.id, this.primaryId());
        this.generator.end();
        this.toggleActive_();
    }
    getFocus(update = false) {
        if (!this.focus_) {
            this.focus_ = this.singletonFocus(this.rootId);
        }
        if (update) {
            this.updateFocus();
        }
        return this.focus_;
    }
    setFocus(focus) {
        this.focus_ = focus;
    }
    getDepth() {
        return this.levels.depth() - 1;
    }
    isSpeech() {
        return this.generator.modality === enrich_attr_1.Attribute.SPEECH;
    }
    focusDomNodes() {
        return this.getFocus().getDomNodes();
    }
    focusSemanticNodes() {
        return this.getFocus().getSemanticNodes();
    }
    speech() {
        const nodes = this.focusDomNodes();
        if (!nodes.length) {
            return '';
        }
        const special = this.specialMove();
        if (special !== null) {
            return special;
        }
        switch (this.moved) {
            case walker_1.WalkerMoves.DEPTH:
                return this.depth_();
            case walker_1.WalkerMoves.SUMMARY:
                return this.summary_();
            case walker_1.WalkerMoves.DETAIL:
                return this.detail_();
            default: {
                const speech = [];
                const snodes = this.focusSemanticNodes();
                for (let i = 0, l = nodes.length; i < l; i++) {
                    const node = nodes[i];
                    const snode = snodes[i];
                    speech.push(node
                        ? this.generator.getSpeech(node, this.getXml())
                        : SpeechGeneratorUtil.recomputeMarkup(snode));
                }
                return this.mergePrefix_(speech);
            }
        }
    }
    move(key) {
        const direction = this.keyMapping.get(key);
        if (!direction) {
            return null;
        }
        const focus = direction();
        if (!focus || focus === this.getFocus()) {
            return false;
        }
        this.setFocus(focus);
        if (this.moved === walker_1.WalkerMoves.HOME) {
            this.levels = this.initLevels();
        }
        return true;
    }
    up() {
        this.moved = walker_1.WalkerMoves.UP;
        return this.getFocus();
    }
    down() {
        this.moved = walker_1.WalkerMoves.DOWN;
        return this.getFocus();
    }
    left() {
        this.moved = walker_1.WalkerMoves.LEFT;
        return this.getFocus();
    }
    right() {
        this.moved = walker_1.WalkerMoves.RIGHT;
        return this.getFocus();
    }
    repeat() {
        this.moved = walker_1.WalkerMoves.REPEAT;
        return this.getFocus().clone();
    }
    depth() {
        this.moved = this.isSpeech() ? walker_1.WalkerMoves.DEPTH : walker_1.WalkerMoves.REPEAT;
        return this.getFocus().clone();
    }
    home() {
        this.moved = walker_1.WalkerMoves.HOME;
        const focus = this.singletonFocus(this.rootId);
        return focus;
    }
    getBySemanticId(id) {
        return WalkerUtil.getBySemanticId(this.node, id);
    }
    primaryId() {
        return this.getFocus().getSemanticPrimary().id.toString();
    }
    expand() {
        const primary = this.getFocus().getDomPrimary();
        const expandable = this.actionable_(primary);
        if (!expandable) {
            return this.getFocus();
        }
        this.moved = walker_1.WalkerMoves.EXPAND;
        expandable.dispatchEvent(new Event('click'));
        return this.getFocus().clone();
    }
    expandable(node) {
        const parent = !!this.actionable_(node);
        return parent && node.childNodes.length === 0;
    }
    collapsible(node) {
        const parent = !!this.actionable_(node);
        return parent && node.childNodes.length > 0;
    }
    restoreState() {
        if (!this.highlighter) {
            return;
        }
        const state = walker_1.WalkerState.getState(this.id);
        if (!state) {
            return;
        }
        let node = this.getRebuilt().nodeDict[state];
        const path = [];
        while (node) {
            path.push(node.id);
            node = node.parent;
        }
        path.pop();
        while (path.length > 0) {
            this.down();
            const id = path.pop();
            const focus = this.findFocusOnLevel(id);
            if (!focus) {
                break;
            }
            this.setFocus(focus);
        }
        this.moved = walker_1.WalkerMoves.ENTER;
    }
    updateFocus() {
        this.setFocus(focus_1.Focus.factory(this.getFocus().getSemanticPrimary().id.toString(), this.getFocus()
            .getSemanticNodes()
            .map((x) => x.id.toString()), this.getRebuilt(), this.node));
    }
    rebuildStree() {
        this.rebuilt_ = new rebuild_stree_1.RebuildStree(this.getXml());
        this.rootId = this.rebuilt_.stree.root.id.toString();
        this.generator.setRebuilt(this.rebuilt_);
        this.skeleton = semantic_skeleton_1.SemanticSkeleton.fromTree(this.rebuilt_.stree);
        this.skeleton.populate();
        this.focus_ = this.singletonFocus(this.rootId);
        this.levels = this.initLevels();
        SpeechGeneratorUtil.connectMactions(this.node, this.getXml(), this.rebuilt_.xml);
    }
    previousLevel() {
        const dnode = this.getFocus().getDomPrimary();
        return dnode
            ? WalkerUtil.getAttribute(dnode, enrich_attr_1.Attribute.PARENT)
            : this.getFocus().getSemanticPrimary().parent.id.toString();
    }
    nextLevel() {
        const dnode = this.getFocus().getDomPrimary();
        let children;
        let content;
        if (dnode) {
            children = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(dnode, enrich_attr_1.Attribute.CHILDREN));
            content = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(dnode, enrich_attr_1.Attribute.CONTENT));
            const type = WalkerUtil.getAttribute(dnode, enrich_attr_1.Attribute.TYPE);
            const role = WalkerUtil.getAttribute(dnode, enrich_attr_1.Attribute.ROLE);
            return this.combineContentChildren(type, role, content, children);
        }
        const toIds = (x) => x.id.toString();
        const snode = this.getRebuilt().nodeDict[this.primaryId()];
        children = snode.childNodes.map(toIds);
        content = snode.contentNodes.map(toIds);
        if (children.length === 0) {
            return [];
        }
        return this.combineContentChildren(snode.type, snode.role, content, children);
    }
    singletonFocus(id) {
        this.getRebuilt();
        const ids = this.retrieveVisuals(id);
        return this.focusFromId(id, ids);
    }
    retrieveVisuals(id) {
        if (!this.skeleton) {
            return [id];
        }
        const num = parseInt(id, 10);
        const semStree = this.skeleton.subtreeNodes(num);
        if (!semStree.length) {
            return [id];
        }
        semStree.unshift(num);
        const mmlStree = {};
        const result = [];
        XpathUtil.updateEvaluator(this.getXml());
        for (const child of semStree) {
            if (mmlStree[child]) {
                continue;
            }
            result.push(child.toString());
            mmlStree[child] = true;
            this.subtreeIds(child, mmlStree);
        }
        return result;
    }
    subtreeIds(id, nodes) {
        const xmlRoot = XpathUtil.evalXPath(`//*[@data-semantic-id="${id}"]`, this.getXml());
        const xpath = XpathUtil.evalXPath('*//@data-semantic-id', xmlRoot[0]);
        xpath.forEach((x) => (nodes[parseInt(x.textContent, 10)] = true));
    }
    focusFromId(id, ids) {
        return focus_1.Focus.factory(id, ids, this.getRebuilt(), this.node);
    }
    summary() {
        this.moved = this.isSpeech() ? walker_1.WalkerMoves.SUMMARY : walker_1.WalkerMoves.REPEAT;
        return this.getFocus().clone();
    }
    detail() {
        this.moved = this.isSpeech() ? walker_1.WalkerMoves.DETAIL : walker_1.WalkerMoves.REPEAT;
        return this.getFocus().clone();
    }
    specialMove() {
        return null;
    }
    virtualize(opt_undo) {
        this.cursors.push({
            focus: this.getFocus(),
            levels: this.levels,
            undo: opt_undo || !this.cursors.length
        });
        this.levels = this.levels.clone();
        return this.getFocus().clone();
    }
    previous() {
        const previous = this.cursors.pop();
        if (!previous) {
            return this.getFocus();
        }
        this.levels = previous.levels;
        return previous.focus;
    }
    undo() {
        let previous;
        do {
            previous = this.cursors.pop();
        } while (previous && !previous.undo);
        if (!previous) {
            return this.getFocus();
        }
        this.levels = previous.levels;
        return previous.focus;
    }
    update(options) {
        this.generator.setOptions(options);
        (0, engine_setup_1.setup)(options).then(() => SpeechGeneratorFactory.generator('Tree').getSpeech(this.node, this.getXml()));
    }
    nextRules() {
        const options = this.generator.getOptions();
        if (options.modality !== 'speech') {
            return this.getFocus();
        }
        EngineConst.DOMAIN_TO_STYLES[options.domain] = options.style;
        options.domain =
            options.domain === 'mathspeak' ? 'clearspeak' : 'mathspeak';
        options.style = EngineConst.DOMAIN_TO_STYLES[options.domain];
        this.update(options);
        this.moved = walker_1.WalkerMoves.REPEAT;
        return this.getFocus().clone();
    }
    nextStyle(domain, style) {
        if (domain === 'mathspeak') {
            const styles = ['default', 'brief', 'sbrief'];
            const index = styles.indexOf(style);
            if (index === -1) {
                return style;
            }
            return index >= styles.length - 1 ? styles[0] : styles[index + 1];
        }
        if (domain === 'clearspeak') {
            const prefs = clearspeak_preferences_1.ClearspeakPreferences.getLocalePreferences();
            const loc = prefs['en'];
            if (!loc) {
                return 'default';
            }
            const smart = clearspeak_preferences_1.ClearspeakPreferences.relevantPreferences(this.getFocus().getSemanticPrimary());
            const current = clearspeak_preferences_1.ClearspeakPreferences.findPreference(style, smart);
            const options = loc[smart].map(function (x) {
                return x.split('_')[1];
            });
            const index = options.indexOf(current);
            if (index === -1) {
                return style;
            }
            const next = index >= options.length - 1 ? options[0] : options[index + 1];
            const result = clearspeak_preferences_1.ClearspeakPreferences.addPreference(style, smart, next);
            return result;
        }
        return style;
    }
    previousRules() {
        const options = this.generator.getOptions();
        if (options.modality !== 'speech') {
            return this.getFocus();
        }
        options.style = this.nextStyle(options.domain, options.style);
        this.update(options);
        this.moved = walker_1.WalkerMoves.REPEAT;
        return this.getFocus().clone();
    }
    refocus() {
        let focus = this.getFocus();
        let last;
        while (!focus.getNodes().length) {
            last = this.levels.peek();
            const up = this.up();
            if (!up) {
                break;
            }
            this.setFocus(up);
            focus = this.getFocus(true);
        }
        this.levels.push(last);
        this.setFocus(focus);
    }
    toggleActive_() {
        this.active_ = !this.active_;
    }
    mergePrefix_(speech, pre = []) {
        const prefix = this.isSpeech() ? this.prefix_() : '';
        if (prefix) {
            speech.unshift(prefix);
        }
        const postfix = this.isSpeech() ? this.postfix_() : '';
        if (postfix) {
            speech.push(postfix);
        }
        return AuralRendering.finalize(AuralRendering.merge(pre.concat(speech)));
    }
    prefix_() {
        const nodes = this.getFocus().getDomNodes();
        const snodes = this.getFocus().getSemanticNodes();
        return nodes[0]
            ? WalkerUtil.getAttribute(nodes[0], enrich_attr_1.Attribute.PREFIX)
            : SpeechGeneratorUtil.retrievePrefix(snodes[0]);
    }
    postfix_() {
        const nodes = this.getFocus().getDomNodes();
        return nodes[0]
            ? WalkerUtil.getAttribute(nodes[0], enrich_attr_1.Attribute.POSTFIX)
            : '';
    }
    depth_() {
        const oldDepth = grammar_1.Grammar.getInstance().getParameter('depth');
        grammar_1.Grammar.getInstance().setParameter('depth', true);
        const primary = this.getFocus().getDomPrimary();
        const expand = this.expandable(primary)
            ? locale_1.LOCALE.MESSAGES.navigate.EXPANDABLE
            : this.collapsible(primary)
                ? locale_1.LOCALE.MESSAGES.navigate.COLLAPSIBLE
                : '';
        const level = locale_1.LOCALE.MESSAGES.navigate.LEVEL + ' ' + this.getDepth();
        const snodes = this.getFocus().getSemanticNodes();
        const prefix = SpeechGeneratorUtil.retrievePrefix(snodes[0]);
        const audio = [
            new auditory_description_1.AuditoryDescription({ text: level, personality: {} }),
            new auditory_description_1.AuditoryDescription({ text: prefix, personality: {} }),
            new auditory_description_1.AuditoryDescription({ text: expand, personality: {} })
        ];
        grammar_1.Grammar.getInstance().setParameter('depth', oldDepth);
        return AuralRendering.finalize(AuralRendering.markup(audio));
    }
    actionable_(node) {
        const parent = node === null || node === void 0 ? void 0 : node.parentNode;
        return parent && this.highlighter.isMactionNode(parent) ? parent : null;
    }
    summary_() {
        const sprimary = this.getFocus().getSemanticPrimary();
        const sid = sprimary.id.toString();
        const snode = this.getRebuilt().xml.getAttribute('id') === sid
            ? this.getRebuilt().xml
            : DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml, 'id', sid)[0];
        const summary = SpeechGeneratorUtil.retrieveSummary(snode);
        const speech = this.mergePrefix_([summary]);
        return speech;
    }
    detail_() {
        const sprimary = this.getFocus().getSemanticPrimary();
        const sid = sprimary.id.toString();
        const snode = this.getRebuilt().xml.getAttribute('id') === sid
            ? this.getRebuilt().xml
            : DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml, 'id', sid)[0];
        const oldAlt = snode.getAttribute('alternative');
        snode.removeAttribute('alternative');
        const detail = SpeechGeneratorUtil.computeMarkup(snode);
        const speech = this.mergePrefix_([detail]);
        snode.setAttribute('alternative', oldAlt);
        return speech;
    }
}
exports.AbstractWalker = AbstractWalker;
AbstractWalker.ID_COUNTER = 0;
AbstractWalker.SRE_ID_ATTR = 'sre-explorer-id';


/***/ }),

/***/ 162:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DummyWalker = void 0;
const abstract_walker_1 = __webpack_require__(3284);
class DummyWalker extends abstract_walker_1.AbstractWalker {
    up() {
        return null;
    }
    down() {
        return null;
    }
    left() {
        return null;
    }
    right() {
        return null;
    }
    repeat() {
        return null;
    }
    depth() {
        return null;
    }
    home() {
        return null;
    }
    getDepth() {
        return 0;
    }
    initLevels() {
        return null;
    }
    combineContentChildren(_type, _role, _content, _children) {
        return [];
    }
    findFocusOnLevel(_id) {
        return null;
    }
}
exports.DummyWalker = DummyWalker;


/***/ }),

/***/ 7730:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Focus = void 0;
const WalkerUtil = __webpack_require__(1204);
class Focus {
    constructor(nodes, primary) {
        this.nodes = nodes;
        this.primary = primary;
        this.domNodes = [];
        this.domPrimary_ = null;
        this.allNodes = [];
    }
    static factory(primaryId, nodeIds, rebuilt, dom) {
        const idFunc = (id) => WalkerUtil.getBySemanticId(dom, id);
        const dict = rebuilt.nodeDict;
        const node = idFunc(primaryId);
        const nodes = nodeIds.map(idFunc);
        const snodes = nodeIds.map(function (primaryId) {
            return dict[primaryId];
        });
        const focus = new Focus(snodes, dict[primaryId]);
        focus.domNodes = nodes;
        focus.domPrimary_ = node;
        focus.allNodes = Focus.generateAllVisibleNodes_(nodeIds, nodes, dict, dom);
        return focus;
    }
    static generateAllVisibleNodes_(ids, nodes, dict, domNode) {
        const idFunc = (id) => WalkerUtil.getBySemanticId(domNode, id);
        let result = [];
        for (let i = 0, l = ids.length; i < l; i++) {
            if (nodes[i]) {
                result.push(nodes[i]);
                continue;
            }
            const virtual = dict[ids[i]];
            if (!virtual) {
                continue;
            }
            const childIds = virtual.childNodes.map(function (x) {
                return x.id.toString();
            });
            const children = childIds.map(idFunc);
            result = result.concat(Focus.generateAllVisibleNodes_(childIds, children, dict, domNode));
        }
        return result;
    }
    getSemanticPrimary() {
        return this.primary;
    }
    getSemanticNodes() {
        return this.nodes;
    }
    getNodes() {
        return this.allNodes;
    }
    getDomNodes() {
        return this.domNodes;
    }
    getDomPrimary() {
        return this.domPrimary_;
    }
    toString() {
        return 'Primary:' + this.domPrimary_ + ' Nodes:' + this.domNodes;
    }
    clone() {
        const focus = new Focus(this.nodes, this.primary);
        focus.domNodes = this.domNodes;
        focus.domPrimary_ = this.domPrimary_;
        focus.allNodes = this.allNodes;
        return focus;
    }
}
exports.Focus = Focus;


/***/ }),

/***/ 9797:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Levels = void 0;
class Levels {
    constructor() {
        this.level_ = [];
    }
    push(level) {
        this.level_.push(level);
    }
    pop() {
        return this.level_.pop();
    }
    peek() {
        return this.level_[this.level_.length - 1] || null;
    }
    indexOf(element) {
        const last = this.peek();
        return !last ? null : last.indexOf(element);
    }
    find(pred) {
        const last = this.peek();
        if (!last) {
            return null;
        }
        for (let i = 0, l = last.length; i < l; i++) {
            if (pred(last[i])) {
                return last[i];
            }
        }
        return null;
    }
    get(index) {
        const last = this.peek();
        return !last || index < 0 || index >= last.length ? null : last[index];
    }
    depth() {
        return this.level_.length;
    }
    clone() {
        const levels = new Levels();
        levels.level_ = this.level_.slice(0);
        return levels;
    }
    toString() {
        let str = '';
        for (let i = 0, level; (level = this.level_[i]); i++) {
            str +=
                '\n' +
                    level.map(function (x) {
                        return x.toString();
                    });
        }
        return str;
    }
}
exports.Levels = Levels;


/***/ }),

/***/ 1214:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RebuildStree = void 0;
const DomUtil = __webpack_require__(5740);
const enrich_attr_1 = __webpack_require__(2298);
const semantic_attr_1 = __webpack_require__(3588);
const semantic_node_factory_1 = __webpack_require__(6537);
const semantic_processor_1 = __webpack_require__(3308);
const semantic_skeleton_1 = __webpack_require__(5656);
const semantic_tree_1 = __webpack_require__(7075);
const SemanticUtil = __webpack_require__(4795);
const WalkerUtil = __webpack_require__(1204);
class RebuildStree {
    constructor(mathml) {
        this.mathml = mathml;
        this.factory = new semantic_node_factory_1.SemanticNodeFactory();
        this.nodeDict = {};
        this.mmlRoot = WalkerUtil.getSemanticRoot(mathml);
        this.streeRoot = this.assembleTree(this.mmlRoot);
        this.stree = semantic_tree_1.SemanticTree.fromNode(this.streeRoot, this.mathml);
        this.xml = this.stree.xml();
        semantic_processor_1.default.getInstance().setNodeFactory(this.factory);
    }
    static addAttributes(snode, node, leaf) {
        if (leaf &&
            node.childNodes.length === 1 &&
            node.childNodes[0].nodeType !== DomUtil.NodeType.TEXT_NODE) {
            SemanticUtil.addAttributes(snode, node.childNodes[0]);
        }
        SemanticUtil.addAttributes(snode, node);
    }
    static textContent(snode, node, ignore) {
        if (!ignore && node.textContent) {
            snode.textContent = node.textContent;
            return;
        }
        const operator = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.OPERATOR));
        if (operator.length > 1) {
            snode.textContent = operator[1];
        }
    }
    static isPunctuated(collapsed) {
        return (!semantic_skeleton_1.SemanticSkeleton.simpleCollapseStructure(collapsed) &&
            collapsed[1] &&
            semantic_skeleton_1.SemanticSkeleton.contentCollapseStructure(collapsed[1]));
    }
    getTree() {
        return this.stree;
    }
    assembleTree(node) {
        const snode = this.makeNode(node);
        const children = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.CHILDREN));
        const content = WalkerUtil.splitAttribute(WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.CONTENT));
        RebuildStree.addAttributes(snode, node, !(children.length || content.length));
        if (content.length === 0 && children.length === 0) {
            RebuildStree.textContent(snode, node);
            return snode;
        }
        if (content.length > 0) {
            const fcontent = WalkerUtil.getBySemanticId(this.mathml, content[0]);
            if (fcontent) {
                RebuildStree.textContent(snode, fcontent, true);
            }
        }
        snode.contentNodes = content.map((id) => this.setParent(id, snode));
        snode.childNodes = children.map((id) => this.setParent(id, snode));
        const collapsed = WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.COLLAPSED);
        return collapsed ? this.postProcess(snode, collapsed) : snode;
    }
    makeNode(node) {
        const type = WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.TYPE);
        const role = WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.ROLE);
        const font = WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.FONT);
        const annotation = WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.ANNOTATION) || '';
        const id = WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.ID);
        const embellished = WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.EMBELLISHED);
        const fencepointer = WalkerUtil.getAttribute(node, enrich_attr_1.Attribute.FENCEPOINTER);
        const snode = this.createNode(parseInt(id, 10));
        snode.type = type;
        snode.role = role;
        snode.font = font ? font : "unknown";
        snode.parseAnnotation(annotation);
        if (fencepointer) {
            snode.fencePointer = fencepointer;
        }
        if (embellished) {
            snode.embellished = embellished;
        }
        return snode;
    }
    makePunctuation(id) {
        const node = this.createNode(id);
        node.updateContent((0, semantic_attr_1.invisibleComma)());
        node.role = "dummy";
        return node;
    }
    makePunctuated(snode, collapsed, role) {
        const punctuated = this.createNode(collapsed[0]);
        punctuated.type = "punctuated";
        punctuated.embellished = snode.embellished;
        punctuated.fencePointer = snode.fencePointer;
        punctuated.role = role;
        const cont = collapsed.splice(1, 1)[0].slice(1);
        punctuated.contentNodes = cont.map(this.makePunctuation.bind(this));
        this.collapsedChildren_(collapsed);
    }
    makeEmpty(snode, collapsed, role) {
        const empty = this.createNode(collapsed);
        empty.type = "empty";
        empty.embellished = snode.embellished;
        empty.fencePointer = snode.fencePointer;
        empty.role = role;
    }
    makeIndex(snode, collapsed, role) {
        if (RebuildStree.isPunctuated(collapsed)) {
            this.makePunctuated(snode, collapsed, role);
            collapsed = collapsed[0];
            return;
        }
        if (semantic_skeleton_1.SemanticSkeleton.simpleCollapseStructure(collapsed) &&
            !this.nodeDict[collapsed.toString()]) {
            this.makeEmpty(snode, collapsed, role);
        }
    }
    postProcess(snode, collapsed) {
        const array = semantic_skeleton_1.SemanticSkeleton.fromString(collapsed).array;
        if (snode.type === "subsup") {
            const subscript = this.createNode(array[1][0]);
            subscript.type = "subscript";
            subscript.role = "subsup";
            snode.type = "superscript";
            subscript.embellished = snode.embellished;
            subscript.fencePointer = snode.fencePointer;
            this.makeIndex(snode, array[1][2], "rightsub");
            this.makeIndex(snode, array[2], "rightsuper");
            this.collapsedChildren_(array);
            return snode;
        }
        if (snode.type === "subscript") {
            this.makeIndex(snode, array[2], "rightsub");
            this.collapsedChildren_(array);
            return snode;
        }
        if (snode.type === "superscript") {
            this.makeIndex(snode, array[2], "rightsuper");
            this.collapsedChildren_(array);
            return snode;
        }
        if (snode.type === "tensor") {
            this.makeIndex(snode, array[2], "leftsub");
            this.makeIndex(snode, array[3], "leftsuper");
            this.makeIndex(snode, array[4], "rightsub");
            this.makeIndex(snode, array[5], "rightsuper");
            this.collapsedChildren_(array);
            return snode;
        }
        if (snode.type === "punctuated") {
            if (RebuildStree.isPunctuated(array)) {
                const cont = array.splice(1, 1)[0].slice(1);
                snode.contentNodes = cont.map(this.makePunctuation.bind(this));
            }
            return snode;
        }
        if (snode.type === "underover") {
            const score = this.createNode(array[1][0]);
            if (snode.childNodes[1].role === "overaccent") {
                score.type = "overscore";
                snode.type = "underscore";
            }
            else {
                score.type = "underscore";
                snode.type = "overscore";
            }
            score.role = "underover";
            score.embellished = snode.embellished;
            score.fencePointer = snode.fencePointer;
            this.collapsedChildren_(array);
            return snode;
        }
        return snode;
    }
    createNode(id) {
        const node = this.factory.makeNode(id);
        this.nodeDict[id.toString()] = node;
        return node;
    }
    collapsedChildren_(collapsed) {
        const recurseCollapsed = (coll) => {
            const parent = this.nodeDict[coll[0]];
            parent.childNodes = [];
            for (let j = 1, l = coll.length; j < l; j++) {
                const id = coll[j];
                parent.childNodes.push(semantic_skeleton_1.SemanticSkeleton.simpleCollapseStructure(id)
                    ? this.nodeDict[id]
                    : recurseCollapsed(id));
            }
            return parent;
        };
        recurseCollapsed(collapsed);
    }
    setParent(id, snode) {
        const mml = WalkerUtil.getBySemanticId(this.mathml, id);
        const sn = this.assembleTree(mml);
        sn.parent = snode;
        return sn;
    }
}
exports.RebuildStree = RebuildStree;


/***/ }),

/***/ 6295:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticWalker = void 0;
const abstract_walker_1 = __webpack_require__(3284);
const levels_1 = __webpack_require__(9797);
class SemanticWalker extends abstract_walker_1.AbstractWalker {
    constructor(node, generator, highlighter, xml) {
        super(node, generator, highlighter, xml);
        this.node = node;
        this.generator = generator;
        this.highlighter = highlighter;
        this.levels = null;
        this.restoreState();
    }
    initLevels() {
        const levels = new levels_1.Levels();
        levels.push([this.getFocus()]);
        return levels;
    }
    up() {
        super.up();
        const parent = this.previousLevel();
        if (!parent) {
            return null;
        }
        this.levels.pop();
        const found = this.levels.find(function (focus) {
            return focus.getSemanticNodes().some(function (node) {
                return node.id.toString() === parent;
            });
        });
        return found;
    }
    down() {
        super.down();
        const children = this.nextLevel();
        if (children.length === 0) {
            return null;
        }
        this.levels.push(children);
        return children[0];
    }
    combineContentChildren(type, role, content, children) {
        switch (type) {
            case "relseq":
            case "infixop":
            case "multirel":
                return this.makePairList(children, content);
            case "prefixop":
                return [this.focusFromId(children[0], content.concat(children))];
            case "postfixop":
                return [this.focusFromId(children[0], children.concat(content))];
            case "matrix":
            case "vector":
            case "fenced":
                return [
                    this.focusFromId(children[0], [content[0], children[0], content[1]])
                ];
            case "cases":
                return [this.focusFromId(children[0], [content[0], children[0]])];
            case "punctuated":
                if (role === "text") {
                    return children.map(this.singletonFocus.bind(this));
                }
                if (children.length === content.length) {
                    return content.map(this.singletonFocus.bind(this));
                }
                return this.combinePunctuations(children, content, [], []);
            case "appl":
                return [
                    this.focusFromId(children[0], [children[0], content[0]]),
                    this.singletonFocus(children[1])
                ];
            case "root":
                return [
                    this.singletonFocus(children[1]),
                    this.singletonFocus(children[0])
                ];
            default:
                return children.map(this.singletonFocus.bind(this));
        }
    }
    combinePunctuations(children, content, prepunct, acc) {
        if (children.length === 0) {
            return acc;
        }
        const child = children.shift();
        const cont = content.shift();
        if (child === cont) {
            prepunct.push(cont);
            return this.combinePunctuations(children, content, prepunct, acc);
        }
        else {
            content.unshift(cont);
            prepunct.push(child);
            if (children.length === content.length) {
                acc.push(this.focusFromId(child, prepunct.concat(content)));
                return acc;
            }
            else {
                acc.push(this.focusFromId(child, prepunct));
                return this.combinePunctuations(children, content, [], acc);
            }
        }
    }
    makePairList(children, content) {
        if (children.length === 0) {
            return [];
        }
        if (children.length === 1) {
            return [this.singletonFocus(children[0])];
        }
        const result = [this.singletonFocus(children.shift())];
        for (let i = 0, l = children.length; i < l; i++) {
            result.push(this.focusFromId(children[i], [content[i], children[i]]));
        }
        return result;
    }
    left() {
        super.left();
        const index = this.levels.indexOf(this.getFocus());
        if (index === null) {
            return null;
        }
        const ids = this.levels.get(index - 1);
        return ids ? ids : null;
    }
    right() {
        super.right();
        const index = this.levels.indexOf(this.getFocus());
        if (index === null) {
            return null;
        }
        const ids = this.levels.get(index + 1);
        return ids ? ids : null;
    }
    findFocusOnLevel(id) {
        const focus = this.levels.find((x) => {
            const pid = x.getSemanticPrimary().id;
            return pid === id;
        });
        return focus;
    }
}
exports.SemanticWalker = SemanticWalker;


/***/ }),

/***/ 9806:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SyntaxWalker = void 0;
const base_util_1 = __webpack_require__(707);
const abstract_walker_1 = __webpack_require__(3284);
const levels_1 = __webpack_require__(9797);
class SyntaxWalker extends abstract_walker_1.AbstractWalker {
    constructor(node, generator, highlighter, xml) {
        super(node, generator, highlighter, xml);
        this.node = node;
        this.generator = generator;
        this.highlighter = highlighter;
        this.levels = null;
        this.restoreState();
    }
    initLevels() {
        const levels = new levels_1.Levels();
        levels.push([this.primaryId()]);
        return levels;
    }
    up() {
        super.up();
        const parent = this.previousLevel();
        if (!parent) {
            return null;
        }
        this.levels.pop();
        return this.singletonFocus(parent);
    }
    down() {
        super.down();
        const children = this.nextLevel();
        if (children.length === 0) {
            return null;
        }
        const focus = this.singletonFocus(children[0]);
        if (focus) {
            this.levels.push(children);
        }
        return focus;
    }
    combineContentChildren(type, role, content, children) {
        switch (type) {
            case "relseq":
            case "infixop":
            case "multirel":
                return (0, base_util_1.interleaveLists)(children, content);
            case "prefixop":
                return content.concat(children);
            case "postfixop":
                return children.concat(content);
            case "matrix":
            case "vector":
            case "fenced":
                children.unshift(content[0]);
                children.push(content[1]);
                return children;
            case "cases":
                children.unshift(content[0]);
                return children;
            case "punctuated":
                if (role === "text") {
                    return (0, base_util_1.interleaveLists)(children, content);
                }
                return children;
            case "appl":
                return [children[0], content[0], children[1]];
            case "root":
                return [children[1], children[0]];
            default:
                return children;
        }
    }
    left() {
        super.left();
        const index = this.levels.indexOf(this.primaryId());
        if (index === null) {
            return null;
        }
        const id = this.levels.get(index - 1);
        return id ? this.singletonFocus(id) : null;
    }
    right() {
        super.right();
        const index = this.levels.indexOf(this.primaryId());
        if (index === null) {
            return null;
        }
        const id = this.levels.get(index + 1);
        return id ? this.singletonFocus(id) : null;
    }
    findFocusOnLevel(id) {
        return this.singletonFocus(id.toString());
    }
    focusDomNodes() {
        return [this.getFocus().getDomPrimary()];
    }
    focusSemanticNodes() {
        return [this.getFocus().getSemanticPrimary()];
    }
}
exports.SyntaxWalker = SyntaxWalker;


/***/ }),

/***/ 1799:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TableWalker = void 0;
const DomUtil = __webpack_require__(5740);
const event_util_1 = __webpack_require__(8496);
const syntax_walker_1 = __webpack_require__(9806);
const walker_1 = __webpack_require__(179);
class TableWalker extends syntax_walker_1.SyntaxWalker {
    constructor(node, generator, highlighter, xml) {
        super(node, generator, highlighter, xml);
        this.node = node;
        this.generator = generator;
        this.highlighter = highlighter;
        this.firstJump = null;
        this.key_ = null;
        this.row_ = 0;
        this.currentTable_ = null;
        this.keyMapping.set(event_util_1.KeyCode.ZERO, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.ONE, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.TWO, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.THREE, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.FOUR, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.FIVE, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.SIX, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.SEVEN, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.EIGHT, this.jumpCell.bind(this));
        this.keyMapping.set(event_util_1.KeyCode.NINE, this.jumpCell.bind(this));
    }
    move(key) {
        this.key_ = key;
        const result = super.move(key);
        this.modifier = false;
        return result;
    }
    up() {
        this.moved = walker_1.WalkerMoves.UP;
        return this.eligibleCell_() ? this.verticalMove_(false) : super.up();
    }
    down() {
        this.moved = walker_1.WalkerMoves.DOWN;
        return this.eligibleCell_() ? this.verticalMove_(true) : super.down();
    }
    jumpCell() {
        if (!this.isInTable_() || this.key_ === null) {
            return this.getFocus();
        }
        if (this.moved === walker_1.WalkerMoves.ROW) {
            this.moved = walker_1.WalkerMoves.CELL;
            const column = this.key_ - event_util_1.KeyCode.ZERO;
            if (!this.isLegalJump_(this.row_, column)) {
                return this.getFocus();
            }
            return this.jumpCell_(this.row_, column);
        }
        const row = this.key_ - event_util_1.KeyCode.ZERO;
        if (row > this.currentTable_.childNodes.length) {
            return this.getFocus();
        }
        this.row_ = row;
        this.moved = walker_1.WalkerMoves.ROW;
        return this.getFocus().clone();
    }
    undo() {
        const focus = super.undo();
        if (focus === this.firstJump) {
            this.firstJump = null;
        }
        return focus;
    }
    eligibleCell_() {
        const primary = this.getFocus().getSemanticPrimary();
        return (this.modifier &&
            primary.type === "cell" &&
            TableWalker.ELIGIBLE_CELL_ROLES.indexOf(primary.role) !== -1);
    }
    verticalMove_(direction) {
        const parent = this.previousLevel();
        if (!parent) {
            return null;
        }
        const origFocus = this.getFocus();
        const origIndex = this.levels.indexOf(this.primaryId());
        const origLevel = this.levels.pop();
        const parentIndex = this.levels.indexOf(parent);
        const row = this.levels.get(direction ? parentIndex + 1 : parentIndex - 1);
        if (!row) {
            this.levels.push(origLevel);
            return null;
        }
        this.setFocus(this.singletonFocus(row));
        const children = this.nextLevel();
        const newNode = children[origIndex];
        if (!newNode) {
            this.setFocus(origFocus);
            this.levels.push(origLevel);
            return null;
        }
        this.levels.push(children);
        return this.singletonFocus(children[origIndex]);
    }
    jumpCell_(row, column) {
        if (!this.firstJump) {
            this.firstJump = this.getFocus();
            this.virtualize(true);
        }
        else {
            this.virtualize(false);
        }
        const id = this.currentTable_.id.toString();
        let level;
        do {
            level = this.levels.pop();
        } while (level.indexOf(id) === -1);
        this.levels.push(level);
        this.setFocus(this.singletonFocus(id));
        this.levels.push(this.nextLevel());
        const semRow = this.currentTable_.childNodes[row - 1];
        this.setFocus(this.singletonFocus(semRow.id.toString()));
        this.levels.push(this.nextLevel());
        return this.singletonFocus(semRow.childNodes[column - 1].id.toString());
    }
    isLegalJump_(row, column) {
        const xmlTable = DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml, 'id', this.currentTable_.id.toString())[0];
        if (!xmlTable || xmlTable.hasAttribute('alternative')) {
            return false;
        }
        const rowNode = this.currentTable_.childNodes[row - 1];
        if (!rowNode) {
            return false;
        }
        const xmlRow = DomUtil.querySelectorAllByAttrValue(xmlTable, 'id', rowNode.id.toString())[0];
        if (!xmlRow || xmlRow.hasAttribute('alternative')) {
            return false;
        }
        return !!(rowNode && rowNode.childNodes[column - 1]);
    }
    isInTable_() {
        let snode = this.getFocus().getSemanticPrimary();
        while (snode) {
            if (TableWalker.ELIGIBLE_TABLE_TYPES.indexOf(snode.type) !== -1) {
                this.currentTable_ = snode;
                return true;
            }
            snode = snode.parent;
        }
        return false;
    }
}
exports.TableWalker = TableWalker;
TableWalker.ELIGIBLE_CELL_ROLES = [
    "determinant",
    "rowvector",
    "binomial",
    "squarematrix",
    "multiline",
    "matrix",
    "vector",
    "cases",
    "table"
];
TableWalker.ELIGIBLE_TABLE_TYPES = [
    "multiline",
    "matrix",
    "vector",
    "cases",
    "table"
];


/***/ }),

/***/ 179:
/***/ (function(__unused_webpack_module, exports) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WalkerState = exports.WalkerMoves = void 0;
var WalkerMoves;
(function (WalkerMoves) {
    WalkerMoves["UP"] = "up";
    WalkerMoves["DOWN"] = "down";
    WalkerMoves["LEFT"] = "left";
    WalkerMoves["RIGHT"] = "right";
    WalkerMoves["REPEAT"] = "repeat";
    WalkerMoves["DEPTH"] = "depth";
    WalkerMoves["ENTER"] = "enter";
    WalkerMoves["EXPAND"] = "expand";
    WalkerMoves["HOME"] = "home";
    WalkerMoves["SUMMARY"] = "summary";
    WalkerMoves["DETAIL"] = "detail";
    WalkerMoves["ROW"] = "row";
    WalkerMoves["CELL"] = "cell";
})(WalkerMoves = exports.WalkerMoves || (exports.WalkerMoves = {}));
class WalkerState {
    static resetState(id) {
        delete WalkerState.STATE[id];
    }
    static setState(id, value) {
        WalkerState.STATE[id] = value;
    }
    static getState(id) {
        return WalkerState.STATE[id];
    }
}
exports.WalkerState = WalkerState;
WalkerState.STATE = {};


/***/ }),

/***/ 3362:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.walkerMapping_ = exports.walker = void 0;
const dummy_walker_1 = __webpack_require__(162);
const semantic_walker_1 = __webpack_require__(6295);
const syntax_walker_1 = __webpack_require__(9806);
const table_walker_1 = __webpack_require__(1799);
function walker(type, node, generator, highlighter, xml) {
    const constructor = exports.walkerMapping_[type.toLowerCase()] || exports.walkerMapping_['dummy'];
    return constructor(node, generator, highlighter, xml);
}
exports.walker = walker;
exports.walkerMapping_ = {
    dummy: (p1, p2, p3, p4) => new dummy_walker_1.DummyWalker(p1, p2, p3, p4),
    semantic: (p1, p2, p3, p4) => new semantic_walker_1.SemanticWalker(p1, p2, p3, p4),
    syntax: (p1, p2, p3, p4) => new syntax_walker_1.SyntaxWalker(p1, p2, p3, p4),
    table: (p1, p2, p3, p4) => new table_walker_1.TableWalker(p1, p2, p3, p4)
};


/***/ }),

/***/ 1204:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getBySemanticId = exports.getSemanticRoot = exports.getAttribute = exports.splitAttribute = void 0;
const DomUtil = __webpack_require__(5740);
const enrich_attr_1 = __webpack_require__(2298);
function splitAttribute(attr) {
    return !attr ? [] : attr.split(/,/);
}
exports.splitAttribute = splitAttribute;
function getAttribute(node, attr) {
    return node.getAttribute(attr);
}
exports.getAttribute = getAttribute;
function getSemanticRoot(node) {
    if (node.hasAttribute(enrich_attr_1.Attribute.TYPE) &&
        !node.hasAttribute(enrich_attr_1.Attribute.PARENT)) {
        return node;
    }
    const semanticNodes = DomUtil.querySelectorAllByAttr(node, enrich_attr_1.Attribute.TYPE);
    for (let i = 0, semanticNode; (semanticNode = semanticNodes[i]); i++) {
        if (!semanticNode.hasAttribute(enrich_attr_1.Attribute.PARENT)) {
            return semanticNode;
        }
    }
    return node;
}
exports.getSemanticRoot = getSemanticRoot;
function getBySemanticId(root, id) {
    if (root.getAttribute(enrich_attr_1.Attribute.ID) === id) {
        return root;
    }
    return DomUtil.querySelectorAllByAttrValue(root, enrich_attr_1.Attribute.ID, id)[0];
}
exports.getBySemanticId = getBySemanticId;


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {

// EXTERNAL MODULE: ../../../js/components/global.js
var global = __webpack_require__(9515);
// EXTERNAL MODULE: ../../../js/components/version.js
var version = __webpack_require__(3282);
// EXTERNAL MODULE: ../../../js/components/loader.js
var loader = __webpack_require__(235);
// EXTERNAL MODULE: ../../../js/components/package.js
var components_package = __webpack_require__(265);
// EXTERNAL MODULE: ../../../js/components/startup.js
var startup = __webpack_require__(2388);
;// CONCATENATED MODULE: ../startup/lib/startup.js






if (MathJax.loader) {
  MathJax.loader.checkVersion('startup', version.VERSION, 'startup');
}

(0,global.combineWithMathJax)({
  _: {
    components: {
      loader: loader,
      "package": components_package,
      startup: startup
    }
  }
});
;// CONCATENATED MODULE: ../dependencies.js
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/*************************************************************
 *
 *  Copyright (c) 2019-2021 The MathJax Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
var dependencies = {
  'a11y/semantic-enrich': ['input/mml', 'a11y/sre'],
  'a11y/complexity': ['a11y/semantic-enrich'],
  'a11y/explorer': ['a11y/semantic-enrich', 'ui/menu'],
  '[mml]/mml3': ['input/mml'],
  '[tex]/all-packages': ['input/tex-base'],
  '[tex]/action': ['input/tex-base', '[tex]/newcommand'],
  '[tex]/autoload': ['input/tex-base', '[tex]/require'],
  '[tex]/ams': ['input/tex-base'],
  '[tex]/amscd': ['input/tex-base'],
  '[tex]/bbox': ['input/tex-base', '[tex]/ams', '[tex]/newcommand'],
  '[tex]/boldsymbol': ['input/tex-base'],
  '[tex]/braket': ['input/tex-base'],
  '[tex]/bussproofs': ['input/tex-base'],
  '[tex]/cancel': ['input/tex-base', '[tex]/enclose'],
  '[tex]/centernot': ['input/tex-base'],
  '[tex]/color': ['input/tex-base'],
  '[tex]/colorv2': ['input/tex-base'],
  '[tex]/colortbl': ['input/tex-base', '[tex]/color'],
  '[tex]/configmacros': ['input/tex-base', '[tex]/newcommand'],
  '[tex]/enclose': ['input/tex-base'],
  '[tex]/extpfeil': ['input/tex-base', '[tex]/newcommand', '[tex]/ams'],
  '[tex]/html': ['input/tex-base'],
  '[tex]/mathtools': ['input/tex-base', '[tex]/newcommand', '[tex]/ams'],
  '[tex]/mhchem': ['input/tex-base', '[tex]/ams'],
  '[tex]/newcommand': ['input/tex-base'],
  '[tex]/noerrors': ['input/tex-base'],
  '[tex]/noundefined': ['input/tex-base'],
  '[tex]/physics': ['input/tex-base'],
  '[tex]/require': ['input/tex-base'],
  '[tex]/setoptions': ['input/tex-base'],
  '[tex]/tagformat': ['input/tex-base'],
  '[tex]/textcomp': ['input/tex-base', '[tex]/textmacros'],
  '[tex]/textmacros': ['input/tex-base'],
  '[tex]/unicode': ['input/tex-base'],
  '[tex]/verb': ['input/tex-base'],
  '[tex]/cases': ['[tex]/empheq'],
  '[tex]/empheq': ['input/tex-base', '[tex]/ams']
};
var paths = {
  tex: '[mathjax]/input/tex/extensions',
  mml: '[mathjax]/input/mml/extensions',
  sre: '[mathjax]/sre/mathmaps'
};
var allPackages = Array.from(Object.keys(dependencies)).filter(function (name) {
  return name.substr(0, 5) === '[tex]' && name !== '[tex]/autoload' && name !== '[tex]/colorv2' && name !== '[tex]/all-packages';
});
var provides = {
  'startup': ['loader'],
  'input/tex': ['input/tex-base', '[tex]/ams', '[tex]/newcommand', '[tex]/noundefined', '[tex]/require', '[tex]/autoload', '[tex]/configmacros'],
  'input/tex-full': ['input/tex-base', '[tex]/all-packages'].concat(_toConsumableArray(allPackages)),
  '[tex]/all-packages': allPackages
}; //
//  Compatibility with v3.0 names for TeX extensions
//

var compatibility = {
  '[tex]/amsCd': '[tex]/amscd',
  '[tex]/colorV2': '[tex]/colorv2',
  '[tex]/configMacros': '[tex]/configmacros',
  '[tex]/tagFormat': '[tex]/tagformat'
};
;// CONCATENATED MODULE: ../startup/init.js



(0,global.combineDefaults)(MathJax.config.loader, 'dependencies', dependencies);
(0,global.combineDefaults)(MathJax.config.loader, 'paths', paths);
(0,global.combineDefaults)(MathJax.config.loader, 'provides', provides);
(0,global.combineDefaults)(MathJax.config.loader, 'source', compatibility);
;// CONCATENATED MODULE: ./preload.js

loader.Loader.preLoad('loader', 'startup', 'core', 'input/tex-full', 'output/chtml', 'output/chtml/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml', 'a11y/sre');
// EXTERNAL MODULE: ../../../js/adaptors/HTMLAdaptor.js
var HTMLAdaptor = __webpack_require__(444);
// EXTERNAL MODULE: ../../../js/adaptors/browserAdaptor.js
var browserAdaptor = __webpack_require__(6191);
// EXTERNAL MODULE: ../../../js/core/DOMAdaptor.js
var DOMAdaptor = __webpack_require__(5009);
// EXTERNAL MODULE: ../../../js/core/FindMath.js
var FindMath = __webpack_require__(3494);
// EXTERNAL MODULE: ../../../js/core/Handler.js
var Handler = __webpack_require__(3670);
// EXTERNAL MODULE: ../../../js/core/HandlerList.js
var HandlerList = __webpack_require__(805);
// EXTERNAL MODULE: ../../../js/core/InputJax.js
var InputJax = __webpack_require__(9206);
// EXTERNAL MODULE: ../../../js/core/MathDocument.js
var MathDocument = __webpack_require__(5722);
// EXTERNAL MODULE: ../../../js/core/MathItem.js
var MathItem = __webpack_require__(4474);
// EXTERNAL MODULE: ../../../js/core/MathList.js
var MathList = __webpack_require__(9000);
// EXTERNAL MODULE: ../../../js/core/MmlTree/Attributes.js
var Attributes = __webpack_require__(91);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MML.js
var MML = __webpack_require__(6336);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MathMLVisitor.js
var MathMLVisitor = __webpack_require__(1759);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlFactory.js
var MmlFactory = __webpack_require__(3909);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNode.js
var MmlNode = __webpack_require__(9007);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/TeXAtom.js
var TeXAtom = __webpack_require__(3948);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/maction.js
var maction = __webpack_require__(9145);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/maligngroup.js
var maligngroup = __webpack_require__(142);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/malignmark.js
var malignmark = __webpack_require__(7590);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/math.js
var math = __webpack_require__(3233);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mathchoice.js
var mathchoice = __webpack_require__(1334);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/menclose.js
var menclose = __webpack_require__(6661);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/merror.js
var merror = __webpack_require__(1581);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mfenced.js
var mfenced = __webpack_require__(5410);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mfrac.js
var mfrac = __webpack_require__(6850);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mglyph.js
var mglyph = __webpack_require__(3985);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mi.js
var mi = __webpack_require__(450);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mmultiscripts.js
var mmultiscripts = __webpack_require__(6405);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mn.js
var mn = __webpack_require__(3050);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mo.js
var mo = __webpack_require__(2756);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mpadded.js
var mpadded = __webpack_require__(7238);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mphantom.js
var mphantom = __webpack_require__(5741);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mroot.js
var mroot = __webpack_require__(6145);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mrow.js
var mrow = __webpack_require__(9878);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/ms.js
var ms = __webpack_require__(7265);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mspace.js
var mspace = __webpack_require__(6030);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/msqrt.js
var msqrt = __webpack_require__(7131);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mstyle.js
var mstyle = __webpack_require__(1314);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/msubsup.js
var msubsup = __webpack_require__(4461);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mtable.js
var mtable = __webpack_require__(1349);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mtd.js
var mtd = __webpack_require__(4359);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mtext.js
var mtext = __webpack_require__(4770);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/mtr.js
var mtr = __webpack_require__(5022);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/munderover.js
var munderover = __webpack_require__(5184);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlNodes/semantics.js
var semantics = __webpack_require__(9102);
// EXTERNAL MODULE: ../../../js/core/MmlTree/MmlVisitor.js
var MmlVisitor = __webpack_require__(6325);
// EXTERNAL MODULE: ../../../js/core/MmlTree/OperatorDictionary.js
var OperatorDictionary = __webpack_require__(4082);
// EXTERNAL MODULE: ../../../js/core/MmlTree/SerializedMmlVisitor.js
var SerializedMmlVisitor = __webpack_require__(9259);
// EXTERNAL MODULE: ../../../js/core/OutputJax.js
var OutputJax = __webpack_require__(2975);
// EXTERNAL MODULE: ../../../js/core/Tree/Factory.js
var Factory = __webpack_require__(4574);
// EXTERNAL MODULE: ../../../js/core/Tree/Node.js
var Node = __webpack_require__(4596);
// EXTERNAL MODULE: ../../../js/core/Tree/NodeFactory.js
var NodeFactory = __webpack_require__(7860);
// EXTERNAL MODULE: ../../../js/core/Tree/Visitor.js
var Visitor = __webpack_require__(8823);
// EXTERNAL MODULE: ../../../js/core/Tree/Wrapper.js
var Wrapper = __webpack_require__(8912);
// EXTERNAL MODULE: ../../../js/core/Tree/WrapperFactory.js
var WrapperFactory = __webpack_require__(3811);
// EXTERNAL MODULE: ../../../js/handlers/html.js
var html = __webpack_require__(6272);
// EXTERNAL MODULE: ../../../js/handlers/html/HTMLDocument.js
var HTMLDocument = __webpack_require__(3683);
// EXTERNAL MODULE: ../../../js/handlers/html/HTMLDomStrings.js
var HTMLDomStrings = __webpack_require__(5138);
// EXTERNAL MODULE: ../../../js/handlers/html/HTMLHandler.js
var HTMLHandler = __webpack_require__(3726);
// EXTERNAL MODULE: ../../../js/handlers/html/HTMLMathItem.js
var HTMLMathItem = __webpack_require__(3363);
// EXTERNAL MODULE: ../../../js/handlers/html/HTMLMathList.js
var HTMLMathList = __webpack_require__(3335);
// EXTERNAL MODULE: ../../../js/mathjax.js
var mathjax = __webpack_require__(5713);
// EXTERNAL MODULE: ../../../js/util/AsyncLoad.js
var AsyncLoad = __webpack_require__(9923);
// EXTERNAL MODULE: ../../../js/util/BBox.js
var BBox = __webpack_require__(6469);
// EXTERNAL MODULE: ../../../js/util/BitField.js
var BitField = __webpack_require__(6751);
// EXTERNAL MODULE: ../../../js/util/Entities.js
var Entities = __webpack_require__(5368);
// EXTERNAL MODULE: ../../../js/util/FunctionList.js
var FunctionList = __webpack_require__(7525);
// EXTERNAL MODULE: ../../../js/util/LinkedList.js
var LinkedList = __webpack_require__(103);
// EXTERNAL MODULE: ../../../js/util/Options.js
var Options = __webpack_require__(7233);
// EXTERNAL MODULE: ../../../js/util/PrioritizedList.js
var PrioritizedList = __webpack_require__(8666);
// EXTERNAL MODULE: ../../../js/util/Retries.js
var Retries = __webpack_require__(4542);
// EXTERNAL MODULE: ../../../js/util/StyleList.js
var StyleList = __webpack_require__(4139);
// EXTERNAL MODULE: ../../../js/util/Styles.js
var Styles = __webpack_require__(8054);
// EXTERNAL MODULE: ../../../js/util/lengths.js
var lengths = __webpack_require__(6010);
// EXTERNAL MODULE: ../../../js/util/numeric.js
var numeric = __webpack_require__(7875);
// EXTERNAL MODULE: ../../../js/util/string.js
var string = __webpack_require__(505);
;// CONCATENATED MODULE: ../core/lib/core.js
















































































if (MathJax.loader) {
  MathJax.loader.checkVersion('core', version.VERSION, 'core');
}

(0,global.combineWithMathJax)({
  _: {
    adaptors: {
      HTMLAdaptor: HTMLAdaptor,
      browserAdaptor: browserAdaptor
    },
    components: {
      global: global
    },
    core: {
      DOMAdaptor: DOMAdaptor,
      FindMath: FindMath,
      Handler: Handler,
      HandlerList: HandlerList,
      InputJax: InputJax,
      MathDocument: MathDocument,
      MathItem: MathItem,
      MathList: MathList,
      MmlTree: {
        Attributes: Attributes,
        MML: MML,
        MathMLVisitor: MathMLVisitor,
        MmlFactory: MmlFactory,
        MmlNode: MmlNode,
        MmlNodes: {
          TeXAtom: TeXAtom,
          maction: maction,
          maligngroup: maligngroup,
          malignmark: malignmark,
          math: math,
          mathchoice: mathchoice,
          menclose: menclose,
          merror: merror,
          mfenced: mfenced,
          mfrac: mfrac,
          mglyph: mglyph,
          mi: mi,
          mmultiscripts: mmultiscripts,
          mn: mn,
          mo: mo,
          mpadded: mpadded,
          mphantom: mphantom,
          mroot: mroot,
          mrow: mrow,
          ms: ms,
          mspace: mspace,
          msqrt: msqrt,
          mstyle: mstyle,
          msubsup: msubsup,
          mtable: mtable,
          mtd: mtd,
          mtext: mtext,
          mtr: mtr,
          munderover: munderover,
          semantics: semantics
        },
        MmlVisitor: MmlVisitor,
        OperatorDictionary: OperatorDictionary,
        SerializedMmlVisitor: SerializedMmlVisitor
      },
      OutputJax: OutputJax,
      Tree: {
        Factory: Factory,
        Node: Node,
        NodeFactory: NodeFactory,
        Visitor: Visitor,
        Wrapper: Wrapper,
        WrapperFactory: WrapperFactory
      }
    },
    handlers: {
      html_ts: html,
      html: {
        HTMLDocument: HTMLDocument,
        HTMLDomStrings: HTMLDomStrings,
        HTMLHandler: HTMLHandler,
        HTMLMathItem: HTMLMathItem,
        HTMLMathList: HTMLMathList
      }
    },
    mathjax: mathjax,
    util: {
      AsyncLoad: AsyncLoad,
      BBox: BBox,
      BitField: BitField,
      Entities: Entities,
      FunctionList: FunctionList,
      LinkedList: LinkedList,
      Options: Options,
      PrioritizedList: PrioritizedList,
      Retries: Retries,
      StyleList: StyleList,
      Styles: Styles,
      lengths: lengths,
      numeric: numeric,
      string: string
    }
  }
});
;// CONCATENATED MODULE: ../core/core.js




if (MathJax.startup) {
  MathJax.startup.registerConstructor('HTMLHandler', HTMLHandler.HTMLHandler);
  MathJax.startup.registerConstructor('browserAdaptor', browserAdaptor.browserAdaptor);
  MathJax.startup.useHandler('HTMLHandler');
  MathJax.startup.useAdaptor('browserAdaptor');
}

if (MathJax.loader) {
  MathJax._.mathjax.mathjax.asyncLoad = function (name) {
    return MathJax.loader.load(name);
  };
}
// EXTERNAL MODULE: ../../../js/input/tex.js
var tex = __webpack_require__(8462);
// EXTERNAL MODULE: ../../../js/input/tex/AllPackages.js
var AllPackages = __webpack_require__(210);
// EXTERNAL MODULE: ../../../js/input/tex/Configuration.js
var Configuration = __webpack_require__(9899);
// EXTERNAL MODULE: ../../../js/input/tex/FilterUtil.js
var FilterUtil = __webpack_require__(4676);
// EXTERNAL MODULE: ../../../js/input/tex/FindTeX.js
var FindTeX = __webpack_require__(7073);
// EXTERNAL MODULE: ../../../js/input/tex/MapHandler.js
var MapHandler = __webpack_require__(2947);
// EXTERNAL MODULE: ../../../js/input/tex/NodeFactory.js
var tex_NodeFactory = __webpack_require__(8929);
// EXTERNAL MODULE: ../../../js/input/tex/NodeUtil.js
var NodeUtil = __webpack_require__(1256);
// EXTERNAL MODULE: ../../../js/input/tex/ParseMethods.js
var ParseMethods = __webpack_require__(5450);
// EXTERNAL MODULE: ../../../js/input/tex/ParseOptions.js
var ParseOptions = __webpack_require__(8562);
// EXTERNAL MODULE: ../../../js/input/tex/ParseUtil.js
var ParseUtil = __webpack_require__(1130);
// EXTERNAL MODULE: ../../../js/input/tex/Stack.js
var Stack = __webpack_require__(9497);
// EXTERNAL MODULE: ../../../js/input/tex/StackItem.js
var StackItem = __webpack_require__(8292);
// EXTERNAL MODULE: ../../../js/input/tex/StackItemFactory.js
var StackItemFactory = __webpack_require__(5453);
// EXTERNAL MODULE: ../../../js/input/tex/Symbol.js
var tex_Symbol = __webpack_require__(8803);
// EXTERNAL MODULE: ../../../js/input/tex/SymbolMap.js
var SymbolMap = __webpack_require__(9140);
// EXTERNAL MODULE: ../../../js/input/tex/Tags.js
var Tags = __webpack_require__(6521);
// EXTERNAL MODULE: ../../../js/input/tex/TexConstants.js
var TexConstants = __webpack_require__(8317);
// EXTERNAL MODULE: ../../../js/input/tex/TexError.js
var TexError = __webpack_require__(3971);
// EXTERNAL MODULE: ../../../js/input/tex/TexParser.js
var TexParser = __webpack_require__(8417);
// EXTERNAL MODULE: ../../../js/input/tex/action/ActionConfiguration.js
var ActionConfiguration = __webpack_require__(8174);
// EXTERNAL MODULE: ../../../js/input/tex/amscd/AmsCdConfiguration.js
var AmsCdConfiguration = __webpack_require__(583);
// EXTERNAL MODULE: ../../../js/input/tex/amscd/AmsCdMethods.js
var AmsCdMethods = __webpack_require__(7819);
// EXTERNAL MODULE: ../../../js/input/tex/ams/AmsConfiguration.js
var AmsConfiguration = __webpack_require__(8021);
// EXTERNAL MODULE: ../../../js/input/tex/ams/AmsItems.js
var AmsItems = __webpack_require__(2790);
// EXTERNAL MODULE: ../../../js/input/tex/ams/AmsMethods.js
var AmsMethods = __webpack_require__(4387);
// EXTERNAL MODULE: ../../../js/input/tex/autoload/AutoloadConfiguration.js
var AutoloadConfiguration = __webpack_require__(1275);
// EXTERNAL MODULE: ../../../js/input/tex/base/BaseConfiguration.js
var BaseConfiguration = __webpack_require__(2942);
// EXTERNAL MODULE: ../../../js/input/tex/base/BaseItems.js
var BaseItems = __webpack_require__(1181);
// EXTERNAL MODULE: ../../../js/input/tex/base/BaseMethods.js
var BaseMethods = __webpack_require__(7693);
// EXTERNAL MODULE: ../../../js/input/tex/bbox/BboxConfiguration.js
var BboxConfiguration = __webpack_require__(1186);
// EXTERNAL MODULE: ../../../js/input/tex/boldsymbol/BoldsymbolConfiguration.js
var BoldsymbolConfiguration = __webpack_require__(8603);
// EXTERNAL MODULE: ../../../js/input/tex/braket/BraketConfiguration.js
var BraketConfiguration = __webpack_require__(6538);
// EXTERNAL MODULE: ../../../js/input/tex/braket/BraketItems.js
var BraketItems = __webpack_require__(7191);
// EXTERNAL MODULE: ../../../js/input/tex/braket/BraketMethods.js
var BraketMethods = __webpack_require__(8667);
// EXTERNAL MODULE: ../../../js/input/tex/bussproofs/BussproofsConfiguration.js
var BussproofsConfiguration = __webpack_require__(9499);
// EXTERNAL MODULE: ../../../js/input/tex/bussproofs/BussproofsItems.js
var BussproofsItems = __webpack_require__(3980);
// EXTERNAL MODULE: ../../../js/input/tex/bussproofs/BussproofsMethods.js
var BussproofsMethods = __webpack_require__(4934);
// EXTERNAL MODULE: ../../../js/input/tex/bussproofs/BussproofsUtil.js
var BussproofsUtil = __webpack_require__(1933);
// EXTERNAL MODULE: ../../../js/input/tex/cancel/CancelConfiguration.js
var CancelConfiguration = __webpack_require__(8963);
// EXTERNAL MODULE: ../../../js/input/tex/cases/CasesConfiguration.js
var CasesConfiguration = __webpack_require__(3752);
// EXTERNAL MODULE: ../../../js/input/tex/centernot/CenternotConfiguration.js
var CenternotConfiguration = __webpack_require__(8227);
// EXTERNAL MODULE: ../../../js/input/tex/colortbl/ColortblConfiguration.js
var ColortblConfiguration = __webpack_require__(6648);
// EXTERNAL MODULE: ../../../js/input/tex/colorv2/ColorV2Configuration.js
var ColorV2Configuration = __webpack_require__(6628);
// EXTERNAL MODULE: ../../../js/input/tex/color/ColorConfiguration.js
var ColorConfiguration = __webpack_require__(5860);
// EXTERNAL MODULE: ../../../js/input/tex/color/ColorConstants.js
var ColorConstants = __webpack_require__(7960);
// EXTERNAL MODULE: ../../../js/input/tex/color/ColorMethods.js
var ColorMethods = __webpack_require__(2784);
// EXTERNAL MODULE: ../../../js/input/tex/color/ColorUtil.js
var ColorUtil = __webpack_require__(4207);
// EXTERNAL MODULE: ../../../js/input/tex/configmacros/ConfigMacrosConfiguration.js
var ConfigMacrosConfiguration = __webpack_require__(8458);
// EXTERNAL MODULE: ../../../js/input/tex/empheq/EmpheqConfiguration.js
var EmpheqConfiguration = __webpack_require__(5464);
// EXTERNAL MODULE: ../../../js/input/tex/empheq/EmpheqUtil.js
var EmpheqUtil = __webpack_require__(6471);
// EXTERNAL MODULE: ../../../js/input/tex/enclose/EncloseConfiguration.js
var EncloseConfiguration = __webpack_require__(1428);
// EXTERNAL MODULE: ../../../js/input/tex/extpfeil/ExtpfeilConfiguration.js
var ExtpfeilConfiguration = __webpack_require__(6121);
// EXTERNAL MODULE: ../../../js/input/tex/gensymb/GensymbConfiguration.js
var GensymbConfiguration = __webpack_require__(3078);
// EXTERNAL MODULE: ../../../js/input/tex/html/HtmlConfiguration.js
var HtmlConfiguration = __webpack_require__(8901);
// EXTERNAL MODULE: ../../../js/input/tex/html/HtmlMethods.js
var HtmlMethods = __webpack_require__(332);
// EXTERNAL MODULE: ../../../js/input/tex/mathtools/MathtoolsConfiguration.js
var MathtoolsConfiguration = __webpack_require__(7535);
// EXTERNAL MODULE: ../../../js/input/tex/mathtools/MathtoolsItems.js
var MathtoolsItems = __webpack_require__(6224);
// EXTERNAL MODULE: ../../../js/input/tex/mathtools/MathtoolsMethods.js
var MathtoolsMethods = __webpack_require__(643);
// EXTERNAL MODULE: ../../../js/input/tex/mathtools/MathtoolsTags.js
var MathtoolsTags = __webpack_require__(1503);
// EXTERNAL MODULE: ../../../js/input/tex/mathtools/MathtoolsUtil.js
var MathtoolsUtil = __webpack_require__(836);
// EXTERNAL MODULE: ../../../js/input/tex/mhchem/MhchemConfiguration.js
var MhchemConfiguration = __webpack_require__(6944);
// EXTERNAL MODULE: ../../../js/input/tex/newcommand/NewcommandConfiguration.js
var NewcommandConfiguration = __webpack_require__(1496);
// EXTERNAL MODULE: ../../../js/input/tex/newcommand/NewcommandItems.js
var NewcommandItems = __webpack_require__(6793);
// EXTERNAL MODULE: ../../../js/input/tex/newcommand/NewcommandMethods.js
var NewcommandMethods = __webpack_require__(1110);
// EXTERNAL MODULE: ../../../js/input/tex/newcommand/NewcommandUtil.js
var NewcommandUtil = __webpack_require__(5579);
// EXTERNAL MODULE: ../../../js/input/tex/noerrors/NoErrorsConfiguration.js
var NoErrorsConfiguration = __webpack_require__(4234);
// EXTERNAL MODULE: ../../../js/input/tex/noundefined/NoUndefinedConfiguration.js
var NoUndefinedConfiguration = __webpack_require__(4898);
// EXTERNAL MODULE: ../../../js/input/tex/physics/PhysicsConfiguration.js
var PhysicsConfiguration = __webpack_require__(3168);
// EXTERNAL MODULE: ../../../js/input/tex/physics/PhysicsItems.js
var PhysicsItems = __webpack_require__(2612);
// EXTERNAL MODULE: ../../../js/input/tex/physics/PhysicsMethods.js
var PhysicsMethods = __webpack_require__(7157);
// EXTERNAL MODULE: ../../../js/input/tex/require/RequireConfiguration.js
var RequireConfiguration = __webpack_require__(7741);
// EXTERNAL MODULE: ../../../js/input/tex/setoptions/SetOptionsConfiguration.js
var SetOptionsConfiguration = __webpack_require__(9365);
// EXTERNAL MODULE: ../../../js/input/tex/tagformat/TagFormatConfiguration.js
var TagFormatConfiguration = __webpack_require__(1527);
// EXTERNAL MODULE: ../../../js/input/tex/textcomp/TextcompConfiguration.js
var TextcompConfiguration = __webpack_require__(2307);
// EXTERNAL MODULE: ../../../js/input/tex/textmacros/TextMacrosConfiguration.js
var TextMacrosConfiguration = __webpack_require__(2675);
// EXTERNAL MODULE: ../../../js/input/tex/textmacros/TextMacrosMethods.js
var TextMacrosMethods = __webpack_require__(58);
// EXTERNAL MODULE: ../../../js/input/tex/textmacros/TextParser.js
var TextParser = __webpack_require__(8728);
// EXTERNAL MODULE: ../../../js/input/tex/unicode/UnicodeConfiguration.js
var UnicodeConfiguration = __webpack_require__(6841);
// EXTERNAL MODULE: ../../../js/input/tex/upgreek/UpgreekConfiguration.js
var UpgreekConfiguration = __webpack_require__(1442);
// EXTERNAL MODULE: ../../../js/input/tex/verb/VerbConfiguration.js
var VerbConfiguration = __webpack_require__(1247);
;// CONCATENATED MODULE: ../input/tex-full/lib/tex-full.js




















































































if (MathJax.loader) {
  MathJax.loader.checkVersion('input/tex-full', version.VERSION, 'input');
}

(0,global.combineWithMathJax)({
  _: {
    input: {
      tex_ts: tex,
      tex: {
        AllPackages: AllPackages,
        Configuration: Configuration,
        FilterUtil: FilterUtil,
        FindTeX: FindTeX,
        MapHandler: MapHandler,
        NodeFactory: tex_NodeFactory,
        NodeUtil: NodeUtil,
        ParseMethods: ParseMethods,
        ParseOptions: ParseOptions,
        ParseUtil: ParseUtil,
        Stack: Stack,
        StackItem: StackItem,
        StackItemFactory: StackItemFactory,
        Symbol: tex_Symbol,
        SymbolMap: SymbolMap,
        Tags: Tags,
        TexConstants: TexConstants,
        TexError: TexError,
        TexParser: TexParser,
        action: {
          ActionConfiguration: ActionConfiguration
        },
        amscd: {
          AmsCdConfiguration: AmsCdConfiguration,
          AmsCdMethods: AmsCdMethods
        },
        ams: {
          AmsConfiguration: AmsConfiguration,
          AmsItems: AmsItems,
          AmsMethods: AmsMethods
        },
        autoload: {
          AutoloadConfiguration: AutoloadConfiguration
        },
        base: {
          BaseConfiguration: BaseConfiguration,
          BaseItems: BaseItems,
          BaseMethods: BaseMethods
        },
        bbox: {
          BboxConfiguration: BboxConfiguration
        },
        boldsymbol: {
          BoldsymbolConfiguration: BoldsymbolConfiguration
        },
        braket: {
          BraketConfiguration: BraketConfiguration,
          BraketItems: BraketItems,
          BraketMethods: BraketMethods
        },
        bussproofs: {
          BussproofsConfiguration: BussproofsConfiguration,
          BussproofsItems: BussproofsItems,
          BussproofsMethods: BussproofsMethods,
          BussproofsUtil: BussproofsUtil
        },
        cancel: {
          CancelConfiguration: CancelConfiguration
        },
        cases: {
          CasesConfiguration: CasesConfiguration
        },
        centernot: {
          CenternotConfiguration: CenternotConfiguration
        },
        colortbl: {
          ColortblConfiguration: ColortblConfiguration
        },
        colorv2: {
          ColorV2Configuration: ColorV2Configuration
        },
        color: {
          ColorConfiguration: ColorConfiguration,
          ColorConstants: ColorConstants,
          ColorMethods: ColorMethods,
          ColorUtil: ColorUtil
        },
        configmacros: {
          ConfigMacrosConfiguration: ConfigMacrosConfiguration
        },
        empheq: {
          EmpheqConfiguration: EmpheqConfiguration,
          EmpheqUtil: EmpheqUtil
        },
        enclose: {
          EncloseConfiguration: EncloseConfiguration
        },
        extpfeil: {
          ExtpfeilConfiguration: ExtpfeilConfiguration
        },
        gensymb: {
          GensymbConfiguration: GensymbConfiguration
        },
        html: {
          HtmlConfiguration: HtmlConfiguration,
          HtmlMethods: HtmlMethods
        },
        mathtools: {
          MathtoolsConfiguration: MathtoolsConfiguration,
          MathtoolsItems: MathtoolsItems,
          MathtoolsMethods: MathtoolsMethods,
          MathtoolsTags: MathtoolsTags,
          MathtoolsUtil: MathtoolsUtil
        },
        mhchem: {
          MhchemConfiguration: MhchemConfiguration
        },
        newcommand: {
          NewcommandConfiguration: NewcommandConfiguration,
          NewcommandItems: NewcommandItems,
          NewcommandMethods: NewcommandMethods,
          NewcommandUtil: NewcommandUtil
        },
        noerrors: {
          NoErrorsConfiguration: NoErrorsConfiguration
        },
        noundefined: {
          NoUndefinedConfiguration: NoUndefinedConfiguration
        },
        physics: {
          PhysicsConfiguration: PhysicsConfiguration,
          PhysicsItems: PhysicsItems,
          PhysicsMethods: PhysicsMethods
        },
        require: {
          RequireConfiguration: RequireConfiguration
        },
        setoptions: {
          SetOptionsConfiguration: SetOptionsConfiguration
        },
        tagformat: {
          TagFormatConfiguration: TagFormatConfiguration
        },
        textcomp: {
          TextcompConfiguration: TextcompConfiguration
        },
        textmacros: {
          TextMacrosConfiguration: TextMacrosConfiguration,
          TextMacrosMethods: TextMacrosMethods,
          TextParser: TextParser
        },
        unicode: {
          UnicodeConfiguration: UnicodeConfiguration
        },
        upgreek: {
          UpgreekConfiguration: UpgreekConfiguration
        },
        verb: {
          VerbConfiguration: VerbConfiguration
        }
      }
    }
  }
});
;// CONCATENATED MODULE: ../input/tex/extensions/all-packages/lib/all-packages.js






if (MathJax.loader) {
  MathJax.loader.checkVersion('[tex]/all-packages', version.VERSION, 'tex-extension');
}

(0,global.combineWithMathJax)({
  _: {
    input: {
      tex: {
        AllPackages: AllPackages,
        autoload: {
          AutoloadConfiguration: AutoloadConfiguration
        },
        require: {
          RequireConfiguration: RequireConfiguration
        }
      }
    }
  }
});
;// CONCATENATED MODULE: ../input/tex/register.js

function registerTeX() {
  var packageList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var tex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  if (MathJax.startup) {
    if (tex) {
      MathJax.startup.registerConstructor('tex', MathJax._.input.tex_ts.TeX);
      MathJax.startup.useInput('tex');
    }

    if (!MathJax.config.tex) {
      MathJax.config.tex = {};
    }

    var packages = MathJax.config.tex.packages;
    MathJax.config.tex.packages = packageList;

    if (packages) {
      (0,Options.insert)(MathJax.config.tex, {
        packages: packages
      });
    }
  }
}
;// CONCATENATED MODULE: ../input/tex/extensions/all-packages/all-packages.js
function all_packages_toConsumableArray(arr) { return all_packages_arrayWithoutHoles(arr) || all_packages_iterableToArray(arr) || all_packages_unsupportedIterableToArray(arr) || all_packages_nonIterableSpread(); }

function all_packages_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function all_packages_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return all_packages_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return all_packages_arrayLikeToArray(o, minLen); }

function all_packages_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function all_packages_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return all_packages_arrayLikeToArray(arr); }

function all_packages_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }







if (MathJax.loader) {
  MathJax.loader.preLoad('[tex]/autoload', '[tex]/require');
}

registerTeX(['require'].concat(all_packages_toConsumableArray(AllPackages.AllPackages)), false);
;// CONCATENATED MODULE: ../input/tex-full/tex-full.js




if (MathJax.loader) {
  MathJax.loader.preLoad('input/tex-base', '[tex]/all-packages');
}

registerTeX();
// EXTERNAL MODULE: ../../../js/output/chtml.js
var chtml = __webpack_require__(50);
// EXTERNAL MODULE: ../../../js/output/chtml/FontData.js
var FontData = __webpack_require__(8042);
// EXTERNAL MODULE: ../../../js/output/chtml/Notation.js
var Notation = __webpack_require__(8270);
// EXTERNAL MODULE: ../../../js/output/chtml/Usage.js
var Usage = __webpack_require__(6797);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrapper.js
var chtml_Wrapper = __webpack_require__(5355);
// EXTERNAL MODULE: ../../../js/output/chtml/WrapperFactory.js
var chtml_WrapperFactory = __webpack_require__(9261);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers.js
var Wrappers = __webpack_require__(9086);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/TeXAtom.js
var Wrappers_TeXAtom = __webpack_require__(95);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/TextNode.js
var TextNode = __webpack_require__(1148);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/maction.js
var Wrappers_maction = __webpack_require__(8102);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/math.js
var Wrappers_math = __webpack_require__(804);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/menclose.js
var Wrappers_menclose = __webpack_require__(8147);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mfenced.js
var Wrappers_mfenced = __webpack_require__(2275);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mfrac.js
var Wrappers_mfrac = __webpack_require__(9063);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mglyph.js
var Wrappers_mglyph = __webpack_require__(6911);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mi.js
var Wrappers_mi = __webpack_require__(1653);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mmultiscripts.js
var Wrappers_mmultiscripts = __webpack_require__(6781);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mn.js
var Wrappers_mn = __webpack_require__(6460);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mo.js
var Wrappers_mo = __webpack_require__(6287);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mpadded.js
var Wrappers_mpadded = __webpack_require__(5964);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mroot.js
var Wrappers_mroot = __webpack_require__(8776);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mrow.js
var Wrappers_mrow = __webpack_require__(4798);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/ms.js
var Wrappers_ms = __webpack_require__(4597);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mspace.js
var Wrappers_mspace = __webpack_require__(2970);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/msqrt.js
var Wrappers_msqrt = __webpack_require__(5610);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/msubsup.js
var Wrappers_msubsup = __webpack_require__(4300);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mtable.js
var Wrappers_mtable = __webpack_require__(8002);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mtd.js
var Wrappers_mtd = __webpack_require__(7056);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mtext.js
var Wrappers_mtext = __webpack_require__(1259);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/mtr.js
var Wrappers_mtr = __webpack_require__(3571);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/munderover.js
var Wrappers_munderover = __webpack_require__(6590);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/scriptbase.js
var scriptbase = __webpack_require__(8650);
// EXTERNAL MODULE: ../../../js/output/chtml/Wrappers/semantics.js
var Wrappers_semantics = __webpack_require__(421);
// EXTERNAL MODULE: ../../../js/output/common/FontData.js
var common_FontData = __webpack_require__(5884);
// EXTERNAL MODULE: ../../../js/output/common/Notation.js
var common_Notation = __webpack_require__(5552);
// EXTERNAL MODULE: ../../../js/output/common/OutputJax.js
var common_OutputJax = __webpack_require__(3055);
// EXTERNAL MODULE: ../../../js/output/common/Wrapper.js
var common_Wrapper = __webpack_require__(7519);
// EXTERNAL MODULE: ../../../js/output/common/WrapperFactory.js
var common_WrapperFactory = __webpack_require__(4420);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/TeXAtom.js
var common_Wrappers_TeXAtom = __webpack_require__(9800);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/TextNode.js
var Wrappers_TextNode = __webpack_require__(1160);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/maction.js
var common_Wrappers_maction = __webpack_require__(1956);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/math.js
var common_Wrappers_math = __webpack_require__(7490);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/menclose.js
var common_Wrappers_menclose = __webpack_require__(7313);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mfenced.js
var common_Wrappers_mfenced = __webpack_require__(7555);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mfrac.js
var common_Wrappers_mfrac = __webpack_require__(2688);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mglyph.js
var common_Wrappers_mglyph = __webpack_require__(5636);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mi.js
var common_Wrappers_mi = __webpack_require__(5723);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mmultiscripts.js
var common_Wrappers_mmultiscripts = __webpack_require__(8009);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mn.js
var common_Wrappers_mn = __webpack_require__(5023);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mo.js
var common_Wrappers_mo = __webpack_require__(7096);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mpadded.js
var common_Wrappers_mpadded = __webpack_require__(6898);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mroot.js
var common_Wrappers_mroot = __webpack_require__(6991);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mrow.js
var common_Wrappers_mrow = __webpack_require__(8411);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/ms.js
var common_Wrappers_ms = __webpack_require__(4126);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mspace.js
var common_Wrappers_mspace = __webpack_require__(258);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/msqrt.js
var common_Wrappers_msqrt = __webpack_require__(4093);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/msubsup.js
var common_Wrappers_msubsup = __webpack_require__(905);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mtable.js
var common_Wrappers_mtable = __webpack_require__(6237);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mtd.js
var common_Wrappers_mtd = __webpack_require__(5164);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mtext.js
var common_Wrappers_mtext = __webpack_require__(6319);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/mtr.js
var common_Wrappers_mtr = __webpack_require__(5766);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/munderover.js
var common_Wrappers_munderover = __webpack_require__(1971);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/scriptbase.js
var Wrappers_scriptbase = __webpack_require__(167);
// EXTERNAL MODULE: ../../../js/output/common/Wrappers/semantics.js
var common_Wrappers_semantics = __webpack_require__(5806);
;// CONCATENATED MODULE: ../output/chtml/lib/chtml.js



































































if (MathJax.loader) {
  MathJax.loader.checkVersion('output/chtml', version.VERSION, 'output');
}

(0,global.combineWithMathJax)({
  _: {
    output: {
      chtml_ts: chtml,
      chtml: {
        FontData: FontData,
        Notation: Notation,
        Usage: Usage,
        Wrapper: chtml_Wrapper,
        WrapperFactory: chtml_WrapperFactory,
        Wrappers_ts: Wrappers,
        Wrappers: {
          TeXAtom: Wrappers_TeXAtom,
          TextNode: TextNode,
          maction: Wrappers_maction,
          math: Wrappers_math,
          menclose: Wrappers_menclose,
          mfenced: Wrappers_mfenced,
          mfrac: Wrappers_mfrac,
          mglyph: Wrappers_mglyph,
          mi: Wrappers_mi,
          mmultiscripts: Wrappers_mmultiscripts,
          mn: Wrappers_mn,
          mo: Wrappers_mo,
          mpadded: Wrappers_mpadded,
          mroot: Wrappers_mroot,
          mrow: Wrappers_mrow,
          ms: Wrappers_ms,
          mspace: Wrappers_mspace,
          msqrt: Wrappers_msqrt,
          msubsup: Wrappers_msubsup,
          mtable: Wrappers_mtable,
          mtd: Wrappers_mtd,
          mtext: Wrappers_mtext,
          mtr: Wrappers_mtr,
          munderover: Wrappers_munderover,
          scriptbase: scriptbase,
          semantics: Wrappers_semantics
        }
      },
      common: {
        FontData: common_FontData,
        Notation: common_Notation,
        OutputJax: common_OutputJax,
        Wrapper: common_Wrapper,
        WrapperFactory: common_WrapperFactory,
        Wrappers: {
          TeXAtom: common_Wrappers_TeXAtom,
          TextNode: Wrappers_TextNode,
          maction: common_Wrappers_maction,
          math: common_Wrappers_math,
          menclose: common_Wrappers_menclose,
          mfenced: common_Wrappers_mfenced,
          mfrac: common_Wrappers_mfrac,
          mglyph: common_Wrappers_mglyph,
          mi: common_Wrappers_mi,
          mmultiscripts: common_Wrappers_mmultiscripts,
          mn: common_Wrappers_mn,
          mo: common_Wrappers_mo,
          mpadded: common_Wrappers_mpadded,
          mroot: common_Wrappers_mroot,
          mrow: common_Wrappers_mrow,
          ms: common_Wrappers_ms,
          mspace: common_Wrappers_mspace,
          msqrt: common_Wrappers_msqrt,
          msubsup: common_Wrappers_msubsup,
          mtable: common_Wrappers_mtable,
          mtd: common_Wrappers_mtd,
          mtext: common_Wrappers_mtext,
          mtr: common_Wrappers_mtr,
          munderover: common_Wrappers_munderover,
          scriptbase: Wrappers_scriptbase,
          semantics: common_Wrappers_semantics
        }
      }
    }
  }
});
;// CONCATENATED MODULE: ../output/chtml/chtml.js




if (MathJax.loader) {
  (0,global.combineDefaults)(MathJax.config.loader, 'output/chtml', {
    checkReady: function checkReady() {
      return MathJax.loader.load("output/chtml/fonts/tex");
    }
  });
}

if (MathJax.startup) {
  MathJax.startup.registerConstructor('chtml', chtml.CHTML);
  MathJax.startup.useOutput('chtml');
}
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex.js
var fonts_tex = __webpack_require__(2760);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/bold-italic.js
var bold_italic = __webpack_require__(4005);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/bold.js
var bold = __webpack_require__(1015);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/fraktur-bold.js
var fraktur_bold = __webpack_require__(6555);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/fraktur.js
var fraktur = __webpack_require__(2183);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/italic.js
var italic = __webpack_require__(3490);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/largeop.js
var largeop = __webpack_require__(9056);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/monospace.js
var monospace = __webpack_require__(3019);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/normal.js
var normal = __webpack_require__(2713);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/sans-serif-bold-italic.js
var sans_serif_bold_italic = __webpack_require__(7517);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/sans-serif-bold.js
var sans_serif_bold = __webpack_require__(4182);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/sans-serif-italic.js
var sans_serif_italic = __webpack_require__(2679);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/sans-serif.js
var sans_serif = __webpack_require__(5469);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/smallop.js
var smallop = __webpack_require__(775);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/tex-calligraphic-bold.js
var tex_calligraphic_bold = __webpack_require__(9551);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/tex-size3.js
var tex_size3 = __webpack_require__(6530);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/tex-size4.js
var tex_size4 = __webpack_require__(4409);
// EXTERNAL MODULE: ../../../js/output/chtml/fonts/tex/tex-variant.js
var tex_variant = __webpack_require__(5292);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/bold-italic.js
var tex_bold_italic = __webpack_require__(5887);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/bold.js
var tex_bold = __webpack_require__(1103);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/delimiters.js
var delimiters = __webpack_require__(9124);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/double-struck.js
var double_struck = __webpack_require__(6001);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/fraktur-bold.js
var tex_fraktur_bold = __webpack_require__(3696);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/fraktur.js
var tex_fraktur = __webpack_require__(9587);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/italic.js
var tex_italic = __webpack_require__(8348);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/largeop.js
var tex_largeop = __webpack_require__(1376);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/monospace.js
var tex_monospace = __webpack_require__(1439);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/normal.js
var tex_normal = __webpack_require__(331);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/sans-serif-bold-italic.js
var tex_sans_serif_bold_italic = __webpack_require__(4886);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/sans-serif-bold.js
var tex_sans_serif_bold = __webpack_require__(4471);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/sans-serif-italic.js
var tex_sans_serif_italic = __webpack_require__(5181);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/sans-serif.js
var tex_sans_serif = __webpack_require__(3526);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/script-bold.js
var script_bold = __webpack_require__(5649);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/script.js
var script = __webpack_require__(7153);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/smallop.js
var tex_smallop = __webpack_require__(5745);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/tex-calligraphic-bold.js
var tex_tex_calligraphic_bold = __webpack_require__(1411);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/tex-calligraphic.js
var tex_calligraphic = __webpack_require__(6384);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/tex-mathit.js
var tex_mathit = __webpack_require__(6041);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/tex-oldstyle-bold.js
var tex_oldstyle_bold = __webpack_require__(8199);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/tex-oldstyle.js
var tex_oldstyle = __webpack_require__(9848);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/tex-size3.js
var tex_tex_size3 = __webpack_require__(7906);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/tex-size4.js
var tex_tex_size4 = __webpack_require__(2644);
// EXTERNAL MODULE: ../../../js/output/common/fonts/tex/tex-variant.js
var tex_tex_variant = __webpack_require__(4926);
;// CONCATENATED MODULE: ../output/chtml/fonts/tex/lib/tex.js














































if (MathJax.loader) {
  MathJax.loader.checkVersion('output/chtml/fonts/tex', version.VERSION, 'chtml-font');
}

(0,global.combineWithMathJax)({
  _: {
    output: {
      chtml: {
        fonts: {
          tex_ts: fonts_tex,
          tex: {
            "bold-italic": bold_italic,
            bold: bold,
            "fraktur-bold": fraktur_bold,
            fraktur: fraktur,
            italic: italic,
            largeop: largeop,
            monospace: monospace,
            normal: normal,
            "sans-serif-bold-italic": sans_serif_bold_italic,
            "sans-serif-bold": sans_serif_bold,
            "sans-serif-italic": sans_serif_italic,
            "sans-serif": sans_serif,
            smallop: smallop,
            "tex-calligraphic-bold": tex_calligraphic_bold,
            "tex-size3": tex_size3,
            "tex-size4": tex_size4,
            "tex-variant": tex_variant
          }
        }
      },
      common: {
        fonts: {
          tex: {
            "bold-italic": tex_bold_italic,
            bold: tex_bold,
            delimiters: delimiters,
            "double-struck": double_struck,
            "fraktur-bold": tex_fraktur_bold,
            fraktur: tex_fraktur,
            italic: tex_italic,
            largeop: tex_largeop,
            monospace: tex_monospace,
            normal: tex_normal,
            "sans-serif-bold-italic": tex_sans_serif_bold_italic,
            "sans-serif-bold": tex_sans_serif_bold,
            "sans-serif-italic": tex_sans_serif_italic,
            "sans-serif": tex_sans_serif,
            "script-bold": script_bold,
            script: script,
            smallop: tex_smallop,
            "tex-calligraphic-bold": tex_tex_calligraphic_bold,
            "tex-calligraphic": tex_calligraphic,
            "tex-mathit": tex_mathit,
            "tex-oldstyle-bold": tex_oldstyle_bold,
            "tex-oldstyle": tex_oldstyle,
            "tex-size3": tex_tex_size3,
            "tex-size4": tex_tex_size4,
            "tex-variant": tex_tex_variant
          }
        }
      }
    }
  }
});
;// CONCATENATED MODULE: ../output/chtml/fonts/tex/tex.js






if (MathJax.startup) {
  (0,global.combineDefaults)(MathJax.config, 'chtml', {
    fontURL: components_package.Package.resolvePath('output/chtml/fonts/woff-v2', false)
  });
  var options = (0,Options.selectOptionsFromKeys)(MathJax.config.chtml || {}, fonts_tex.TeXFont.OPTIONS);
  (0,global.combineDefaults)(MathJax.config, 'chtml', {
    font: new fonts_tex.TeXFont(options)
  });
}
// EXTERNAL MODULE: ../../../js/ui/menu/MJContextMenu.js
var MJContextMenu = __webpack_require__(5865);
// EXTERNAL MODULE: ../../../js/ui/menu/Menu.js
var Menu = __webpack_require__(8310);
// EXTERNAL MODULE: ../../../js/ui/menu/MenuHandler.js
var MenuHandler = __webpack_require__(4001);
// EXTERNAL MODULE: ../../../js/ui/menu/MmlVisitor.js
var menu_MmlVisitor = __webpack_require__(473);
// EXTERNAL MODULE: ../../../js/ui/menu/SelectableInfo.js
var SelectableInfo = __webpack_require__(4414);
;// CONCATENATED MODULE: ../ui/menu/lib/menu.js








if (MathJax.loader) {
  MathJax.loader.checkVersion('ui/menu', version.VERSION, 'ui');
}

(0,global.combineWithMathJax)({
  _: {
    ui: {
      menu: {
        MJContextMenu: MJContextMenu,
        Menu: Menu,
        MenuHandler: MenuHandler,
        MmlVisitor: menu_MmlVisitor,
        SelectableInfo: SelectableInfo
      }
    }
  }
});
;// CONCATENATED MODULE: ../ui/menu/menu.js



if (MathJax.startup && typeof window !== 'undefined') {
  MathJax.startup.extendHandler(function (handler) {
    return (0,MenuHandler.MenuHandler)(handler);
  }, 20);
}
// EXTERNAL MODULE: ../../../js/a11y/assistive-mml.js
var assistive_mml = __webpack_require__(351);
;// CONCATENATED MODULE: ../a11y/assistive-mml/lib/assistive-mml.js




if (MathJax.loader) {
  MathJax.loader.checkVersion('a11y/assistive-mml', version.VERSION, 'a11y');
}

(0,global.combineWithMathJax)({
  _: {
    a11y: {
      "assistive-mml": assistive_mml
    }
  }
});
;// CONCATENATED MODULE: ../a11y/assistive-mml/assistive-mml.js



if (MathJax.startup) {
  MathJax.startup.extendHandler(function (handler) {
    return (0,assistive_mml.AssistiveMmlHandler)(handler);
  });
}
// EXTERNAL MODULE: ../../../js/a11y/sre.js
var sre = __webpack_require__(5445);
var sre_default = /*#__PURE__*/__webpack_require__.n(sre);
;// CONCATENATED MODULE: ../a11y/sre/lib/sre.js




if (MathJax.loader) {
  MathJax.loader.checkVersion('a11y/sre', version.VERSION, 'a11y');
}

(0,global.combineWithMathJax)({
  _: {
    a11y: {
      sre: sre
    }
  }
});
;// CONCATENATED MODULE: ../a11y/sre/sre_config.js

 // This sets up the correct link to the mathmaps files.

if (MathJax.startup) {
  var path = components_package.Package.resolvePath('[sre]', false);

  if (typeof window !== 'undefined') {
    window.SREfeature = {
      json: path
    };
  } else {
    // In Node get the absolute path to the mathmaps directory.
    try {
      path = MathJax.config.loader.require.resolve(path + '/base.json').replace(/\/base\.json$/, '');
    } catch (_err) {}

    __webpack_require__.g.SREfeature = {
      json: path
    };
  }
}
;// CONCATENATED MODULE: ../a11y/sre/sre.js




if (MathJax.startup) {
  (typeof window !== 'undefined' ? window : __webpack_require__.g).SREfeature.custom = function (loc) {
    return sre_default().preloadLocales(loc);
  };
}
// EXTERNAL MODULE: ../../../js/a11y/mathmaps.js
var mathmaps = __webpack_require__(5282);
;// CONCATENATED MODULE: ../../../node_modules/speech-rule-engine/lib/mathmaps/base.json
var base_namespaceObject = JSON.parse('{"base/rules/clearspeak_base.min":{"locale":"base","domain":"clearspeak","modality":"speech","kind":"abstract","rules":[["Rule","direct-speech","default","[t] @ext-speech","self::*[@ext-speech]","priority=Infinity"],["Rule","stree","default","[n] ./*[1]","self::stree"],["Rule","unknown","default","[n] text()","self::unknown"],["Rule","protected","default","[n] text() (grammar:ignoreCaps)","self::number","contains(@grammar, \\"protected\\")"],["Rule","omit-empty","default","[p] (pause:short)","self::empty"],["Rule","omit-font","default","[n] self::* (grammar:ignoreFont=@font)","self::identifier[@font=\\"italic\\"]","string-length(text())=1","not(contains(@grammar, \\"ignoreFont\\"))"],["SpecializedRule","omit-font","default","Caps_SayCaps"],["Rule","text","default","[n] text()","self::text"],["Rule","capital","default","[n] text() (pitch:0.6, grammar:ignoreCaps)","self::identifier","@role=\\"latinletter\\" or @role=\\"greekletter\\" or @role=\\"simple function\\"",".[@category=\\"Lu\\"]"],["Rule","capital-cap","Caps_SayCaps","[n] text()","self::identifier","@role=\\"latinletter\\" or @role=\\"greekletter\\"",".[@category=\\"Lu\\"]"],["Rule","capital-cap-l","Caps_SayCaps","[p] (pause:short); [n] text()","self::identifier","@role=\\"latinletter\\" or @role=\\"greekletter\\"",".[@category=\\"Lu\\"]","preceding-sibling::*[1]","not(name(preceding-sibling::*[1])=\\"function\\")","not(contains(@grammar, \\"angle\\"))"],["Rule","capital-cap-r","Caps_SayCaps","[n] text() (pause:short)","self::identifier","@role=\\"latinletter\\" or @role=\\"greekletter\\"",".[@category=\\"Lu\\"]","following-sibling::*[1]"],["Rule","capital-cap-lr","Caps_SayCaps","[p] (pause:short); [n] text() (pause:short)","self::identifier","@role=\\"latinletter\\" or @role=\\"greekletter\\"",".[@category=\\"Lu\\"]","preceding-sibling::*[1]","following-sibling::*[1]","not(name(preceding-sibling::*[1])=\\"function\\")","not(contains(@grammar, \\"angle\\"))"],["Precondition","collapsed","default","self::*[@alternative]","not(contains(@grammar, \\"collapsed\\"))"],["Precondition","font","default","self::*","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font!=\\"normal\\""],["Specialized","font","default","Caps_SayCaps"],["Alias","font","self::identifier[@font=\\"normal\\"]","string-length(text())=1","not(contains(@grammar, \\"ignoreFont\\"))","@role!=\\"unit\\""],["Precondition","punctuation-lr","default","self::punctuation","@role=\\"comma\\""],["Precondition","punctuation","default","self::punctuation","@role=\\"comma\\"","not(preceding-sibling::*[1]/children)","not(following-sibling::*[1]/children)"],["Precondition","punctuation-l","default","self::punctuation","@role=\\"comma\\"","not(following-sibling::*[1]/children)"],["Precondition","punctuation-r","default","self::punctuation","@role=\\"comma\\"","not(preceding-sibling::*[1]/children)"],["Precondition","ellipsis","Ellipses_AndSoOn","self::punctuation","@role=\\"ellipsis\\"","not(following-sibling::*[1])","not(preceding-sibling::*[last()][@role=\\"ellipsis\\"])"],["Precondition","ellipsis-andsoon","Ellipses_AndSoOn","self::punctuation","@role=\\"ellipsis\\"","preceding-sibling::*[1]","following-sibling::*[1]"],["Precondition","vbar-evaluated","default","self::punctuated","@role=\\"endpunct\\"","content/*[1][@role=\\"vbar\\"]","content/*[1][@embellished]","name(content/*[1])=\\"subscript\\""],["Precondition","vbar-evaluated-both","default","self::punctuated","@role=\\"endpunct\\"","content/*[1][@role=\\"vbar\\"]","content/*[1][@embellished]","name(content/*[1])=\\"superscript\\"","name(content/*[1]/children/*[1])=\\"subscript\\""],["Precondition","vbar-such-that","VerticalLine_SuchThat","self::punctuation","@role=\\"vbar\\"","not(parent::*/parent::*[@embellished=\\"punctuation\\"])"],["Precondition","vbar-divides","default","self::punctuation","@role=\\"vbar\\"","not(parent::*/parent::*[@embellished=\\"punctuation\\"])","parent::*/parent::*[@role=\\"sequence\\"]"],["Precondition","vbar-always-divides","VerticalLine_Divides","self::punctuation","@role=\\"vbar\\"","not(parent::*/parent::*[@embellished=\\"punctuation\\"])"],["Precondition","vbar-given","VerticalLine_Given","self::punctuation","@role=\\"vbar\\"","not(parent::*/parent::*[@embellished=\\"punctuation\\"])"],["Precondition","member","default","self::operator","@role=\\"element\\""],["Precondition","member-member","SetMemberSymbol_Member","self::operator","@role=\\"element\\""],["Precondition","member-element","SetMemberSymbol_Element","self::operator","@role=\\"element\\""],["Precondition","member-in","SetMemberSymbol_In","self::operator","@role=\\"element\\""],["Precondition","member-belongs","SetMemberSymbol_Belongs","self::operator","@role=\\"element\\""],["Precondition","not-member","default","self::operator","@role=\\"nonelement\\""],["Precondition","not-member-member","SetMemberSymbol_Member","self::operator","@role=\\"nonelement\\""],["Precondition","not-member-element","SetMemberSymbol_Element","self::operator","@role=\\"nonelement\\""],["Precondition","not-member-in","SetMemberSymbol_In","self::operator","@role=\\"nonelement\\""],["Precondition","not-member-belongs","SetMemberSymbol_Belongs","self::operator","@role=\\"nonelement\\""],["Precondition","set-member","default","self::operator","@role=\\"element\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-member-member","SetMemberSymbol_Member","self::operator","@role=\\"element\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-member-element","SetMemberSymbol_Element","self::operator","@role=\\"element\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-member-in","SetMemberSymbol_In","self::operator","@role=\\"element\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-member-belongs","SetMemberSymbol_Belongs","self::operator","@role=\\"element\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-not-member","default","self::operator","@role=\\"nonelement\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-not-member-member","SetMemberSymbol_Member","self::operator","@role=\\"nonelement\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-not-member-element","SetMemberSymbol_Element","self::operator","@role=\\"nonelement\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-not-member-in","SetMemberSymbol_In","self::operator","@role=\\"nonelement\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","set-not-member-belongs","SetMemberSymbol_Belongs","self::operator","@role=\\"nonelement\\"","contains(@annotation, \\"set:intensional\\")"],["Precondition","prime","default","self::superscript","children/*[2]","children/*[2][@role=\\"prime\\"]","self::*"],["Precondition","degrees","default","self::punctuated[@role=\\"sequence\\"]","content/*[1][@role=\\"degree\\"]"],["Precondition","feet","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"number\\"","children/*[2][text()=\\"′\\"]","not(contains(@grammar, \\"degree\\"))"],["Precondition","foot","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"number\\"","children/*[2][text()=\\"′\\"]","children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"degree\\"))"],["Precondition","inches","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"number\\"","children/*[2][text()=\\"″\\"]","not(contains(@grammar, \\"degree\\"))"],["Precondition","inch","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"number\\"","children/*[2][text()=\\"″\\"]","children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"degree\\"))"],["Precondition","minutes","default","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"′\\"]","contains(@grammar, \\"degree\\")"],["Precondition","minute","default","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"′\\"]","contains(@grammar, \\"degree\\")","children/*[1][text()=\\"1\\"]"],["Precondition","seconds","default","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"″\\"]","contains(@grammar, \\"degree\\")"],["Precondition","second","default","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"″\\"]","contains(@grammar, \\"degree\\")","children/*[1][text()=\\"1\\"]"],["Precondition","degrees-angle","default","self::punctuation","@role=\\"degree\\""],["Precondition","degree-angle","default","self::punctuation","@role=\\"degree\\"","preceding-sibling::*[text()=\\"1\\"]"],["Precondition","minutes-angle","Prime_Angle","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"′\\"]","not(contains(@grammar, \\"degree\\"))","name(children/*[1])=\\"number\\" or (children/*[1][@role=\\"latinletter\\"] and \\"\\"=translate(children/*[1]/text(),\\"abcdefghijklmnopqrstuvwxyz\\", \\"\\"))"],["Precondition","minute-angle","Prime_Angle","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"′\\"]","not(contains(@grammar, \\"degree\\"))","children/*[1][text()=\\"1\\"]"],["Precondition","seconds-angle","Prime_Angle","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"″\\"]","not(contains(@grammar, \\"degree\\"))","name(children/*[1])=\\"number\\" or (children/*[1][@role=\\"latinletter\\"] and \\"\\"=translate(children/*[1]/text(),\\"abcdefghijklmnopqrstuvwxyz\\", \\"\\"))"],["Precondition","second-angle","Prime_Angle","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"″\\"]","not(contains(@grammar, \\"degree\\"))","children/*[1][text()=\\"1\\"]"],["Precondition","feet-length","Prime_Length","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"′\\"]","not(contains(@grammar, \\"degree\\"))","name(children/*[1])=\\"number\\" or (children/*[1][@role=\\"latinletter\\"] and \\"\\"=translate(children/*[1]/text(),\\"abcdefghijklmnopqrstuvwxyz\\", \\"\\"))"],["Precondition","foot-length","Prime_Length","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"′\\"]","not(contains(@grammar, \\"degree\\"))","children/*[1][text()=\\"1\\"]"],["Precondition","inches-length","Prime_Length","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"″\\"]","not(contains(@grammar, \\"degree\\"))","name(children/*[1])=\\"number\\" or (children/*[1][@role=\\"latinletter\\"] and \\"\\"=translate(children/*[1]/text(),\\"abcdefghijklmnopqrstuvwxyz\\", \\"\\"))"],["Precondition","inch-length","Prime_Length","self::superscript","children/*[2][@role=\\"prime\\"]","children/*[2][text()=\\"″\\"]","not(contains(@grammar, \\"degree\\"))","children/*[1][text()=\\"1\\"]"],["Precondition","punctuated","default","self::punctuated"],["Precondition","function","default","self::function"],["Precondition","article","default","self::*[contains(@grammar, \\"addArticle\\")]","not(contains(@grammar, \\"noArticle\\"))"],["Precondition","appl","default","self::appl"],["Precondition","appl-simple","default","self::appl","@role=\\"simple function\\"","name(children/*[2])=\\"appl\\""],["Precondition","appl-simple-fenced","default","self::appl","@role=\\"simple function\\"","name(children/*[2])=\\"fenced\\"","name(children/*[2]/children/*[1])=\\"appl\\""],["Precondition","appl-times","Functions_None","self::appl"],["Precondition","function-prefix","default","self::appl","@role=\\"prefix function\\""],["Precondition","binary-operation","ImpliedTimes_MoreImpliedTimes","self::appl","@role=\\"prefix function\\"","parent::*/parent::infixop[@role=\\"implicit\\"]","following-sibling::*","not(contains(@grammar, \\"impliedTimes\\"))"],["Precondition","function-prefix-simple-arg","default","self::appl","@role=\\"prefix function\\"","name(children/*[2])=\\"fenced\\"","contains(children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\")","name(children/*[2]/children/*[1])!=\\"number\\"","name(children/*[2]/children/*[1])!=\\"identifier\\"","name(children/*[2]/children/*[1])!=\\"appl\\""],["Precondition","function-prefix-embell","default","self::appl","@role=\\"prefix function\\"","name(children/*[1])!=\\"function\\""],["Precondition","function-prefix-fenced-or-frac-arg","default","self::appl","@role=\\"prefix function\\"","(name(children/*[2])=\\"fenced\\" and not(contains(children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\"))) or name(children/*[2])=\\"fraction\\" or (name(children/*[2])!=\\"fenced\\" and not(contains(children/*[2]/@annotation, \\"clearspeak:simple\\")))","self::*"],["Precondition","function-prefix-subscript","default","self::appl","@role=\\"prefix function\\"","name(children/*[1])=\\"subscript\\"","self::*"],["Precondition","function-ln","default","self::appl","@role=\\"prefix function\\"","content/*[2][text()=\\"ln\\"]","not(following-sibling::*)","not(contains(@grammar, \\"NatLog\\"))"],["Precondition","function-ln-pause","default","self::appl","@role=\\"prefix function\\"","content/*[2][text()=\\"ln\\"]","not(contains(@grammar, \\"NatLog\\"))"],["Precondition","function-ln-of","default","self::appl","@role=\\"prefix function\\"","content/*[2][text()=\\"ln\\"]","name(children/*[2])=\\"fenced\\"","not(contains(@grammar, \\"NatLog\\"))"],["Precondition","function-ln-natlog","Log_LnAsNaturalLog","self::appl","@role=\\"prefix function\\"","content/*[2][text()=\\"ln\\"]","not(following-sibling::*)","not(contains(@grammar, \\"NatLog\\"))"],["Precondition","function-ln-natlog-pause","Log_LnAsNaturalLog","self::appl","@role=\\"prefix function\\"","content/*[2][text()=\\"ln\\"]","not(contains(@grammar, \\"NatLog\\"))"],["Precondition","function-prefix-as-exp","default","self::appl","@role=\\"prefix function\\"","name(parent::*/parent::*)=\\"superscript\\"","not(following-sibling::*)","(name(children/*[2])=\\"fenced\\" and not(contains(children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\"))) or name(children/*[2])=\\"fraction\\" or (name(children/*[2])!=\\"fenced\\" and not(contains(children/*[2]/@annotation, \\"clearspeak:simple\\")))"],["Precondition","function-prefix-subscript-as-exp","default","self::appl","@role=\\"prefix function\\"","name(parent::*/parent::*)=\\"superscript\\"","not(following-sibling::*)","name(children/*[1])=\\"subscript\\""],["Precondition","function-prefix-hyper","default","self::appl","@role=\\"prefix function\\"","children/*[1][@category=\\"Hyperbolic\\"]"],["Precondition","function-prefix-inverse","default","self::appl","@role=\\"prefix function\\"","name(children/*[1])=\\"superscript\\"","name(children/*[1]/children/*[2])=\\"prefixop\\"","children/*[1]/children/*[2][@role=\\"negative\\"]","children/*[1]/children/*[2]/children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","appl-triginverse","Trig_TrigInverse","self::appl","@role=\\"prefix function\\"","name(children/*[1])=\\"superscript\\"","name(children/*[1]/children/*[2])=\\"prefixop\\"","children/*[1]/children/*[2][@role=\\"negative\\"]","children/*[1]/children/*[2]/children/*[1][text()=\\"1\\"]"],["Precondition","function-prefix-arc-simple","Trig_ArcTrig","self::appl","@role=\\"prefix function\\"","name(children/*[1])=\\"superscript\\"","name(children/*[1]/children/*[2])=\\"prefixop\\"","children/*[1]/children/*[2][@role=\\"negative\\"]","children/*[1]/children/*[2]/children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","function-prefix-arc-simple-fenced","Trig_ArcTrig","self::appl","@role=\\"prefix function\\"","name(children/*[1])=\\"superscript\\"","name(children/*[1]/children/*[2])=\\"prefixop\\"","children/*[1]/children/*[2][@role=\\"negative\\"]","children/*[1]/children/*[2]/children/*[1][text()=\\"1\\"]","name(children/*[2])=\\"fenced\\"","children/*[2]/children/*[1][@role=\\"prefix function\\"]","contains(children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\")","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","function-prefix-arc","Trig_ArcTrig","self::appl","@role=\\"prefix function\\"","name(children/*[1])=\\"superscript\\"","name(children/*[1]/children/*[2])=\\"prefixop\\"","children/*[1]/children/*[2][@role=\\"negative\\"]","children/*[1]/children/*[2]/children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"functions_none\\"))","(name(children/*[2])=\\"fenced\\" and not(contains(children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\"))) or (name(children/*[2])=\\"fraction\\" and children/*[2][@role!=\\"vulgar\\"])"],["Precondition","function-inverse","default","self::superscript","@role=\\"prefix function\\" or @role=\\"simple function\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","superscript-prefix-function","default","self::superscript","@role=\\"prefix function\\"","name(children/*[2])=\\"number\\"","children/*[2][@role=\\"integer\\"]"],["Alias","superscript-prefix-function","self::superscript[@role=\\"prefix function\\"]","name(children/*[2])=\\"identifier\\""],["Precondition","function-no-inverse","Functions_None","self::superscript","@role=\\"prefix function\\" or @role=\\"simple function\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","superscript","default","self::superscript"],["Precondition","superscript-simple-exponent","default","self::superscript","not(descendant::superscript)"],["Precondition","superscript-simple-exponent-end","default","self::superscript","not(descendant::superscript)","not(following-sibling::*)"],["Alias","superscript-simple-exponent","self::superscript","children/superscript/children/*[2][text()=\\"2\\"] or children/superscript/children/*[2][text()=\\"3\\"]","name(children/superscript/children/*[1])=\\"number\\"","contains(children/superscript/children/*[1]/@annotation, \\"clearspeak:simple\\")"],["Alias","superscript-simple-exponent","self::superscript","children/superscript/children/*[2][text()=\\"2\\"] or children/superscript/children/*[2][text()=\\"3\\"]","name(children/superscript/children/*[1])=\\"fraction\\"","contains(children/superscript/children/*[1]/@annotation, \\"clearspeak:simple\\")"],["Alias","superscript-simple-exponent","self::superscript","children/superscript/children/*[2][text()=\\"2\\"] or children/superscript/children/*[2][text()=\\"3\\"]","name(children/superscript/children/*[1])=\\"identifier\\""],["Alias","superscript-simple-exponent","self::superscript","children/*[2][@role=\\"implicit\\"]","count(children/*[2]/children/*)=2","contains(children/*[2]/children/*[1]/@annotation, \\"simple\\")","name(children/*[2]/children/*[2])=\\"superscript\\"","(name(children/*[2]/children/*[2]/children/*[1])=\\"number\\" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\")) or name(children/*[2]/children/*[2]/children/*[1])=\\"identifier\\"","children/*[2]/children/*[2]/children/*[2][text()=\\"2\\"] or children/*[2]/children/*[2]/children/*[2][text()=\\"3\\"]"],["Precondition","superscript-ordinal","default","self::superscript","name(children/*[2])=\\"number\\"","children/*[2][@role=\\"integer\\"]"],["Alias","superscript-ordinal","self::superscript","name(children/*[2])=\\"identifier\\"","children/*[2][@role=\\"latinletter\\" or @role=\\"greekletter\\" or @role=\\"otherletter\\"]"],["Precondition","superscript-non-ordinal","default","self::superscript","children/*[2][@role=\\"negative\\"]","name(children/*[2]/children/*[1])=\\"number\\"","children/*[2]/children/*[1][@role=\\"integer\\"]"],["Precondition","superscript-simple-function","default","self::superscript","name(children/*[1])=\\"identifier\\"","children/*[1][@role=\\"simple function\\"]","children/*[2][@role!=\\"prime\\"]","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","superscript-simple-function-none","Functions_None","self::superscript","name(children/*[1])=\\"identifier\\"","children/*[1][@role=\\"simple function\\"]","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","superscript-ordinal-number","Exponent_Ordinal","self::superscript","name(children/*[2])=\\"number\\"","children/*[2][@role=\\"integer\\"]"],["Alias","superscript-ordinal-number","self::superscript","name(children/*[2])=\\"identifier\\"","children/*[2][@role=\\"latinletter\\" or @role=\\"greekletter\\" or @role=\\"otherletter\\"]"],["Precondition","superscript-ordinal-negative","Exponent_Ordinal","self::superscript","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","name(children/*[2]/children/*[1])=\\"number\\"","children/*[2]/children/*[1][@role=\\"integer\\"]"],["Precondition","superscript-ordinal-default","Exponent_Ordinal","self::superscript","children//superscript"],["Precondition","superscript-ordinal-power-number","Exponent_OrdinalPower","self::superscript","name(children/*[2])=\\"number\\"","children/*[2][@role=\\"integer\\"]"],["Precondition","superscript-ordinal-power-negative","Exponent_OrdinalPower","self::superscript","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","name(children/*[2]/children/*[1])=\\"number\\"","children/*[2]/children/*[1][@role=\\"integer\\"]"],["Precondition","superscript-ordinal-power-identifier","Exponent_OrdinalPower","self::superscript","name(children/*[2])=\\"identifier\\"","children/*[2][@role=\\"latinletter\\" or @role=\\"greekletter\\" or @role=\\"otherletter\\"]"],["Precondition","superscript-ordinal-power-default","Exponent_OrdinalPower","self::superscript","children//superscript"],["Precondition","superscript-power","Exponent_AfterPower","self::superscript"],["Precondition","superscript-power-default","Exponent_AfterPower","self::superscript","children//superscript"],["Precondition","exponent","default","self::identifier","contains(@grammar, \\"ordinal\\")"],["Precondition","exponent-number","default","self::number","@role=\\"integer\\"","contains(@grammar, \\"ordinal\\")","text()!=\\"0\\"","not(contains(@annotation, \\"general:basenumber\\"))"],["Precondition","exponent-ordinal","Exponent_Ordinal","self::number","@role=\\"integer\\"","contains(@grammar, \\"ordinal\\")","text()!=\\"0\\"","not(contains(@annotation, \\"general:basenumber\\"))"],["Precondition","exponent-ordinal-zero","Exponent_Ordinal","self::number","@role=\\"integer\\"","contains(@grammar, \\"ordinal\\")","text()=\\"0\\""],["Precondition","exponent-ordinalpower","Exponent_OrdinalPower","self::number","@role=\\"integer\\"","contains(@grammar, \\"ordinal\\")","text()!=\\"0\\"","not(contains(@annotation, \\"general:basenumber\\"))"],["Precondition","exponent-ordinalpower-zero","Exponent_OrdinalPower","self::number","@role=\\"integer\\"","contains(@grammar, \\"ordinal\\")","text()=\\"0\\""],["Precondition","square","default","self::superscript","@role!=\\"unit\\"","children/*[2][text()=\\"2\\"]","name(children/*[1])!=\\"text\\" or not(name(children/*[1])=\\"text\\" and (name(../../../punctuated[@role=\\"text\\"]/..)=\\"stree\\" or name(..)=\\"stree\\"))","self::*"],["Precondition","cube","default","self::superscript","@role!=\\"unit\\"","children/*[2][text()=\\"3\\"]","name(children/*[1])!=\\"text\\" or not(name(children/*[1])=\\"text\\" and (name(../../../punctuated[@role=\\"text\\"]/..)=\\"stree\\" or name(..)=\\"stree\\"))","self::*"],["Precondition","paren-simple","default","self::fenced","@role=\\"leftright\\"","contains(children/*[1]/@annotation, \\"clearspeak:simple\\")","name(../..)!=\\"superscript\\" and name(../..)!=\\"subscript\\""],["Precondition","paren-simple-exp","default","self::fenced","@role=\\"leftright\\"","name(../..)=\\"superscript\\"","children/*[1][@role=\\"integer\\"] or children/*[1][@role=\\"float\\"] or (children/*[1][@role=\\"vulgar\\"] and contains(children/*[1]/@annotation, \\"clearspeak:simple\\")) or children/*[1][@role=\\"latinletter\\"] or children/*[1][@role=\\"greekletter\\"] or children/*[1][@role=\\"otherletter\\"]"],["Precondition","paren-simple-nested-func","default","self::fenced","@role=\\"leftright\\"","name(../*[1])=\\"identifier\\" or name(../*[1])=\\"function\\"","parent::*/parent::*[@role=\\"simple function\\" or @role=\\"prefix function\\"]","children/*[1][@role=\\"simple function\\" or @role=\\"prefix function\\"]","contains(children/*[1]/children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\") or name(children/*[1]/children/*[2]/children/*[1])=\\"subscript\\" or name(children/*[1]/children/*[2]/children/*[1])=\\"superscript\\" or children/*[1]/children/*[2]/children/*[1][@role=\\"vulgar\\"] "],["Precondition","paren-simple-nested-func-no-bracket","Functions_None","self::fenced","@role=\\"leftright\\"","name(../*[1])=\\"identifier\\" or name(../*[1])=\\"function\\"","parent::*/parent::*[@role=\\"simple function\\" or @role=\\"prefix function\\"]","children/*[1][@role=\\"simple function\\" or @role=\\"prefix function\\"]","name(children/*[1]/children/*[1])=\\"identifier\\" or name(children/*[1]/children/*[1])=\\"function\\"","contains(children/*[1]/children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\")","name(children/*[1]/children/*[2]/children/*[1])=\\"identifier\\" or name(children/*[1]/children/*[2]/children/*[1])=\\"number\\""],["Precondition","fences-open-close","default","self::fenced","@role=\\"leftright\\""],["Specialized","fences-open-close","default","self::fenced","@role=\\"metric\\""],["Precondition","paren-simple-nested-func-default","default","self::fenced","@role=\\"leftright\\"","name(../*[1])=\\"identifier\\" or name(../*[1])=\\"function\\"","parent::*/parent::*[@role=\\"simple function\\" or @role=\\"prefix function\\"]","not(contains(children/*[1]/@annotation, \\"clearspeak:simple\\"))"],["Precondition","paren-simple-nested-func-none","Functions_None","self::fenced","@role=\\"leftright\\"","name(../*[1])=\\"identifier\\" or name(../*[1])=\\"function\\"","parent::*/parent::*[@role=\\"simple function\\" or @role=\\"prefix function\\"]","children/*[1][@role=\\"simple function\\" or @role=\\"prefix function\\"]","contains(children/*[1]/children/*[2]/children/*[1]/@annotation, \\"clearspeak:simple\\") or name(children/*[1]/children/*[2]/children/*[1])=\\"subscript\\" or name(children/*[1]/children/*[2]/children/*[1])=\\"superscript\\" or children/*[1]/children/*[2]/children/*[1][@role=\\"vulgar\\"] "],["Specialized","fences-open-close","default","Paren_Speak"],["Alias","fences-open-close","self::fenced","@role=\\"composed function\\""],["Precondition","fence-silent","Paren_Silent","self::fenced"],["Precondition","fences-open-close-none","ImpliedTimes_None","self::fenced","@role=\\"leftright\\"","parent::*/parent::*[@role!=\\"simple function\\"]","parent::*/parent::*[@role!=\\"prefix function\\"]"],["Precondition","fence-nesting","Paren_SpeakNestingLevel","self::fence","contains(@grammar, \\"spokenFence\\")","CQFmatchingFences"],["Precondition","fence-no-nesting","Paren_SpeakNestingLevel","self::fence"],["Precondition","fences-points","Paren_CoordPoint","self::fenced","name(children/*[1])=\\"punctuated\\"","children/*[1][@role=\\"sequence\\"]"],["Precondition","fences-interval","Paren_Interval","self::fenced","not(contains(@grammar, \\"interval\\"))","name(children/*[1])=\\"punctuated\\"","children/*[1][@role=\\"sequence\\"]","count(./children/*[1]/content/*)=1","children/*[1]/content/*[1][@role=\\"comma\\"]"],["Precondition","interval-open","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"(\\"","content/*[2]/text()=\\")\\""],["Precondition","interval-closed-open","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"[\\"","content/*[2]/text()=\\")\\""],["Precondition","interval-open-closed","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"(\\"","content/*[2]/text()=\\"]\\""],["Precondition","interval-closed","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"[\\"","content/*[2]/text()=\\"]\\""],["Precondition","interval-open-inf-r","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"(\\"","content/*[2]/text()=\\")\\"","children/*[1]/children/*[3]/text()=\\"∞\\" or (name(children/*[1]/children/*[3])=\\"prefixop\\" and children/*[1]/children/*[3]/children/*[1]/text()=\\"∞\\")"],["Precondition","interval-open-inf-l","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"(\\"","content/*[2]/text()=\\")\\"","children/*[1]/children/*[1]/text()=\\"∞\\" or (name(children/*[1]/children/*[1])=\\"prefixop\\" and children/*[1]/children/*[1]/children/*[1]/text()=\\"∞\\")"],["Precondition","interval-open-inf-lr","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"(\\"","content/*[2]/text()=\\")\\"","children/*[1]/children/*[3]/text()=\\"∞\\" or (name(children/*[1]/children/*[3])=\\"prefixop\\" and children/*[1]/children/*[3]/children/*[1]/text()=\\"∞\\")","children/*[1]/children/*[1]/text()=\\"∞\\" or (name(children/*[1]/children/*[1])=\\"prefixop\\" and children/*[1]/children/*[1]/children/*[1]/text()=\\"∞\\")"],["Precondition","interval-closed-open-inf","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"[\\"","content/*[2]/text()=\\")\\"","children/*[1]/children/*[3]/text()=\\"∞\\" or (name(children/*[1]/children/*[3])=\\"prefixop\\" and children/*[1]/children/*[3]/children/*[1]/text()=\\"∞\\")"],["Precondition","interval-open-closed-inf","Paren_Interval","self::fenced","contains(@grammar, \\"interval\\")","content/*[1]/text()=\\"(\\"","content/*[2]/text()=\\"]\\"","children/*[1]/children/*[1]/text()=\\"∞\\" or (name(children/*[1]/children/*[1])=\\"prefixop\\" and children/*[1]/children/*[1]/children/*[1]/text()=\\"∞\\")"],["Precondition","paren-nested-embellished-funcs","Functions_None","self::fenced","@role=\\"leftright\\"","name(../..)=\\"appl\\"","name(children/*[1]) = \\"appl\\"","preceding-sibling::*/descendant-or-self::*[@role=\\"subsup\\"] or children/*[1]/descendant-or-self::*[@role=\\"subsup\\"]"],["Precondition","set-empty","default","self::fenced","@role=\\"set empty\\""],["Precondition","set-extended","default","self::fenced","@role=\\"set extended\\""],["Precondition","set-collection","default","self::fenced","@role=\\"set collection\\""],["Alias","set-collection","self::fenced","@role=\\"set singleton\\""],["Precondition","set-extended-woall","Sets_woAll","self::fenced","@role=\\"set extended\\""],["Precondition","set-collection-silentbracket","Sets_SilentBracket","self::fenced","@role=\\"set collection\\""],["Precondition","subscript","default","self::subscript"],["Precondition","logarithm-base","default","self::subscript","children/*[1][@category=\\"Logarithm\\"]"],["Precondition","subscript-index","default","self::subscript","contains(@grammar, \\"simpleDet\\")"],["Precondition","fraction","default","self::fraction"],["Precondition","fraction-none","Functions_None","self::fraction","name(children/*[1])=\\"appl\\" or name(children/*[2])=\\"appl\\""],["Precondition","simple-fraction","default","self::fraction","contains(children/*[1]/@annotation, \\"clearspeak:simple\\") or contains(children/*[1]/@annotation, \\"clearspeak:unit\\")","contains(children/*[2]/@annotation, \\"clearspeak:simple\\") or contains(children/*[2]/@annotation, \\"clearspeak:unit\\")"],["Precondition","simple-vulgar-fraction","default","self::fraction","@role=\\"vulgar\\""],["Precondition","simple-text-fraction","default","self::fraction","name(children/*[1])=\\"text\\"","name(children/*[2])=\\"text\\""],["Alias","simple-text-fraction","self::fraction","name(children/*[1])=\\"infixop\\"","children/*[1][@role=\\"unit\\"]","name(children/*[2])=\\"text\\""],["Precondition","vulgar-fraction","default","self::fraction","@role=\\"vulgar\\"","CQFvulgarFractionSmall"],["Precondition","fraction-over","Fraction_Over","self::fraction"],["Precondition","fraction-overendfrac","Fraction_OverEndFrac","self::fraction"],["Precondition","fraction-fracover","Fraction_FracOver","self::fraction"],["Precondition","fraction-per","Fraction_Per","self::fraction"],["Precondition","fraction-generalendfrac","Fraction_GeneralEndFrac","self::fraction"],["Precondition","fraction-general","Fraction_General","self::fraction"],["Precondition","simple-vulgar-fraction-ordinal","Fraction_Ordinal","self::fraction","@role=\\"vulgar\\""],["Precondition","fraction-endfrac","Fraction_EndFrac","self::fraction","not(contains(@grammar, \\"endfrac\\"))","not(contains(children/*[1]/@annotation, \\"clearspeak:unit\\"))","not(contains(children/*[2]/@annotation, \\"clearspeak:unit\\"))"],["Precondition","vulgar-fraction-endfrac","Fraction_EndFrac","self::fraction","name(children/*[1])=\\"fraction\\"","name(children/*[2])=\\"fraction\\"","contains(children/*[1]/@annotation, \\"clearspeak:simple\\")","contains(children/*[2]/@annotation, \\"clearspeak:simple\\")"],["Precondition","simple-vulgar-fraction-endfrac","Fraction_EndFrac","self::fraction","@role=\\"vulgar\\"","contains(@annotation, \\"clearspeak:simple\\")","self::*"],["Precondition","sqrt","default","self::sqrt"],["Precondition","sqrt-nested","default","self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"],["Precondition","negative-sqrt","default","self::prefixop","@role=\\"negative\\"","name(children/*[1])=\\"sqrt\\""],["Precondition","negative-sqrt-default","default","self::prefixop","@role=\\"negative\\"","name(children/*[1])=\\"sqrt\\"","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"],["Precondition","sqrt-plus-minus","Roots_PosNegSqRoot","self::sqrt","parent::stree or not(parent::*/parent::infixop[@role=\\"addition\\"]) or (parent::*/parent::*[1]/text()!=\\"±\\" and parent::*/parent::*/text()!=\\"∓\\")"],["Precondition","sqrt-nested-plus-minus","Roots_PosNegSqRoot","self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root","parent::stree or not(parent::*/parent::infixop[@role=\\"addition\\"]) or (parent::*/parent::*[1]/text()!=\\"±\\" and parent::*/parent::*/text()!=\\"∓\\")"],["Precondition","sqrt-plus-minus-posnegsqrootend","Roots_PosNegSqRootEnd","self::sqrt","parent::stree or not(parent::*/parent::infixop[@role=\\"addition\\"]) or (parent::*/parent::*[1]/text()!=\\"±\\" and parent::*/parent::*/text()!=\\"∓\\")"],["Precondition","sqrt-nested-plus-minus-posnegsqrootend","Roots_PosNegSqRootEnd","self::sqrt","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root","parent::stree or not(parent::*/parent::infixop[@role=\\"addition\\"]) or (parent::*/parent::*[1]/text()!=\\"±\\" and parent::*/parent::*/text()!=\\"∓\\")"],["Precondition","sqrt-endroot","Roots_RootEnd","self::sqrt","not(contains(@grammar, \\"EndRoot\\"))"],["Precondition","negative-sqrt-endroot","Roots_RootEnd","self::prefixop","@role=\\"negative\\"","name(children/*[1])=\\"sqrt\\"","not(contains(@grammar, \\"EndRoot\\"))"],["Precondition","sqrt-posnegsqrootend","Roots_PosNegSqRootEnd","self::sqrt","not(contains(@grammar, \\"EndRoot\\"))"],["Precondition","negative-sqrt-posnegsqrootend","Roots_PosNegSqRootEnd","self::prefixop","@role=\\"negative\\"","name(children/*[1])=\\"sqrt\\"","not(contains(@grammar, \\"EndRoot\\"))"],["Precondition","cubic","default","self::root","children/*[1][text()=\\"3\\"]"],["Precondition","cubic-nested","default","self::root","children/*[1][text()=\\"3\\"]","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"],["Precondition","root","default","self::root"],["Precondition","root-nested","default","self::root","not(preceding-sibling::*)","ancestor::sqrt|ancestor::root"],["Precondition","root-endroot","Roots_RootEnd","self::root","not(contains(@grammar, \\"EndRoot\\"))"],["Precondition","root-posnegsqrootend","Roots_PosNegSqRootEnd","self::root","not(contains(@grammar, \\"EndRoot\\"))"],["Precondition","negative","default","self::prefixop","@role=\\"negative\\""],["Precondition","positive","default","self::prefixop","@role=\\"positive\\""],["Precondition","angle-measure","default","self::infixop","content/*[1]/text()=\\"∠\\"","children/*[1][text()=\\"m\\"]"],["Precondition","prefix","default","self::prefixop"],["Precondition","postfix","default","self::postfixop"],["Precondition","set-prefix-operators","default","self::*","contains(@grammar,\\"prefix\\")","descendant-or-self::*/text()=\\"∩\\" or descendant-or-self::*/text()=\\"∪\\"","self::*","self::*","self::*"],["Precondition","binary-operation-default","default","self::infixop"],["Precondition","division","default","self::infixop","@role=\\"division\\"","count(children/*)=2"],["Precondition","binary-operation-moreimpliedtimes","ImpliedTimes_MoreImpliedTimes","self::infixop","@role=\\"implicit\\""],["Precondition","binary-operation-pause","default","self::infixop","@role=\\"implicit\\"","name(children/*[1])=\\"appl\\""],["Precondition","binary-operation-pause-r","default","self::infixop","@role=\\"implicit\\"","name(children/*[last()])=\\"appl\\""],["Precondition","binary-operation-pause-lr","default","self::infixop","@role=\\"implicit\\"","name(children/*[1])=\\"appl\\"","name(children/*[last()])=\\"appl\\""],["Precondition","implicit-times","default","self::operator","@role=\\"multiplication\\"","text()=\\"⁢\\""],["Precondition","implicit-times-default","default","self::operator","@role=\\"multiplication\\"","text()=\\"⁢\\"","CQFsimpleArguments"],["Precondition","implicit-times-simple","default","self::operator","@role=\\"multiplication\\"","text()=\\"⁢\\"","CQFfencedArguments"],["Precondition","implicit-times-moreimpliedtimes","ImpliedTimes_MoreImpliedTimes","self::operator","@role=\\"multiplication\\"","text()=\\"⁢\\""],["Precondition","implicit-times-none","ImpliedTimes_None","self::operator","@role=\\"multiplication\\"","text()=\\"⁢\\""],["Precondition","binary-operation-simple","default","self::infixop","@role=\\"implicit\\"","contains(@annotation, \\"clearspeak:simple\\")","not(contains(@grammar, \\"inFrac\\"))"],["Precondition","simple-in-fraction","default","self::*","contains(@annotation, \\"clearspeak:simple\\")","not(contains(@grammar, \\"inFrac\\"))","name(.)!=\\"identifier\\"","name(.)!=\\"function\\"","name(.)!=\\"number\\"","name(parent::*/parent::*)=\\"fraction\\"","not(preceding-sibling::*)"],["Precondition","operators-after-power","Exponent_AfterPower","self::infixop","@role=\\"implicit\\"","contains(@grammar, \\"afterPower\\")"],["Precondition","relseq","default","self::relseq"],["Precondition","multrel","default","self::multirel"],["Precondition","natural-numbers","default","self::identifier[@role=\\"numbersetletter\\"]","text()=\\"ℕ\\" or (text()=\\"N\\" and @font=\\"double-struck\\")"],["Precondition","integers","default","self::identifier[@role=\\"numbersetletter\\"]","text()=\\"ℤ\\" or (text()=\\"Z\\" and @font=\\"double-struck\\")"],["Precondition","rational-numbers","default","self::identifier[@role=\\"numbersetletter\\"]","text()=\\"ℚ\\" or (text()=\\"Q\\" and @font=\\"double-struck\\")"],["Precondition","real-numbers","default","self::identifier[@role=\\"numbersetletter\\"]","text()=\\"ℝ\\" or (text()=\\"R\\" and @font=\\"double-struck\\")"],["Precondition","complex-numbers","default","self::identifier[@role=\\"numbersetletter\\"]","text()=\\"ℂ\\" or (text()=\\"C\\" and @font=\\"double-struck\\")"],["Precondition","natural-numbers-super","default","self::superscript","children/*[1]/text()=\\"ℕ\\" or (children/*[1]/text()=\\"N\\" and children/*[1]/@font=\\"double-struck\\")","self::*","self::*","self::*"],["Precondition","integers-super","default","self::superscript","children/*[1]/text()=\\"ℤ\\" or (children/*[1]/text()=\\"Z\\" and children/*[1]/@font=\\"double-struck\\")","self::*","self::*","self::*"],["Precondition","rational-numbers-super","default","self::superscript","children/*[1]/text()=\\"ℚ\\" or (children/*[1]/text()=\\"Q\\" and children/*[1]/@font=\\"double-struck\\")","self::*","self::*","self::*"],["Precondition","real-numbers-super","default","self::superscript","children/*[1]/text()=\\"ℝ\\" or (children/*[1]/text()=\\"R\\" and children/*[1]/@font=\\"double-struck\\")","self::*","self::*","self::*"],["Precondition","complex-numbers-super","default","self::superscript","children/*[1]/text()=\\"ℂ\\" or (children/*[1]/text()=\\"C\\" and children/*[1]/@font=\\"double-struck\\")","self::*","self::*","self::*"],["Precondition","natural-numbers-with-zero","default","self::subscript","children/*[1]/text()=\\"ℕ\\" or (children/*[1]/text()=\\"N\\" and children/*[1]/@font=\\"double-struck\\")","children/*[2]/text()=\\"0\\""],["Precondition","positive-integers","default","self::superscript","children/*[1]/text()=\\"ℤ\\" or (children/*[1]/text()=\\"Z\\" and children/*[1]/@font=\\"double-struck\\")","children/*[2]/text()=\\"+\\"","self::*","self::*","self::*"],["Precondition","negative-integers","default","self::superscript","children/*[1]/text()=\\"ℤ\\" or (children/*[1]/text()=\\"Z\\" and children/*[1]/@font=\\"double-struck\\")","children/*[2]/text()=\\"-\\"","self::*","self::*","self::*"],["Precondition","positive-rational-numbers","default","self::superscript","children/*[1]/text()=\\"ℚ\\" or (children/*[1]/text()=\\"Q\\" and children/*[1]/@font=\\"double-struck\\")","children/*[2]/text()=\\"+\\"","self::*","self::*","self::*"],["Precondition","negative-rational-numbers","default","self::superscript","children/*[1]/text()=\\"ℚ\\" or (children/*[1]/text()=\\"Q\\" and children/*[1]/@font=\\"double-struck\\")","children/*[2]/text()=\\"-\\"","self::*","self::*","self::*"],["Precondition","fences-neutral","default","self::fenced","@role=\\"neutral\\""],["Precondition","fences-neutral-absend","AbsoluteValue_AbsEnd","self::fenced","@role=\\"neutral\\""],["Precondition","fences-neutral-cardinality","AbsoluteValue_Cardinality","self::fenced","@role=\\"neutral\\""],["Precondition","fences-neutral-determinant","AbsoluteValue_Determinant","self::fenced","@role=\\"neutral\\""],["Precondition","fences-metric","default","self::fenced","@role=\\"metric\\""],["Precondition","fences-metric-absend","AbsoluteValue_AbsEnd","self::fenced","@role=\\"metric\\""],["Precondition","matrix","default","self::matrix"],["Precondition","matrix-simple","default","self::matrix","count(children/*)<4","count(children/*[1]/children/*)<4","CQFcellsSimple"],["Precondition","matrix-trivial","default","self::vector","@role=\\"squarematrix\\""],["Precondition","determinant","default","self::matrix","@role=\\"determinant\\"","count(children/*)<4","CQFcellsSimple"],["Precondition","determinant-simple","default","self::matrix","@role=\\"determinant\\""],["Precondition","matrix-vector","default","self::vector"],["Specialized","matrix-vector","default","Matrix_SpeakColNum"],["Precondition","matrix-vector-simple","default","self::vector","count(children/*)<4","CQFcellsSimple","@role!=\\"squarematrix\\""],["Precondition","matrix-vector-simple-silentcolnum","Matrix_SilentColNum","self::vector"],["Precondition","matrix-row-vector","default","self::matrix","@role=\\"rowvector\\""],["Specialized","matrix-row-vector","default","Matrix_SpeakColNum"],["Precondition","matrix-row-vector-simple","default","self::matrix","@role=\\"rowvector\\"","count(children/*[1]/children/*)<4","CQFcellsSimple"],["Precondition","matrix-row-vector-simple-silentcolnum","Matrix_SilentColNum","self::matrix","@role=\\"rowvector\\""],["Precondition","matrix-row-simple","default","self::row","contains(@grammar, \\"simpleDet\\")"],["Precondition","matrix-row-simple-silentcolnum","Matrix_SilentColNum","self::row"],["Precondition","line-simple","default","self::line","contains(@grammar, \\"simpleDet\\")"],["Precondition","matrix-row","default","self::row"],["Specialized","matrix-row","default","Matrix_SpeakColNum"],["Precondition","matrix-cell","default","self::cell"],["Precondition","matrix-end-matrix","Matrix_EndMatrix","self::matrix","not(contains(@grammar, \\"EndMatrix\\"))"],["Precondition","matrix-end-vector","Matrix_EndMatrix","self::vector","not(contains(@grammar, \\"EndMatrix\\"))"],["Precondition","matrix-end-determinant","Matrix_EndMatrix","self::matrix","@role=\\"determinant\\"","not(contains(@grammar, \\"EndMatrix\\"))"],["Precondition","vector","Matrix_Vector","self::vector"],["Specialized","vector","Matrix_Vector","Matrix_EndVector"],["Precondition","vector-simple","Matrix_Vector","self::vector","count(children/*)<4","CQFcellsSimple"],["Specialized","vector-simple","Matrix_Vector","Matrix_EndVector"],["Precondition","row-vector","Matrix_Vector","self::matrix","@role=\\"rowvector\\""],["Specialized","row-vector","Matrix_Vector","Matrix_EndVector"],["Precondition","row-vector-simple","Matrix_Vector","self::matrix","@role=\\"rowvector\\"","count(children/*[1]/children/*)<4","CQFcellsSimple"],["Specialized","row-vector-simple","Matrix_Vector","Matrix_EndVector"],["Precondition","vector-end-matrix","Matrix_EndVector","self::matrix","not(contains(@grammar, \\"EndMatrix\\"))","self::*"],["Precondition","vector-end-vector","Matrix_EndVector","self::vector","not(contains(@grammar, \\"EndMatrix\\"))","self::*"],["Precondition","vector-end-vector-endvector","Matrix_EndVector","self::matrix","@role=\\"rowvector\\"","not(contains(@grammar, \\"EndMatrix\\"))","self::*"],["Precondition","vector-end-determinant","Matrix_EndVector","self::matrix","@role=\\"determinant\\"","not(contains(@grammar, \\"EndMatrix\\"))","self::*"],["Precondition","binomial","Matrix_Combinatoric","self::vector","@role=\\"binomial\\""],["Precondition","lines-summary","default","self::multiline","not(contains(@grammar, \\"layoutSummary\\"))","self::*"],["Alias","lines-summary","self::table","not(contains(@grammar, \\"layoutSummary\\"))","self::*"],["Precondition","lines-summary-none","MultiLineOverview_None","self::multiline","not(contains(@grammar, \\"layoutSummary\\"))","self::*"],["Alias","lines-summary-none","self::table","not(contains(@grammar, \\"layoutSummary\\"))","self::*"],["Precondition","cases-summary","default","self::cases","not(contains(@grammar, \\"layoutSummary\\"))"],["Precondition","cases-summary-none","MultiLineOverview_None","self::cases","not(contains(@grammar, \\"layoutSummary\\"))","self::*"],["Precondition","lines","default","self::table"],["Alias","lines","self::multiline"],["Precondition","line","default","self::line"],["Precondition","row-medium","default","self::row","@role=\\"table\\""],["Alias","row-medium","self::row","@role=\\"cases\\""],["Precondition","row-long","MultiLinePausesBetweenColumns_Long","self::row","@role=\\"table\\""],["Alias","row-long","self::row","@role=\\"cases\\""],["Precondition","row-short","MultiLinePausesBetweenColumns_Short","self::row","@role=\\"table\\""],["Alias","row-short","self::row","@role=\\"cases\\""],["Precondition","blank-cell","default","self::cell","count(children/*)=0"],["Precondition","blank-line","default","self::line","count(children/*)=0"],["Precondition","blank-cell-empty","default","self::empty","count(../*)=1","name(../..)=\\"cell\\""],["Precondition","blank-line-empty","default","self::empty","count(../*)=1","name(../..)=\\"line\\""],["Precondition","cases","default","self::cases"],["Precondition","lines-cases-summary","MultiLineLabel_Case","self::multiline","not(contains(@grammar, \\"layoutSummary\\"))"],["Alias","lines-cases-summary","self::table","not(contains(@grammar, \\"layoutSummary\\"))"],["Precondition","lines-cases","MultiLineLabel_Case","self::table"],["Alias","lines-cases","self::multiline"],["Precondition","lines-equations-summary","MultiLineLabel_Equation","self::multiline","not(contains(@grammar, \\"layoutSummary\\"))"],["Alias","lines-equations-summary","self::table","not(contains(@grammar, \\"layoutSummary\\"))"],["Precondition","lines-equations","MultiLineLabel_Equation","self::table"],["Alias","lines-equations","self::multiline"],["Precondition","lines-steps-summary","MultiLineLabel_Step","self::multiline","not(contains(@grammar, \\"layoutSummary\\"))"],["Alias","lines-steps-summary","self::table","not(contains(@grammar, \\"layoutSummary\\"))"],["Precondition","lines-steps","MultiLineLabel_Step","self::table"],["Alias","lines-steps","self::multiline"],["Precondition","lines-rows-summary","MultiLineLabel_Row","self::multiline","not(contains(@grammar, \\"layoutSummary\\"))"],["Alias","lines-rows-summary","self::table","not(contains(@grammar, \\"layoutSummary\\"))"],["Precondition","lines-rows","MultiLineLabel_Row","self::table"],["Alias","lines-rows","self::multiline"],["Precondition","lines-constraints-summary","MultiLineLabel_Constraint","self::multiline","not(contains(@grammar, \\"layoutSummary\\"))"],["Alias","lines-constraints-summary","self::table","not(contains(@grammar, \\"layoutSummary\\"))"],["Precondition","lines-constraints","MultiLineLabel_Constraint","self::table"],["Alias","lines-constraints","self::multiline"],["Precondition","lines-none","MultiLineLabel_None","self::table","contains(@grammar, \\"layoutSummary\\")"],["Alias","lines-none","self::multiline","contains(@grammar, \\"layoutSummary\\")"],["Alias","lines-none","self::cases","contains(@grammar, \\"layoutSummary\\")"],["Precondition","bigop","default","self::bigop"],["Precondition","limboth","default","self::limboth"],["Precondition","limlower","default","self::limlower"],["Precondition","limupper","default","self::limupper"],["Precondition","integral","default","self::integral"],["Precondition","integral-novar","default","self::integral","name(children/*[3])=\\"empty\\""],["Precondition","overscript","default","self::overscore"],["Precondition","overscript-accent","default","self::overscore","children/*[2][@role=\\"overaccent\\"]"],["Precondition","overscript-limits","default","self::overscore","children/*[2][@role!=\\"overaccent\\"]","name(children/*[1])=\\"underscore\\"","children/*[1]/children/*[2][@role!=\\"underaccent\\"]"],["Precondition","underscript","default","self::underscore"],["Precondition","underscript-limits","default","self::underscore","@role=\\"underover\\"","children/*[2][@role!=\\"underaccent\\"]"],["Precondition","number","default","self::number"],["Precondition","mixed-number","default","self::number","@role=\\"mixed\\""],["Precondition","number-with-chars","default","self::number","@role=\\"othernumber\\"","\\"\\" != translate(text(), \\"0123456789.,\\", \\"\\")","not(contains(@grammar, \\"protected\\"))"],["Precondition","decimal-period","default","self::punctuated","@role=\\"sequence\\"","count(./content/*)=1","./content/*[1][@role=\\"fullstop\\"]","name(children/*[1])=\\"number\\"","children/*[1][@role=\\"integer\\"]","name(children/*[3])=\\"overscore\\"","children/*[3][@role=\\"integer\\"]","children/*[3]/children/*[2][@role=\\"overaccent\\"]","children/*[3]/children/*[2][contains(@annotation, \\"accent:bar\\")]"],["Precondition","decimal-period-float","default","self::infixop","@role=\\"implicit\\"","count(./children/*)=2","name(children/*[1])=\\"number\\"","children/*[1][@role=\\"float\\"]","name(children/*[2])=\\"overscore\\"","children/*[2][@role=\\"integer\\"]","children/*[2]/children/*[2][@role=\\"overaccent\\"]","children/*[2]/children/*[2][contains(@annotation, \\"accent:bar\\")]"],["Precondition","decimal-period-singular","default","self::punctuated","@role=\\"sequence\\"","count(./content/*)=1","./content/*[1][@role=\\"fullstop\\"]","name(children/*[1])=\\"number\\"","children/*[1][@role=\\"integer\\"]","name(children/*[3])=\\"overscore\\"","children/*[3][@role=\\"integer\\"]","children/*[3]/children/*[2][@role=\\"overaccent\\"]","children/*[3]/children/*[2][contains(@annotation, \\"accent:bar\\")]","string-length(./children/*[3]/children/*[1]/text())=1"],["Precondition","decimal-period-singular-float","default","self::infixop","@role=\\"implicit\\"","count(./children/*)=2","name(children/*[1])=\\"number\\"","children/*[1][@role=\\"float\\"]","name(children/*[2])=\\"overscore\\"","children/*[2][@role=\\"integer\\"]","children/*[2]/children/*[2][@role=\\"overaccent\\"]","children/*[2]/children/*[2][contains(@annotation, \\"accent:bar\\")]","string-length(./children/*[2]/children/*[1]/text())=1"],["Precondition","number-with-spaces","default","self::number","contains(@grammar, \\"spaceout\\")"],["Precondition","decimal-point","default","self::punctuation","@role=\\"fullstop\\"","contains(@grammar,\\"number\\")"],["Precondition","line-segment","default","self::overscore","@role=\\"implicit\\"","children/*[2][@role=\\"overaccent\\"]","children/*[2][contains(@annotation, \\"accent:bar\\")]","name(children/*[1])=\\"infixop\\"","count(./children/*[1]/children/*)=2"],["Precondition","conjugate","Bar_Conjugate","self::overscore","children/*[2][@role=\\"overaccent\\"]","children/*[2][contains(@annotation, \\"accent:bar\\")]"],["Precondition","defined-by","default","self::overscore","@role=\\"equality\\"","@embellished=\\"relation\\"","name(children/*[2])=\\"text\\"","children/*[2][text()]=\\"def\\""],["Precondition","adorned-sign","default","self::overscore","@embellished","name(children/*[1])=\\"operator\\" or name(children/*[1])=\\"relation\\""],["Precondition","factorial","default","self::punctuation","text()=\\"!\\"","name(preceding-sibling::*[1])!=\\"text\\""],["Precondition","tensor-base","default","self::tensor"],["Precondition","left-super","default","self::*[@role=\\"leftsuper\\"]","not(contains(@grammar,\\"combinatorics\\"))"],["Precondition","left-super-list","default","self::punctuated[@role=\\"leftsuper\\"]","not(contains(@grammar,\\"combinatorics\\"))"],["Precondition","left-sub","default","self::*[@role=\\"leftsub\\"]","not(contains(@grammar,\\"combinatorics\\"))"],["Precondition","left-sub-list","default","self::punctuated[@role=\\"leftsub\\"]","not(contains(@grammar,\\"combinatorics\\"))"],["Precondition","right-super","default","self::*[@role=\\"rightsuper\\"]","not(contains(@grammar,\\"combinatorics\\"))"],["Precondition","right-super-list","default","self::punctuated[@role=\\"rightsuper\\"]","not(contains(@grammar,\\"combinatorics\\"))"],["Precondition","right-sub","default","self::*[@role=\\"rightsub\\"]","not(contains(@grammar,\\"combinatorics\\"))"],["Precondition","right-sub-list","default","self::punctuated[@role=\\"rightsub\\"]","not(contains(@grammar,\\"combinatorics\\"))"],["Precondition","empty-index","default","self::empty[@role=\\"rightsub\\" or @role=\\"rightsuper\\" or @role=\\"leftsub\\" or @role=\\"leftsuper\\"]"],["Precondition","combinatorics","default","self::tensor","name(children/*[3])=\\"empty\\"","name(children/*[5])=\\"empty\\"","children/*[1][text()=\\"P\\" or text()=\\"C\\"]"],["Precondition","choose","CombinationPermutation_ChoosePermute","self::tensor","name(children/*[3])=\\"empty\\"","name(children/*[5])=\\"empty\\"","children/*[1][text()=\\"C\\"]"],["Precondition","permute","CombinationPermutation_ChoosePermute","self::tensor","name(children/*[3])=\\"empty\\"","name(children/*[5])=\\"empty\\"","children/*[1][text()=\\"P\\"]"],["Precondition","unit-singular","default","self::identifier[@role=\\"unit\\"]"],["Precondition","unit-plural","default","self::identifier[@role=\\"unit\\"]","not(contains(@grammar, \\"singular\\"))"],["Precondition","unit-square","default","self::superscript[@role=\\"unit\\"]","children/*[2][text()=2]","name(children/*[1])=\\"identifier\\""],["Precondition","unit-cubic","default","self::superscript[@role=\\"unit\\"]","children/*[2][text()=3]","name(children/*[1])=\\"identifier\\""],["Precondition","unit-reciprocal","default","self::superscript[@role=\\"unit\\"]","name(children/*[1])=\\"identifier\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=1]","count(preceding-sibling::*)=0 or preceding-sibling::*[@role!=\\"unit\\"]"],["Precondition","unit-reciprocal-singular","default","self::superscript[@role=\\"unit\\"]","name(children/*[1])=\\"identifier\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=1]","preceding-sibling::*[@role=\\"unit\\"]"],["Precondition","unit-combine","default","self::infixop[@role=\\"unit\\"]"],["Precondition","unit-combine-singular","default","self::infixop[@role=\\"unit\\"]","name(children/*[1])=\\"number\\"","children/*[1][text()=1]"],["Precondition","unit-divide","default","self::fraction[@role=\\"unit\\"]"],["Precondition","currency","default","self::infixop","contains(@annotation, \\"clearspeak:unit\\")","children/*[1][@role=\\"unit\\"]","children/*[1][@category=\\"unit:currency\\"]"],["Precondition","currency-position","Currency_Position","self::infixop","contains(@annotation, \\"clearspeak:unit\\")"],["Specialized","currency-position","Currency_Position","Currency_Prefix"],["Precondition","currency-prefix","Currency_Prefix","self::infixop","contains(@annotation, \\"clearspeak:unit\\")","children/*[last()][@role=\\"unit\\"]","children/*[last()][@category=\\"unit:currency\\"]"],["Precondition","enclose","default","self::enclose"],["Precondition","enclose-end","Enclosed_EndEnclose","self::enclose"],["Precondition","overbar","default","self::enclose","@role=\\"top\\""],["Precondition","underbar","default","self::enclose","@role=\\"bottom\\""],["Precondition","leftbar","default","self::enclose","@role=\\"left\\""],["Precondition","rightbar","default","self::enclose","@role=\\"right\\""],["Precondition","crossout","default","self::enclose","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Precondition","crossout-end","Enclosed_EndEnclose","self::enclose","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Precondition","cancel-over","default","self::overscore","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Alias","cancel-over","self::underscore","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Precondition","cancel-under","default","self::underscore","name(children/*[2])=\\"enclose\\"","children/*[2][@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\"]"],["Alias","cancel-under","self::overscore","name(children/*[2])=\\"enclose\\"","children/*[2][@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\"]"],["Precondition","cancel-over-end","Enclosed_EndEnclose","self::overscore","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Alias","cancel-over-end","self::underscore","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Precondition","cancel-under-end","Enclosed_EndEnclose","self::underscore","name(children/*[2])=\\"enclose\\"","children/*[2][@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\"]"],["Alias","cancel-under-end","self::overscore","name(children/*[2])=\\"enclose\\"","children/*[2][@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\"]"]],"annotators":["simple","unit"]},"base/rules/clearspeak_base_actions.min":{"domain":"clearspeak","locale":"base","modality":"speech","kind":"actions","rules":[["Action","punctuation-lr","[p] (pause:short); [n] text() (pause:short)"],["Action","punctuation","[n] text()"],["Action","punctuation-l","[p] (pause:short); [n] text()"],["Action","punctuation-r","[n] text() (pause:short)"],["Action","prime","[n] children/*[1]; [n] children/*[2]"],["Action","degrees","[m] children/* (grammar:degree)"],["Action","feet","[n] children/*[1]; [t] \\"ft\\" (grammar:annotation=\\"unit\\":translate:plural)"],["Action","foot","[n] children/*[1]; [t] \\"ft\\" (grammar:annotation=\\"unit\\":translate)"],["Action","inches","[n] children/*[1]; [t] \\"in\\" (grammar:annotation=\\"unit\\":translate:plural)"],["Action","inch","[n] children/*[1]; [t] \\"in\\" (grammar:annotation=\\"unit\\":translate)"],["Action","minutes","[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\\"unit\\":translate:plural)"],["Action","minute","[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\\"unit\\":translate)"],["Action","seconds","[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\\"unit\\":translate:plural)"],["Action","second","[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\\"unit\\":translate)"],["Action","degrees-angle","[t] text() (grammar:annotation=\\"unit\\":translate:plural, pause:short)"],["Action","degree-angle","[t] text() (grammar:annotation=\\"unit\\":translate, pause:short)"],["Action","minutes-angle","[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\\"unit\\":translate:plural)"],["Action","minute-angle","[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\\"unit\\":translate)"],["Action","seconds-angle","[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\\"unit\\":translate:plural)"],["Action","second-angle","[n] children/*[1]; [t] children/*[2]/text() (grammar:annotation=\\"unit\\":translate)"],["Action","feet-length","[n] children/*[1]; [t] \\"ft\\" (grammar:annotation=\\"unit\\":translate:plural, pause:short)"],["Action","foot-length","[n] children/*[1]; [t] \\"ft\\" (grammar:annotation=\\"unit\\":translate, pause:short)"],["Action","inches-length","[n] children/*[1]; ; [t] \\"in\\" (grammar:annotation=\\"unit\\":translate:plural, pause:short)"],["Action","inch-length","[n] children/*[1]; ; [t] \\"in\\" (grammar:annotation=\\"unit\\":translate, pause:short)"],["Action","punctuated","[m] children/*"],["Action","function","[n] text()"],["Action","binary-operation","[n] . (grammar:impliedTimes, pause:short)"],["Action","function-ln-natlog","[n] . (grammar:NatLog)"],["Action","function-ln-natlog-pause","[n] . (grammar:NatLog, pause:short)"],["Action","function-no-inverse","[n] . (grammar:functions_none)"],["Action","paren-simple","[n] children/*[1]"],["Action","paren-simple-exp","[n] children/*[1]"],["Action","paren-simple-nested-func","[n] children/*[1]"],["Action","paren-simple-nested-func-no-bracket","[n] children/*[1]"],["Action","fences-open-close","[p] (pause:short); [n] content/*[1] (grammar:spokenFence, pause:short); [n] children/*[1] (pause:short); [n] content/*[2] (grammar:spokenFence, pause:short)"],["Action","paren-simple-nested-func-default","[p] (pause:short); [n] content/*[1] (pause:short); [n] children/*[1] (pause:short); [n] content/*[2] (pause:short)"],["Action","paren-simple-nested-func-none","[p] (pause:short); [n] content/*[1] (grammar:spokenFence, pause:short); [n] children/*[1] (pause:short); [n] content/*[2] (grammar:spokenFence, pause:short)"],["Action","fence-silent","[p] (pause:short); [n] children/*[1] (pause:short)"],["Action","fences-open-close-none","[p] (pause:short); [n] content/*[1] (grammar:spokenFence, pause:short); [n] children/*[1] (pause:short); [n] content/*[2] (grammar:spokenFence, pause:short)"],["Action","fence-nesting","[n] text() (grammar:insertNesting=CSFnestingDepth)"],["Action","fence-no-nesting","[n] text()"],["Action","interval-open-inf-lr",""],["Action","paren-nested-embellished-funcs","[p] (pause:short); [n] content/*[1] (pause:short); [n] children/*[1] (pause:short); [n] content/*[2] (pause:short)"],["Action","set-collection-silentbracket","[n] children/*[1]"],["Action","prefix","[m] content/* (grammar:prefix); [n] children/*[1]"],["Action","postfix","[n] children/*[1]; [m] content/* (grammar:postfix)"],["Action","binary-operation-default","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","binary-operation-moreimpliedtimes","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","binary-operation-pause","[p] (pause:short); [m] children/* (sepFunc:CTFcontentIterator)"],["Action","binary-operation-pause-r","[m] children/* (sepFunc:CTFcontentIterator, pause:short)"],["Action","binary-operation-pause-lr","[p] (pause:short); [m] children/* (sepFunc:CTFcontentIterator, pause:short)"],["Action","implicit-times","[p] (pause:short)"],["Action","implicit-times-default",""],["Action","implicit-times-simple","[n] text()"],["Action","implicit-times-moreimpliedtimes","[n] text()"],["Action","implicit-times-none",""],["Action","binary-operation-simple","[m] children/* (rate:\\"0.5\\", pause:short)"],["Action","simple-in-fraction","[n] . (rate:\\"0.5\\", grammar:inFrac)"],["Action","relseq","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","multrel","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","natural-numbers-super","[t] \\"n\\" (join:\\"-\\",grammar:translate); [n] children/*[2] (grammar:numbers2alpha)"],["Action","integers-super","[t] \\"z\\" (join:\\"-\\",grammar:translate); [n] children/*[2] (grammar:numbers2alpha)"],["Action","rational-numbers-super","[t] \\"q\\" (join:\\"-\\",grammar:translate); [n] children/*[2] (grammar:numbers2alpha)"],["Action","real-numbers-super","[t] \\"r\\" (join:\\"-\\",grammar:translate); [n] children/*[2] (grammar:numbers2alpha)"],["Action","complex-numbers-super","[t] \\"c\\" (join:\\"-\\",grammar:translate); [n] children/*[2] (grammar:numbers2alpha)"],["Action","matrix-row-simple","[m] children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\")"],["Action","matrix-row-simple-silentcolnum","[m] children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\")"],["Action","line-simple","[n] children/*[1]"],["Action","matrix-cell","[n] children/*[1]"],["Action","lines-summary-none","[n] . (grammar:layoutSummary)"],["Action","cases-summary-none","[n] . (grammar:layoutSummary)"],["Action","line","[n] children/*[1]"],["Action","row-medium","[m] children/* (sepFunc:CTFpauseSeparator, separator:\\"medium\\")"],["Action","row-long","[m] children/* (sepFunc:CTFpauseSeparator, separator:\\"long\\")"],["Action","row-short","[m] children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\")"],["Action","lines-none","[p] (pause:short); [m] children/* (sepFunc:CTFpauseSeparator, separator:\\"long\\", pause:long)"],["Action","overscript-accent","[n] children/*[1]; [n] children/*[2]"],["Action","number","[n] text()"],["Action","number-with-spaces","[m] CQFspaceoutNumber (grammar:!spaceout:number)"],["Action","tensor-base","[n] children/*[2]; [n] children/*[3]; [n] children/*[1]; [n] children/*[4]; [n] children/*[5]"],["Action","empty-index","[p] (pause:medium)"],["Action","combinatorics","[n] children/*[2] (grammar:combinatorics); [n] children/*[1]; [n] children/*[4] (grammar:combinatorics)"],["Action","unit-singular","[t] text() (grammar:annotation=\\"unit\\":translate)"],["Action","unit-plural","[t] text() (grammar:annotation=\\"unit\\":translate:plural)"],["Action","unit-combine","[m] children/*"],["Action","unit-combine-singular","[n] children/*[1]; [n] children/*[2] (grammar:singular); [m] children/*[position()>2]"],["Action","currency","[m] children/*[position()>1]; [n] children/*[1]"],["Action","currency-position","[m] children/*"],["Action","currency-prefix","[n] children/*[last()]; [m] children/*[position()<last()]"]]},"base/rules/clearspeak_base_romance.min":{"locale":"romance","domain":"clearspeak","modality":"speech","kind":"abstract","inherits":"base","rules":[["Precondition","function-prefix-reciprocal","Trig_Reciprocal","self::appl","@role=\\"prefix function\\"","name(children/*[1])=\\"superscript\\"","name(children/*[1]/children/*[2])=\\"prefixop\\"","children/*[1]/children/*[2][@role=\\"negative\\"]","children/*[1]/children/*[2]/children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","function-prefix-reciprocal-simple","Trig_Reciprocal","self::appl","@role=\\"prefix function\\"","name(children/*[1])=\\"superscript\\"","name(children/*[1]/children/*[2])=\\"prefixop\\"","contains(children/*[2]/@annotation, \\"clearspeak:simple\\")","children/*[1]/children/*[2][@role=\\"negative\\"]","children/*[1]/children/*[2]/children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"functions_none\\"))"],["Precondition","function-reciprocal","Functions_Reciprocal","self::superscript","@role=\\"prefix function\\" or @role=\\"simple function\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=\\"1\\"]","not(contains(@grammar, \\"functions_none\\"))"]]},"base/rules/mathspeak_base.min":{"domain":"mathspeak","locale":"base","modality":"speech","kind":"abstract","rules":[["Rule","direct-speech","default","[t] @ext-speech","self::*[@ext-speech]","priority=Infinity"],["Rule","stree","default","[n] ./*[1]","self::stree","CQFresetNesting"],["Rule","unknown","default","[n] text()","self::unknown"],["Rule","protected","default","[n] text() (grammar:ignoreCaps)","self::number","contains(@grammar, \\"protected\\")"],["Rule","omit-empty","default","[p] (pause:100)","self::empty"],["Rule","omit-font","default","[n] . (grammar:ignoreFont=@font)","self::identifier","string-length(text())=1","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font=\\"italic\\""],["Precondition","collapsed","default","self::*[@alternative]","not(contains(@grammar, \\"collapsed\\"))"],["Specialized","collapsed","default","brief"],["Specialized","collapsed","brief","sbrief"],["Precondition","blank-cell-empty","default","self::empty","count(../*)=1","name(../..)=\\"cell\\""],["Precondition","blank-line-empty","default","self::empty","count(../*)=1","name(../..)=\\"line\\""],["Precondition","font","default","self::*","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font!=\\"normal\\""],["Alias","font","self::identifier","string-length(text())=1","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font=\\"normal\\"","\\"\\"=translate(text(), \\"abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ\\", \\"\\")","@role!=\\"unit\\""],["Alias","font","self::identifier","string-length(text())=1","@font","@font=\\"normal\\"","not(contains(@grammar, \\"ignoreFont\\"))","@role!=\\"unit\\""],["Precondition","number","default","self::number"],["Precondition","mixed-number","default","self::number","@role=\\"mixed\\""],["Precondition","number-with-chars","default","self::number[@role=\\"othernumber\\"]","\\"\\" != translate(text(), \\"0123456789.,\\", \\"\\")","not(contains(@grammar, \\"protected\\"))"],["Precondition","number-with-chars-brief","brief","self::number[@role=\\"othernumber\\"]","\\"\\" != translate(text(), \\"0123456789.,\\", \\"\\")","not(contains(@grammar, \\"protected\\"))"],["Specialized","number-with-chars-brief","brief","sbrief"],["Precondition","number-as-upper-word","default","self::number[@role=\\"othernumber\\"]","string-length(text())>1","text()=translate(text(), \\"abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω\\", \\"ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ\\")","\\"\\"=translate(text(), \\"ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ\\",\\"\\")"],["Specialized","number-as-upper-word","default","brief"],["Specialized","number-as-upper-word","default","sbrief"],["Precondition","number-baseline","default","self::number","not(contains(@grammar, \\"ignoreFont\\"))","preceding-sibling::identifier","not(contains(@grammar, \\"baseline\\"))","preceding-sibling::*[1][contains(@role,\\"letter\\")]","parent::*/parent::infixop[@role=\\"implicit\\"]"],["Precondition","number-baseline-brief","brief","self::number","not(contains(@grammar, \\"ignoreFont\\"))","preceding-sibling::identifier","not(contains(@grammar, \\"baseline\\"))","preceding-sibling::*[1][contains(@role,\\"letter\\")]","parent::*/parent::infixop[@role=\\"implicit\\"]"],["Specialized","number-baseline-brief","brief","sbrief"],["Precondition","number-baseline-font","default","self::number[@font!=\\"normal\\"]","not(contains(@grammar, \\"ignoreFont\\"))","preceding-sibling::identifier","preceding-sibling::*[contains(@role,\\"letter\\")]","parent::*/parent::infixop[@role=\\"implicit\\"]"],["Precondition","number-baseline-font-brief","brief","self::number[@font!=\\"normal\\"]","not(contains(@grammar, \\"ignoreFont\\"))","preceding-sibling::identifier","preceding-sibling::*[contains(@role,\\"letter\\")]","parent::*/parent::infixop[@role=\\"implicit\\"]"],["Specialized","number-baseline-font-brief","brief","sbrief"],["Precondition","identifier-spacing","default","self::identifier","string-length(text())>1","@role!=\\"unit\\"","not(@font) or @font=\\"normal\\" or contains(@grammar, \\"ignoreFont\\")","text()!=translate(text(), \\"abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ\\", \\"\\")"],["Precondition","identifier","default","self::identifier"],["Precondition","negative-number","default","self::prefixop","@role=\\"negative\\"","children/identifier"],["Alias","negative-number","self::prefixop","@role=\\"negative\\"","children/number"],["Alias","negative-number","self::prefixop","@role=\\"negative\\"","children/fraction[@role=\\"vulgar\\"]"],["Precondition","negative","default","self::prefixop","@role=\\"negative\\""],["Precondition","prefix","default","self::prefixop"],["Precondition","postfix","default","self::postfixop"],["Precondition","binary-operation","default","self::infixop"],["Precondition","division","default","self::infixop","@role=\\"division\\"","count(children/*)=2"],["Precondition","implicit","default","self::infixop","@role=\\"implicit\\""],["Alias","implicit","self::infixop","@role=\\"leftsuper\\" or @role=\\"leftsub\\" or @role=\\"rightsuper\\" or @role=\\"rightsub\\""],["Precondition","subtraction","default","self::infixop","@role=\\"subtraction\\""],["Precondition","function-unknown","default","self::appl"],["Precondition","function-prefix","default","self::appl","children/*[1][@role=\\"prefix function\\"]"],["Precondition","fences-open-close","default","self::fenced","@role=\\"leftright\\""],["Precondition","fences-neutral","default","self::fenced","@role=\\"neutral\\""],["Precondition","fences-neutral-sbrief","sbrief","self::fenced","@role=\\"neutral\\""],["Precondition","fences-metric","default","self::fenced","@role=\\"metric\\""],["Precondition","fences-metric-sbrief","sbrief","self::fenced","@role=\\"metric\\""],["Precondition","empty-set","default","self::fenced[@role=\\"set empty\\"]","not(name(../..)=\\"appl\\")"],["Specialized","empty-set","default","sbrief"],["Precondition","fences-set","default","self::fenced","contains(@role,\\"set \\")","not(name(../..)=\\"appl\\")"],["Precondition","fences-set-sbrief","sbrief","self::fenced","contains(@role,\\"set \\")","not(name(../..)=\\"appl\\")"],["Precondition","text","default","self::text"],["Precondition","factorial","default","self::punctuation","text()=\\"!\\"","name(preceding-sibling::*[1])!=\\"text\\""],["Precondition","minus","default","self::operator","text()=\\"-\\""],["Precondition","fraction","default","self::fraction"],["Precondition","fraction-brief","brief","self::fraction"],["Precondition","fraction-sbrief","sbrief","self::fraction"],["Precondition","vulgar-fraction","default","self::fraction","@role=\\"vulgar\\"","CQFvulgarFractionSmall"],["Specialized","vulgar-fraction","default","brief"],["Specialized","vulgar-fraction","default","sbrief"],["Precondition","continued-fraction-outer","default","self::fraction","not(ancestor::fraction)","children/*[2]/descendant-or-self::*[@role=\\"ellipsis\\" and not(following-sibling::*)]"],["Precondition","continued-fraction-outer-brief","brief","self::fraction","not(ancestor::fraction)","children/*[2]/descendant-or-self::*[@role=\\"ellipsis\\" and not(following-sibling::*)]"],["Specialized","continued-fraction-outer-brief","brief","sbrief"],["Precondition","continued-fraction-inner","default","self::fraction","ancestor::fraction","children/*[2]/descendant-or-self::*[@role=\\"ellipsis\\" and not(following-sibling::*)]"],["Precondition","continued-fraction-inner-brief","brief","self::fraction","ancestor::fraction","children/*[2]/descendant-or-self::*[@role=\\"ellipsis\\" and not(following-sibling::*)]"],["Precondition","continued-fraction-inner-sbrief","sbrief","self::fraction","ancestor::fraction","children/*[2]/descendant-or-self::*[@role=\\"ellipsis\\" and not(following-sibling::*)]"],["Precondition","sqrt","default","self::sqrt"],["Precondition","sqrt-brief","brief","self::sqrt"],["Precondition","sqrt-sbrief","sbrief","self::sqrt"],["Precondition","root-small","default","self::root","CQFisSmallRoot"],["Precondition","root-small-brief","brief","self::root","CQFisSmallRoot"],["Precondition","root-small-sbrief","sbrief","self::root","CQFisSmallRoot"],["Precondition","root","default","self::root"],["Precondition","root-brief","brief","self::root"],["Precondition","root-sbrief","sbrief","self::root"],["Precondition","limboth","default","self::limboth","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Precondition","limlower","default","self::limlower","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Precondition","limupper","default","self::limupper","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Alias","limlower","self::underscore","@role=\\"limit function\\"","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Alias","limlower","self::underscore","children/*[2][@role!=\\"underaccent\\"]","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Alias","limupper","self::overscore","children/*[2][@role!=\\"overaccent\\"]","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Precondition","limboth-end","default","self::limboth"],["Precondition","limlower-end","default","self::limlower"],["Precondition","limupper-end","default","self::limupper"],["Alias","limlower-end","self::underscore","@role=\\"limit function\\"","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Alias","limlower-end","self::underscore"],["Alias","limupper-end","self::overscore"],["Precondition","integral-index","default","self::integral"],["Precondition","integral","default","self::limboth","@role=\\"integral\\""],["Precondition","integral-brief","brief","self::limboth","@role=\\"integral\\""],["Specialized","integral-brief","brief","sbrief"],["Precondition","bigop","default","self::bigop"],["Precondition","relseq","default","self::relseq"],["Precondition","equality","default","self::relseq","@role=\\"equality\\"","count(./children/*)=2"],["Precondition","multi-equality","default","self::relseq","@role=\\"equality\\"","count(./children/*)>2"],["Precondition","multrel","default","self::multirel"],["Precondition","subscript","default","self::subscript"],["Precondition","subscript-brief","brief","self::subscript"],["Specialized","subscript-brief","brief","sbrief"],["Precondition","subscript-simple","default","self::subscript","name(./children/*[1])=\\"identifier\\"","name(./children/*[2])=\\"number\\"","./children/*[2][@role!=\\"mixed\\"]","./children/*[2][@role!=\\"othernumber\\"]"],["Specialized","subscript-simple","default","brief"],["Specialized","subscript-simple","default","sbrief"],["Precondition","subscript-baseline","default","self::subscript","following-sibling::*","not(name(following-sibling::subscript/children/*[1])=\\"empty\\" or (name(following-sibling::infixop[@role=\\"implicit\\"]/children/*[1])=\\"subscript\\" and name(following-sibling::*/children/*[1]/children/*[1])=\\"empty\\")) and @role!=\\"subsup\\"","not(following-sibling::*[@role=\\"rightsuper\\" or @role=\\"rightsub\\" or @role=\\"leftsub\\" or @role=\\"leftsub\\"])"],["Precondition","subscript-baseline-brief","brief","self::subscript","following-sibling::*","not(name(following-sibling::subscript/children/*[1])=\\"empty\\" or (name(following-sibling::infixop[@role=\\"implicit\\"]/children/*[1])=\\"subscript\\" and name(following-sibling::*/children/*[1]/children/*[1])=\\"empty\\")) and @role!=\\"subsup\\"","not(following-sibling::*[@role=\\"rightsuper\\" or @role=\\"rightsub\\" or @role=\\"leftsub\\" or @role=\\"leftsub\\"])"],["Specialized","subscript-baseline-brief","brief","sbrief"],["Alias","subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction","not(ancestor::punctuated[@role=\\"leftsuper\\" or @role=\\"rightsub\\" or @role=\\"rightsuper\\" or @role=\\"rightsub\\"])"],["Alias","subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","CGFbaselineConstraint"],["Alias","subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"],["Alias","subscript-baseline-brief","self::subscript","not(following-sibling::*)","ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction","not(ancestor::punctuated[@role=\\"leftsuper\\" or @role=\\"rightsub\\" or @role=\\"rightsuper\\" or @role=\\"rightsub\\"])"],["Alias","subscript-baseline-brief","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","CGFbaselineConstraint"],["Alias","subscript-baseline-brief","self::subscript","not(following-sibling::*)","@embellished"],["Precondition","subscript-empty-sup","default","self::subscript","name(children/*[2])=\\"infixop\\"","name(children/*[2][@role=\\"implicit\\"]/children/*[1])=\\"superscript\\"","name(children/*[2]/children/*[1]/children/*[1])=\\"empty\\""],["Specialized","subscript-empty-sup","default","brief"],["Specialized","subscript-empty-sup","brief","sbrief"],["Alias","subscript-empty-sup","self::subscript","name(children/*[2])=\\"superscript\\"","name(children/*[2]/children/*[1])=\\"empty\\""],["Precondition","superscript","default","self::superscript"],["Precondition","superscript-brief","brief","self::superscript"],["Specialized","superscript-brief","brief","sbrief"],["Precondition","superscript-baseline","default","self::superscript","following-sibling::*","not(name(following-sibling::superscript/children/*[1])=\\"empty\\" or (name(following-sibling::infixop[@role=\\"implicit\\"]/children/*[1])=\\"superscript\\" and name(following-sibling::*/children/*[1]/children/*[1])=\\"empty\\")) and not(following-sibling::*[@role=\\"rightsuper\\" or @role=\\"rightsub\\" or @role=\\"leftsub\\" or @role=\\"leftsub\\"])"],["Precondition","superscript-baseline-brief","brief","self::superscript","following-sibling::*","not(name(following-sibling::superscript/children/*[1])=\\"empty\\" or (name(following-sibling::infixop[@role=\\"implicit\\"]/children/*[1])=\\"superscript\\" and name(following-sibling::*/children/*[1]/children/*[1])=\\"empty\\")) and not(following-sibling::*[@role=\\"rightsuper\\" or @role=\\"rightsub\\" or @role=\\"leftsub\\" or @role=\\"leftsub\\"])"],["Specialized","superscript-baseline-brief","brief","sbrief"],["Alias","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::punctuated","ancestor::*/following-sibling::* and not(ancestor::punctuated[@role=\\"leftsuper\\" or @role=\\"rightsub\\" or @role=\\"rightsuper\\" or @role=\\"rightsub\\"])"],["Alias","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"],["Alias","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)","CGFbaselineConstraint"],["Alias","superscript-baseline","self::superscript","not(following-sibling::*)","@embellished","not(children/*[2][@role=\\"prime\\"])"],["Alias","superscript-baseline-brief","self::superscript","not(following-sibling::*)","ancestor::punctuated","ancestor::*/following-sibling::* and not(ancestor::punctuated[@role=\\"leftsuper\\" or @role=\\"rightsub\\" or @role=\\"rightsuper\\" or @role=\\"rightsub\\"])"],["Alias","superscript-baseline-brief","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"],["Alias","superscript-baseline-brief","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)","CGFbaselineConstraint"],["Alias","superscript-baseline-brief","self::superscript","not(following-sibling::*)","@embellished","not(children/*[2][@role=\\"prime\\"])"],["Precondition","superscript-empty-sub","default","self::superscript","name(children/*[2])=\\"infixop\\"","name(children/*[2][@role=\\"implicit\\"]/children/*[1])=\\"subscript\\"","name(children/*[2]/children/*[1]/children/*[1])=\\"empty\\""],["Specialized","superscript-empty-sub","default","brief"],["Specialized","superscript-empty-sub","brief","sbrief"],["Alias","superscript-empty-sub","self::superscript","name(children/*[2])=\\"subscript\\"","name(children/*[2]/children/*[1])=\\"empty\\""],["Precondition","square","default","self::superscript","children/*[2]","children/*[2][text()=2]","name(children/*[1])!=\\"text\\" or not(name(children/*[1])=\\"text\\" and (name(../../../punctuated[@role=\\"text\\"]/..)=\\"stree\\" or name(..)=\\"stree\\"))","name(children/*[1])!=\\"subscript\\" or (name(children/*[1])=\\"subscript\\" and name(children/*[1]/children/*[1])=\\"identifier\\" and name(children/*[1]/children/*[2])=\\"number\\" and children/*[1]/children/*[2][@role!=\\"mixed\\"] and children/*[1]/children/*[2][@role!=\\"othernumber\\"])","not(@embellished)"],["Specialized","square","default","brief"],["Specialized","square","default","sbrief"],["Alias","square","self::superscript","children/*[2]","children/*[2][text()=2]","@embellished","children/*[1][@role=\\"prefix operator\\"]"],["Precondition","cube","default","self::superscript","children/*[2]","children/*[2][text()=3]","name(children/*[1])!=\\"text\\" or not(name(children/*[1])=\\"text\\" and (name(../../../punctuated[@role=\\"text\\"]/..)=\\"stree\\" or name(..)=\\"stree\\"))","name(children/*[1])!=\\"subscript\\" or (name(children/*[1])=\\"subscript\\" and name(children/*[1]/children/*[1])=\\"identifier\\" and name(children/*[1]/children/*[2])=\\"number\\" and children/*[1]/children/*[2][@role!=\\"mixed\\"] and children/*[1]/children/*[2][@role!=\\"othernumber\\"])","not(@embellished)"],["Specialized","cube","default","brief"],["Specialized","cube","default","sbrief"],["Alias","cube","self::superscript","children/*[2]","children/*[2][text()=3]","@embellished","children/*[1][@role=\\"prefix operator\\"]"],["Precondition","prime","default","self::superscript","children/*[2]","children/*[2][@role=\\"prime\\"]"],["Specialized","prime","default","brief"],["Specialized","prime","default","sbrief"],["Precondition","double-prime","default","self::punctuated","@role=\\"prime\\"","count(children/*)=2"],["Alias","double-prime","self::operator","@role=\\"prime\\"","string-length(text())=2"],["Precondition","triple-prime","default","self::punctuated","@role=\\"prime\\"","count(children/*)=3"],["Alias","triple-prime","self::operator","@role=\\"prime\\"","string-length(text())=3"],["Precondition","quadruple-prime","default","self::punctuated","@role=\\"prime\\"","count(children/*)=4"],["Alias","quadruple-prime","self::operator","@role=\\"prime\\"","string-length(text())=4"],["Precondition","counted-prime","default","self::punctuated","@role=\\"prime\\""],["Precondition","counted-prime-multichar","default","self::operator","@role=\\"prime\\"","string-length(text())>4"],["Precondition","prime-subscript","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","not(following-sibling::*)"],["Precondition","prime-subscript-brief","brief","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","not(following-sibling::*)"],["Specialized","prime-subscript-brief","brief","sbrief"],["Precondition","prime-subscript-baseline","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","following-sibling::*"],["Precondition","prime-subscript-baseline-brief","brief","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","following-sibling::*"],["Specialized","prime-subscript-baseline-brief","brief","sbrief"],["Alias","prime-subscript-baseline","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","not(following-sibling::*)","@embellished"],["Alias","prime-subscript-baseline-brief","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","not(following-sibling::*)","@embellished"],["Precondition","prime-subscript-simple","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","name(children/*[1]/children/*[1])=\\"identifier\\"","name(children/*[1]/children/*[2])=\\"number\\"","children/*[1]/children/*[2][@role!=\\"mixed\\"]","children/*[1]/children/*[2][@role!=\\"othernumber\\"]"],["Specialized","prime-subscript-simple","default","brief"],["Specialized","prime-subscript-simple","default","sbrief"],["Precondition","overscore","default","self::overscore","children/*[2][@role=\\"overaccent\\"]"],["Precondition","overscore-brief","brief","self::overscore","children/*[2][@role=\\"overaccent\\"]"],["Specialized","overscore-brief","brief","sbrief"],["Precondition","double-overscore","default","self::overscore","children/*[2][@role=\\"overaccent\\"]","name(children/*[1])=\\"overscore\\"","children/*[1]/children/*[2][@role=\\"overaccent\\"]"],["Precondition","double-overscore-brief","brief","self::overscore","children/*[2][@role=\\"overaccent\\"]","name(children/*[1])=\\"overscore\\"","children/*[1]/children/*[2][@role=\\"overaccent\\"]"],["Specialized","double-overscore-brief","brief","sbrief"],["Precondition","underscore","default","self::underscore","children/*[2][@role=\\"underaccent\\"]"],["Precondition","underscore-brief","brief","self::underscore","children/*[2][@role=\\"underaccent\\"]"],["Specialized","underscore-brief","brief","sbrief"],["Precondition","double-underscore","default","self::underscore","children/*[2][@role=\\"underaccent\\"]","name(children/*[1])=\\"underscore\\"","children/*[1]/children/*[2][@role=\\"underaccent\\"]"],["Precondition","double-underscore-brief","brief","self::underscore","children/*[2][@role=\\"underaccent\\"]","name(children/*[1])=\\"underscore\\"","children/*[1]/children/*[2][@role=\\"underaccent\\"]"],["Specialized","double-underscore-brief","brief","sbrief"],["Precondition","overbar","default","self::overscore","contains(@role,\\"letter\\")","children/*[2][@role=\\"overaccent\\"]","children/*[2][contains(@annotation, \\"accent:bar\\")]"],["Specialized","overbar","default","brief"],["Specialized","overbar","default","sbrief"],["Precondition","underbar","default","self::underscore","contains(@role,\\"letter\\")","children/*[2][@role=\\"underaccent\\"]","children/*[2][contains(@annotation, \\"accent:bar\\")]"],["Specialized","underbar","default","brief"],["Specialized","underbar","default","sbrief"],["Precondition","overtilde","default","self::overscore","children/*[2][@role=\\"overaccent\\"]","contains(@role,\\"letter\\")","children/*[2][contains(@annotation, \\"accent:tilde\\")]"],["Specialized","overtilde","default","brief"],["Specialized","overtilde","default","sbrief"],["Precondition","undertilde","default","self::underscore","contains(@role,\\"letter\\")","children/*[2][@role=\\"underaccent\\"]","children/*[2][contains(@annotation, \\"accent:tilde\\")]"],["Specialized","undertilde","default","brief"],["Specialized","undertilde","default","sbrief"],["Precondition","matrix","default","self::matrix"],["Precondition","matrix-sbrief","sbrief","self::matrix"],["Alias","matrix","self::vector"],["Alias","matrix-sbrief","self::vector"],["Precondition","matrix-row","default","self::row"],["Precondition","row-with-label","default","self::row","content"],["Precondition","row-with-label-brief","brief","self::row","content"],["Specialized","row-with-label-brief","brief","sbrief"],["Precondition","row-with-text-label","sbrief","self::row","content","name(content/cell/children/*[1])=\\"text\\""],["Precondition","empty-row","default","self::row","count(children/*)=0"],["Precondition","matrix-cell","default","self::cell"],["Precondition","empty-cell","default","self::cell","count(children/*)=0"],["Precondition","determinant","default","self::matrix","@role=\\"determinant\\""],["Precondition","determinant-sbrief","sbrief","self::matrix","@role=\\"determinant\\""],["Precondition","determinant-simple","default","self::matrix","@role=\\"determinant\\"","CQFdetIsSimple"],["Precondition","determinant-simple-sbrief","sbrief","self::matrix","@role=\\"determinant\\"","CQFdetIsSimple"],["Precondition","row-simple","default","self::row","@role=\\"determinant\\"","contains(@grammar, \\"simpleDet\\")"],["Precondition","layout","default","self::table"],["Precondition","layout-sbrief","sbrief","self::table"],["Precondition","binomial","default","self::vector","@role=\\"binomial\\""],["Precondition","binomial-sbrief","sbrief","self::vector","@role=\\"binomial\\""],["Precondition","cases","default","self::cases"],["Precondition","cases-sbrief","sbrief","self::cases"],["Alias","layout","self::multiline"],["Alias","layout-sbrief","self::multiline"],["Precondition","line","default","self::line"],["Precondition","line-with-label","default","self::line","content"],["Precondition","line-with-label-brief","brief","self::line","content"],["Specialized","line-with-label-brief","brief","sbrief"],["Precondition","line-with-text-label","sbrief","self::line","content","name(content/cell/children/*[1])=\\"text\\""],["Precondition","empty-line","default","self::line","count(children/*)=0","not(content)"],["Specialized","empty-line","default","brief"],["Specialized","empty-line","brief","sbrief"],["Precondition","empty-line-with-label","default","self::line","count(children/*)=0","content"],["Precondition","empty-line-with-label-brief","brief","self::line","count(children/*)=0","content"],["Specialized","empty-line-with-label-brief","brief","sbrief"],["Precondition","enclose","default","self::enclose"],["Alias","overbar","self::enclose","@role=\\"top\\""],["Alias","underbar","self::enclose","@role=\\"bottom\\""],["Precondition","leftbar","default","self::enclose","@role=\\"left\\""],["Precondition","rightbar","default","self::enclose","@role=\\"right\\""],["Precondition","crossout","default","self::enclose","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Precondition","cancel","default","self::overscore","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Specialized","cancel","default","brief"],["Specialized","cancel","default","sbrief"],["Alias","cancel","self::underscore","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Precondition","cancel-reverse","default","self::overscore","name(children/*[2])=\\"enclose\\"","children/*[2][@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\"]"],["Specialized","cancel-reverse","default","brief"],["Specialized","cancel-reverse","default","sbrief"],["Alias","cancel-reverse","self::underscore","name(children/*[2])=\\"enclose\\"","children/*[2][@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\"]"],["Precondition","end-punct","default","self::punctuated","@role=\\"endpunct\\""],["Precondition","start-punct","default","self::punctuated","@role=\\"startpunct\\""],["Precondition","punctuated","default","self::punctuated"],["Precondition","unit","default","self::identifier[@role=\\"unit\\"]"],["Precondition","unit-square","default","self::superscript[@role=\\"unit\\"]","children/*[2][text()=2]","name(children/*[1])=\\"identifier\\""],["Specialized","unit-square","default","brief"],["Specialized","unit-square","brief","sbrief"],["Precondition","unit-cubic","default","self::superscript[@role=\\"unit\\"]","children/*[2][text()=3]","name(children/*[1])=\\"identifier\\""],["Specialized","unit-cubic","default","brief"],["Specialized","unit-cubic","brief","sbrief"],["Precondition","unit-combine","default","self::infixop[@role=\\"unit\\"]"],["Precondition","multi-inference","default","self::inference"],["Precondition","inference","default","self::inference","count(children/*[2]/children/*)<2"],["Precondition","premise","default","self::premises"],["Precondition","conclusion","default","self::conclusion"],["Precondition","label","default","self::rulelabel"],["Precondition","axiom","default","self::inference[@role=\\"axiom\\"]"],["Precondition","empty-axiom","default","self::inference[@role=\\"axiom\\"]","name(children/*[1])=\\"empty\\""],["Generator","CGFtensorRules"]]},"base/rules/mathspeak_base_actions.min":{"domain":"mathspeak","locale":"base","modality":"speech","kind":"actions","rules":[["Action","number","[n] text()"],["Action","identifier-spacing","[m] CQFspaceoutIdentifier"],["Action","identifier","[n] text()"],["Action","prefix","[m] content/*; [n] children/*[1]"],["Action","postfix","[n] children/*[1]; [m] content/*"],["Action","binary-operation","[m] children/* (sepFunc:CTFcontentIterator);"],["Action","implicit","[m] children/*"],["Action","function-unknown","[n] children/*[1]; [n] children/*[2]"],["Action","function-prefix","[n] children/*[1]; [n] children/*[2]"],["Action","fences-open-close","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]"],["Action","text","[n] text()"],["Action","matrix-cell","[n] children/*[1] (pause: 300)"],["Action","row-simple","[m] children/*;"],["Action","line","[m] children/*"],["Action","end-punct","[m] children/*"],["Action","start-punct","[n] content/*[1]; [m] children/*[position()>1]"],["Action","punctuated","[m] children/*"],["Action","fraction","[t] CSFopenFracVerbose; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracVerbose"],["Action","fraction-brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracBrief"],["Action","fraction-sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief"],["Action","vulgar-fraction","[t] CSFvulgarFraction"],["Action","sqrt","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose"],["Action","sqrt-brief","[t] CSFopenRadicalBrief; [n] children/*[1]; [t] CSFcloseRadicalBrief"],["Action","sqrt-sbrief","[t] CSFopenRadicalSbrief; [n] children/*[1]; [t] CSFcloseRadicalBrief"],["Action","root-small","[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose"],["Action","root-small-brief","[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief"],["Action","root-small-sbrief","[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief"],["Action","root","[t] CSFindexRadicalVerbose; [n] children/*[1];[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose"],["Action","root-brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief"],["Action","root-sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief"],["Action","integral-index","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];"],["Action","bigop","[n] children/*[1]; [n] children/*[2];"],["Action","relseq","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","equality","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]"],["Action","multi-equality","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","multrel","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","subscript","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]"],["Action","subscript-brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]"],["Action","subscript-simple","[n] children/*[1]; [n] children/*[2]"],["Action","subscript-baseline","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose"],["Action","subscript-baseline-brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBrief"],["Action","subscript-empty-sup","[n] children/*[1]; [n] children/*[2]"],["Action","superscript","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]"],["Action","superscript-brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"],["Action","superscript-baseline","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose"],["Action","superscript-baseline-brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBrief"],["Action","superscript-empty-sub","[n] children/*[1]; [n] children/*[2]"],["Action","double-prime","[t] \\"″\\" (grammar:translate)"],["Action","triple-prime","[t] \\"‴\\" (grammar:translate)"],["Action","quadruple-prime","[t] \\"⁗\\" (grammar:translate)"],["Action","prime-subscript","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]"],["Action","prime-subscript-brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"],["Action","prime-subscript-baseline","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose"],["Action","prime-subscript-baseline-brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBrief"],["Action","prime-subscript-simple","[n] children/*[1]/children/*[1]; [n] children/*[2];[n] children/*[1]/children/*[2]"],["Action","unit","[t] text() (grammar:annotation=\\"unit\\":translate:plural)"],["Action","unit-combine","[m] children/*"],["Action","limboth","[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] CSFoverscript; [n] children/*[3]"],["Action","limlower","[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]"],["Action","limupper","[n] children/*[1]; [t] CSFoverscript; [n] children/*[2]"],["Action","limboth-end","[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] CSFoverscript; [n] children/*[3]; [t] CSFendscripts"],["Action","limlower-end","[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] CSFendscripts"],["Action","limupper-end","[n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] CSFendscripts"]]},"base/rules/mathspeak_base_romance.min":{"domain":"mathspeak","locale":"romance","modality":"speech","kind":"abstract","inherits":"base","rules":[["Precondition","logarithm-base","default","self::subscript","children/*[1][@category=\\"Logarithm\\"]","name(./children/*[2])=\\"identifier\\" or name(./children/*[2])=\\"number\\"","./children/*[2][@role!=\\"mixed\\"]","./children/*[2][@role!=\\"othernumber\\"]"],["Specialized","logarithm-base","default","brief"],["Specialized","logarithm-base","default","sbrief"]]},"base/rules/prefix_base.min":{"modality":"prefix","domain":"default","locale":"base","kind":"abstract","rules":[["Precondition","numerator","default","self::*","name(../..)=\\"fraction\\"","count(preceding-sibling::*)=0"],["Precondition","denominator","default","self::*","name(../..)=\\"fraction\\"","count(preceding-sibling::*)=1"],["Precondition","base","default","self::*","count(preceding-sibling::*)=0","name(../..)=\\"superscript\\""],["Alias","base","self::*","count(preceding-sibling::*)=0","name(../..)=\\"subscript\\""],["Alias","base","self::*","count(preceding-sibling::*)=0","name(../..)=\\"overscore\\""],["Alias","base","self::*","count(preceding-sibling::*)=0","name(../..)=\\"underscore\\""],["Alias","base","self::*","count(preceding-sibling::*)=0","name(../..)=\\"tensor\\""],["Alias","base","self::*","count(preceding-sibling::*)=0","name(../..)=\\"limlower\\""],["Alias","base","self::*","count(preceding-sibling::*)=0","name(../..)=\\"limupper\\""],["Alias","base","self::*","count(preceding-sibling::*)=0","name(../..)=\\"limboth\\""],["Precondition","exponent","default","self::*","name(../..)=\\"superscript\\"","count(preceding-sibling::*)=1"],["Precondition","subscript","default","self::*","name(../..)=\\"subscript\\"","count(preceding-sibling::*)=1"],["Precondition","overscript","default","self::*","count(preceding-sibling::*)=1","name(../..)=\\"overscore\\""],["Alias","overscript","self::*","count(preceding-sibling::*)=1","name(../..)=\\"limupper\\""],["Alias","overscript","self::*","count(preceding-sibling::*)=2","name(../..)=\\"limboth\\""],["Precondition","underscript","default","self::*","count(preceding-sibling::*)=1","name(../..)=\\"underscore\\""],["Alias","underscript","self::*","count(preceding-sibling::*)=1","name(../..)=\\"limlower\\""],["Alias","underscript","self::*","count(preceding-sibling::*)=1","name(../..)=\\"limboth\\""],["Precondition","radicand","default","self::*","name(../..)=\\"sqrt\\""],["Alias","radicand","self::*","name(../..)=\\"root\\"","count(preceding-sibling::*)=1"],["Precondition","index","default","self::*","name(../..)=\\"root\\"","count(preceding-sibling::*)=0"],["Precondition","leftsub","default","self::*","name(../..)=\\"tensor\\"","@role=\\"leftsub\\""],["Precondition","leftsub-counted","default","self::*","name(../..)=\\"punctuated\\"","name(../../../..)=\\"tensor\\"","../../@role=\\"leftsub\\""],["Precondition","leftsuper","default","self::*","name(../..)=\\"tensor\\"","@role=\\"leftsuper\\""],["Precondition","leftsuper-counted","default","self::*","name(../..)=\\"punctuated\\"","name(../../../..)=\\"tensor\\"","../../@role=\\"leftsuper\\""],["Precondition","rightsub","default","self::*","name(../..)=\\"tensor\\"","@role=\\"rightsub\\""],["Precondition","rightsub-counted","default","self::*","name(../..)=\\"punctuated\\"","name(../../../..)=\\"tensor\\"","../../@role=\\"rightsub\\""],["Precondition","rightsuper","default","self::*","name(../..)=\\"tensor\\"","@role=\\"rightsuper\\""],["Precondition","rightsuper-counted","default","self::*","name(../..)=\\"punctuated\\"","name(../../../..)=\\"tensor\\"","../../@role=\\"rightsuper\\""],["Precondition","choice","default","self::line","@role=\\"binomial\\"","parent::*/parent::vector","count(preceding-sibling::*)=0"],["Precondition","select","default","self::line","@role=\\"binomial\\"","parent::*/parent::vector","count(preceding-sibling::*)=1"],["Precondition","row","default","self::row"],["Alias","row","self::line"],["Precondition","cell","default","self::cell","contains(@grammar,\\"depth\\")"],["Precondition","cell-simple","default","self::cell"]]},"base/rules/summary_base.min":{"modality":"summary","locale":"base","kind":"abstract","rules":[["Rule","stree","default.default","[n] ./*[1]","self::stree"],["Precondition","abstr-identifier-long","default.default","self::identifier","contains(@grammar, \\"collapsed\\")"],["Precondition","abstr-identifier","default.default","self::identifier"],["Precondition","abstr-number-long","default.default","self::number","contains(@grammar, \\"collapsed\\")"],["Precondition","abstr-number","default.default","self::number"],["Precondition","abstr-mixed-number-long","default.default","self::number","@role=\\"mixed\\"","contains(@grammar, \\"collapsed\\")"],["Precondition","abstr-mixed-number","default.default","self::number","@role=\\"mixed\\""],["Precondition","abstr-text","default.default","self::text"],["Precondition","abstr-function","default.default","self::function"],["Precondition","abstr-function-brief","mathspeak.brief","self::function"],["Specialized","abstr-function-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-lim","default.default","self::function","@role=\\"limit function\\""],["Precondition","abstr-lim-brief","mathspeak.brief","self::function","@role=\\"limit function\\""],["Specialized","abstr-lim-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-fraction","default.default","self::fraction"],["Precondition","abstr-fraction-brief","mathspeak.brief","self::fraction"],["Specialized","abstr-fraction-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-continued-fraction","default.default","self::fraction","children/*[2]/descendant-or-self::*[@role=\\"ellipsis\\"]"],["Precondition","abstr-continued-fraction-brief","mathspeak.brief","self::fraction","children/*[2]/descendant-or-self::*[@role=\\"ellipsis\\"]"],["Specialized","abstr-continued-fraction-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-sqrt","default.default","self::sqrt"],["Precondition","abstr-sqrt-nested","default.default","self::sqrt","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"],["Precondition","abstr-root-end","default.default","self::root","contains(@grammar, \\"collapsed\\")","following-sibling::* or ancestor::*/following-sibling::*"],["Precondition","abstr-root","default.default","self::root"],["Precondition","abstr-root-brief","mathspeak.brief","self::root"],["Specialized","abstr-root-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-root-nested-end","default.default","self::root","contains(@grammar, \\"collapsed\\")","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root","following-sibling::* or ancestor::*/following-sibling::*"],["Precondition","abstr-root-nested","default.default","self::root","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"],["Precondition","abstr-root-nested-brief","mathspeak.brief","self::root","children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root"],["Specialized","abstr-root-nested-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-superscript","default.default","self::superscript"],["Precondition","abstr-subscript","default.default","self::subscript"],["Precondition","abstr-subsup","default.default","self::superscript","name(children/*[1])=\\"subscript\\""],["Precondition","abstr-infixop","default.default","self::infixop"],["Precondition","abstr-infixop-var","default.default","self::infixop","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-infixop-brief","mathspeak.brief","self::infixop"],["Specialized","abstr-infixop-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-addition","default.default","self::infixop","@role=\\"addition\\""],["Precondition","abstr-addition-brief","mathspeak.brief","self::infixop","@role=\\"addition\\""],["Specialized","abstr-addition-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-addition-var","default.default","self::infixop","@role=\\"addition\\"","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-multiplication","default.default","self::infixop","@role=\\"multiplication\\""],["Precondition","abstr-multiplication-brief","mathspeak.brief","self::infixop","@role=\\"multiplication\\""],["Specialized","abstr-multiplication-brief","mathspeak.brief","mathspeak.sbrief"],["Alias","abstr-multiplication","self::infixop","@role=\\"implicit\\""],["Alias","abstr-multiplication-brief","self::infixop","@role=\\"implicit\\""],["Precondition","abstr-multiplication-var","default.default","self::infixop","@role=\\"multiplication\\"","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Alias","abstr-multiplication-var","self::infixop","@role=\\"implicit\\"","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-vector","default.default","self::vector"],["Precondition","abstr-vector-brief","mathspeak.brief","self::vector"],["Specialized","abstr-vector-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-vector-var","default.default","self::vector","./children/*/children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-binomial","default.default","self::vector","@role=\\"binomial\\""],["Specialized","abstr-binomial","default.default","mathspeak.brief"],["Specialized","abstr-binomial","default.default","mathspeak.sbrief"],["Precondition","abstr-determinant","default.default","self::matrix","@role=\\"determinant\\""],["Precondition","abstr-determinant-brief","mathspeak.brief","self::matrix","@role=\\"determinant\\""],["Specialized","abstr-determinant-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-determinant-var","default.default","self::matrix","@role=\\"determinant\\"","./children/*/children/*/children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-squarematrix","default.default","self::matrix","@role=\\"squarematrix\\""],["Precondition","abstr-squarematrix-brief","mathspeak.brief","self::matrix","@role=\\"squarematrix\\""],["Specialized","abstr-squarematrix-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-rowvector","default.default","self::matrix","@role=\\"rowvector\\""],["Precondition","abstr-rowvector-brief","mathspeak.brief","self::matrix","@role=\\"rowvector\\""],["Specialized","abstr-rowvector-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-rowvector-var","default.default","self::matrix","@role=\\"rowvector\\"","./children/*/children/*/children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-matrix","default.default","self::matrix"],["Precondition","abstr-matrix-brief","mathspeak.brief","self::matrix"],["Specialized","abstr-matrix-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-matrix-var","default.default","self::matrix","./children/*/children/*/children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-cases","default.default","self::cases"],["Precondition","abstr-cases-brief","mathspeak.brief","self::cases"],["Specialized","abstr-cases-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-cases-var","default.default","self::cases","./children/row/children/cell/children/punctuation[@role=\\"ellipsis\\"]or ./children/line/children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-punctuated","default.default","self::punctuated"],["Precondition","abstr-punctuated-brief","mathspeak.brief","self::punctuated"],["Specialized","abstr-punctuated-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-punctuated-var","default.default","self::punctuated","./children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-bigop","default.default","self::bigop"],["Precondition","abstr-integral","default.default","self::*","@role=\\"integral\\""],["Precondition","abstr-relation","default.default","self::relseq","count(./children/*)=2"],["Precondition","abstr-relation-seq","default.default","self::relseq","count(./children/*)>2"],["Precondition","abstr-relation-seq-brief","mathspeak.brief","self::relseq","count(./children/*)>2"],["Specialized","abstr-relation-seq-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-relation-var","default.default","self::relseq","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Alias","abstr-relation","self::multirel","@role!=\\"unknown\\"","count(./children/*)>2"],["Alias","abstr-relation-var","self::multirel","@role!=\\"unknown\\"","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-multirel","default.default","self::multirel","count(./children/*)>2"],["Precondition","abstr-multirel-brief","mathspeak.brief","self::multirel","count(./children/*)>2"],["Specialized","abstr-multirel-brief","mathspeak.brief","mathspeak.sbrief"],["Precondition","abstr-multirel-var","default.default","self::multirel","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","abstr-table","default.default","self::table"],["Precondition","abstr-line","default.default","self::line"],["Precondition","abstr-row","default.default","self::row"],["Precondition","abstr-cell","default.default","self::cell"]]},"base/rules/summary_base_romance.min":{"modality":"summary","locale":"romance","kind":"abstract","inherits":"base","rules":[["Precondition","collapsed-masculine","default.default","self::*[@grammar]","contains(@grammar, \\"gender:m\\")","contains(@grammar, \\"collapsed\\")"],["Specialized","collapsed-masculine","default.default","mathspeak.brief"],["Specialized","collapsed-masculine","default.default","mathspeak.sbrief"],["Precondition","collapsed-feminine","default.default","self::*[@grammar]","contains(@grammar, \\"gender:f\\")","contains(@grammar, \\"collapsed\\")"],["Specialized","collapsed-feminine","default.default","mathspeak.brief"],["Specialized","collapsed-feminine","default.default","mathspeak.sbrief"],["Rule","no-collapsed","default.default","[t] \\"\\"","self::*[@grammar]","contains(@grammar, \\"gender\\")","not(contains(@grammar, \\"collapsed\\"))"],["SpecializedRule","no-collapsed","default.default","mathspeak.brief"],["SpecializedRule","no-collapsed","default.default","mathspeak.sbrief"]]}}');
;// CONCATENATED MODULE: ../../../node_modules/speech-rule-engine/lib/mathmaps/en.json
var en_namespaceObject = JSON.parse('{"en/messages/alphabets.min":{"kind":"alphabets","locale":"en","messages":{"latinSmall":["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],"latinCap":["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],"greekSmall":["nabla","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lamda","mu","nu","xi","omicron","pi","rho","final sigma","sigma","tau","upsilon","phi","chi","psi","omega","partial differential","epsilon","theta","kappa","phi","rho","pi"],"greekCap":["Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lamda","Mu","Nu","Xi","Omicron","Pi","Rho","Theta","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega"],"capPrefix":{"default":"cap","mathspeak":"upper"},"smallPrefix":{"default":""},"digitPrefix":{"default":""}}},"en/messages/messages.min":{"kind":"messages","locale":"en","messages":{"MS":{"START":"Start","FRAC_V":"Fraction","FRAC_B":"Frac","FRAC_S":"Frac","END":"End","FRAC_OVER":"Over","TWICE":"Twice","NEST_FRAC":"Nest","ENDFRAC":"EndFrac","SUPER":"Super","SUB":"Sub","SUP":"Sup","SUPERSCRIPT":"Superscript","SUBSCRIPT":"Subscript","BASELINE":"Baseline","BASE":"Base","NESTED":"Nested","NEST_ROOT":"Nest","STARTROOT":"StartRoot","ENDROOT":"EndRoot","ROOTINDEX":"RootIndex","ROOT":"Root","INDEX":"Index","UNDER":"Under","UNDERSCRIPT":"Underscript","OVER":"Over","OVERSCRIPT":"Overscript","ENDSCRIPTS":"Endscripts"},"MSroots":{},"font":{"bold":"bold","bold-fraktur":"bold fraktur","bold-italic":"bold italic","bold-script":"bold script","caligraphic":"calligraphic","caligraphic-bold":"calligraphic bold","double-struck":"double struck","double-struck-italic":"double struck italic","fraktur":"fraktur","fullwidth":"fullwidth","italic":"italic","monospace":"monospace","normal":"normal","oldstyle":"oldstyle","oldstyle-bold":"oldstyle bold","script":"script","sans-serif":"sans serif","sans-serif-italic":"sans serif italic","sans-serif-bold":"sans serif bold","sans-serif-bold-italic":"sans serif bold italic","unknown":"unknown"},"embellish":{"super":"super","sub":"sub","circled":"circled","parenthesized":"parenthesized","period":["period","postfixCombiner"],"negative-circled":"black circled","double-circled":"double circled","circled-sans-serif":"circled sans serif","negative-circled-sans-serif":"black circled sans serif","comma":["comma","postfixCombiner"],"squared":"squared","negative-squared":"black squared"},"role":{"addition":"addition","multiplication":"multiplication","subtraction":"subtraction","division":"division","equality":"equality","inequality":"inequality","element":"element","arrow":"arrow","determinant":"determinant","rowvector":"row vector","binomial":"binomial","squarematrix":"square matrix","multiline":"multiple lines","matrix":"matrix","vector":"vector","cases":"case statement","table":"table","unknown":"unknown"},"enclose":{"longdiv":"long division","actuarial":"actuarial symbol","radical":"square root","box":"box","roundedbox":"rounded box","circle":"circle","left":"left vertical-line","right":"right vertical-line","top":"overbar","bottom":"underbar","updiagonalstrike":"crossout","downdiagonalstrike":"crossout","verticalstrike":"vertical strikeout","horizontalstrike":"crossout","madruwb":"Arabic factorial symbol","updiagonalarrow":"diagonal arrow","phasorangle":"phasor angle","unknown":"long division"},"navigate":{"COLLAPSIBLE":"collapsible","EXPANDABLE":"expandable","LEVEL":"Level"},"regexp":{"TEXT":"a-zA-Z","NUMBER":"((\\\\d{1,3})(?=(,| ))((,| )\\\\d{3})*(\\\\.\\\\d+)?)|^\\\\d*\\\\.\\\\d+|^\\\\d+","DECIMAL_MARK":"\\\\.","DIGIT_GROUP":",","JOINER_SUBSUPER":" ","JOINER_FRAC":""},"unitTimes":""}},"en/messages/numbers.min":{"kind":"numbers","locale":"en","messages":{"zero":"zero","ones":["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],"tens":["","","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"],"large":["","thousand","million","billion","trillion","quadrillion","quintillion","sextillion","septillion","octillion","nonillion","decillion"],"vulgarSep":" ","numSep":" "}},"en/si/prefixes.min":[{"Y":"yotta","Z":"zetta","E":"exa","P":"peta","T":"tera","G":"giga","M":"mega","k":"kilo","h":"hecto","da":"deka","d":"deci","c":"centi","m":"milli","µ":"micro","μ":"micro","n":"nano","p":"pico","f":"femto","a":"atto","z":"zepto","y":"yocto"}],"en/functions/algebra.min":[{"locale":"en"},{"category":"Algebra","mappings":{"default":{"default":"degree"}},"key":"deg","names":["deg"]},{"category":"Algebra","mappings":{"default":{"default":"determinant"},"mathspeak":{"default":"det"}},"key":"det","names":["det"]},{"category":"Algebra","mappings":{"default":{"default":"dimension"}},"key":"dim","names":["dim"]},{"category":"Algebra","mappings":{"default":{"default":"homomorphism"},"mathspeak":{"default":"hom"},"clearspeak":{"default":"hom"}},"key":"hom","names":["hom","Hom"]},{"category":"Algebra","mappings":{"default":{"default":"kernel"}},"key":"ker","names":["ker"]},{"category":"Algebra","mappings":{"default":{"default":"trace"}},"key":"Tr","names":["Tr","tr"]}],"en/functions/elementary.min":[{"locale":"en"},{"category":"Logarithm","mappings":{"default":{"default":"log"}},"key":"log","names":["log"]},{"category":"Logarithm","mappings":{"default":{"default":"natural log"},"mathspeak":{"default":"ln"},"clearspeak":{"default":"l n","Log_LnAsNaturalLog":"natural log"}},"key":"ln","names":["ln"]},{"category":"Logarithm","mappings":{"default":{"default":"log base 10"}},"key":"lg","names":["lg"]},{"category":"Elementary","mappings":{"default":{"default":"exponential"},"mathspeak":{"default":"exp"},"clearspeak":{"default":"exp"}},"key":"exp","names":["exp","expt"]},{"category":"Elementary","mappings":{"default":{"default":"greatest common divisor"},"mathspeak":{"default":"gcd"},"clearspeak":{"default":"gcd"}},"key":"gcd","names":["gcd"]},{"category":"Elementary","mappings":{"default":{"default":"least common multiple"},"mathspeak":{"default":"lcm"},"clearspeak":{"default":"lcm"}},"key":"lcm","names":["lcm"]},{"category":"Complex","mappings":{"default":{"default":"argument"},"mathspeak":{"default":"arg"},"clearspeak":{"default":"arg"}},"key":"arg","names":["arg"]},{"category":"Complex","mappings":{"default":{"default":"imaginary part"},"mathspeak":{"default":"im"},"clearspeak":{"default":"imaginary"}},"key":"im","names":["im"]},{"category":"Complex","mappings":{"default":{"default":"real part"},"mathspeak":{"default":"re"},"clearspeak":{"default":"real"}},"key":"re","names":["re"]},{"category":"Limits","mappings":{"default":{"default":"infimum"},"mathspeak":{"default":"inf"},"clearspeak":{"default":"inf"}},"key":"inf","names":["inf"]},{"category":"Limits","mappings":{"default":{"default":"limit"},"mathspeak":{"default":"limit"},"clearspeak":{"default":"lim"}},"key":"lim","names":["lim"]},{"category":"Limits","mappings":{"default":{"default":"limit inferior"},"mathspeak":{"default":"liminf"},"clearspeak":{"default":"liminf"}},"key":"liminf","names":["lim inf","liminf"]},{"category":"Limits","mappings":{"default":{"default":"limit superior"},"mathspeak":{"default":"limsup"},"clearspeak":{"default":"limsup"}},"key":"limsup","names":["lim sup","limsup"]},{"category":"Limits","mappings":{"default":{"default":"maximum"},"mathspeak":{"default":"max"},"clearspeak":{"default":"max"}},"key":"max","names":["max"]},{"category":"Limits","mappings":{"default":{"default":"minimum"},"mathspeak":{"default":"min"},"clearspeak":{"default":"min"}},"key":"min","names":["min"]},{"category":"Limits","mappings":{"default":{"default":"supremum"},"mathspeak":{"default":"sup"},"clearspeak":{"default":"sup"}},"key":"sup","names":["sup"]},{"category":"Limits","mappings":{"default":{"default":"colimit"}},"key":"injlim","names":["injlim","inj lim"]},{"category":"Limits","mappings":{"default":{"default":"projective limit"}},"key":"projlim","names":["projlim","proj lim"]},{"category":"Elementary","mappings":{"default":{"default":"modulo"},"mathspeak":{"default":"mod"},"clearspeak":{"default":"mod"}},"key":"mod","names":["mod"]},{"category":"Probability","mappings":{"default":{"default":"probability"}},"key":"Pr","names":["Pr"]}],"en/functions/hyperbolic.min":[{"locale":"en"},{"category":"Hyperbolic","mappings":{"default":{"default":"hyperbolic cosine"}},"key":"cosh","names":["cosh"]},{"category":"Hyperbolic","mappings":{"default":{"default":"hyperbolic cotangent"}},"key":"coth","names":["coth"]},{"category":"Hyperbolic","mappings":{"default":{"default":"hyperbolic cosecant"}},"key":"csch","names":["csch"]},{"category":"Hyperbolic","mappings":{"default":{"default":"hyperbolic secant"}},"key":"sech","names":["sech"]},{"category":"Hyperbolic","mappings":{"default":{"default":"hyperbolic sine"}},"key":"sinh","names":["sinh"]},{"category":"Hyperbolic","mappings":{"default":{"default":"hyperbolic tangent"}},"key":"tanh","names":["tanh"]},{"category":"Area","mappings":{"default":{"default":"area hyperbolic cosine"}},"key":"arcosh","names":["arcosh","arccosh"]},{"category":"Area","mappings":{"default":{"default":"area hyperbolic cotangent"}},"key":"arcoth","names":["arcoth","arccoth"]},{"category":"Area","mappings":{"default":{"default":"area hyperbolic cosecant"}},"key":"arcsch","names":["arcsch","arccsch"]},{"category":"Area","mappings":{"default":{"default":"area hyperbolic secant"}},"key":"arsech","names":["arsech","arcsech"]},{"category":"Area","mappings":{"default":{"default":"area hyperbolic sine"}},"key":"arsinh","names":["arsinh","arcsinh"]},{"category":"Area","mappings":{"default":{"default":"area hyperbolic tangent"}},"key":"artanh","names":["artanh","arctanh"]}],"en/functions/trigonometry.min":[{"locale":"en"},{"category":"Trigonometric","mappings":{"default":{"default":"cosine"}},"key":"cos","names":["cos","cosine"]},{"category":"Trigonometric","mappings":{"default":{"default":"cotangent"}},"key":"cot","names":["cot"]},{"category":"Trigonometric","mappings":{"default":{"default":"cosecant"}},"key":"csc","names":["csc"]},{"category":"Trigonometric","mappings":{"default":{"default":"secant"}},"key":"sec","names":["sec"]},{"category":"Trigonometric","mappings":{"default":{"default":"sine"}},"key":"sin","names":["sin","sine"]},{"category":"Trigonometric","mappings":{"default":{"default":"tangent"}},"key":"tan","names":["tan"]},{"category":"Cyclometric","mappings":{"default":{"default":"arc cosine"},"clearspeak":{"Trig_TrigInverse":"cosine inverse"}},"key":"arccos","names":["arccos"]},{"category":"Cyclometric","mappings":{"default":{"default":"arc cotangent"},"clearspeak":{"Trig_TrigInverse":"cotangent inverse"}},"key":"arccot","names":["arccot"]},{"category":"Cyclometric","mappings":{"default":{"default":"arc cosecant"},"clearspeak":{"Trig_TrigInverse":"cosecant inverse"}},"key":"arccsc","names":["arccsc"]},{"category":"Cyclometric","mappings":{"default":{"default":"arc secant"},"clearspeak":{"Trig_TrigInverse":"secant inverse"}},"key":"arcsec","names":["arcsec"]},{"category":"Cyclometric","mappings":{"default":{"default":"arc sine"},"clearspeak":{"Trig_TrigInverse":"sine inverse"}},"key":"arcsin","names":["arcsin"]},{"category":"Cyclometric","mappings":{"default":{"default":"arc tangent"},"clearspeak":{"Trig_TrigInverse":"tangent inverse"}},"key":"arctan","names":["arctan"]}],"en/symbols/digits_rest.min":[{"locale":"en"},{"category":"No","mappings":{"default":{"default":"squared"},"mathspeak":{"default":"squared"},"clearspeak":{"default":"squared"}},"key":"00B2"},{"category":"No","mappings":{"default":{"default":"cubed"},"mathspeak":{"default":"cubed"},"clearspeak":{"default":"cubed"}},"key":"00B3"},{"category":"No","mappings":{"default":{"default":"one quarter"}},"key":"00BC"},{"category":"No","mappings":{"default":{"default":"one half"}},"key":"00BD"},{"category":"No","mappings":{"default":{"default":"three quarters"}},"key":"00BE"},{"category":"No","mappings":{"default":{"default":"one seventh"}},"key":"2150"},{"category":"No","mappings":{"default":{"default":"one ninth"}},"key":"2151"},{"category":"No","mappings":{"default":{"default":"one tenth"}},"key":"2152"},{"category":"No","mappings":{"default":{"default":"one third"}},"key":"2153"},{"category":"No","mappings":{"default":{"default":"two thirds"}},"key":"2154"},{"category":"No","mappings":{"default":{"default":"one fifth"}},"key":"2155"},{"category":"No","mappings":{"default":{"default":"two fifths"}},"key":"2156"},{"category":"No","mappings":{"default":{"default":"three fifths"}},"key":"2157"},{"category":"No","mappings":{"default":{"default":"four fifths"}},"key":"2158"},{"category":"No","mappings":{"default":{"default":"one sixth"}},"key":"2159"},{"category":"No","mappings":{"default":{"default":"five sixths"}},"key":"215A"},{"category":"No","mappings":{"default":{"default":"one eighth"}},"key":"215B"},{"category":"No","mappings":{"default":{"default":"three eighths"}},"key":"215C"},{"category":"No","mappings":{"default":{"default":"five eighths"}},"key":"215D"},{"category":"No","mappings":{"default":{"default":"seven eighths"}},"key":"215E"},{"category":"No","mappings":{"default":{"default":"numerator one"}},"key":"215F"},{"category":"No","mappings":{"default":{"default":"zero thirds"}},"key":"2189"},{"category":"No","mappings":{"default":{"default":"circled ten on black square"}},"key":"3248"},{"category":"No","mappings":{"default":{"default":"circled twenty on black square"}},"key":"3249"},{"category":"No","mappings":{"default":{"default":"circled thirty on black square"}},"key":"324A"},{"category":"No","mappings":{"default":{"default":"circled forty on black square"}},"key":"324B"},{"category":"No","mappings":{"default":{"default":"circled fifty on black square"}},"key":"324C"},{"category":"No","mappings":{"default":{"default":"circled sixty on black square"}},"key":"324D"},{"category":"No","mappings":{"default":{"default":"circled seventy on black square"}},"key":"324E"},{"category":"No","mappings":{"default":{"default":"circled eighty on black square"}},"key":"324F"}],"en/symbols/greek-rest.min":[{"locale":"en"},{"category":"Lu","key":"0394","mappings":{"clearspeak":{"default":"triangle","TriangleSymbol_Delta":"cap Delta"}}}],"en/symbols/greek-scripts.min":[{"locale":"en"},{"category":"Ll","key":"1D26","mappings":{"default":{"default":"small cap Gamma"},"mathspeak":{"default":"small upper Gamma"}}},{"category":"Ll","key":"1D27","mappings":{"default":{"default":"small cap Lamda"},"mathspeak":{"default":"small upper Lamda"}}},{"category":"Ll","key":"1D28","mappings":{"default":{"default":"small cap Pi"},"mathspeak":{"default":"small upper Pi"}}},{"category":"Ll","key":"1D29","mappings":{"default":{"default":"small cap Rho"},"mathspeak":{"default":"small upper Rho"}}},{"category":"Ll","key":"1D2A","mappings":{"default":{"default":"small cap Psi"},"mathspeak":{"default":"small upper Psi"}}},{"category":"Lm","key":"1D5E","mappings":{"default":{"default":"superscript gamma"}}},{"category":"Lm","key":"1D60","mappings":{"default":{"default":"superscript phi"}}},{"category":"Lm","key":"1D66","mappings":{"default":{"default":"subscript beta"}}},{"category":"Lm","key":"1D67","mappings":{"default":{"default":"subscript gamma"}}},{"category":"Lm","key":"1D68","mappings":{"default":{"default":"subscript rho"}}},{"category":"Lm","key":"1D69","mappings":{"default":{"default":"subscript phi"}}},{"category":"Lm","key":"1D6A","mappings":{"default":{"default":"subscript chi"}}}],"en/symbols/greek-symbols.min":[{"locale":"en"},{"category":"Ll","mappings":{"default":{"default":"beta"}},"key":"03D0"},{"category":"Ll","mappings":{"default":{"default":"kai"}},"key":"03D7"},{"category":"Sm","mappings":{"default":{"default":"reversed epsilon"}},"key":"03F6"},{"category":"Lu","mappings":{"default":{"default":"bold cap Digamma"},"mathspeak":{"default":"bold upper Digamma"}},"key":"1D7CA"},{"category":"Ll","mappings":{"default":{"default":"bold digamma"}},"key":"1D7CB"}],"en/symbols/hebrew_letters.min":[{"locale":"en"},{"category":"Lo","mappings":{"default":{"default":"first transfinite cardinal","alternative":"alef"}},"key":"2135"},{"category":"Lo","mappings":{"default":{"default":"second transfinite cardinal","alternative":"bet"}},"key":"2136"},{"category":"Lo","mappings":{"default":{"default":"third transfinite cardinal","alternative":"gimel"}},"key":"2137"},{"category":"Lo","mappings":{"default":{"default":"fourth transfinite cardinal","alternative":"dalet"}},"key":"2138"}],"en/symbols/latin-lower-double-accent.min":[{"locale":"en"},{"category":"Ll","key":"01D6","mappings":{"default":{"default":"u double overdot overbar"}}},{"category":"Ll","key":"01D8","mappings":{"default":{"default":"u double overdot acute"}}},{"category":"Ll","key":"01DA","mappings":{"default":{"default":"u double overdot caron"}}},{"category":"Ll","key":"01DC","mappings":{"default":{"default":"u double overdot grave"}}},{"category":"Ll","key":"01DF","mappings":{"default":{"default":"a double overdot overbar"}}},{"category":"Ll","key":"01E1","mappings":{"default":{"default":"a overdot overbar"}}},{"category":"Ll","key":"01ED","mappings":{"default":{"default":"o ogonek overbar"}}},{"category":"Ll","key":"01FB","mappings":{"default":{"default":"a ring above acute"}}},{"category":"Ll","key":"022B","mappings":{"default":{"default":"o double overdot overbar"}}},{"category":"Ll","key":"022D","mappings":{"default":{"default":"o tilde overbar"}}},{"category":"Ll","key":"0231","mappings":{"default":{"default":"o overdot overbar"}}},{"category":"Ll","key":"1E09","mappings":{"default":{"default":"c cedilla acute"}}},{"category":"Ll","key":"1E15","mappings":{"default":{"default":"e overbar grave"}}},{"category":"Ll","key":"1E17","mappings":{"default":{"default":"e overbar acute"}}},{"category":"Ll","key":"1E1D","mappings":{"default":{"default":"e cedilla breve"}}},{"category":"Ll","key":"1E2F","mappings":{"default":{"default":"i double overdot acute"}}},{"category":"Ll","key":"1E39","mappings":{"default":{"default":"l underdot overbar"}}},{"category":"Ll","key":"1E4D","mappings":{"default":{"default":"o tilde acute"}}},{"category":"Ll","key":"1E4F","mappings":{"default":{"default":"o tilde double overdot"}}},{"category":"Ll","key":"1E51","mappings":{"default":{"default":"o overbar grave"}}},{"category":"Ll","key":"1E53","mappings":{"default":{"default":"o overbar acute"}}},{"category":"Ll","key":"1E5D","mappings":{"default":{"default":"r underdot overbar"}}},{"category":"Ll","key":"1E65","mappings":{"default":{"default":"s acute overdot"}}},{"category":"Ll","key":"1E67","mappings":{"default":{"default":"s caron overdot"}}},{"category":"Ll","key":"1E69","mappings":{"default":{"default":"s underdot overdot"}}},{"category":"Ll","key":"1E79","mappings":{"default":{"default":"u tilde acute"}}},{"category":"Ll","key":"1E7B","mappings":{"default":{"default":"u overbar double overdot"}}},{"category":"Ll","key":"1EA5","mappings":{"default":{"default":"a hat acute"}}},{"category":"Ll","key":"1EA7","mappings":{"default":{"default":"a hat grave"}}},{"category":"Ll","key":"1EA9","mappings":{"default":{"default":"a hat hook above"}}},{"category":"Ll","key":"1EAB","mappings":{"default":{"default":"a hat tilde"}}},{"category":"Ll","key":"1EAD","mappings":{"default":{"default":"a hat underdot"}}},{"category":"Ll","key":"1EAF","mappings":{"default":{"default":"a breve acute"}}},{"category":"Ll","key":"1EB1","mappings":{"default":{"default":"a breve grave"}}},{"category":"Ll","key":"1EB3","mappings":{"default":{"default":"a breve hook above"}}},{"category":"Ll","key":"1EB5","mappings":{"default":{"default":"a breve tilde"}}},{"category":"Ll","key":"1EB7","mappings":{"default":{"default":"a breve underdot"}}},{"category":"Ll","key":"1EBF","mappings":{"default":{"default":"e hat acute"}}},{"category":"Ll","key":"1EC1","mappings":{"default":{"default":"e hat grave"}}},{"category":"Ll","key":"1EC3","mappings":{"default":{"default":"e hat hook above"}}},{"category":"Ll","key":"1EC5","mappings":{"default":{"default":"e hat tilde"}}},{"category":"Ll","key":"1EC7","mappings":{"default":{"default":"e hat underdot"}}},{"category":"Ll","key":"1ED1","mappings":{"default":{"default":"o hat acute"}}},{"category":"Ll","key":"1ED3","mappings":{"default":{"default":"o hat grave"}}},{"category":"Ll","key":"1ED5","mappings":{"default":{"default":"o hat hook above"}}},{"category":"Ll","key":"1ED7","mappings":{"default":{"default":"o hat tilde"}}},{"category":"Ll","key":"1ED9","mappings":{"default":{"default":"o hat underdot"}}},{"category":"Ll","key":"1EDB","mappings":{"default":{"default":"o acute prime"}}},{"category":"Ll","key":"1EDD","mappings":{"default":{"default":"o grave prime"}}},{"category":"Ll","key":"1EDF","mappings":{"default":{"default":"o hook above prime"}}},{"category":"Ll","key":"1EE1","mappings":{"default":{"default":"o tilde prime"}}},{"category":"Ll","key":"1EE3","mappings":{"default":{"default":"o underdot prime"}}},{"category":"Ll","key":"1EE9","mappings":{"default":{"default":"u acute prime"}}},{"category":"Ll","key":"1EEB","mappings":{"default":{"default":"u grave prime"}}},{"category":"Ll","key":"1EED","mappings":{"default":{"default":"u hook above prime"}}},{"category":"Ll","key":"1EEF","mappings":{"default":{"default":"u tilde prime"}}},{"category":"Ll","key":"1EF1","mappings":{"default":{"default":"u underdot prime"}}}],"en/symbols/latin-lower-phonetic.min":[{"locale":"en"},{"category":"Ll","key":"00F8","mappings":{"default":{"default":"o with stroke"}}},{"category":"Ll","key":"0111","mappings":{"default":{"default":"d with stroke"}}},{"category":"Ll","key":"0127","mappings":{"default":{"default":"h with stroke"}}},{"category":"Ll","key":"0142","mappings":{"default":{"default":"l with stroke"}}},{"category":"Ll","key":"0167","mappings":{"default":{"default":"t with stroke"}}},{"category":"Ll","key":"0180","mappings":{"default":{"default":"b with stroke"}}},{"category":"Ll","key":"019B","mappings":{"default":{"default":"lambda with stroke"}}},{"category":"Ll","key":"01B6","mappings":{"default":{"default":"z with stroke"}}},{"category":"Ll","key":"01BE","mappings":{"default":{"default":"latin letter inverted glottal stop with stroke"}}},{"category":"Ll","key":"01E5","mappings":{"default":{"default":"g with stroke"}}},{"category":"Ll","key":"01FF","mappings":{"default":{"default":"o with stroke and acute"}}},{"category":"Ll","key":"023C","mappings":{"default":{"default":"c with stroke"}}},{"category":"Ll","key":"0247","mappings":{"default":{"default":"e with stroke"}}},{"category":"Ll","key":"0249","mappings":{"default":{"default":"j with stroke"}}},{"category":"Ll","key":"024D","mappings":{"default":{"default":"r with stroke"}}},{"category":"Ll","key":"024F","mappings":{"default":{"default":"y with stroke"}}},{"category":"Ll","key":"025F","mappings":{"default":{"default":"dotless j with stroke"}}},{"category":"Ll","key":"0268","mappings":{"default":{"default":"i with stroke"}}},{"category":"Ll","key":"0284","mappings":{"default":{"default":"dotless j with stroke and hook"}}},{"category":"Ll","key":"02A1","mappings":{"default":{"default":"latin letter glottal stop with stroke"}}},{"category":"Ll","key":"02A2","mappings":{"default":{"default":"latin letter reversed glottal stop with stroke"}}},{"category":"Ll","key":"1D13","mappings":{"default":{"default":"sideways o with stroke"}}},{"category":"Ll","key":"1D7C","mappings":{"default":{"default":"iota with stroke"}}},{"category":"Ll","key":"1D7D","mappings":{"default":{"default":"p with stroke"}}},{"category":"Ll","key":"1D7F","mappings":{"default":{"default":"upsilon with stroke"}}},{"category":"Ll","key":"1E9C","mappings":{"default":{"default":"long s with diagonal stroke"}}},{"category":"Ll","key":"1E9D","mappings":{"default":{"default":"long s with high stroke"}}},{"category":"Ll","key":"018D","mappings":{"default":{"default":"turned delta"}}},{"category":"Ll","key":"1E9B","mappings":{"default":{"default":"long s with dot above"}}},{"category":"Ll","key":"1E9F","mappings":{"default":{"default":"delta"}}},{"category":"Ll","key":"0138","mappings":{"default":{"default":"kra"}}},{"category":"Ll","key":"017F","mappings":{"default":{"default":"long s"}}},{"category":"Ll","key":"0183","mappings":{"default":{"default":"b with topbar"}}},{"category":"Ll","key":"0185","mappings":{"default":{"default":"tone six"}}},{"category":"Ll","key":"0188","mappings":{"default":{"default":"c with hook"}}},{"category":"Ll","key":"018C","mappings":{"default":{"default":"d with topbar"}}},{"category":"Ll","key":"0192","mappings":{"default":{"default":"f with hook"}}},{"category":"Ll","key":"0195","mappings":{"default":{"default":"hv"}}},{"category":"Ll","key":"0199","mappings":{"default":{"default":"k with hook"}}},{"category":"Ll","key":"019A","mappings":{"default":{"default":"l with bar"}}},{"category":"Ll","key":"019E","mappings":{"default":{"default":"n with long right leg"}}},{"category":"Ll","key":"01A1","mappings":{"default":{"default":"o with horn"}}},{"category":"Ll","key":"01A3","mappings":{"default":{"default":"oi"}}},{"category":"Ll","key":"01A5","mappings":{"default":{"default":"p with hook"}}},{"category":"Ll","key":"01A8","mappings":{"default":{"default":"tone two"}}},{"category":"Ll","key":"01AA","mappings":{"default":{"default":"latin letter reversed esh loop"}}},{"category":"Ll","key":"01AB","mappings":{"default":{"default":"t with palatal hook"}}},{"category":"Ll","key":"01AD","mappings":{"default":{"default":"t with hook"}}},{"category":"Ll","key":"01B0","mappings":{"default":{"default":"u with horn"}}},{"category":"Ll","key":"01B4","mappings":{"default":{"default":"y with hook"}}},{"category":"Ll","key":"01B9","mappings":{"default":{"default":"ezh reversed"}}},{"category":"Ll","key":"01BA","mappings":{"default":{"default":"ezh with tail"}}},{"category":"Ll","key":"01BD","mappings":{"default":{"default":"tone five"}}},{"category":"Ll","key":"01BF","mappings":{"default":{"default":"latin letter wynn"}}},{"category":"Ll","key":"01C6","mappings":{"default":{"default":"dz with caron"}}},{"category":"Ll","key":"01C9","mappings":{"default":{"default":"lj"}}},{"category":"Ll","key":"01CC","mappings":{"default":{"default":"nj"}}},{"category":"Ll","key":"01E3","mappings":{"default":{"default":"ae with macron"}}},{"category":"Ll","key":"01EF","mappings":{"default":{"default":"ezh with caron"}}},{"category":"Ll","key":"01F3","mappings":{"default":{"default":"dz"}}},{"category":"Ll","key":"021D","mappings":{"default":{"default":"yogh"}}},{"category":"Ll","key":"026E","mappings":{"default":{"default":"lezh"}}},{"category":"Ll","key":"0292","mappings":{"default":{"default":"ezh"}}},{"category":"Ll","key":"0293","mappings":{"default":{"default":"ezh with curl"}}},{"category":"Ll","key":"02A4","mappings":{"default":{"default":"dezh digraph"}}},{"category":"Ll","key":"01DD","mappings":{"default":{"default":"turned e"}}},{"category":"Ll","key":"01FD","mappings":{"default":{"default":"ae with acute"}}},{"category":"Ll","key":"0221","mappings":{"default":{"default":"d with curl"}}},{"category":"Ll","key":"0223","mappings":{"default":{"default":"ou"}}},{"category":"Ll","key":"0225","mappings":{"default":{"default":"z with hook"}}},{"category":"Ll","key":"0234","mappings":{"default":{"default":"l with curl"}}},{"category":"Ll","key":"0235","mappings":{"default":{"default":"n with curl"}}},{"category":"Ll","key":"0236","mappings":{"default":{"default":"t with curl"}}},{"category":"Ll","key":"0238","mappings":{"default":{"default":"db digraph"}}},{"category":"Ll","key":"0239","mappings":{"default":{"default":"qp digraph"}}},{"category":"Ll","key":"023F","mappings":{"default":{"default":"s with swash tail"}}},{"category":"Ll","key":"0240","mappings":{"default":{"default":"z with swash tail"}}},{"category":"Ll","key":"0242","mappings":{"default":{"default":"glottal stop"}}},{"category":"Ll","key":"024B","mappings":{"default":{"default":"q with hook tail"}}},{"category":"Ll","key":"0250","mappings":{"default":{"default":"turned a"}}},{"category":"Ll","key":"0251","mappings":{"default":{"default":"alpha"}}},{"category":"Ll","key":"0252","mappings":{"default":{"default":"turned alpha"}}},{"category":"Ll","key":"0253","mappings":{"default":{"default":"b with hook"}}},{"category":"Ll","key":"0254","mappings":{"default":{"default":"open o"}}},{"category":"Ll","key":"0255","mappings":{"default":{"default":"c with curl"}}},{"category":"Ll","key":"0256","mappings":{"default":{"default":"d with tail"}}},{"category":"Ll","key":"0257","mappings":{"default":{"default":"d with hook"}}},{"category":"Ll","key":"0258","mappings":{"default":{"default":"reversed e"}}},{"category":"Ll","key":"0259","mappings":{"default":{"default":"schwa"}}},{"category":"Ll","key":"025A","mappings":{"default":{"default":"schwa with hook"}}},{"category":"Ll","key":"025B","mappings":{"default":{"default":"open e"}}},{"category":"Ll","key":"025C","mappings":{"default":{"default":"reversed open e"}}},{"category":"Ll","key":"025D","mappings":{"default":{"default":"reversed open e with hook"}}},{"category":"Ll","key":"025E","mappings":{"default":{"default":"closed reversed open e"}}},{"category":"Ll","key":"0260","mappings":{"default":{"default":"g with hook"}}},{"category":"Ll","key":"0261","mappings":{"default":{"default":"script g"}}},{"category":"Ll","key":"0263","mappings":{"default":{"default":"gamma"}}},{"category":"Ll","key":"0264","mappings":{"default":{"default":"rams horn"}}},{"category":"Ll","key":"0265","mappings":{"default":{"default":"turned h"}}},{"category":"Ll","key":"0266","mappings":{"default":{"default":"h with hook"}}},{"category":"Ll","key":"0267","mappings":{"default":{"default":"heng with hook"}}},{"category":"Ll","key":"0269","mappings":{"default":{"default":"iota"}}},{"category":"Ll","key":"026B","mappings":{"default":{"default":"l with middle tilde"}}},{"category":"Ll","key":"026C","mappings":{"default":{"default":"l with belt"}}},{"category":"Ll","key":"026D","mappings":{"default":{"default":"l with retroflex hook"}}},{"category":"Ll","key":"026F","mappings":{"default":{"default":"turned m"}}},{"category":"Ll","key":"0270","mappings":{"default":{"default":"turned m with long leg"}}},{"category":"Ll","key":"0271","mappings":{"default":{"default":"m with hook"}}},{"category":"Ll","key":"0272","mappings":{"default":{"default":"n with left hook"}}},{"category":"Ll","key":"0273","mappings":{"default":{"default":"n with retroflex hook"}}},{"category":"Ll","key":"0275","mappings":{"default":{"default":"barred o"}}},{"category":"Ll","key":"0277","mappings":{"default":{"default":"closed omega"}}},{"category":"Ll","key":"0278","mappings":{"default":{"default":"phi"}}},{"category":"Ll","key":"0279","mappings":{"default":{"default":"turned r"}}},{"category":"Ll","key":"027A","mappings":{"default":{"default":"turned r with long leg"}}},{"category":"Ll","key":"027B","mappings":{"default":{"default":"turned r with hook"}}},{"category":"Ll","key":"027C","mappings":{"default":{"default":"r with long leg"}}},{"category":"Ll","key":"027D","mappings":{"default":{"default":"r with tail"}}},{"category":"Ll","key":"027E","mappings":{"default":{"default":"r with fishhook"}}},{"category":"Ll","key":"027F","mappings":{"default":{"default":"reversed r with fishhook"}}},{"category":"Ll","key":"0282","mappings":{"default":{"default":"s with hook"}}},{"category":"Ll","key":"0283","mappings":{"default":{"default":"esh"}}},{"category":"Ll","key":"0285","mappings":{"default":{"default":"squat reversed esh"}}},{"category":"Ll","key":"0286","mappings":{"default":{"default":"esh with curl"}}},{"category":"Ll","key":"0287","mappings":{"default":{"default":"turned t"}}},{"category":"Ll","key":"0288","mappings":{"default":{"default":"t with retroflex hook"}}},{"category":"Ll","key":"0289","mappings":{"default":{"default":"u bar"}}},{"category":"Ll","key":"028A","mappings":{"default":{"default":"upsilon"}}},{"category":"Ll","key":"028B","mappings":{"default":{"default":"v with hook"}}},{"category":"Ll","key":"028C","mappings":{"default":{"default":"turned v"}}},{"category":"Ll","key":"028D","mappings":{"default":{"default":"turned w"}}},{"category":"Ll","key":"028E","mappings":{"default":{"default":"turned y"}}},{"category":"Ll","key":"0290","mappings":{"default":{"default":"z with retroflex hook"}}},{"category":"Ll","key":"0291","mappings":{"default":{"default":"z with curl"}}},{"category":"Ll","key":"0295","mappings":{"default":{"default":"latin letter pharyngeal voiced fricative"}}},{"category":"Ll","key":"0296","mappings":{"default":{"default":"latin letter inverted glottal stop"}}},{"category":"Ll","key":"0297","mappings":{"default":{"default":"latin letter stretched c"}}},{"category":"Ll","key":"0298","mappings":{"default":{"default":"latin letter bilabial click"}}},{"category":"Ll","key":"029A","mappings":{"default":{"default":"closed open e"}}},{"category":"Ll","key":"029E","mappings":{"default":{"default":"turned k"}}},{"category":"Ll","key":"02A0","mappings":{"default":{"default":"q with hook"}}},{"category":"Ll","key":"02A3","mappings":{"default":{"default":"dz digraph"}}},{"category":"Ll","key":"02A5","mappings":{"default":{"default":"dz digraph with curl"}}},{"category":"Ll","key":"02A6","mappings":{"default":{"default":"ts digraph"}}},{"category":"Ll","key":"02A7","mappings":{"default":{"default":"tesh digraph"}}},{"category":"Ll","key":"02A8","mappings":{"default":{"default":"tc digraph with curl"}}},{"category":"Ll","key":"02A9","mappings":{"default":{"default":"feng digraph"}}},{"category":"Ll","key":"02AA","mappings":{"default":{"default":"ls digraph"}}},{"category":"Ll","key":"02AB","mappings":{"default":{"default":"lz digraph"}}},{"category":"Ll","key":"02AC","mappings":{"default":{"default":"latin letter bilabial percussive"}}},{"category":"Ll","key":"02AD","mappings":{"default":{"default":"latin letter bidental percussive"}}},{"category":"Ll","key":"02AE","mappings":{"default":{"default":"turned h with fishhook"}}},{"category":"Ll","key":"02AF","mappings":{"default":{"default":"turned h with fishhook and tail"}}},{"category":"Ll","key":"1D02","mappings":{"default":{"default":"turned ae"}}},{"category":"Ll","key":"1D08","mappings":{"default":{"default":"turned open e"}}},{"category":"Ll","key":"1D09","mappings":{"default":{"default":"turned i"}}},{"category":"Ll","key":"1D11","mappings":{"default":{"default":"sideways o"}}},{"category":"Ll","key":"1D12","mappings":{"default":{"default":"sideways open o"}}},{"category":"Ll","key":"1D14","mappings":{"default":{"default":"turned oe"}}},{"category":"Ll","key":"1D16","mappings":{"default":{"default":"top half o"}}},{"category":"Ll","key":"1D17","mappings":{"default":{"default":"bottom half o"}}},{"category":"Ll","key":"1D1D","mappings":{"default":{"default":"sideways u"}}},{"category":"Ll","key":"1D1E","mappings":{"default":{"default":"sideways diaeresized u"}}},{"category":"Ll","key":"1D1F","mappings":{"default":{"default":"sideways turned m"}}},{"category":"Ll","key":"1D24","mappings":{"default":{"default":"latin letter voiced laryngeal spirant"}}},{"category":"Ll","key":"1D25","mappings":{"default":{"default":"latin letter ain"}}},{"category":"Ll","key":"1D6B","mappings":{"default":{"default":"ue"}}},{"category":"Ll","key":"1D6C","mappings":{"default":{"default":"b with middle tilde"}}},{"category":"Ll","key":"1D6D","mappings":{"default":{"default":"d with middle tilde"}}},{"category":"Ll","key":"1D6E","mappings":{"default":{"default":"f with middle tilde"}}},{"category":"Ll","key":"1D6F","mappings":{"default":{"default":"m with middle tilde"}}},{"category":"Ll","key":"1D70","mappings":{"default":{"default":"n with middle tilde"}}},{"category":"Ll","key":"1D71","mappings":{"default":{"default":"p with middle tilde"}}},{"category":"Ll","key":"1D72","mappings":{"default":{"default":"r with middle tilde"}}},{"category":"Ll","key":"1D73","mappings":{"default":{"default":"r with fishhook and middle tilde"}}},{"category":"Ll","key":"1D74","mappings":{"default":{"default":"s with middle tilde"}}},{"category":"Ll","key":"1D75","mappings":{"default":{"default":"t with middle tilde"}}},{"category":"Ll","key":"1D76","mappings":{"default":{"default":"z with middle tilde"}}},{"category":"Ll","key":"1D77","mappings":{"default":{"default":"turned g"}}},{"category":"Ll","key":"1D79","mappings":{"default":{"default":"insular g"}}},{"category":"Ll","key":"1D7A","mappings":{"default":{"default":"th with strikethrough"}}},{"category":"Ll","key":"1D80","mappings":{"default":{"default":"b with palatal hook"}}},{"category":"Ll","key":"1D81","mappings":{"default":{"default":"d with palatal hook"}}},{"category":"Ll","key":"1D82","mappings":{"default":{"default":"f with palatal hook"}}},{"category":"Ll","key":"1D83","mappings":{"default":{"default":"g with palatal hook"}}},{"category":"Ll","key":"1D84","mappings":{"default":{"default":"k with palatal hook"}}},{"category":"Ll","key":"1D85","mappings":{"default":{"default":"l with palatal hook"}}},{"category":"Ll","key":"1D86","mappings":{"default":{"default":"m with palatal hook"}}},{"category":"Ll","key":"1D87","mappings":{"default":{"default":"n with palatal hook"}}},{"category":"Ll","key":"1D88","mappings":{"default":{"default":"p with palatal hook"}}},{"category":"Ll","key":"1D89","mappings":{"default":{"default":"r with palatal hook"}}},{"category":"Ll","key":"1D8A","mappings":{"default":{"default":"s with palatal hook"}}},{"category":"Ll","key":"1D8B","mappings":{"default":{"default":"esh with palatal hook"}}},{"category":"Ll","key":"1D8C","mappings":{"default":{"default":"v with palatal hook"}}},{"category":"Ll","key":"1D8D","mappings":{"default":{"default":"x with palatal hook"}}},{"category":"Ll","key":"1D8E","mappings":{"default":{"default":"z with palatal hook"}}},{"category":"Ll","key":"1D8F","mappings":{"default":{"default":"a with retroflex hook"}}},{"category":"Ll","key":"1D90","mappings":{"default":{"default":"alpha with retroflex hook"}}},{"category":"Ll","key":"1D91","mappings":{"default":{"default":"d with hook and tail"}}},{"category":"Ll","key":"1D92","mappings":{"default":{"default":"e with retroflex hook"}}},{"category":"Ll","key":"1D93","mappings":{"default":{"default":"open e with retroflex hook"}}},{"category":"Ll","key":"1D94","mappings":{"default":{"default":"reversed open e with retroflex hook"}}},{"category":"Ll","key":"1D95","mappings":{"default":{"default":"schwa with retroflex hook"}}},{"category":"Ll","key":"1D96","mappings":{"default":{"default":"i with retroflex hook"}}},{"category":"Ll","key":"1D97","mappings":{"default":{"default":"open o with retroflex hook"}}},{"category":"Ll","key":"1D98","mappings":{"default":{"default":"esh with retroflex hook"}}},{"category":"Ll","key":"1D99","mappings":{"default":{"default":"u with retroflex hook"}}},{"category":"Ll","key":"1D9A","mappings":{"default":{"default":"ezh with retroflex hook"}}},{"category":"Ll","key":"0149","mappings":{"default":{"default":"n preceded by apostrophe"}}},{"category":"Ll","key":"014B","mappings":{"default":{"default":"eng"}}}],"en/symbols/latin-lower-single-accent.min":[{"locale":"en"},{"category":"Ll","key":"00E0","mappings":{"default":{"default":"a grave"},"mathspeak":{"default":"modifying above a with grave","brief":"mod above a with grave","sbrief":"mod above a with grave"}}},{"category":"Ll","key":"00E1","mappings":{"default":{"default":"a acute"},"mathspeak":{"default":"modifying above a with acute","brief":"mod above a with acute","sbrief":"mod above a with acute"}}},{"category":"Ll","key":"00E2","mappings":{"default":{"default":"a hat"},"mathspeak":{"default":"modifying above a with caret","brief":"mod above a with caret","sbrief":"mod above a with caret"}}},{"category":"Ll","key":"00E3","mappings":{"default":{"default":"a tilde"},"mathspeak":{"default":"a overtilde","brief":"a overtilde","sbrief":"a overtilde"}}},{"category":"Ll","key":"00E4","mappings":{"default":{"default":"a double overdot"},"mathspeak":{"default":"modifying above a with double dot","brief":"mod above a with double dot","sbrief":"mod above a with double dot"}}},{"category":"Ll","key":"00E5","mappings":{"default":{"default":"a ring"},"mathspeak":{"default":"modifying above a with ring","brief":"mod above a with ring","sbrief":"mod above a with ring"}}},{"category":"Ll","key":"00E7","mappings":{"default":{"default":"c cedilla"},"mathspeak":{"default":"modifying above c with cedilla","brief":"mod above c with cedilla","sbrief":"mod above c with cedilla"}}},{"category":"Ll","key":"00E8","mappings":{"default":{"default":"e grave"},"mathspeak":{"default":"modifying above e with grave","brief":"mod above e with grave","sbrief":"mod above e with grave"}}},{"category":"Ll","key":"00E9","mappings":{"default":{"default":"e acute"},"mathspeak":{"default":"modifying above e with acute","brief":"mod above e with acute","sbrief":"mod above e with acute"}}},{"category":"Ll","key":"00EA","mappings":{"default":{"default":"e hat"},"mathspeak":{"default":"modifying above e with caret","brief":"mod above e with caret","sbrief":"mod above e with caret"}}},{"category":"Ll","key":"00EB","mappings":{"default":{"default":"e double overdot"},"mathspeak":{"default":"modifying above e with double dot","brief":"mod above e with double dot","sbrief":"mod above e with double dot"}}},{"category":"Ll","key":"00EC","mappings":{"default":{"default":"i grave"},"mathspeak":{"default":"modifying above i with grave","brief":"mod above i with grave","sbrief":"mod above i with grave"}}},{"category":"Ll","key":"00ED","mappings":{"default":{"default":"i acute"},"mathspeak":{"default":"modifying above i with acute","brief":"mod above i with acute","sbrief":"mod above i with acute"}}},{"category":"Ll","key":"00EE","mappings":{"default":{"default":"i hat"},"mathspeak":{"default":"modifying above i with caret","brief":"mod above i with caret","sbrief":"mod above i with caret"}}},{"category":"Ll","key":"00EF","mappings":{"default":{"default":"i double overdot"},"mathspeak":{"default":"modifying above i with double dot","brief":"mod above i with double dot","sbrief":"mod above i with double dot"}}},{"category":"Ll","key":"00F1","mappings":{"default":{"default":"n tilde"},"mathspeak":{"default":"n overtilde","brief":"n overtilde","sbrief":"n overtilde"}}},{"category":"Ll","key":"00F2","mappings":{"default":{"default":"o grave"},"mathspeak":{"default":"modifying above o with grave","brief":"mod above o with grave","sbrief":"mod above o with grave"}}},{"category":"Ll","key":"00F3","mappings":{"default":{"default":"o acute"},"mathspeak":{"default":"modifying above o with acute","brief":"mod above o with acute","sbrief":"mod above o with acute"}}},{"category":"Ll","key":"00F4","mappings":{"default":{"default":"o hat"},"mathspeak":{"default":"modifying above o with caret","brief":"mod above o with caret","sbrief":"mod above o with caret"}}},{"category":"Ll","key":"00F5","mappings":{"default":{"default":"o tilde"},"mathspeak":{"default":"o overtilde","brief":"o overtilde","sbrief":"o overtilde"}}},{"category":"Ll","key":"00F6","mappings":{"default":{"default":"o double overdot"},"mathspeak":{"default":"modifying above o with double dot","brief":"mod above o with double dot","sbrief":"mod above o with double dot"}}},{"category":"Ll","key":"00F9","mappings":{"default":{"default":"u grave"},"mathspeak":{"default":"modifying above u with grave","brief":"mod above u with grave","sbrief":"mod above u with grave"}}},{"category":"Ll","key":"00FA","mappings":{"default":{"default":"u acute"},"mathspeak":{"default":"modifying above u with acute","brief":"mod above u with acute","sbrief":"mod above u with acute"}}},{"category":"Ll","key":"00FB","mappings":{"default":{"default":"u hat"},"mathspeak":{"default":"modifying above u with caret","brief":"mod above u with caret","sbrief":"mod above u with caret"}}},{"category":"Ll","key":"00FC","mappings":{"default":{"default":"u double overdot"},"mathspeak":{"default":"modifying above u with double dot","brief":"mod above u with double dot","sbrief":"mod above u with double dot"}}},{"category":"Ll","key":"00FD","mappings":{"default":{"default":"y acute"},"mathspeak":{"default":"modifying above y with acute","brief":"mod above y with acute","sbrief":"mod above y with acute"}}},{"category":"Ll","key":"00FF","mappings":{"default":{"default":"y double overdot"},"mathspeak":{"default":"modifying above y with double dot","brief":"mod above y with double dot","sbrief":"mod above y with double dot"}}},{"category":"Ll","key":"0101","mappings":{"default":{"default":"a overbar"},"mathspeak":{"default":"a overbar","brief":"a overbar","sbrief":"a overbar"}}},{"category":"Ll","key":"0103","mappings":{"default":{"default":"a breve"},"mathspeak":{"default":"modifying above a with breve","brief":"mod above a with breve","sbrief":"mod above a with breve"}}},{"category":"Ll","key":"0105","mappings":{"default":{"default":"a ogonek"},"mathspeak":{"default":"modifying above a with ogonek","brief":"mod above a with ogonek","sbrief":"mod above a with ogonek"}}},{"category":"Ll","key":"0107","mappings":{"default":{"default":"c acute"},"mathspeak":{"default":"modifying above c with acute","brief":"mod above c with acute","sbrief":"mod above c with acute"}}},{"category":"Ll","key":"0109","mappings":{"default":{"default":"c hat"},"mathspeak":{"default":"modifying above c with caret","brief":"mod above c with caret","sbrief":"mod above c with caret"}}},{"category":"Ll","key":"010B","mappings":{"default":{"default":"c overdot"},"mathspeak":{"default":"modifying above c with dot","brief":"mod above c with dot","sbrief":"mod above c with dot"}}},{"category":"Ll","key":"010D","mappings":{"default":{"default":"c caron"},"mathspeak":{"default":"modifying above c with caron","brief":"mod above c with caron","sbrief":"mod above c with caron"}}},{"category":"Ll","key":"010F","mappings":{"default":{"default":"d caron"},"mathspeak":{"default":"modifying above d with caron","brief":"mod above d with caron","sbrief":"mod above d with caron"}}},{"category":"Ll","key":"0113","mappings":{"default":{"default":"e overbar"},"mathspeak":{"default":"e overbar","brief":"e overbar","sbrief":"e overbar"}}},{"category":"Ll","key":"0115","mappings":{"default":{"default":"e breve"},"mathspeak":{"default":"modifying above e with breve","brief":"mod above e with breve","sbrief":"mod above e with breve"}}},{"category":"Ll","key":"0117","mappings":{"default":{"default":"e overdot"},"mathspeak":{"default":"modifying above e with dot","brief":"mod above e with dot","sbrief":"mod above e with dot"}}},{"category":"Ll","key":"0119","mappings":{"default":{"default":"e ogonek"},"mathspeak":{"default":"modifying above e with ogonek","brief":"mod above e with ogonek","sbrief":"mod above e with ogonek"}}},{"category":"Ll","key":"011B","mappings":{"default":{"default":"e caron"},"mathspeak":{"default":"modifying above e with caron","brief":"mod above e with caron","sbrief":"mod above e with caron"}}},{"category":"Ll","key":"011D","mappings":{"default":{"default":"g hat"},"mathspeak":{"default":"modifying above g with caret","brief":"mod above g with caret","sbrief":"mod above g with caret"}}},{"category":"Ll","key":"011F","mappings":{"default":{"default":"g breve"},"mathspeak":{"default":"modifying above g with breve","brief":"mod above g with breve","sbrief":"mod above g with breve"}}},{"category":"Ll","key":"0121","mappings":{"default":{"default":"g overdot"},"mathspeak":{"default":"modifying above g with dot","brief":"mod above g with dot","sbrief":"mod above g with dot"}}},{"category":"Ll","key":"0123","mappings":{"default":{"default":"g cedilla"},"mathspeak":{"default":"modifying above g with cedilla","brief":"mod above g with cedilla","sbrief":"mod above g with cedilla"}}},{"category":"Ll","key":"0125","mappings":{"default":{"default":"h hat"},"mathspeak":{"default":"modifying above h with caret","brief":"mod above h with caret","sbrief":"mod above h with caret"}}},{"category":"Ll","key":"0129","mappings":{"default":{"default":"i tilde"},"mathspeak":{"default":"i overtilde","brief":"i overtilde","sbrief":"i overtilde"}}},{"category":"Ll","key":"012B","mappings":{"default":{"default":"i overbar"},"mathspeak":{"default":"i overbar","brief":"i overbar","sbrief":"i overbar"}}},{"category":"Ll","key":"012D","mappings":{"default":{"default":"i breve"},"mathspeak":{"default":"modifying above i with breve","brief":"mod above i with breve","sbrief":"mod above i with breve"}}},{"category":"Ll","key":"012F","mappings":{"default":{"default":"i ogonek"},"mathspeak":{"default":"modifying above i with ogonek","brief":"mod above i with ogonek","sbrief":"mod above i with ogonek"}}},{"category":"Ll","key":"0131","mappings":{"default":{"default":"dotless i"},"mathspeak":{"default":"modifying above dotless i","brief":"mod above dotless i","sbrief":"mod above dotless i"}}},{"category":"Ll","key":"0135","mappings":{"default":{"default":"j hat"},"mathspeak":{"default":"modifying above j with caret","brief":"mod above j with caret","sbrief":"mod above j with caret"}}},{"category":"Ll","key":"0137","mappings":{"default":{"default":"k cedilla"},"mathspeak":{"default":"modifying above k with cedilla","brief":"mod above k with cedilla","sbrief":"mod above k with cedilla"}}},{"category":"Ll","key":"013A","mappings":{"default":{"default":"l acute"},"mathspeak":{"default":"modifying above l with acute","brief":"mod above l with acute","sbrief":"mod above l with acute"}}},{"category":"Ll","key":"013C","mappings":{"default":{"default":"l cedilla"},"mathspeak":{"default":"modifying above l with cedilla","brief":"mod above l with cedilla","sbrief":"mod above l with cedilla"}}},{"category":"Ll","key":"013E","mappings":{"default":{"default":"l caron"},"mathspeak":{"default":"modifying above l with caron","brief":"mod above l with caron","sbrief":"mod above l with caron"}}},{"category":"Ll","key":"0140","mappings":{"default":{"default":"l middle dot"},"mathspeak":{"default":"modifying above l with middle dot","brief":"mod above l with middle dot","sbrief":"mod above l with middle dot"}}},{"category":"Ll","key":"0144","mappings":{"default":{"default":"n acute"},"mathspeak":{"default":"modifying above n with acute","brief":"mod above n with acute","sbrief":"mod above n with acute"}}},{"category":"Ll","key":"0146","mappings":{"default":{"default":"n cedilla"},"mathspeak":{"default":"modifying above n with cedilla","brief":"mod above n with cedilla","sbrief":"mod above n with cedilla"}}},{"category":"Ll","key":"0148","mappings":{"default":{"default":"n caron"},"mathspeak":{"default":"modifying above n with caron","brief":"mod above n with caron","sbrief":"mod above n with caron"}}},{"category":"Ll","key":"014D","mappings":{"default":{"default":"o overbar"},"mathspeak":{"default":"o overbar","brief":"o overbar","sbrief":"o overbar"}}},{"category":"Ll","key":"014F","mappings":{"default":{"default":"o breve"},"mathspeak":{"default":"modifying above o with breve","brief":"mod above o with breve","sbrief":"mod above o with breve"}}},{"category":"Ll","key":"0151","mappings":{"default":{"default":"o double acute"},"mathspeak":{"default":"modifying above o with double acute","brief":"mod above o with double acute","sbrief":"mod above o with double acute"}}},{"category":"Ll","key":"0155","mappings":{"default":{"default":"r acute"},"mathspeak":{"default":"modifying above r with acute","brief":"mod above r with acute","sbrief":"mod above r with acute"}}},{"category":"Ll","key":"0157","mappings":{"default":{"default":"r cedilla"},"mathspeak":{"default":"modifying above r with cedilla","brief":"mod above r with cedilla","sbrief":"mod above r with cedilla"}}},{"category":"Ll","key":"0159","mappings":{"default":{"default":"r caron"},"mathspeak":{"default":"modifying above r with caron","brief":"mod above r with caron","sbrief":"mod above r with caron"}}},{"category":"Ll","key":"015B","mappings":{"default":{"default":"s acute"},"mathspeak":{"default":"modifying above s with acute","brief":"mod above s with acute","sbrief":"mod above s with acute"}}},{"category":"Ll","key":"015D","mappings":{"default":{"default":"s hat"},"mathspeak":{"default":"modifying above s with caret","brief":"mod above s with caret","sbrief":"mod above s with caret"}}},{"category":"Ll","key":"015F","mappings":{"default":{"default":"s cedilla"},"mathspeak":{"default":"modifying above s with cedilla","brief":"mod above s with cedilla","sbrief":"mod above s with cedilla"}}},{"category":"Ll","key":"0161","mappings":{"default":{"default":"s caron"},"mathspeak":{"default":"modifying above s with caron","brief":"mod above s with caron","sbrief":"mod above s with caron"}}},{"category":"Ll","key":"0163","mappings":{"default":{"default":"t cedilla"},"mathspeak":{"default":"modifying above t with cedilla","brief":"mod above t with cedilla","sbrief":"mod above t with cedilla"}}},{"category":"Ll","key":"0165","mappings":{"default":{"default":"t caron"},"mathspeak":{"default":"modifying above t with caron","brief":"mod above t with caron","sbrief":"mod above t with caron"}}},{"category":"Ll","key":"0169","mappings":{"default":{"default":"u tilde"},"mathspeak":{"default":"u overtilde","brief":"u overtilde","sbrief":"u overtilde"}}},{"category":"Ll","key":"016B","mappings":{"default":{"default":"u overbar"},"mathspeak":{"default":"u overbar","brief":"u overbar","sbrief":"u overbar"}}},{"category":"Ll","key":"016D","mappings":{"default":{"default":"u breve"},"mathspeak":{"default":"modifying above u with breve","brief":"mod above u with breve","sbrief":"mod above u with breve"}}},{"category":"Ll","key":"016F","mappings":{"default":{"default":"u ring"},"mathspeak":{"default":"modifying above u with ring","brief":"mod above u with ring","sbrief":"mod above u with ring"}}},{"category":"Ll","key":"0171","mappings":{"default":{"default":"u double acute"},"mathspeak":{"default":"modifying above u with double acute","brief":"mod above u with double acute","sbrief":"mod above u with double acute"}}},{"category":"Ll","key":"0173","mappings":{"default":{"default":"u ogonek"},"mathspeak":{"default":"modifying above u with ogonek","brief":"mod above u with ogonek","sbrief":"mod above u with ogonek"}}},{"category":"Ll","key":"0175","mappings":{"default":{"default":"w hat"},"mathspeak":{"default":"modifying above w with caret","brief":"mod above w with caret","sbrief":"mod above w with caret"}}},{"category":"Ll","key":"0177","mappings":{"default":{"default":"y hat"},"mathspeak":{"default":"modifying above y with caret","brief":"mod above y with caret","sbrief":"mod above y with caret"}}},{"category":"Ll","key":"017A","mappings":{"default":{"default":"z acute"},"mathspeak":{"default":"modifying above z with acute","brief":"mod above z with acute","sbrief":"mod above z with acute"}}},{"category":"Ll","key":"017C","mappings":{"default":{"default":"z overdot"},"mathspeak":{"default":"modifying above z with dot","brief":"mod above z with dot","sbrief":"mod above z with dot"}}},{"category":"Ll","key":"017E","mappings":{"default":{"default":"z caron"},"mathspeak":{"default":"modifying above z with caron","brief":"mod above z with caron","sbrief":"mod above z with caron"}}},{"category":"Ll","key":"01CE","mappings":{"default":{"default":"a caron"},"mathspeak":{"default":"modifying above a with caron","brief":"mod above a with caron","sbrief":"mod above a with caron"}}},{"category":"Ll","key":"01D0","mappings":{"default":{"default":"i caron"},"mathspeak":{"default":"modifying above i with caron","brief":"mod above i with caron","sbrief":"mod above i with caron"}}},{"category":"Ll","key":"01D2","mappings":{"default":{"default":"o caron"},"mathspeak":{"default":"modifying above o with caron","brief":"mod above o with caron","sbrief":"mod above o with caron"}}},{"category":"Ll","key":"01D4","mappings":{"default":{"default":"u caron"},"mathspeak":{"default":"modifying above u with caron","brief":"mod above u with caron","sbrief":"mod above u with caron"}}},{"category":"Ll","key":"01E7","mappings":{"default":{"default":"g caron"},"mathspeak":{"default":"modifying above g with caron","brief":"mod above g with caron","sbrief":"mod above g with caron"}}},{"category":"Ll","key":"01E9","mappings":{"default":{"default":"k caron"},"mathspeak":{"default":"modifying above k with caron","brief":"mod above k with caron","sbrief":"mod above k with caron"}}},{"category":"Ll","key":"01EB","mappings":{"default":{"default":"o ogonek"},"mathspeak":{"default":"modifying above o with ogonek","brief":"mod above o with ogonek","sbrief":"mod above o with ogonek"}}},{"category":"Ll","key":"01F0","mappings":{"default":{"default":"j caron"},"mathspeak":{"default":"modifying above j with caron","brief":"mod above j with caron","sbrief":"mod above j with caron"}}},{"category":"Ll","key":"01F5","mappings":{"default":{"default":"g acute"},"mathspeak":{"default":"modifying above g with acute","brief":"mod above g with acute","sbrief":"mod above g with acute"}}},{"category":"Ll","key":"01F9","mappings":{"default":{"default":"n grave"},"mathspeak":{"default":"modifying above n with grave","brief":"mod above n with grave","sbrief":"mod above n with grave"}}},{"category":"Ll","key":"0201","mappings":{"default":{"default":"a double grave"},"mathspeak":{"default":"modifying above a with double grave","brief":"mod above a with double grave","sbrief":"mod above a with double grave"}}},{"category":"Ll","key":"0203","mappings":{"default":{"default":"a inverted breve"},"mathspeak":{"default":"modifying above a with inverted breve","brief":"mod above a with inverted breve","sbrief":"mod above a with inverted breve"}}},{"category":"Ll","key":"0205","mappings":{"default":{"default":"e double grave"},"mathspeak":{"default":"modifying above e with double grave","brief":"mod above e with double grave","sbrief":"mod above e with double grave"}}},{"category":"Ll","key":"0207","mappings":{"default":{"default":"e inverted breve"},"mathspeak":{"default":"modifying above e with inverted breve","brief":"mod above e with inverted breve","sbrief":"mod above e with inverted breve"}}},{"category":"Ll","key":"0209","mappings":{"default":{"default":"i double grave"},"mathspeak":{"default":"modifying above i with double grave","brief":"mod above i with double grave","sbrief":"mod above i with double grave"}}},{"category":"Ll","key":"020B","mappings":{"default":{"default":"i inverted breve"},"mathspeak":{"default":"modifying above i with inverted breve","brief":"mod above i with inverted breve","sbrief":"mod above i with inverted breve"}}},{"category":"Ll","key":"020D","mappings":{"default":{"default":"o double grave"},"mathspeak":{"default":"modifying above o with double grave","brief":"mod above o with double grave","sbrief":"mod above o with double grave"}}},{"category":"Ll","key":"020F","mappings":{"default":{"default":"o inverted breve"},"mathspeak":{"default":"modifying above o with inverted breve","brief":"mod above o with inverted breve","sbrief":"mod above o with inverted breve"}}},{"category":"Ll","key":"0211","mappings":{"default":{"default":"r double grave"},"mathspeak":{"default":"modifying above r with double grave","brief":"mod above r with double grave","sbrief":"mod above r with double grave"}}},{"category":"Ll","key":"0213","mappings":{"default":{"default":"r inverted breve"},"mathspeak":{"default":"modifying above r with inverted breve","brief":"mod above r with inverted breve","sbrief":"mod above r with inverted breve"}}},{"category":"Ll","key":"0215","mappings":{"default":{"default":"u double grave"},"mathspeak":{"default":"modifying above u with double grave","brief":"mod above u with double grave","sbrief":"mod above u with double grave"}}},{"category":"Ll","key":"0217","mappings":{"default":{"default":"u inverted breve"},"mathspeak":{"default":"modifying above u with inverted breve","brief":"mod above u with inverted breve","sbrief":"mod above u with inverted breve"}}},{"category":"Ll","key":"0219","mappings":{"default":{"default":"s comma below"},"mathspeak":{"default":"modifying below s with comma below","brief":"mod below s with comma below","sbrief":"mod below s with comma below"}}},{"category":"Ll","key":"021B","mappings":{"default":{"default":"t comma below"},"mathspeak":{"default":"modifying below t with comma below","brief":"mod below t with comma below","sbrief":"mod below t with comma below"}}},{"category":"Ll","key":"021F","mappings":{"default":{"default":"h caron"},"mathspeak":{"default":"modifying above h with caron","brief":"mod above h with caron","sbrief":"mod above h with caron"}}},{"category":"Ll","key":"0227","mappings":{"default":{"default":"a overdot"},"mathspeak":{"default":"modifying above a with dot","brief":"mod above a with dot","sbrief":"mod above a with dot"}}},{"category":"Ll","key":"0229","mappings":{"default":{"default":"e cedilla"},"mathspeak":{"default":"modifying above e with cedilla","brief":"mod above e with cedilla","sbrief":"mod above e with cedilla"}}},{"category":"Ll","key":"022F","mappings":{"default":{"default":"o overdot"},"mathspeak":{"default":"modifying above o with dot","brief":"mod above o with dot","sbrief":"mod above o with dot"}}},{"category":"Ll","key":"0233","mappings":{"default":{"default":"y overbar"},"mathspeak":{"default":"y overbar","brief":"y overbar","sbrief":"y overbar"}}},{"category":"Ll","key":"0237","mappings":{"default":{"default":"dotless j"},"mathspeak":{"default":"modifying above dotless j","brief":"mod above dotless j","sbrief":"mod above dotless j"}}},{"category":"Ll","key":"1E01","mappings":{"default":{"default":"a ring below"},"mathspeak":{"default":"modifying below a with ring below","brief":"mod below a with ring below","sbrief":"mod below a with ring below"}}},{"category":"Ll","key":"1E03","mappings":{"default":{"default":"b overdot"},"mathspeak":{"default":"modifying above b with dot","brief":"mod above b with dot","sbrief":"mod above b with dot"}}},{"category":"Ll","key":"1E05","mappings":{"default":{"default":"b underdot"},"mathspeak":{"default":"modifying below b with dot","brief":"mod below b with dot","sbrief":"mod below b with dot"}}},{"category":"Ll","key":"1E07","mappings":{"default":{"default":"b underbar"},"mathspeak":{"default":"b underbar","brief":"b underbar","sbrief":"b underbar"}}},{"category":"Ll","key":"1E0B","mappings":{"default":{"default":"d overdot"},"mathspeak":{"default":"modifying above d with dot","brief":"mod above d with dot","sbrief":"mod above d with dot"}}},{"category":"Ll","key":"1E0D","mappings":{"default":{"default":"d underdot"},"mathspeak":{"default":"modifying below d with dot","brief":"mod below d with dot","sbrief":"mod below d with dot"}}},{"category":"Ll","key":"1E0F","mappings":{"default":{"default":"d underbar"},"mathspeak":{"default":"d underbar","brief":"d underbar","sbrief":"d underbar"}}},{"category":"Ll","key":"1E11","mappings":{"default":{"default":"d cedilla"},"mathspeak":{"default":"modifying above d with cedilla","brief":"mod above d with cedilla","sbrief":"mod above d with cedilla"}}},{"category":"Ll","key":"1E13","mappings":{"default":{"default":"d underhat"},"mathspeak":{"default":"modifying below d with caret","brief":"mod below d with caret","sbrief":"mod below d with caret"}}},{"category":"Ll","key":"1E19","mappings":{"default":{"default":"e underhat"},"mathspeak":{"default":"modifying below e with caret","brief":"mod below e with caret","sbrief":"mod below e with caret"}}},{"category":"Ll","key":"1E1B","mappings":{"default":{"default":"e tilde below"},"mathspeak":{"default":"e undertilde","brief":"e undertilde","sbrief":"e undertilde"}}},{"category":"Ll","key":"1E1F","mappings":{"default":{"default":"f overdot"},"mathspeak":{"default":"modifying above f with dot","brief":"mod above f with dot","sbrief":"mod above f with dot"}}},{"category":"Ll","key":"1E21","mappings":{"default":{"default":"g overbar"},"mathspeak":{"default":"g overbar","brief":"g overbar","sbrief":"g overbar"}}},{"category":"Ll","key":"1E23","mappings":{"default":{"default":"h overdot"},"mathspeak":{"default":"modifying above h with dot","brief":"mod above h with dot","sbrief":"mod above h with dot"}}},{"category":"Ll","key":"1E25","mappings":{"default":{"default":"h underdot"},"mathspeak":{"default":"modifying below h with dot","brief":"mod below h with dot","sbrief":"mod below h with dot"}}},{"category":"Ll","key":"1E27","mappings":{"default":{"default":"h double overdot"},"mathspeak":{"default":"modifying above h with double dot","brief":"mod above h with double dot","sbrief":"mod above h with double dot"}}},{"category":"Ll","key":"1E29","mappings":{"default":{"default":"h cedilla"},"mathspeak":{"default":"modifying above h with cedilla","brief":"mod above h with cedilla","sbrief":"mod above h with cedilla"}}},{"category":"Ll","key":"1E2B","mappings":{"default":{"default":"h breve below"},"mathspeak":{"default":"modifying below h with breve below","brief":"mod below h with breve below","sbrief":"mod below h with breve below"}}},{"category":"Ll","key":"1E2D","mappings":{"default":{"default":"i tilde below"},"mathspeak":{"default":"i undertilde","brief":"i undertilde","sbrief":"i undertilde"}}},{"category":"Ll","key":"1E31","mappings":{"default":{"default":"k acute"},"mathspeak":{"default":"modifying above k with acute","brief":"mod above k with acute","sbrief":"mod above k with acute"}}},{"category":"Ll","key":"1E33","mappings":{"default":{"default":"k underdot"},"mathspeak":{"default":"modifying below k with dot","brief":"mod below k with dot","sbrief":"mod below k with dot"}}},{"category":"Ll","key":"1E35","mappings":{"default":{"default":"k underbar"},"mathspeak":{"default":"k underbar","brief":"k underbar","sbrief":"k underbar"}}},{"category":"Ll","key":"1E37","mappings":{"default":{"default":"l underdot"},"mathspeak":{"default":"modifying below l with dot","brief":"mod below l with dot","sbrief":"mod below l with dot"}}},{"category":"Ll","key":"1E3B","mappings":{"default":{"default":"l underbar"},"mathspeak":{"default":"l underbar","brief":"l underbar","sbrief":"l underbar"}}},{"category":"Ll","key":"1E3D","mappings":{"default":{"default":"l underhat"},"mathspeak":{"default":"modifying below l with caret","brief":"mod below l with caret","sbrief":"mod below l with caret"}}},{"category":"Ll","key":"1E3F","mappings":{"default":{"default":"m acute"},"mathspeak":{"default":"modifying above m with acute","brief":"mod above m with acute","sbrief":"mod above m with acute"}}},{"category":"Ll","key":"1E41","mappings":{"default":{"default":"m overdot"},"mathspeak":{"default":"modifying above m with dot","brief":"mod above m with dot","sbrief":"mod above m with dot"}}},{"category":"Ll","key":"1E43","mappings":{"default":{"default":"m underdot"},"mathspeak":{"default":"modifying below m with dot","brief":"mod below m with dot","sbrief":"mod below m with dot"}}},{"category":"Ll","key":"1E45","mappings":{"default":{"default":"n overdot"},"mathspeak":{"default":"modifying above n with dot","brief":"mod above n with dot","sbrief":"mod above n with dot"}}},{"category":"Ll","key":"1E47","mappings":{"default":{"default":"n underdot"},"mathspeak":{"default":"modifying below n with dot","brief":"mod below n with dot","sbrief":"mod below n with dot"}}},{"category":"Ll","key":"1E49","mappings":{"default":{"default":"n underbar"},"mathspeak":{"default":"n underbar","brief":"n underbar","sbrief":"n underbar"}}},{"category":"Ll","key":"1E4B","mappings":{"default":{"default":"n underhat"},"mathspeak":{"default":"modifying below n with caret","brief":"mod below n with caret","sbrief":"mod below n with caret"}}},{"category":"Ll","key":"1E55","mappings":{"default":{"default":"p acute"},"mathspeak":{"default":"modifying above p with acute","brief":"mod above p with acute","sbrief":"mod above p with acute"}}},{"category":"Ll","key":"1E57","mappings":{"default":{"default":"p overdot"},"mathspeak":{"default":"modifying above p with dot","brief":"mod above p with dot","sbrief":"mod above p with dot"}}},{"category":"Ll","key":"1E59","mappings":{"default":{"default":"r overdot"},"mathspeak":{"default":"modifying above r with dot","brief":"mod above r with dot","sbrief":"mod above r with dot"}}},{"category":"Ll","key":"1E5B","mappings":{"default":{"default":"r underdot"},"mathspeak":{"default":"modifying below r with dot","brief":"mod below r with dot","sbrief":"mod below r with dot"}}},{"category":"Ll","key":"1E5F","mappings":{"default":{"default":"r underbar"},"mathspeak":{"default":"r underbar","brief":"r underbar","sbrief":"r underbar"}}},{"category":"Ll","key":"1E61","mappings":{"default":{"default":"s overdot"},"mathspeak":{"default":"modifying above s with dot","brief":"mod above s with dot","sbrief":"mod above s with dot"}}},{"category":"Ll","key":"1E63","mappings":{"default":{"default":"s underdot"},"mathspeak":{"default":"modifying below s with dot","brief":"mod below s with dot","sbrief":"mod below s with dot"}}},{"category":"Ll","key":"1E6B","mappings":{"default":{"default":"t overdot"},"mathspeak":{"default":"modifying above t with dot","brief":"mod above t with dot","sbrief":"mod above t with dot"}}},{"category":"Ll","key":"1E6D","mappings":{"default":{"default":"t underdot"},"mathspeak":{"default":"modifying below t with dot","brief":"mod below t with dot","sbrief":"mod below t with dot"}}},{"category":"Ll","key":"1E6F","mappings":{"default":{"default":"t underbar"},"mathspeak":{"default":"t underbar","brief":"t underbar","sbrief":"t underbar"}}},{"category":"Ll","key":"1E71","mappings":{"default":{"default":"t underhat"},"mathspeak":{"default":"modifying below t with caret","brief":"mod below t with caret","sbrief":"mod below t with caret"}}},{"category":"Ll","key":"1E73","mappings":{"default":{"default":"u double underdot"},"mathspeak":{"default":"modifying below u with double dot","brief":"mod below u with double dot","sbrief":"mod below u with double dot"}}},{"category":"Ll","key":"1E75","mappings":{"default":{"default":"u tilde below"},"mathspeak":{"default":"u undertilde","brief":"u undertilde","sbrief":"u undertilde"}}},{"category":"Ll","key":"1E77","mappings":{"default":{"default":"u underhat"},"mathspeak":{"default":"modifying below u with caret","brief":"mod below u with caret","sbrief":"mod below u with caret"}}},{"category":"Ll","key":"1E7D","mappings":{"default":{"default":"v tilde"},"mathspeak":{"default":"v overtilde","brief":"v overtilde","sbrief":"v overtilde"}}},{"category":"Ll","key":"1E7F","mappings":{"default":{"default":"v underdot"},"mathspeak":{"default":"modifying below v with dot","brief":"mod below v with dot","sbrief":"mod below v with dot"}}},{"category":"Ll","key":"1E81","mappings":{"default":{"default":"w grave"},"mathspeak":{"default":"modifying above w with grave","brief":"mod above w with grave","sbrief":"mod above w with grave"}}},{"category":"Ll","key":"1E83","mappings":{"default":{"default":"w acute"},"mathspeak":{"default":"modifying above w with acute","brief":"mod above w with acute","sbrief":"mod above w with acute"}}},{"category":"Ll","key":"1E85","mappings":{"default":{"default":"w double overdot"},"mathspeak":{"default":"modifying above w with double dot","brief":"mod above w with double dot","sbrief":"mod above w with double dot"}}},{"category":"Ll","key":"1E87","mappings":{"default":{"default":"w overdot"},"mathspeak":{"default":"modifying above w with dot","brief":"mod above w with dot","sbrief":"mod above w with dot"}}},{"category":"Ll","key":"1E89","mappings":{"default":{"default":"w underdot"},"mathspeak":{"default":"modifying below w with dot","brief":"mod below w with dot","sbrief":"mod below w with dot"}}},{"category":"Ll","key":"1E8B","mappings":{"default":{"default":"x overdot"},"mathspeak":{"default":"modifying above x with dot","brief":"mod above x with dot","sbrief":"mod above x with dot"}}},{"category":"Ll","key":"1E8D","mappings":{"default":{"default":"x double overdot"},"mathspeak":{"default":"modifying above x with double dot","brief":"mod above x with double dot","sbrief":"mod above x with double dot"}}},{"category":"Ll","key":"1E8F","mappings":{"default":{"default":"y overdot"},"mathspeak":{"default":"modifying above y with dot","brief":"mod above y with dot","sbrief":"mod above y with dot"}}},{"category":"Ll","key":"1E91","mappings":{"default":{"default":"z hat"},"mathspeak":{"default":"modifying above z with caret","brief":"mod above z with caret","sbrief":"mod above z with caret"}}},{"category":"Ll","key":"1E93","mappings":{"default":{"default":"z underdot"},"mathspeak":{"default":"modifying below z with dot","brief":"mod below z with dot","sbrief":"mod below z with dot"}}},{"category":"Ll","key":"1E95","mappings":{"default":{"default":"z underbar"},"mathspeak":{"default":"z underbar","brief":"z underbar","sbrief":"z underbar"}}},{"category":"Ll","key":"1E96","mappings":{"default":{"default":"h underbar"},"mathspeak":{"default":"h underbar","brief":"h underbar","sbrief":"h underbar"}}},{"category":"Ll","key":"1E97","mappings":{"default":{"default":"t double overdot"},"mathspeak":{"default":"modifying above t with double dot","brief":"mod above t with double dot","sbrief":"mod above t with double dot"}}},{"category":"Ll","key":"1E98","mappings":{"default":{"default":"w ring"},"mathspeak":{"default":"modifying above w with ring","brief":"mod above w with ring","sbrief":"mod above w with ring"}}},{"category":"Ll","key":"1E99","mappings":{"default":{"default":"y ring"},"mathspeak":{"default":"modifying above y with ring","brief":"mod above y with ring","sbrief":"mod above y with ring"}}},{"category":"Ll","key":"1E9A","mappings":{"default":{"default":"a right half ring"},"mathspeak":{"default":"modifying above a with right half ring","brief":"mod above a with right half ring","sbrief":"mod above a with right half ring"}}},{"category":"Ll","key":"1EA1","mappings":{"default":{"default":"a underdot"},"mathspeak":{"default":"modifying below a with dot","brief":"mod below a with dot","sbrief":"mod below a with dot"}}},{"category":"Ll","key":"1EA3","mappings":{"default":{"default":"a hook"},"mathspeak":{"default":"modifying above a with hook","brief":"mod above a with hook","sbrief":"mod above a with hook"}}},{"category":"Ll","key":"1EB9","mappings":{"default":{"default":"e underdot"},"mathspeak":{"default":"modifying below e with dot","brief":"mod below e with dot","sbrief":"mod below e with dot"}}},{"category":"Ll","key":"1EBB","mappings":{"default":{"default":"e hook"},"mathspeak":{"default":"modifying above e with hook","brief":"mod above e with hook","sbrief":"mod above e with hook"}}},{"category":"Ll","key":"1EBD","mappings":{"default":{"default":"e tilde"},"mathspeak":{"default":"e overtilde","brief":"e overtilde","sbrief":"e overtilde"}}},{"category":"Ll","key":"1EC9","mappings":{"default":{"default":"i hook"},"mathspeak":{"default":"modifying above i with hook","brief":"mod above i with hook","sbrief":"mod above i with hook"}}},{"category":"Ll","key":"1ECB","mappings":{"default":{"default":"i underdot"},"mathspeak":{"default":"modifying below i with dot","brief":"mod below i with dot","sbrief":"mod below i with dot"}}},{"category":"Ll","key":"1ECD","mappings":{"default":{"default":"o underdot"},"mathspeak":{"default":"modifying below o with dot","brief":"mod below o with dot","sbrief":"mod below o with dot"}}},{"category":"Ll","key":"1ECF","mappings":{"default":{"default":"o hook"},"mathspeak":{"default":"modifying above o with hook","brief":"mod above o with hook","sbrief":"mod above o with hook"}}},{"category":"Ll","key":"1EE5","mappings":{"default":{"default":"u underdot"},"mathspeak":{"default":"modifying below u with dot","brief":"mod below u with dot","sbrief":"mod below u with dot"}}},{"category":"Ll","key":"1EE7","mappings":{"default":{"default":"u hook"},"mathspeak":{"default":"modifying above u with hook","brief":"mod above u with hook","sbrief":"mod above u with hook"}}},{"category":"Ll","key":"1EF3","mappings":{"default":{"default":"y grave"},"mathspeak":{"default":"modifying above y with grave","brief":"mod above y with grave","sbrief":"mod above y with grave"}}},{"category":"Ll","key":"1EF5","mappings":{"default":{"default":"y underdot"},"mathspeak":{"default":"modifying below y with dot","brief":"mod below y with dot","sbrief":"mod below y with dot"}}},{"category":"Ll","key":"1EF7","mappings":{"default":{"default":"y hook"},"mathspeak":{"default":"modifying above y with hook","brief":"mod above y with hook","sbrief":"mod above y with hook"}}},{"category":"Ll","key":"1EF9","mappings":{"default":{"default":"y tilde"},"mathspeak":{"default":"y overtilde","brief":"y overtilde","sbrief":"y overtilde"}}}],"en/symbols/latin-rest.min":[{"locale":"en"},{"category":"Ll","mappings":{"default":{"default":"italic h","physics":"planck constant"}},"key":"210E"},{"category":"Mn","key":"0363","mappings":{"default":{"default":"combining a"}}},{"category":"Mn","key":"0364","mappings":{"default":{"default":"combining e"}}},{"category":"Mn","key":"0365","mappings":{"default":{"default":"combining i"}}},{"category":"Mn","key":"0366","mappings":{"default":{"default":"combining o"}}},{"category":"Mn","key":"0367","mappings":{"default":{"default":"combining u"}}},{"category":"Mn","key":"0368","mappings":{"default":{"default":"combining c"}}},{"category":"Mn","key":"0369","mappings":{"default":{"default":"combining d"}}},{"category":"Mn","key":"036A","mappings":{"default":{"default":"combining h"}}},{"category":"Mn","key":"036B","mappings":{"default":{"default":"combining m"}}},{"category":"Mn","key":"036C","mappings":{"default":{"default":"combining r"}}},{"category":"Mn","key":"036D","mappings":{"default":{"default":"combining t"}}},{"category":"Mn","key":"036E","mappings":{"default":{"default":"combining v"}}},{"category":"Mn","key":"036F","mappings":{"default":{"default":"combining x"}}},{"category":"Lm","key":"1D62","mappings":{"default":{"default":"subscript i"}}},{"category":"Lm","key":"1D63","mappings":{"default":{"default":"subscript r"}}},{"category":"Lm","key":"1D64","mappings":{"default":{"default":"subscript u"}}},{"category":"Lm","key":"1D65","mappings":{"default":{"default":"subscript v"}}},{"category":"Mn","key":"1DCA","mappings":{"default":{"default":"combining r below"}}},{"category":"Mn","key":"1DD3","mappings":{"default":{"default":"combining flattened open a above"}}},{"category":"Mn","key":"1DD4","mappings":{"default":{"default":"combining ae"}}},{"category":"Mn","key":"1DD5","mappings":{"default":{"default":"combining ao"}}},{"category":"Mn","key":"1DD6","mappings":{"default":{"default":"combining av"}}},{"category":"Mn","key":"1DD7","mappings":{"default":{"default":"combining c cedilla"}}},{"category":"Mn","key":"1DD8","mappings":{"default":{"default":"combining insular d"}}},{"category":"Mn","key":"1DD9","mappings":{"default":{"default":"combining eth"}}},{"category":"Mn","key":"1DDA","mappings":{"default":{"default":"combining g"}}},{"category":"Mn","key":"1DDB","mappings":{"default":{"default":"combining small cap G"},"mathspeak":{"default":"combining small upper G"}}},{"category":"Mn","key":"1DDC","mappings":{"default":{"default":"combining k"}}},{"category":"Mn","key":"1DDD","mappings":{"default":{"default":"combining l"}}},{"category":"Mn","key":"1DDE","mappings":{"default":{"default":"combining small cap L"},"mathspeak":{"default":"combining small upper L"}}},{"category":"Mn","key":"1DDF","mappings":{"default":{"default":"combining small cap M"},"mathspeak":{"default":"combining small upper M"}}},{"category":"Mn","key":"1DE0","mappings":{"default":{"default":"combining n"}}},{"category":"Mn","key":"1DE1","mappings":{"default":{"default":"combining small cap N"},"mathspeak":{"default":"combining small upper N"}}},{"category":"Mn","key":"1DE2","mappings":{"default":{"default":"combining small cap R"},"mathspeak":{"default":"combining small upper R"}}},{"category":"Mn","key":"1DE3","mappings":{"default":{"default":"combining r rotunda"}}},{"category":"Mn","key":"1DE4","mappings":{"default":{"default":"combining s"}}},{"category":"Mn","key":"1DE5","mappings":{"default":{"default":"combining long s"}}},{"category":"Mn","key":"1DE6","mappings":{"default":{"default":"combining z"}}},{"category":"Lm","key":"2071","mappings":{"default":{"default":"superscript i"}}},{"category":"Lm","key":"207F","mappings":{"default":{"default":"superscript n"}}},{"category":"Lm","key":"2090","mappings":{"default":{"default":"subscript a"}}},{"category":"Lm","key":"2091","mappings":{"default":{"default":"subscript e"}}},{"category":"Lm","key":"2092","mappings":{"default":{"default":"subscript o"}}},{"category":"Lm","key":"2093","mappings":{"default":{"default":"subscript x"}}},{"category":"Lm","key":"2094","mappings":{"default":{"default":"subscript schwa"}}},{"category":"Lm","key":"2095","mappings":{"default":{"default":"subscript h"}}},{"category":"Lm","key":"2096","mappings":{"default":{"default":"subscript k"}}},{"category":"Lm","key":"2097","mappings":{"default":{"default":"subscript l"}}},{"category":"Lm","key":"2098","mappings":{"default":{"default":"subscript m"}}},{"category":"Lm","key":"2099","mappings":{"default":{"default":"subscript n"}}},{"category":"Lm","key":"209A","mappings":{"default":{"default":"subscript p"}}},{"category":"Lm","key":"209B","mappings":{"default":{"default":"subscript s"}}},{"category":"Lm","key":"209C","mappings":{"default":{"default":"subscript t"}}},{"category":"Lm","key":"2C7C","mappings":{"default":{"default":"subscript j"}}},{"category":"So","key":"1F12A","mappings":{"default":{"default":"tortoise shell bracketed cap S"},"mathspeak":{"default":"tortoise shell bracketed upper S"}}},{"category":"So","key":"1F12B","mappings":{"default":{"default":"circled italic cap C"},"mathspeak":{"default":"circled italic upper C"}}},{"category":"So","key":"1F12C","mappings":{"default":{"default":"circled italic cap R"},"mathspeak":{"default":"circled italic upper R"}}},{"category":"So","key":"1F18A","mappings":{"default":{"default":"crossed negative squared cap P"},"mathspeak":{"default":"crossed negative squared upper P"}}}],"en/symbols/latin-upper-double-accent.min":[{"locale":"en"},{"category":"Lu","key":"01D5","mappings":{"default":{"default":"cap U double overdot overbar"},"mathspeak":{"default":"upper U double overdot overbar"}}},{"category":"Lu","key":"01D7","mappings":{"default":{"default":"cap U double overdot acute"},"mathspeak":{"default":"upper U double overdot acute"}}},{"category":"Lu","key":"01D9","mappings":{"default":{"default":"cap U double overdot caron"},"mathspeak":{"default":"upper U double overdot caron"}}},{"category":"Lu","key":"01DB","mappings":{"default":{"default":"cap U double overdot grave"},"mathspeak":{"default":"upper U double overdot grave"}}},{"category":"Lu","key":"01DE","mappings":{"default":{"default":"cap A double overdot overbar"},"mathspeak":{"default":"upper A double overdot overbar"}}},{"category":"Lu","key":"01E0","mappings":{"default":{"default":"cap A overdot overbar"},"mathspeak":{"default":"upper A overdot overbar"}}},{"category":"Lu","key":"01EC","mappings":{"default":{"default":"cap O ogonek overbar"},"mathspeak":{"default":"upper O ogonek overbar"}}},{"category":"Lu","key":"01FA","mappings":{"default":{"default":"cap A ring acute"},"mathspeak":{"default":"upper A ring acute"}}},{"category":"Lu","key":"022A","mappings":{"default":{"default":"cap O double overdot overbar"},"mathspeak":{"default":"upper O double overdot overbar"}}},{"category":"Lu","key":"022C","mappings":{"default":{"default":"cap O tilde overbar"},"mathspeak":{"default":"upper O tilde overbar"}}},{"category":"Lu","key":"0230","mappings":{"default":{"default":"cap O overdot overbar"},"mathspeak":{"default":"upper O overdot overbar"}}},{"category":"Lu","key":"1E08","mappings":{"default":{"default":"cap C cedilla acute"},"mathspeak":{"default":"upper C cedilla acute"}}},{"category":"Lu","key":"1E14","mappings":{"default":{"default":"cap E overbar grave"},"mathspeak":{"default":"upper E overbar grave"}}},{"category":"Lu","key":"1E16","mappings":{"default":{"default":"cap E overbar acute"},"mathspeak":{"default":"upper E overbar acute"}}},{"category":"Lu","key":"1E1C","mappings":{"default":{"default":"cap E cedilla breve"},"mathspeak":{"default":"upper E cedilla breve"}}},{"category":"Lu","key":"1E2E","mappings":{"default":{"default":"cap I double overdot acute"},"mathspeak":{"default":"upper I double overdot acute"}}},{"category":"Lu","key":"1E38","mappings":{"default":{"default":"cap L underdot overbar"},"mathspeak":{"default":"upper L underdot overbar"}}},{"category":"Lu","key":"1E4C","mappings":{"default":{"default":"cap O tilde acute"},"mathspeak":{"default":"upper O tilde acute"}}},{"category":"Lu","key":"1E4E","mappings":{"default":{"default":"cap O tilde double overdot"},"mathspeak":{"default":"upper O tilde double overdot"}}},{"category":"Lu","key":"1E50","mappings":{"default":{"default":"cap O overbar grave"},"mathspeak":{"default":"upper O overbar grave"}}},{"category":"Lu","key":"1E52","mappings":{"default":{"default":"cap O overbar acute"},"mathspeak":{"default":"upper O overbar acute"}}},{"category":"Lu","key":"1E5C","mappings":{"default":{"default":"cap R overbar underdot"},"mathspeak":{"default":"upper R overbar underdot"}}},{"category":"Lu","key":"1E64","mappings":{"default":{"default":"cap S acute overdot"},"mathspeak":{"default":"upper S acute overdot"}}},{"category":"Lu","key":"1E66","mappings":{"default":{"default":"cap S caron overdot"},"mathspeak":{"default":"upper S caron overdot"}}},{"category":"Lu","key":"1E68","mappings":{"default":{"default":"cap S underdot overdot"},"mathspeak":{"default":"upper S underdot overdot"}}},{"category":"Lu","key":"1E78","mappings":{"default":{"default":"cap U tilde acute"},"mathspeak":{"default":"upper U tilde acute"}}},{"category":"Lu","key":"1E7A","mappings":{"default":{"default":"cap U overbar double overdot"},"mathspeak":{"default":"upper U overbar double overdot"}}},{"category":"Lu","key":"1EA4","mappings":{"default":{"default":"cap A hat acute"},"mathspeak":{"default":"upper A hat acute"}}},{"category":"Lu","key":"1EA6","mappings":{"default":{"default":"cap A hat grave"},"mathspeak":{"default":"upper A hat grave"}}},{"category":"Lu","key":"1EA8","mappings":{"default":{"default":"cap A hat hook"},"mathspeak":{"default":"upper A hat hook"}}},{"category":"Lu","key":"1EAA","mappings":{"default":{"default":"cap A hat tilde"},"mathspeak":{"default":"upper A hat tilde"}}},{"category":"Lu","key":"1EAC","mappings":{"default":{"default":"cap A hat underdot"},"mathspeak":{"default":"upper A hat underdot"}}},{"category":"Lu","key":"1EAE","mappings":{"default":{"default":"cap A breve acute"},"mathspeak":{"default":"upper A breve acute"}}},{"category":"Lu","key":"1EB0","mappings":{"default":{"default":"cap A breve grave"},"mathspeak":{"default":"upper A breve grave"}}},{"category":"Lu","key":"1EB2","mappings":{"default":{"default":"cap A breve hook"},"mathspeak":{"default":"upper A breve hook"}}},{"category":"Lu","key":"1EB4","mappings":{"default":{"default":"cap A breve tilde"},"mathspeak":{"default":"upper A breve tilde"}}},{"category":"Lu","key":"1EB6","mappings":{"default":{"default":"cap A breve underdot"},"mathspeak":{"default":"upper A breve underdot"}}},{"category":"Lu","key":"1EBE","mappings":{"default":{"default":"cap E hat acute"},"mathspeak":{"default":"upper E hat acute"}}},{"category":"Lu","key":"1EC0","mappings":{"default":{"default":"cap E hat grave"},"mathspeak":{"default":"upper E hat grave"}}},{"category":"Lu","key":"1EC2","mappings":{"default":{"default":"cap E hat hook"},"mathspeak":{"default":"upper E hat hook"}}},{"category":"Lu","key":"1EC4","mappings":{"default":{"default":"cap E hat tilde"},"mathspeak":{"default":"upper E hat tilde"}}},{"category":"Lu","key":"1EC6","mappings":{"default":{"default":"cap E hat underdot"},"mathspeak":{"default":"upper E hat underdot"}}},{"category":"Lu","key":"1ED0","mappings":{"default":{"default":"cap O hat acute"},"mathspeak":{"default":"upper O hat acute"}}},{"category":"Lu","key":"1ED2","mappings":{"default":{"default":"cap O hat grave"},"mathspeak":{"default":"upper O hat grave"}}},{"category":"Lu","key":"1ED4","mappings":{"default":{"default":"cap O hat hook"},"mathspeak":{"default":"upper O hat hook"}}},{"category":"Lu","key":"1ED6","mappings":{"default":{"default":"cap O hat tilde"},"mathspeak":{"default":"upper O hat tilde"}}},{"category":"Lu","key":"1ED8","mappings":{"default":{"default":"cap O hat underdot"},"mathspeak":{"default":"upper O hat underdot"}}},{"category":"Lu","key":"1EDA","mappings":{"default":{"default":"cap O acute prime"},"mathspeak":{"default":"upper O acute prime"}}},{"category":"Lu","key":"1EDC","mappings":{"default":{"default":"cap O grave prime"},"mathspeak":{"default":"upper O grave prime"}}},{"category":"Lu","key":"1EDE","mappings":{"default":{"default":"cap O hook prime"},"mathspeak":{"default":"upper O hook prime"}}},{"category":"Lu","key":"1EE0","mappings":{"default":{"default":"cap O tilde prime"},"mathspeak":{"default":"upper O tilde prime"}}},{"category":"Lu","key":"1EE2","mappings":{"default":{"default":"cap O underdot prime"},"mathspeak":{"default":"upper O underdot prime"}}},{"category":"Lu","key":"1EE8","mappings":{"default":{"default":"cap U acute prime"},"mathspeak":{"default":"upper U acute prime"}}},{"category":"Lu","key":"1EEA","mappings":{"default":{"default":"cap U grave prime"},"mathspeak":{"default":"upper U grave prime"}}},{"category":"Lu","key":"1EEC","mappings":{"default":{"default":"cap U hook prime"},"mathspeak":{"default":"upper U hook prime"}}},{"category":"Lu","key":"1EEE","mappings":{"default":{"default":"cap U tilde prime"},"mathspeak":{"default":"upper U tilde prime"}}},{"category":"Lu","key":"1EF0","mappings":{"default":{"default":"cap U underdot prime"},"mathspeak":{"default":"upper U underdot prime"}}}],"en/symbols/latin-upper-single-accent.min":[{"locale":"en"},{"category":"Lu","key":"00C0","mappings":{"default":{"default":"cap A grave"},"mathspeak":{"default":"modifying above upper A with grave","brief":"mod above upper A with grave","sbrief":"mod above upper A with grave"}}},{"category":"Lu","key":"00C1","mappings":{"default":{"default":"cap A acute"},"mathspeak":{"default":"modifying above upper A with acute","brief":"mod above upper A with acute","sbrief":"mod above upper A with acute"}}},{"category":"Lu","key":"00C2","mappings":{"default":{"default":"cap A hat"},"mathspeak":{"default":"modifying above upper A with caret","brief":"mod above upper A with caret","sbrief":"mod above upper A with caret"}}},{"category":"Lu","key":"00C3","mappings":{"default":{"default":"cap A tilde"},"mathspeak":{"default":"upper A overtilde","brief":"upper A overtilde","sbrief":"upper A overtilde"}}},{"category":"Lu","key":"00C4","mappings":{"default":{"default":"cap A double overdot"},"mathspeak":{"default":"modifying above upper A with double dot","brief":"mod above upper A with double dot","sbrief":"mod above upper A with double dot"}}},{"category":"Lu","key":"00C5","mappings":{"default":{"default":"cap A ring"},"mathspeak":{"default":"modifying above upper A with ring","brief":"mod above upper A with ring","sbrief":"mod above upper A with ring"}}},{"category":"Lu","key":"00C7","mappings":{"default":{"default":"cap C cedilla"},"mathspeak":{"default":"modifying above upper C with cedilla","brief":"mod above upper C with cedilla","sbrief":"mod above upper C with cedilla"}}},{"category":"Lu","key":"00C8","mappings":{"default":{"default":"cap E grave"},"mathspeak":{"default":"modifying above upper E with grave","brief":"mod above upper E with grave","sbrief":"mod above upper E with grave"}}},{"category":"Lu","key":"00C9","mappings":{"default":{"default":"cap E acute"},"mathspeak":{"default":"modifying above upper E with acute","brief":"mod above upper E with acute","sbrief":"mod above upper E with acute"}}},{"category":"Lu","key":"00CA","mappings":{"default":{"default":"cap E hat"},"mathspeak":{"default":"modifying above upper E with caret","brief":"mod above upper E with caret","sbrief":"mod above upper E with caret"}}},{"category":"Lu","key":"00CB","mappings":{"default":{"default":"cap E double overdot"},"mathspeak":{"default":"modifying above upper E with double dot","brief":"mod above upper E with double dot","sbrief":"mod above upper E with double dot"}}},{"category":"Lu","key":"00CC","mappings":{"default":{"default":"cap I grave"},"mathspeak":{"default":"modifying above upper I with grave","brief":"mod above upper I with grave","sbrief":"mod above upper I with grave"}}},{"category":"Lu","key":"00CD","mappings":{"default":{"default":"cap I acute"},"mathspeak":{"default":"modifying above upper I with acute","brief":"mod above upper I with acute","sbrief":"mod above upper I with acute"}}},{"category":"Lu","key":"00CE","mappings":{"default":{"default":"cap I hat"},"mathspeak":{"default":"modifying above upper I with caret","brief":"mod above upper I with caret","sbrief":"mod above upper I with caret"}}},{"category":"Lu","key":"00CF","mappings":{"default":{"default":"cap I double overdot"},"mathspeak":{"default":"modifying above upper I with double dot","brief":"mod above upper I with double dot","sbrief":"mod above upper I with double dot"}}},{"category":"Lu","key":"00D1","mappings":{"default":{"default":"cap N tilde"},"mathspeak":{"default":"upper N overtilde","brief":"upper N overtilde","sbrief":"upper N overtilde"}}},{"category":"Lu","key":"00D2","mappings":{"default":{"default":"cap O grave"},"mathspeak":{"default":"modifying above upper O with grave","brief":"mod above upper O with grave","sbrief":"mod above upper O with grave"}}},{"category":"Lu","key":"00D3","mappings":{"default":{"default":"cap O acute"},"mathspeak":{"default":"modifying above upper O with acute","brief":"mod above upper O with acute","sbrief":"mod above upper O with acute"}}},{"category":"Lu","key":"00D4","mappings":{"default":{"default":"cap O hat"},"mathspeak":{"default":"modifying above upper O with caret","brief":"mod above upper O with caret","sbrief":"mod above upper O with caret"}}},{"category":"Lu","key":"00D5","mappings":{"default":{"default":"cap O tilde"},"mathspeak":{"default":"upper O overtilde","brief":"upper O overtilde","sbrief":"upper O overtilde"}}},{"category":"Lu","key":"00D6","mappings":{"default":{"default":"cap O double overdot"},"mathspeak":{"default":"modifying above upper O with double dot","brief":"mod above upper O with double dot","sbrief":"mod above upper O with double dot"}}},{"category":"Lu","key":"00D9","mappings":{"default":{"default":"cap U grave"},"mathspeak":{"default":"modifying above upper U with grave","brief":"mod above upper U with grave","sbrief":"mod above upper U with grave"}}},{"category":"Lu","key":"00DA","mappings":{"default":{"default":"cap U acute"},"mathspeak":{"default":"modifying above upper U with acute","brief":"mod above upper U with acute","sbrief":"mod above upper U with acute"}}},{"category":"Lu","key":"00DB","mappings":{"default":{"default":"cap U hat"},"mathspeak":{"default":"modifying above upper U with caret","brief":"mod above upper U with caret","sbrief":"mod above upper U with caret"}}},{"category":"Lu","key":"00DC","mappings":{"default":{"default":"cap U double overdot"},"mathspeak":{"default":"modifying above upper U with double dot","brief":"mod above upper U with double dot","sbrief":"mod above upper U with double dot"}}},{"category":"Lu","key":"00DD","mappings":{"default":{"default":"cap Y acute"},"mathspeak":{"default":"modifying above upper Y with acute","brief":"mod above upper Y with acute","sbrief":"mod above upper Y with acute"}}},{"category":"Lu","key":"0100","mappings":{"default":{"default":"cap A overbar"},"mathspeak":{"default":"upper A overbar","brief":"upper A overbar","sbrief":"upper A overbar"}}},{"category":"Lu","key":"0102","mappings":{"default":{"default":"cap A breve"},"mathspeak":{"default":"modifying above upper A with breve","brief":"mod above upper A with breve","sbrief":"mod above upper A with breve"}}},{"category":"Lu","key":"0104","mappings":{"default":{"default":"cap A ogonek"},"mathspeak":{"default":"modifying above upper A with ogonek","brief":"mod above upper A with ogonek","sbrief":"mod above upper A with ogonek"}}},{"category":"Lu","key":"0106","mappings":{"default":{"default":"cap C acute"},"mathspeak":{"default":"modifying above upper C with acute","brief":"mod above upper C with acute","sbrief":"mod above upper C with acute"}}},{"category":"Lu","key":"0108","mappings":{"default":{"default":"cap C hat"},"mathspeak":{"default":"modifying above upper C with caret","brief":"mod above upper C with caret","sbrief":"mod above upper C with caret"}}},{"category":"Lu","key":"010A","mappings":{"default":{"default":"cap C overdot"},"mathspeak":{"default":"modifying above upper C with dot","brief":"mod above upper C with dot","sbrief":"mod above upper C with dot"}}},{"category":"Lu","key":"010C","mappings":{"default":{"default":"cap C caron"},"mathspeak":{"default":"modifying above upper C with caron","brief":"mod above upper C with caron","sbrief":"mod above upper C with caron"}}},{"category":"Lu","key":"010E","mappings":{"default":{"default":"cap D caron"},"mathspeak":{"default":"modifying above upper D with caron","brief":"mod above upper D with caron","sbrief":"mod above upper D with caron"}}},{"category":"Lu","key":"0112","mappings":{"default":{"default":"cap E overbar"},"mathspeak":{"default":"upper E overbar","brief":"upper E overbar","sbrief":"upper E overbar"}}},{"category":"Lu","key":"0114","mappings":{"default":{"default":"cap E breve"},"mathspeak":{"default":"modifying above upper E with breve","brief":"mod above upper E with breve","sbrief":"mod above upper E with breve"}}},{"category":"Lu","key":"0116","mappings":{"default":{"default":"cap E overdot"},"mathspeak":{"default":"modifying above upper E with dot","brief":"mod above upper E with dot","sbrief":"mod above upper E with dot"}}},{"category":"Lu","key":"0118","mappings":{"default":{"default":"cap E ogonek"},"mathspeak":{"default":"modifying above upper E with ogonek","brief":"mod above upper E with ogonek","sbrief":"mod above upper E with ogonek"}}},{"category":"Lu","key":"011A","mappings":{"default":{"default":"cap E caron"},"mathspeak":{"default":"modifying above upper E with caron","brief":"mod above upper E with caron","sbrief":"mod above upper E with caron"}}},{"category":"Lu","key":"011C","mappings":{"default":{"default":"cap G hat"},"mathspeak":{"default":"modifying above upper G with caret","brief":"mod above upper G with caret","sbrief":"mod above upper G with caret"}}},{"category":"Lu","key":"011E","mappings":{"default":{"default":"cap G breve"},"mathspeak":{"default":"modifying above upper G with breve","brief":"mod above upper G with breve","sbrief":"mod above upper G with breve"}}},{"category":"Lu","key":"0120","mappings":{"default":{"default":"cap G overdot"},"mathspeak":{"default":"modifying above upper G with dot","brief":"mod above upper G with dot","sbrief":"mod above upper G with dot"}}},{"category":"Lu","key":"0122","mappings":{"default":{"default":"cap G cedilla"},"mathspeak":{"default":"modifying above upper G with cedilla","brief":"mod above upper G with cedilla","sbrief":"mod above upper G with cedilla"}}},{"category":"Lu","key":"0124","mappings":{"default":{"default":"cap H hat"},"mathspeak":{"default":"modifying above upper H with caret","brief":"mod above upper H with caret","sbrief":"mod above upper H with caret"}}},{"category":"Lu","key":"0128","mappings":{"default":{"default":"cap I tilde"},"mathspeak":{"default":"upper I overtilde","brief":"upper I overtilde","sbrief":"upper I overtilde"}}},{"category":"Lu","key":"012A","mappings":{"default":{"default":"cap I overbar"},"mathspeak":{"default":"upper I overbar","brief":"upper I overbar","sbrief":"upper I overbar"}}},{"category":"Lu","key":"012C","mappings":{"default":{"default":"cap I breve"},"mathspeak":{"default":"modifying above upper I with breve","brief":"mod above upper I with breve","sbrief":"mod above upper I with breve"}}},{"category":"Lu","key":"012E","mappings":{"default":{"default":"cap I ogonek"},"mathspeak":{"default":"modifying above upper I with ogonek","brief":"mod above upper I with ogonek","sbrief":"mod above upper I with ogonek"}}},{"category":"Lu","key":"0130","mappings":{"default":{"default":"cap I overdot"},"mathspeak":{"default":"modifying above upper I with dot","brief":"mod above upper I with dot","sbrief":"mod above upper I with dot"}}},{"category":"Lu","key":"0134","mappings":{"default":{"default":"cap J hat"},"mathspeak":{"default":"modifying above upper J with caret","brief":"mod above upper J with caret","sbrief":"mod above upper J with caret"}}},{"category":"Lu","key":"0136","mappings":{"default":{"default":"cap K cedilla"},"mathspeak":{"default":"modifying above upper K with cedilla","brief":"mod above upper K with cedilla","sbrief":"mod above upper K with cedilla"}}},{"category":"Lu","key":"0139","mappings":{"default":{"default":"cap L acute"},"mathspeak":{"default":"modifying above upper L with acute","brief":"mod above upper L with acute","sbrief":"mod above upper L with acute"}}},{"category":"Lu","key":"013B","mappings":{"default":{"default":"cap L cedilla"},"mathspeak":{"default":"modifying above upper L with cedilla","brief":"mod above upper L with cedilla","sbrief":"mod above upper L with cedilla"}}},{"category":"Lu","key":"013D","mappings":{"default":{"default":"cap L caron"},"mathspeak":{"default":"modifying above upper L with caron","brief":"mod above upper L with caron","sbrief":"mod above upper L with caron"}}},{"category":"Lu","key":"013F","mappings":{"default":{"default":"cap L middle dot"},"mathspeak":{"default":"modifying above upper L with middle dot","brief":"mod above upper L with middle dot","sbrief":"mod above upper L with middle dot"}}},{"category":"Lu","key":"0143","mappings":{"default":{"default":"cap N acute"},"mathspeak":{"default":"modifying above upper N with acute","brief":"mod above upper N with acute","sbrief":"mod above upper N with acute"}}},{"category":"Lu","key":"0145","mappings":{"default":{"default":"cap N cedilla"},"mathspeak":{"default":"modifying above upper N with cedilla","brief":"mod above upper N with cedilla","sbrief":"mod above upper N with cedilla"}}},{"category":"Lu","key":"0147","mappings":{"default":{"default":"cap N caron"},"mathspeak":{"default":"modifying above upper N with caron","brief":"mod above upper N with caron","sbrief":"mod above upper N with caron"}}},{"category":"Lu","key":"014C","mappings":{"default":{"default":"cap O overbar"},"mathspeak":{"default":"upper O overbar","brief":"upper O overbar","sbrief":"upper O overbar"}}},{"category":"Lu","key":"014E","mappings":{"default":{"default":"cap O breve"},"mathspeak":{"default":"modifying above upper O with breve","brief":"mod above upper O with breve","sbrief":"mod above upper O with breve"}}},{"category":"Lu","key":"0150","mappings":{"default":{"default":"cap O double acute"},"mathspeak":{"default":"modifying above upper O with double acute","brief":"mod above upper O with double acute","sbrief":"mod above upper O with double acute"}}},{"category":"Lu","key":"0154","mappings":{"default":{"default":"cap R acute"},"mathspeak":{"default":"modifying above upper R with acute","brief":"mod above upper R with acute","sbrief":"mod above upper R with acute"}}},{"category":"Lu","key":"0156","mappings":{"default":{"default":"cap R cedilla"},"mathspeak":{"default":"modifying above upper R with cedilla","brief":"mod above upper R with cedilla","sbrief":"mod above upper R with cedilla"}}},{"category":"Lu","key":"0158","mappings":{"default":{"default":"cap R caron"},"mathspeak":{"default":"modifying above upper R with caron","brief":"mod above upper R with caron","sbrief":"mod above upper R with caron"}}},{"category":"Lu","key":"015A","mappings":{"default":{"default":"cap S acute"},"mathspeak":{"default":"modifying above upper S with acute","brief":"mod above upper S with acute","sbrief":"mod above upper S with acute"}}},{"category":"Lu","key":"015C","mappings":{"default":{"default":"cap S hat"},"mathspeak":{"default":"modifying above upper S with caret","brief":"mod above upper S with caret","sbrief":"mod above upper S with caret"}}},{"category":"Lu","key":"015E","mappings":{"default":{"default":"cap S cedilla"},"mathspeak":{"default":"modifying above upper S with cedilla","brief":"mod above upper S with cedilla","sbrief":"mod above upper S with cedilla"}}},{"category":"Lu","key":"0160","mappings":{"default":{"default":"cap S caron"},"mathspeak":{"default":"modifying above upper S with caron","brief":"mod above upper S with caron","sbrief":"mod above upper S with caron"}}},{"category":"Lu","key":"0162","mappings":{"default":{"default":"cap T cedilla"},"mathspeak":{"default":"modifying above upper T with cedilla","brief":"mod above upper T with cedilla","sbrief":"mod above upper T with cedilla"}}},{"category":"Lu","key":"0164","mappings":{"default":{"default":"cap T caron"},"mathspeak":{"default":"modifying above upper T with caron","brief":"mod above upper T with caron","sbrief":"mod above upper T with caron"}}},{"category":"Lu","key":"0168","mappings":{"default":{"default":"cap U tilde"},"mathspeak":{"default":"upper U overtilde","brief":"upper U overtilde","sbrief":"upper U overtilde"}}},{"category":"Lu","key":"016A","mappings":{"default":{"default":"cap U overbar"},"mathspeak":{"default":"upper U overbar","brief":"upper U overbar","sbrief":"upper U overbar"}}},{"category":"Lu","key":"016C","mappings":{"default":{"default":"cap U breve"},"mathspeak":{"default":"modifying above upper U with breve","brief":"mod above upper U with breve","sbrief":"mod above upper U with breve"}}},{"category":"Lu","key":"016E","mappings":{"default":{"default":"cap U ring"},"mathspeak":{"default":"modifying above upper U with ring","brief":"mod above upper U with ring","sbrief":"mod above upper U with ring"}}},{"category":"Lu","key":"0170","mappings":{"default":{"default":"cap U double acute"},"mathspeak":{"default":"modifying above upper U with double acute","brief":"mod above upper U with double acute","sbrief":"mod above upper U with double acute"}}},{"category":"Lu","key":"0172","mappings":{"default":{"default":"cap U ogonek"},"mathspeak":{"default":"modifying above upper U with ogonek","brief":"mod above upper U with ogonek","sbrief":"mod above upper U with ogonek"}}},{"category":"Lu","key":"0174","mappings":{"default":{"default":"cap W hat"},"mathspeak":{"default":"modifying above upper W with caret","brief":"mod above upper W with caret","sbrief":"mod above upper W with caret"}}},{"category":"Lu","key":"0176","mappings":{"default":{"default":"cap Y hat"},"mathspeak":{"default":"modifying above upper Y with caret","brief":"mod above upper Y with caret","sbrief":"mod above upper Y with caret"}}},{"category":"Lu","key":"0178","mappings":{"default":{"default":"cap Y double overdot"},"mathspeak":{"default":"modifying above upper Y with double dot","brief":"mod above upper Y with double dot","sbrief":"mod above upper Y with double dot"}}},{"category":"Lu","key":"0179","mappings":{"default":{"default":"cap Z acute"},"mathspeak":{"default":"modifying above upper Z with acute","brief":"mod above upper Z with acute","sbrief":"mod above upper Z with acute"}}},{"category":"Lu","key":"017B","mappings":{"default":{"default":"cap Z overdot"},"mathspeak":{"default":"modifying above upper Z with dot","brief":"mod above upper Z with dot","sbrief":"mod above upper Z with dot"}}},{"category":"Lu","key":"017D","mappings":{"default":{"default":"cap Z caron"},"mathspeak":{"default":"modifying above upper Z with caron","brief":"mod above upper Z with caron","sbrief":"mod above upper Z with caron"}}},{"category":"Lu","key":"01CD","mappings":{"default":{"default":"cap A caron"},"mathspeak":{"default":"modifying above upper A with caron","brief":"mod above upper A with caron","sbrief":"mod above upper A with caron"}}},{"category":"Lu","key":"01CF","mappings":{"default":{"default":"cap I caron"},"mathspeak":{"default":"modifying above upper I with caron","brief":"mod above upper I with caron","sbrief":"mod above upper I with caron"}}},{"category":"Lu","key":"01D1","mappings":{"default":{"default":"cap O caron"},"mathspeak":{"default":"modifying above upper O with caron","brief":"mod above upper O with caron","sbrief":"mod above upper O with caron"}}},{"category":"Lu","key":"01D3","mappings":{"default":{"default":"cap U caron"},"mathspeak":{"default":"modifying above upper U with caron","brief":"mod above upper U with caron","sbrief":"mod above upper U with caron"}}},{"category":"Lu","key":"01E6","mappings":{"default":{"default":"cap G caron"},"mathspeak":{"default":"modifying above upper G with caron","brief":"mod above upper G with caron","sbrief":"mod above upper G with caron"}}},{"category":"Lu","key":"01E8","mappings":{"default":{"default":"cap K caron"},"mathspeak":{"default":"modifying above upper K with caron","brief":"mod above upper K with caron","sbrief":"mod above upper K with caron"}}},{"category":"Lu","key":"01EA","mappings":{"default":{"default":"cap O ogonek"},"mathspeak":{"default":"modifying above upper O with ogonek","brief":"mod above upper O with ogonek","sbrief":"mod above upper O with ogonek"}}},{"category":"Lu","key":"01F4","mappings":{"default":{"default":"cap G acute"},"mathspeak":{"default":"modifying above upper G with acute","brief":"mod above upper G with acute","sbrief":"mod above upper G with acute"}}},{"category":"Lu","key":"01F8","mappings":{"default":{"default":"cap N grave"},"mathspeak":{"default":"modifying above upper N with grave","brief":"mod above upper N with grave","sbrief":"mod above upper N with grave"}}},{"category":"Lu","key":"0200","mappings":{"default":{"default":"cap A double grave"},"mathspeak":{"default":"modifying above upper A with double grave","brief":"mod above upper A with double grave","sbrief":"mod above upper A with double grave"}}},{"category":"Lu","key":"0202","mappings":{"default":{"default":"cap A inverted breve"},"mathspeak":{"default":"modifying above upper A with inverted breve","brief":"mod above upper A with inverted breve","sbrief":"mod above upper A with inverted breve"}}},{"category":"Lu","key":"0204","mappings":{"default":{"default":"cap E double grave"},"mathspeak":{"default":"modifying above upper E with double grave","brief":"mod above upper E with double grave","sbrief":"mod above upper E with double grave"}}},{"category":"Lu","key":"0206","mappings":{"default":{"default":"cap E inverted breve"},"mathspeak":{"default":"modifying above upper E with inverted breve","brief":"mod above upper E with inverted breve","sbrief":"mod above upper E with inverted breve"}}},{"category":"Lu","key":"0208","mappings":{"default":{"default":"cap I double grave"},"mathspeak":{"default":"modifying above upper I with double grave","brief":"mod above upper I with double grave","sbrief":"mod above upper I with double grave"}}},{"category":"Lu","key":"020A","mappings":{"default":{"default":"cap I inverted breve"},"mathspeak":{"default":"modifying above upper I with inverted breve","brief":"mod above upper I with inverted breve","sbrief":"mod above upper I with inverted breve"}}},{"category":"Lu","key":"020C","mappings":{"default":{"default":"cap O double grave"},"mathspeak":{"default":"modifying above upper O with double grave","brief":"mod above upper O with double grave","sbrief":"mod above upper O with double grave"}}},{"category":"Lu","key":"020E","mappings":{"default":{"default":"cap O inverted breve"},"mathspeak":{"default":"modifying above upper O with inverted breve","brief":"mod above upper O with inverted breve","sbrief":"mod above upper O with inverted breve"}}},{"category":"Lu","key":"0210","mappings":{"default":{"default":"cap R double grave"},"mathspeak":{"default":"modifying above upper R with double grave","brief":"mod above upper R with double grave","sbrief":"mod above upper R with double grave"}}},{"category":"Lu","key":"0212","mappings":{"default":{"default":"cap R inverted breve"},"mathspeak":{"default":"modifying above upper R with inverted breve","brief":"mod above upper R with inverted breve","sbrief":"mod above upper R with inverted breve"}}},{"category":"Lu","key":"0214","mappings":{"default":{"default":"cap U double grave"},"mathspeak":{"default":"modifying above upper U with double grave","brief":"mod above upper U with double grave","sbrief":"mod above upper U with double grave"}}},{"category":"Lu","key":"0216","mappings":{"default":{"default":"cap U inverted breve"},"mathspeak":{"default":"modifying above upper U with inverted breve","brief":"mod above upper U with inverted breve","sbrief":"mod above upper U with inverted breve"}}},{"category":"Lu","key":"0218","mappings":{"default":{"default":"cap S comma below"},"mathspeak":{"default":"modifying below upper S with comma below","brief":"mod below upper S with comma below","sbrief":"mod below upper S with comma below"}}},{"category":"Lu","key":"021A","mappings":{"default":{"default":"cap T comma below"},"mathspeak":{"default":"modifying below upper T with comma below","brief":"mod below upper T with comma below","sbrief":"mod below upper T with comma below"}}},{"category":"Lu","key":"021E","mappings":{"default":{"default":"cap H caron"},"mathspeak":{"default":"modifying above upper H with caron","brief":"mod above upper H with caron","sbrief":"mod above upper H with caron"}}},{"category":"Lu","key":"0226","mappings":{"default":{"default":"cap A overdot"},"mathspeak":{"default":"modifying above upper A with dot","brief":"mod above upper A with dot","sbrief":"mod above upper A with dot"}}},{"category":"Lu","key":"0228","mappings":{"default":{"default":"cap E cedilla"},"mathspeak":{"default":"modifying above upper E with cedilla","brief":"mod above upper E with cedilla","sbrief":"mod above upper E with cedilla"}}},{"category":"Lu","key":"022E","mappings":{"default":{"default":"cap O overdot"},"mathspeak":{"default":"modifying above upper O with dot","brief":"mod above upper O with dot","sbrief":"mod above upper O with dot"}}},{"category":"Lu","key":"0232","mappings":{"default":{"default":"cap Y overbar"},"mathspeak":{"default":"upper Y overbar","brief":"upper Y overbar","sbrief":"upper Y overbar"}}},{"category":"Lu","key":"1E00","mappings":{"default":{"default":"cap A ring below"},"mathspeak":{"default":"modifying below upper A with ring below","brief":"mod below upper A with ring below","sbrief":"mod below upper A with ring below"}}},{"category":"Lu","key":"1E02","mappings":{"default":{"default":"cap B overdot"},"mathspeak":{"default":"modifying above upper B with dot","brief":"mod above upper B with dot","sbrief":"mod above upper B with dot"}}},{"category":"Lu","key":"1E04","mappings":{"default":{"default":"cap B underdot"},"mathspeak":{"default":"modifying below upper B with dot","brief":"mod below upper B with dot","sbrief":"mod below upper B with dot"}}},{"category":"Lu","key":"1E06","mappings":{"default":{"default":"cap B underbar"},"mathspeak":{"default":"upper B underbar","brief":"upper B underbar","sbrief":"upper B underbar"}}},{"category":"Lu","key":"1E0A","mappings":{"default":{"default":"cap D overdot"},"mathspeak":{"default":"modifying above upper D with dot","brief":"mod above upper D with dot","sbrief":"mod above upper D with dot"}}},{"category":"Lu","key":"1E0C","mappings":{"default":{"default":"cap D underdot"},"mathspeak":{"default":"modifying below upper D with dot","brief":"mod below upper D with dot","sbrief":"mod below upper D with dot"}}},{"category":"Lu","key":"1E0E","mappings":{"default":{"default":"cap D underbar"},"mathspeak":{"default":"upper D underbar","brief":"upper D underbar","sbrief":"upper D underbar"}}},{"category":"Lu","key":"1E10","mappings":{"default":{"default":"cap D cedilla"},"mathspeak":{"default":"modifying above upper D with cedilla","brief":"mod above upper D with cedilla","sbrief":"mod above upper D with cedilla"}}},{"category":"Lu","key":"1E12","mappings":{"default":{"default":"cap D underhat"},"mathspeak":{"default":"modifying below upper D with caret","brief":"mod below upper D with caret","sbrief":"mod below upper D with caret"}}},{"category":"Lu","key":"1E18","mappings":{"default":{"default":"cap E underhat"},"mathspeak":{"default":"modifying below upper E with caret","brief":"mod below upper E with caret","sbrief":"mod below upper E with caret"}}},{"category":"Lu","key":"1E1A","mappings":{"default":{"default":"cap E tilde below"},"mathspeak":{"default":"upper E undertilde","brief":"upper E undertilde","sbrief":"upper E undertilde"}}},{"category":"Lu","key":"1E1E","mappings":{"default":{"default":"cap F overdot"},"mathspeak":{"default":"modifying above upper F with dot","brief":"mod above upper F with dot","sbrief":"mod above upper F with dot"}}},{"category":"Lu","key":"1E20","mappings":{"default":{"default":"cap G overbar"},"mathspeak":{"default":"upper G overbar","brief":"upper G overbar","sbrief":"upper G overbar"}}},{"category":"Lu","key":"1E22","mappings":{"default":{"default":"cap H overdot"},"mathspeak":{"default":"modifying above upper H with dot","brief":"mod above upper H with dot","sbrief":"mod above upper H with dot"}}},{"category":"Lu","key":"1E24","mappings":{"default":{"default":"cap H underdot"},"mathspeak":{"default":"modifying below upper H with dot","brief":"mod below upper H with dot","sbrief":"mod below upper H with dot"}}},{"category":"Lu","key":"1E26","mappings":{"default":{"default":"cap H double overdot"},"mathspeak":{"default":"modifying above upper H with double dot","brief":"mod above upper H with double dot","sbrief":"mod above upper H with double dot"}}},{"category":"Lu","key":"1E28","mappings":{"default":{"default":"cap H cedilla"},"mathspeak":{"default":"modifying above upper H with cedilla","brief":"mod above upper H with cedilla","sbrief":"mod above upper H with cedilla"}}},{"category":"Lu","key":"1E2A","mappings":{"default":{"default":"cap H breve below"},"mathspeak":{"default":"modifying below upper H with breve below","brief":"mod below upper H with breve below","sbrief":"mod below upper H with breve below"}}},{"category":"Lu","key":"1E2C","mappings":{"default":{"default":"cap I tilde below"},"mathspeak":{"default":"upper I undertilde","brief":"upper I undertilde","sbrief":"upper I undertilde"}}},{"category":"Lu","key":"1E30","mappings":{"default":{"default":"cap K acute"},"mathspeak":{"default":"modifying above upper K with acute","brief":"mod above upper K with acute","sbrief":"mod above upper K with acute"}}},{"category":"Lu","key":"1E32","mappings":{"default":{"default":"cap K underdot"},"mathspeak":{"default":"modifying below upper K with dot","brief":"mod below upper K with dot","sbrief":"mod below upper K with dot"}}},{"category":"Lu","key":"1E34","mappings":{"default":{"default":"cap K underbar"},"mathspeak":{"default":"upper K underbar","brief":"upper K underbar","sbrief":"upper K underbar"}}},{"category":"Lu","key":"1E36","mappings":{"default":{"default":"cap L underdot"},"mathspeak":{"default":"modifying below upper L with dot","brief":"mod below upper L with dot","sbrief":"mod below upper L with dot"}}},{"category":"Lu","key":"1E3A","mappings":{"default":{"default":"cap L underbar"},"mathspeak":{"default":"upper L underbar","brief":"upper L underbar","sbrief":"upper L underbar"}}},{"category":"Lu","key":"1E3C","mappings":{"default":{"default":"cap L underhat"},"mathspeak":{"default":"modifying below upper L with caret","brief":"mod below upper L with caret","sbrief":"mod below upper L with caret"}}},{"category":"Lu","key":"1E3E","mappings":{"default":{"default":"cap M acute"},"mathspeak":{"default":"modifying above upper M with acute","brief":"mod above upper M with acute","sbrief":"mod above upper M with acute"}}},{"category":"Lu","key":"1E40","mappings":{"default":{"default":"cap M overdot"},"mathspeak":{"default":"modifying above upper M with dot","brief":"mod above upper M with dot","sbrief":"mod above upper M with dot"}}},{"category":"Lu","key":"1E42","mappings":{"default":{"default":"cap M underdot"},"mathspeak":{"default":"modifying below upper M with dot","brief":"mod below upper M with dot","sbrief":"mod below upper M with dot"}}},{"category":"Lu","key":"1E44","mappings":{"default":{"default":"cap N overdot"},"mathspeak":{"default":"modifying above upper N with dot","brief":"mod above upper N with dot","sbrief":"mod above upper N with dot"}}},{"category":"Lu","key":"1E46","mappings":{"default":{"default":"cap N underdot"},"mathspeak":{"default":"modifying below upper N with dot","brief":"mod below upper N with dot","sbrief":"mod below upper N with dot"}}},{"category":"Lu","key":"1E48","mappings":{"default":{"default":"cap N underbar"},"mathspeak":{"default":"upper N underbar","brief":"upper N underbar","sbrief":"upper N underbar"}}},{"category":"Lu","key":"1E4A","mappings":{"default":{"default":"cap N underhat"},"mathspeak":{"default":"modifying below upper N with caret","brief":"mod below upper N with caret","sbrief":"mod below upper N with caret"}}},{"category":"Lu","key":"1E54","mappings":{"default":{"default":"cap P acute"},"mathspeak":{"default":"modifying above upper P with acute","brief":"mod above upper P with acute","sbrief":"mod above upper P with acute"}}},{"category":"Lu","key":"1E56","mappings":{"default":{"default":"cap P overdot"},"mathspeak":{"default":"modifying above upper P with dot","brief":"mod above upper P with dot","sbrief":"mod above upper P with dot"}}},{"category":"Lu","key":"1E58","mappings":{"default":{"default":"cap R overdot"},"mathspeak":{"default":"modifying above upper R with dot","brief":"mod above upper R with dot","sbrief":"mod above upper R with dot"}}},{"category":"Lu","key":"1E5A","mappings":{"default":{"default":"cap R underdot"},"mathspeak":{"default":"modifying below upper R with dot","brief":"mod below upper R with dot","sbrief":"mod below upper R with dot"}}},{"category":"Lu","key":"1E5E","mappings":{"default":{"default":"cap R underbar"},"mathspeak":{"default":"upper R underbar","brief":"upper R underbar","sbrief":"upper R underbar"}}},{"category":"Lu","key":"1E60","mappings":{"default":{"default":"cap S overdot"},"mathspeak":{"default":"modifying above upper S with dot","brief":"mod above upper S with dot","sbrief":"mod above upper S with dot"}}},{"category":"Lu","key":"1E62","mappings":{"default":{"default":"cap S underdot"},"mathspeak":{"default":"modifying below upper S with dot","brief":"mod below upper S with dot","sbrief":"mod below upper S with dot"}}},{"category":"Lu","key":"1E6A","mappings":{"default":{"default":"cap T overdot"},"mathspeak":{"default":"modifying above upper T with dot","brief":"mod above upper T with dot","sbrief":"mod above upper T with dot"}}},{"category":"Lu","key":"1E6C","mappings":{"default":{"default":"cap T underdot"},"mathspeak":{"default":"modifying below upper T with dot","brief":"mod below upper T with dot","sbrief":"mod below upper T with dot"}}},{"category":"Lu","key":"1E6E","mappings":{"default":{"default":"cap T underbar"},"mathspeak":{"default":"upper T underbar","brief":"upper T underbar","sbrief":"upper T underbar"}}},{"category":"Lu","key":"1E70","mappings":{"default":{"default":"cap T underhat"},"mathspeak":{"default":"modifying below upper T with caret","brief":"mod below upper T with caret","sbrief":"mod below upper T with caret"}}},{"category":"Lu","key":"1E72","mappings":{"default":{"default":"cap U double underdot"},"mathspeak":{"default":"modifying below upper U with double dot","brief":"mod below upper U with double dot","sbrief":"mod below upper U with double dot"}}},{"category":"Lu","key":"1E74","mappings":{"default":{"default":"cap U tilde below"},"mathspeak":{"default":"upper U undertilde","brief":"upper U undertilde","sbrief":"upper U undertilde"}}},{"category":"Lu","key":"1E76","mappings":{"default":{"default":"cap U underhat"},"mathspeak":{"default":"modifying below upper U with caret","brief":"mod below upper U with caret","sbrief":"mod below upper U with caret"}}},{"category":"Lu","key":"1E7C","mappings":{"default":{"default":"cap V tilde"},"mathspeak":{"default":"upper V overtilde","brief":"upper V overtilde","sbrief":"upper V overtilde"}}},{"category":"Lu","key":"1E7E","mappings":{"default":{"default":"cap V underdot"},"mathspeak":{"default":"modifying below upper V with dot","brief":"mod below upper V with dot","sbrief":"mod below upper V with dot"}}},{"category":"Lu","key":"1E80","mappings":{"default":{"default":"cap W grave"},"mathspeak":{"default":"modifying above upper W with grave","brief":"mod above upper W with grave","sbrief":"mod above upper W with grave"}}},{"category":"Lu","key":"1E82","mappings":{"default":{"default":"cap W acute"},"mathspeak":{"default":"modifying above upper W with acute","brief":"mod above upper W with acute","sbrief":"mod above upper W with acute"}}},{"category":"Lu","key":"1E84","mappings":{"default":{"default":"cap W double overdot"},"mathspeak":{"default":"modifying above upper W with double dot","brief":"mod above upper W with double dot","sbrief":"mod above upper W with double dot"}}},{"category":"Lu","key":"1E86","mappings":{"default":{"default":"cap W overdot"},"mathspeak":{"default":"modifying above upper W with dot","brief":"mod above upper W with dot","sbrief":"mod above upper W with dot"}}},{"category":"Lu","key":"1E88","mappings":{"default":{"default":"cap W underdot"},"mathspeak":{"default":"modifying below upper W with dot","brief":"mod below upper W with dot","sbrief":"mod below upper W with dot"}}},{"category":"Lu","key":"1E8A","mappings":{"default":{"default":"cap X overdot"},"mathspeak":{"default":"modifying above upper X with dot","brief":"mod above upper X with dot","sbrief":"mod above upper X with dot"}}},{"category":"Lu","key":"1E8C","mappings":{"default":{"default":"cap X double overdot"},"mathspeak":{"default":"modifying above upper X with double dot","brief":"mod above upper X with double dot","sbrief":"mod above upper X with double dot"}}},{"category":"Lu","key":"1E8E","mappings":{"default":{"default":"cap Y overdot"},"mathspeak":{"default":"modifying above upper Y with dot","brief":"mod above upper Y with dot","sbrief":"mod above upper Y with dot"}}},{"category":"Lu","key":"1E90","mappings":{"default":{"default":"cap Z circumflex"},"mathspeak":{"default":"modifying above upper Z with circumflex","brief":"mod above upper Z with circumflex","sbrief":"mod above upper Z with circumflex"}}},{"category":"Lu","key":"1E92","mappings":{"default":{"default":"cap Z underdot"},"mathspeak":{"default":"modifying below upper Z with dot","brief":"mod below upper Z with dot","sbrief":"mod below upper Z with dot"}}},{"category":"Lu","key":"1E94","mappings":{"default":{"default":"cap Z underbar"},"mathspeak":{"default":"upper Z underbar","brief":"upper Z underbar","sbrief":"upper Z underbar"}}},{"category":"Lu","key":"1EA0","mappings":{"default":{"default":"cap A underdot"},"mathspeak":{"default":"modifying below upper A with dot","brief":"mod below upper A with dot","sbrief":"mod below upper A with dot"}}},{"category":"Lu","key":"1EA2","mappings":{"default":{"default":"cap A hook"},"mathspeak":{"default":"modifying above upper A with hook","brief":"mod above upper A with hook","sbrief":"mod above upper A with hook"}}},{"category":"Lu","key":"1EB8","mappings":{"default":{"default":"cap E underdot"},"mathspeak":{"default":"modifying below upper E with dot","brief":"mod below upper E with dot","sbrief":"mod below upper E with dot"}}},{"category":"Lu","key":"1EBA","mappings":{"default":{"default":"cap E hook"},"mathspeak":{"default":"modifying above upper E with hook","brief":"mod above upper E with hook","sbrief":"mod above upper E with hook"}}},{"category":"Lu","key":"1EBC","mappings":{"default":{"default":"cap E tilde"},"mathspeak":{"default":"upper E overtilde","brief":"upper E overtilde","sbrief":"upper E overtilde"}}},{"category":"Lu","key":"1EC8","mappings":{"default":{"default":"cap I hook"},"mathspeak":{"default":"modifying above upper I with hook","brief":"mod above upper I with hook","sbrief":"mod above upper I with hook"}}},{"category":"Lu","key":"1ECA","mappings":{"default":{"default":"cap I underdot"},"mathspeak":{"default":"modifying below upper I with dot","brief":"mod below upper I with dot","sbrief":"mod below upper I with dot"}}},{"category":"Lu","key":"1ECC","mappings":{"default":{"default":"cap O underdot"},"mathspeak":{"default":"modifying below upper O with dot","brief":"mod below upper O with dot","sbrief":"mod below upper O with dot"}}},{"category":"Lu","key":"1ECE","mappings":{"default":{"default":"cap O hook"},"mathspeak":{"default":"modifying above upper O with hook","brief":"mod above upper O with hook","sbrief":"mod above upper O with hook"}}},{"category":"Lu","key":"1EE4","mappings":{"default":{"default":"cap U underdot"},"mathspeak":{"default":"modifying below upper U with dot","brief":"mod below upper U with dot","sbrief":"mod below upper U with dot"}}},{"category":"Lu","key":"1EE6","mappings":{"default":{"default":"cap U hook"},"mathspeak":{"default":"modifying above upper U with hook","brief":"mod above upper U with hook","sbrief":"mod above upper U with hook"}}},{"category":"Lu","key":"1EF2","mappings":{"default":{"default":"cap Y grave"},"mathspeak":{"default":"modifying above upper Y with grave","brief":"mod above upper Y with grave","sbrief":"mod above upper Y with grave"}}},{"category":"Lu","key":"1EF4","mappings":{"default":{"default":"cap Y underdot"},"mathspeak":{"default":"modifying below upper Y with dot","brief":"mod below upper Y with dot","sbrief":"mod below upper Y with dot"}}},{"category":"Lu","key":"1EF6","mappings":{"default":{"default":"cap Y hook"},"mathspeak":{"default":"modifying above upper Y with hook","brief":"mod above upper Y with hook","sbrief":"mod above upper Y with hook"}}},{"category":"Lu","key":"1EF8","mappings":{"default":{"default":"cap Y tilde"},"mathspeak":{"default":"upper Y overtilde","brief":"upper Y overtilde","sbrief":"upper Y overtilde"}}}],"en/symbols/math_angles.min":[{"locale":"en"},{"category":"Sm","mappings":{"default":{"default":"right angle with arc"}},"key":"22BE"},{"category":"Sm","mappings":{"default":{"default":"right angle with downwards zigzag arrow"}},"key":"237C"},{"category":"Sm","mappings":{"default":{"default":"three dimensional angle"}},"key":"27C0"},{"category":"Sm","mappings":{"default":{"default":"measured angle opening left"}},"key":"299B"},{"category":"Sm","mappings":{"default":{"default":"right angle variant with square"}},"key":"299C"},{"category":"Sm","mappings":{"default":{"default":"measured right angle with dot"}},"key":"299D"},{"category":"Sm","mappings":{"default":{"default":"angle with s inside"}},"key":"299E"},{"category":"Sm","mappings":{"default":{"default":"acute angle"}},"key":"299F"},{"category":"Sm","mappings":{"default":{"default":"spherical angle opening left"}},"key":"29A0"},{"category":"Sm","mappings":{"default":{"default":"spherical angle opening up"}},"key":"29A1"},{"category":"Sm","mappings":{"default":{"default":"turned angle"}},"key":"29A2"},{"category":"Sm","mappings":{"default":{"default":"reversed angle"}},"key":"29A3"},{"category":"Sm","mappings":{"default":{"default":"angle with underbar"}},"key":"29A4"},{"category":"Sm","mappings":{"default":{"default":"reversed angle with underbar"}},"key":"29A5"},{"category":"Sm","mappings":{"default":{"default":"oblique angle opening up"}},"key":"29A6"},{"category":"Sm","mappings":{"default":{"default":"oblique angle opening down"}},"key":"29A7"},{"category":"Sm","mappings":{"default":{"default":"measured angle with open arm ending in arrow pointing up and right"}},"key":"29A8"},{"category":"Sm","mappings":{"default":{"default":"measured angle with open arm ending in arrow pointing up and left"}},"key":"29A9"},{"category":"Sm","mappings":{"default":{"default":"measured angle with open arm ending in arrow pointing down and right"}},"key":"29AA"},{"category":"Sm","mappings":{"default":{"default":"measured angle with open arm ending in arrow pointing down and left"}},"key":"29AB"},{"category":"Sm","mappings":{"default":{"default":"measured angle with open arm ending in arrow pointing right and up"}},"key":"29AC"},{"category":"Sm","mappings":{"default":{"default":"measured angle with open arm ending in arrow pointing left and up"}},"key":"29AD"},{"category":"Sm","mappings":{"default":{"default":"measured angle with open arm ending in arrow pointing right and down"}},"key":"29AE"},{"category":"Sm","mappings":{"default":{"default":"measured angle with open arm ending in arrow pointing left and down"}},"key":"29AF"}],"en/symbols/math_arrows.min":[{"locale":"en"},{"category":"Sm","mappings":{"default":{"default":"left arrow"},"mathspeak":{"sbrief":"L arrow"}},"key":"2190"},{"category":"Sm","mappings":{"default":{"default":"up arrow"},"mathspeak":{"sbrief":"U arrow"}},"key":"2191"},{"category":"Sm","mappings":{"default":{"default":"right arrow"},"mathspeak":{"sbrief":"R arrow"}},"key":"2192"},{"category":"Sm","mappings":{"default":{"default":"down arrow"},"mathspeak":{"sbrief":"D arrow"}},"key":"2193"},{"category":"Sm","mappings":{"default":{"default":"left right arrow"},"mathspeak":{"sbrief":"L R arrow"}},"key":"2194"},{"category":"So","mappings":{"default":{"default":"up down arrow"},"mathspeak":{"sbrief":"U D arrow"}},"key":"2195"},{"category":"So","mappings":{"default":{"default":"up left arrow"},"mathspeak":{"sbrief":"U L arrow"}},"key":"2196"},{"category":"So","mappings":{"default":{"default":"up right arrow"},"mathspeak":{"sbrief":"U R arrow"}},"key":"2197"},{"category":"So","mappings":{"default":{"default":"down right arrow"},"mathspeak":{"sbrief":"D R arrow"}},"key":"2198"},{"category":"So","mappings":{"default":{"default":"down left arrow"},"mathspeak":{"sbrief":"D L arrow"}},"key":"2199"},{"category":"Sm","mappings":{"default":{"default":"left arrow with stroke"},"mathspeak":{"sbrief":"L arrow with stroke"}},"key":"219A"},{"category":"Sm","mappings":{"default":{"default":"right arrow with stroke"},"mathspeak":{"sbrief":"R arrow with stroke"}},"key":"219B"},{"category":"So","mappings":{"default":{"default":"left wave arrow"},"mathspeak":{"sbrief":"L wave arrow"}},"key":"219C"},{"category":"So","mappings":{"default":{"default":"right wave arrow"},"mathspeak":{"sbrief":"R wave arrow"}},"key":"219D"},{"category":"So","mappings":{"default":{"default":"two headed left arrow"},"mathspeak":{"sbrief":"two headed L arrow"}},"key":"219E"},{"category":"So","mappings":{"default":{"default":"two headed up arrow"},"mathspeak":{"sbrief":"two headed U arrow"}},"key":"219F"},{"category":"Sm","mappings":{"default":{"default":"two headed right arrow"},"mathspeak":{"sbrief":"two headed R arrow"}},"key":"21A0"},{"category":"So","mappings":{"default":{"default":"two headed down arrow"},"mathspeak":{"sbrief":"two headed D arrow"}},"key":"21A1"},{"category":"So","mappings":{"default":{"default":"left arrow with tail"},"mathspeak":{"sbrief":"L arrow with tail"}},"key":"21A2"},{"category":"Sm","mappings":{"default":{"default":"right arrow with tail"},"mathspeak":{"sbrief":"R arrow with tail"}},"key":"21A3"},{"category":"So","mappings":{"default":{"default":"left arrow from bar"},"mathspeak":{"sbrief":"L arrow from bar"}},"key":"21A4"},{"category":"So","mappings":{"default":{"default":"up arrow from bar"},"mathspeak":{"sbrief":"U arrow from bar"}},"key":"21A5"},{"category":"Sm","mappings":{"default":{"default":"right arrow from bar"},"mathspeak":{"sbrief":"R arrow from bar"}},"key":"21A6"},{"category":"So","mappings":{"default":{"default":"down arrow from bar"},"mathspeak":{"sbrief":"D arrow from bar"}},"key":"21A7"},{"category":"So","mappings":{"default":{"default":"up down arrow with base"},"mathspeak":{"sbrief":"U D arrow with base"}},"key":"21A8"},{"category":"So","mappings":{"default":{"default":"left arrow with hook"},"mathspeak":{"sbrief":"L arrow with hook"}},"key":"21A9"},{"category":"So","mappings":{"default":{"default":"right arrow with hook"},"mathspeak":{"sbrief":"R arrow with hook"}},"key":"21AA"},{"category":"So","mappings":{"default":{"default":"left arrow with loop"},"mathspeak":{"sbrief":"L arrow with loop"}},"key":"21AB"},{"category":"So","mappings":{"default":{"default":"right arrow with loop"},"mathspeak":{"sbrief":"R arrow with loop"}},"key":"21AC"},{"category":"So","mappings":{"default":{"default":"left right wave arrow"},"mathspeak":{"sbrief":"L R wave arrow"}},"key":"21AD"},{"category":"Sm","mappings":{"default":{"default":"left right arrow with stroke"},"mathspeak":{"sbrief":"L R arrow with stroke"}},"key":"21AE"},{"category":"So","mappings":{"default":{"default":"down zigzag arrow"},"mathspeak":{"sbrief":"D zigzag arrow"}},"key":"21AF"},{"category":"So","mappings":{"default":{"default":"up arrow with tip left"},"mathspeak":{"sbrief":"U arrow with tip left"}},"key":"21B0"},{"category":"So","mappings":{"default":{"default":"up arrow with tip right"},"mathspeak":{"sbrief":"U arrow with tip right"}},"key":"21B1"},{"category":"So","mappings":{"default":{"default":"down arrow with tip left"},"mathspeak":{"sbrief":"D arrow with tip left"}},"key":"21B2"},{"category":"So","mappings":{"default":{"default":"down arrow with tip right"},"mathspeak":{"sbrief":"D arrow with tip right"}},"key":"21B3"},{"category":"So","mappings":{"default":{"default":"right arrow with corner down"},"mathspeak":{"sbrief":"R arrow with corner down"}},"key":"21B4"},{"category":"So","mappings":{"default":{"default":"down arrow with corner left"},"mathspeak":{"sbrief":"D arrow with corner left"}},"key":"21B5"},{"category":"So","mappings":{"default":{"default":"anticlockwise top semicircle arrow"}},"key":"21B6"},{"category":"So","mappings":{"default":{"default":"clockwise top semicircle arrow"}},"key":"21B7"},{"category":"So","mappings":{"default":{"default":"up left arrow to long bar"},"mathspeak":{"sbrief":"U L arrow to long bar"}},"key":"21B8"},{"category":"So","mappings":{"default":{"default":"left arrow to bar over right arrow to bar"},"mathspeak":{"sbrief":"L arrow to bar over R arrow to bar"}},"key":"21B9"},{"category":"So","mappings":{"default":{"default":"anticlockwise open circle arrow"}},"key":"21BA"},{"category":"So","mappings":{"default":{"default":"clockwise open circle arrow"}},"key":"21BB"},{"category":"So","mappings":{"default":{"default":"right arrow over left arrow"},"mathspeak":{"sbrief":"R arrow over L arrow"}},"key":"21C4"},{"category":"So","mappings":{"default":{"default":"up arrow left of down arrow"},"mathspeak":{"sbrief":"U arrow L of D arrow"}},"key":"21C5"},{"category":"So","mappings":{"default":{"default":"left arrow over right arrow"},"mathspeak":{"sbrief":"L arrow over R arrow"}},"key":"21C6"},{"category":"So","mappings":{"default":{"default":"left paired arrows"},"mathspeak":{"sbrief":"L paired arrows"}},"key":"21C7"},{"category":"So","mappings":{"default":{"default":"up paired arrows"},"mathspeak":{"sbrief":"U paired arrows"}},"key":"21C8"},{"category":"So","mappings":{"default":{"default":"right paired arrows"},"mathspeak":{"sbrief":"R paired arrows"}},"key":"21C9"},{"category":"So","mappings":{"default":{"default":"down paired arrows"},"mathspeak":{"sbrief":"D paired arrows"}},"key":"21CA"},{"category":"So","mappings":{"default":{"default":"left double arrow with stroke"},"mathspeak":{"sbrief":"L double arrow with stroke"}},"key":"21CD"},{"category":"Sm","mappings":{"default":{"default":"left right double arrow with stroke"},"mathspeak":{"sbrief":"L R double arrow with stroke"}},"key":"21CE"},{"category":"Sm","mappings":{"default":{"default":"right double arrow with stroke"},"mathspeak":{"sbrief":"R double arrow with stroke"}},"key":"21CF"},{"category":"So","mappings":{"default":{"default":"left double arrow"},"mathspeak":{"sbrief":"L double arrow"}},"key":"21D0"},{"category":"So","mappings":{"default":{"default":"up double arrow"},"mathspeak":{"sbrief":"U double arrow"}},"key":"21D1"},{"category":"Sm","mappings":{"default":{"default":"right double arrow"},"mathspeak":{"sbrief":"R double arrow"}},"key":"21D2"},{"category":"So","mappings":{"default":{"default":"down double arrow"},"mathspeak":{"sbrief":"D double arrow"}},"key":"21D3"},{"category":"Sm","mappings":{"default":{"default":"left right double arrow"},"mathspeak":{"sbrief":"L R double arrow"}},"key":"21D4"},{"category":"So","mappings":{"default":{"default":"up down double arrow"},"mathspeak":{"sbrief":"U D double arrow"}},"key":"21D5"},{"category":"So","mappings":{"default":{"default":"up left double arrow"},"mathspeak":{"sbrief":"U L double arrow"}},"key":"21D6"},{"category":"So","mappings":{"default":{"default":"up right double arrow"},"mathspeak":{"sbrief":"U R double arrow"}},"key":"21D7"},{"category":"So","mappings":{"default":{"default":"down right double arrow"},"mathspeak":{"sbrief":"D R double arrow"}},"key":"21D8"},{"category":"So","mappings":{"default":{"default":"down left double arrow"},"mathspeak":{"sbrief":"D L double arrow"}},"key":"21D9"},{"category":"So","mappings":{"default":{"default":"left triple arrow"},"mathspeak":{"sbrief":"L triple arrow"}},"key":"21DA"},{"category":"So","mappings":{"default":{"default":"right triple arrow"},"mathspeak":{"sbrief":"R triple arrow"}},"key":"21DB"},{"category":"So","mappings":{"default":{"default":"left squiggle arrow"},"mathspeak":{"sbrief":"L squiggle arrow"}},"key":"21DC"},{"category":"So","mappings":{"default":{"default":"right squiggle arrow"},"mathspeak":{"sbrief":"R squiggle arrow"}},"key":"21DD"},{"category":"So","mappings":{"default":{"default":"up arrow with double stroke"},"mathspeak":{"sbrief":"U arrow with double stroke"}},"key":"21DE"},{"category":"So","mappings":{"default":{"default":"down arrow with double stroke"},"mathspeak":{"sbrief":"D arrow with double stroke"}},"key":"21DF"},{"category":"So","mappings":{"default":{"default":"left dashed arrow"},"mathspeak":{"sbrief":"L dashed arrow"}},"key":"21E0"},{"category":"So","mappings":{"default":{"default":"up dashed arrow"},"mathspeak":{"sbrief":"U dashed arrow"}},"key":"21E1"},{"category":"So","mappings":{"default":{"default":"right dashed arrow"},"mathspeak":{"sbrief":"R dashed arrow"}},"key":"21E2"},{"category":"So","mappings":{"default":{"default":"down dashed arrow"},"mathspeak":{"sbrief":"D dashed arrow"}},"key":"21E3"},{"category":"So","mappings":{"default":{"default":"left arrow to bar"},"mathspeak":{"sbrief":"L arrow to bar"}},"key":"21E4"},{"category":"So","mappings":{"default":{"default":"right arrow to bar"},"mathspeak":{"sbrief":"R arrow to bar"}},"key":"21E5"},{"category":"So","mappings":{"default":{"default":"white left arrow"},"mathspeak":{"sbrief":"white L arrow"}},"key":"21E6"},{"category":"So","mappings":{"default":{"default":"white up arrow"},"mathspeak":{"sbrief":"white U arrow"}},"key":"21E7"},{"category":"So","mappings":{"default":{"default":"white right arrow"},"mathspeak":{"sbrief":"white R arrow"}},"key":"21E8"},{"category":"So","mappings":{"default":{"default":"white down arrow"},"mathspeak":{"sbrief":"white D arrow"}},"key":"21E9"},{"category":"So","mappings":{"default":{"default":"white up arrow from bar"},"mathspeak":{"sbrief":"white U arrow from bar"}},"key":"21EA"},{"category":"So","mappings":{"default":{"default":"white up arrow on pedestal"},"mathspeak":{"sbrief":"white U arrow on pedestal"}},"key":"21EB"},{"category":"So","mappings":{"default":{"default":"white up arrow on pedestal with horizontal bar"},"mathspeak":{"sbrief":"white U arrow on pedestal with horizontal bar"}},"key":"21EC"},{"category":"So","mappings":{"default":{"default":"white up arrow on pedestal with vertical bar"},"mathspeak":{"sbrief":"white U arrow on pedestal with vertical bar"}},"key":"21ED"},{"category":"So","mappings":{"default":{"default":"white double up arrow"},"mathspeak":{"sbrief":"white double U arrow"}},"key":"21EE"},{"category":"So","mappings":{"default":{"default":"white double up arrow on pedestal"},"mathspeak":{"sbrief":"white double U arrow on pedestal"}},"key":"21EF"},{"category":"So","mappings":{"default":{"default":"white right arrow from wall"},"mathspeak":{"sbrief":"white R arrow from wall"}},"key":"21F0"},{"category":"So","mappings":{"default":{"default":"north west arrow to corner"}},"key":"21F1"},{"category":"So","mappings":{"default":{"default":"south east arrow to corner"}},"key":"21F2"},{"category":"So","mappings":{"default":{"default":"up down white arrow"},"mathspeak":{"sbrief":"U D white arrow"}},"key":"21F3"},{"category":"Sm","mappings":{"default":{"default":"right arrow with small circle"},"mathspeak":{"sbrief":"R arrow with small circle"}},"key":"21F4"},{"category":"Sm","mappings":{"default":{"default":"down arrow left of up arrow"},"mathspeak":{"sbrief":"D arrow L of U arrow"}},"key":"21F5"},{"category":"Sm","mappings":{"default":{"default":"three right arrows"},"mathspeak":{"sbrief":"three R arrows"}},"key":"21F6"},{"category":"Sm","mappings":{"default":{"default":"left arrow with vertical stroke"},"mathspeak":{"sbrief":"L arrow with vertical stroke"}},"key":"21F7"},{"category":"Sm","mappings":{"default":{"default":"right arrow with vertical stroke"},"mathspeak":{"sbrief":"R arrow with vertical stroke"}},"key":"21F8"},{"category":"Sm","mappings":{"default":{"default":"left right arrow with vertical stroke"},"mathspeak":{"sbrief":"L R arrow with vertical stroke"}},"key":"21F9"},{"category":"Sm","mappings":{"default":{"default":"left arrow with double vertical stroke"},"mathspeak":{"sbrief":"L arrow with double vertical stroke"}},"key":"21FA"},{"category":"Sm","mappings":{"default":{"default":"right arrow with double vertical stroke"},"mathspeak":{"sbrief":"R arrow with double vertical stroke"}},"key":"21FB"},{"category":"Sm","mappings":{"default":{"default":"left right arrow with double vertical stroke"},"mathspeak":{"sbrief":"L R arrow with double vertical stroke"}},"key":"21FC"},{"category":"Sm","mappings":{"default":{"default":"left open headed arrow"},"mathspeak":{"sbrief":"L open headed arrow"}},"key":"21FD"},{"category":"Sm","mappings":{"default":{"default":"right open headed arrow"},"mathspeak":{"sbrief":"r open headed arrow"}},"key":"21FE"},{"category":"Sm","mappings":{"default":{"default":"left right open headed arrow"},"mathspeak":{"sbrief":"L R open headed arrow"}},"key":"21FF"},{"category":"So","mappings":{"default":{"default":"electric arrow"}},"key":"2301"},{"category":"So","mappings":{"default":{"default":"up arrowhead"},"mathspeak":{"sbrief":"U arrowhead"}},"key":"2303"},{"category":"So","mappings":{"default":{"default":"down arrowhead"},"mathspeak":{"sbrief":"D arrowhead"}},"key":"2304"},{"category":"So","mappings":{"default":{"default":"up arrowhead between two horizontal bars","alternative":"enter key"},"mathspeak":{"sbrief":"U arrowhead between two horizontal bars"}},"key":"2324"},{"category":"So","mappings":{"default":{"default":"broken circle with northwest arrow"}},"key":"238B"},{"category":"So","mappings":{"default":{"default":"heavy wide headed right arrow"},"mathspeak":{"sbrief":"heavy wide headed R arrow"}},"key":"2794"},{"category":"So","mappings":{"default":{"default":"heavy down right arrow"},"mathspeak":{"sbrief":"heavy D R arrow"}},"key":"2798"},{"category":"So","mappings":{"default":{"default":"heavy right arrow"},"mathspeak":{"sbrief":"heavy R arrow"}},"key":"2799"},{"category":"So","mappings":{"default":{"default":"heavy up right arrow"},"mathspeak":{"sbrief":"heavy U R arrow"}},"key":"279A"},{"category":"So","mappings":{"default":{"default":"drafting point right arrow"},"mathspeak":{"sbrief":"drafting point R arrow"}},"key":"279B"},{"category":"So","mappings":{"default":{"default":"heavy round tipped right arrow"},"mathspeak":{"sbrief":"heavy round tipped R arrow"}},"key":"279C"},{"category":"So","mappings":{"default":{"default":"triangle headed right arrow"},"mathspeak":{"sbrief":"triangle headed R arrow"}},"key":"279D"},{"category":"So","mappings":{"default":{"default":"heavy triangle headed right arrow"},"mathspeak":{"sbrief":"heavy triangle headed R arrow"}},"key":"279E"},{"category":"So","mappings":{"default":{"default":"dashed triangle headed right arrow"},"mathspeak":{"sbrief":"dashed triangle headed R arrow"}},"key":"279F"},{"category":"So","mappings":{"default":{"default":"heavy dashed triangle headed right arrow"},"mathspeak":{"sbrief":"heavy dashed triangle headed R arrow"}},"key":"27A0"},{"category":"So","mappings":{"default":{"default":"black right arrow"},"mathspeak":{"sbrief":"black R arrow"}},"key":"27A1"},{"category":"So","mappings":{"default":{"default":"three d top lighted right arrowhead"},"mathspeak":{"sbrief":"three d top lighted R arrowhead"}},"key":"27A2"},{"category":"So","mappings":{"default":{"default":"three d bottom lighted right arrowhead"},"mathspeak":{"sbrief":"three d bottom lighted R arrowhead"}},"key":"27A3"},{"category":"So","mappings":{"default":{"default":"black right arrowhead"},"mathspeak":{"sbrief":"black R arrowhead"}},"key":"27A4"},{"category":"So","mappings":{"default":{"default":"heavy black curved down and right arrow"},"mathspeak":{"sbrief":"heavy black curved D and R arrow"}},"key":"27A5"},{"category":"So","mappings":{"default":{"default":"heavy black curved up and right arrow"},"mathspeak":{"sbrief":"heavy black curved U and R arrow"}},"key":"27A6"},{"category":"So","mappings":{"default":{"default":"squat black right arrow"},"mathspeak":{"sbrief":"squat black R arrow"}},"key":"27A7"},{"category":"So","mappings":{"default":{"default":"heavy concave pointed black right arrow"},"mathspeak":{"sbrief":"heavy concave pointed black R arrow"}},"key":"27A8"},{"category":"So","mappings":{"default":{"default":"right shaded white right arrow"},"mathspeak":{"sbrief":"right shaded white R arrow"}},"key":"27A9"},{"category":"So","mappings":{"default":{"default":"left shaded white right arrow"},"mathspeak":{"sbrief":"left shaded white R arrow"}},"key":"27AA"},{"category":"So","mappings":{"default":{"default":"back tilted shadowed white right arrow"},"mathspeak":{"sbrief":"back tilted shadowed white R arrow"}},"key":"27AB"},{"category":"So","mappings":{"default":{"default":"front tilted shadowed white right arrow"},"mathspeak":{"sbrief":"front tilted shadowed white R arrow"}},"key":"27AC"},{"category":"So","mappings":{"default":{"default":"heavy lower right shadowed white right arrow"},"mathspeak":{"sbrief":"heavy lower right shadowed white R arrow"}},"key":"27AD"},{"category":"So","mappings":{"default":{"default":"heavy upper right shadowed white right arrow"},"mathspeak":{"sbrief":"heavy upper right shadowed white R arrow"}},"key":"27AE"},{"category":"So","mappings":{"default":{"default":"notched lower right shadowed white right arrow"},"mathspeak":{"sbrief":"notched lower right shadowed white R arrow"}},"key":"27AF"},{"category":"So","mappings":{"default":{"default":"notched upper right shadowed white right arrow"},"mathspeak":{"sbrief":"notched upper right shadowed white R arrow"}},"key":"27B1"},{"category":"So","mappings":{"default":{"default":"circled heavy white right arrow"},"mathspeak":{"sbrief":"circled heavy white R arrow"}},"key":"27B2"},{"category":"So","mappings":{"default":{"default":"white feathered right arrow"},"mathspeak":{"sbrief":"white feathered R arrow"}},"key":"27B3"},{"category":"So","mappings":{"default":{"default":"black feathered down right arrow"},"mathspeak":{"sbrief":"black feathered D R arrow"}},"key":"27B4"},{"category":"So","mappings":{"default":{"default":"black feathered right arrow"},"mathspeak":{"sbrief":"black feathered R arrow"}},"key":"27B5"},{"category":"So","mappings":{"default":{"default":"black feathered up right arrow"},"mathspeak":{"sbrief":"black feathered U R arrow"}},"key":"27B6"},{"category":"So","mappings":{"default":{"default":"heavy black feathered down right arrow"},"mathspeak":{"sbrief":"heavy black feathered D R arrow"}},"key":"27B7"},{"category":"So","mappings":{"default":{"default":"heavy black feathered right arrow"},"mathspeak":{"sbrief":"heavy black feathered R arrow"}},"key":"27B8"},{"category":"So","mappings":{"default":{"default":"heavy black feathered up right arrow"},"mathspeak":{"sbrief":"heavy black feathered U R arrow"}},"key":"27B9"},{"category":"So","mappings":{"default":{"default":"teardrop barbed right arrow"},"mathspeak":{"sbrief":"teardrop barbed R arrow"}},"key":"27BA"},{"category":"So","mappings":{"default":{"default":"heavy teardrop shanked right arrow"},"mathspeak":{"sbrief":"heavy teardrop shanked R arrow"}},"key":"27BB"},{"category":"So","mappings":{"default":{"default":"wedge tailed right arrow"},"mathspeak":{"sbrief":"wedge tailed R arrow"}},"key":"27BC"},{"category":"So","mappings":{"default":{"default":"heavy wedge tailed right arrow"},"mathspeak":{"sbrief":"heavy wedge tailed R arrow"}},"key":"27BD"},{"category":"So","mappings":{"default":{"default":"open outlined right arrow"},"mathspeak":{"sbrief":"open outlined R arrow"}},"key":"27BE"},{"category":"Sm","mappings":{"default":{"default":"up quadruple arrow"},"mathspeak":{"sbrief":"U quadruple arrow"}},"key":"27F0"},{"category":"Sm","mappings":{"default":{"default":"down quadruple arrow"},"mathspeak":{"sbrief":"D quadrule arrow"}},"key":"27F1"},{"category":"Sm","mappings":{"default":{"default":"anticlockwise gapped circle arrow"}},"key":"27F2"},{"category":"Sm","mappings":{"default":{"default":"clockwise gapped circle arrow"}},"key":"27F3"},{"category":"Sm","mappings":{"default":{"default":"right arrow with circled plus"},"mathspeak":{"sbrief":"R arrow with circled plus"}},"key":"27F4"},{"category":"Sm","mappings":{"default":{"default":"long left arrow"},"mathspeak":{"sbrief":"long L arrow"}},"key":"27F5"},{"category":"Sm","mappings":{"default":{"default":"long right arrow"},"mathspeak":{"sbrief":"long R arrow"}},"key":"27F6"},{"category":"Sm","mappings":{"default":{"default":"long left right arrow"},"mathspeak":{"sbrief":"long L R arrow"}},"key":"27F7"},{"category":"Sm","mappings":{"default":{"default":"long left double arrow"},"mathspeak":{"sbrief":"long l double arrow"}},"key":"27F8"},{"category":"Sm","mappings":{"default":{"default":"long right double arrow"},"mathspeak":{"sbrief":"long R double arrow"}},"key":"27F9"},{"category":"Sm","mappings":{"default":{"default":"long left right double arrow"},"mathspeak":{"sbrief":"long L R double arrow"}},"key":"27FA"},{"category":"Sm","mappings":{"default":{"default":"long left arrow from bar"},"mathspeak":{"sbrief":"long L arrow from bar"}},"key":"27FB"},{"category":"Sm","mappings":{"default":{"default":"long right arrow from bar"},"mathspeak":{"sbrief":"long R arrow from bar"}},"key":"27FC"},{"category":"Sm","mappings":{"default":{"default":"long left double arrow from bar"},"mathspeak":{"sbrief":"long l double arrow from bar"}},"key":"27FD"},{"category":"Sm","mappings":{"default":{"default":"long right double arrow from bar"},"mathspeak":{"sbrief":"long R double arrow from bar"}},"key":"27FE"},{"category":"Sm","mappings":{"default":{"default":"long right squiggle arrow"},"mathspeak":{"sbrief":"long r squiggle arrow"}},"key":"27FF"},{"category":"Sm","mappings":{"default":{"default":"two headed right arrow with vertical stroke"},"mathspeak":{"sbrief":"two headed R arrow with vertical stroke"}},"key":"2900"},{"category":"Sm","mappings":{"default":{"default":"two headed right arrow with double vertical stroke"},"mathspeak":{"sbrief":"two headed R arrow with double vertical stroke"}},"key":"2901"},{"category":"Sm","mappings":{"default":{"default":"double left arrow with vertical stroke"},"mathspeak":{"sbrief":"double L arrow with vertical stroke"}},"key":"2902"},{"category":"Sm","mappings":{"default":{"default":"double right arrow with vertical stroke"},"mathspeak":{"sbrief":"double R arrow with vertical stroke"}},"key":"2903"},{"category":"Sm","mappings":{"default":{"default":"double left right arrow with vertical stroke"},"mathspeak":{"sbrief":"double L R arrow with vertical stroke"}},"key":"2904"},{"category":"Sm","mappings":{"default":{"default":"two headed right arrow from bar"},"mathspeak":{"sbrief":"two headed R arrow from bar"}},"key":"2905"},{"category":"Sm","mappings":{"default":{"default":"double left arrow from bar"},"mathspeak":{"sbrief":"double L arrow from bar"}},"key":"2906"},{"category":"Sm","mappings":{"default":{"default":"double right arrow from bar"},"mathspeak":{"sbrief":"double R arrow from bar"}},"key":"2907"},{"category":"Sm","mappings":{"default":{"default":"arrow down with horizontal stroke"}},"key":"2908"},{"category":"Sm","mappings":{"default":{"default":"up arrow with horizontal stroke"},"mathspeak":{"sbrief":"U arrow with horizontal stroke"}},"key":"2909"},{"category":"Sm","mappings":{"default":{"default":"up triple arrow"},"mathspeak":{"sbrief":"U triple arrow"}},"key":"290A"},{"category":"Sm","mappings":{"default":{"default":"down triple arrow"},"mathspeak":{"sbrief":"D triple arrow"}},"key":"290B"},{"category":"Sm","mappings":{"default":{"default":"left double dash arrow"},"mathspeak":{"sbrief":"L double dash arrow"}},"key":"290C"},{"category":"Sm","mappings":{"default":{"default":"right double dash arrow"},"mathspeak":{"sbrief":"R double dash arrow"}},"key":"290D"},{"category":"Sm","mappings":{"default":{"default":"left triple dash arrow"},"mathspeak":{"sbrief":"L triple dash arrow"}},"key":"290E"},{"category":"Sm","mappings":{"default":{"default":"right triple dash arrow"},"mathspeak":{"sbrief":"r triple dash arrow"}},"key":"290F"},{"category":"Sm","mappings":{"default":{"default":"right two headed triple dash arrow"},"mathspeak":{"sbrief":"r two headed triple dash arrow"}},"key":"2910"},{"category":"Sm","mappings":{"default":{"default":"right arrow with dotted stem"},"mathspeak":{"sbrief":"R arrow with dotted stem"}},"key":"2911"},{"category":"Sm","mappings":{"default":{"default":"up arrow to bar"},"mathspeak":{"sbrief":"U arrow to bar"}},"key":"2912"},{"category":"Sm","mappings":{"default":{"default":"down arrow to bar"},"mathspeak":{"sbrief":"D arrow to bar"}},"key":"2913"},{"category":"Sm","mappings":{"default":{"default":"right arrow with tail with vertical stroke"},"mathspeak":{"sbrief":"R arrow with tail with vertical stroke"}},"key":"2914"},{"category":"Sm","mappings":{"default":{"default":"right arrow with tail with double vertical stroke"},"mathspeak":{"sbrief":"R arrow with tail with double vertical stroke"}},"key":"2915"},{"category":"Sm","mappings":{"default":{"default":"right two headed arrow with tail"},"mathspeak":{"sbrief":"R two headed arrow with tail"}},"key":"2916"},{"category":"Sm","mappings":{"default":{"default":"right two headed arrow with tail with vertical stroke"},"mathspeak":{"sbrief":"R two headed arrow with tail with vertical stroke"}},"key":"2917"},{"category":"Sm","mappings":{"default":{"default":"right two headed arrow with tail with double vertical stroke"},"mathspeak":{"sbrief":"R two headed arrow with tail with double vertical stroke"}},"key":"2918"},{"category":"Sm","mappings":{"default":{"default":"left arrow tail"},"mathspeak":{"sbrief":"L arrow tail"}},"key":"2919"},{"category":"Sm","mappings":{"default":{"default":"right arrow tail"},"mathspeak":{"sbrief":"R arrow tail"}},"key":"291A"},{"category":"Sm","mappings":{"default":{"default":"left double arrow tail"},"mathspeak":{"sbrief":"L double arrow tail"}},"key":"291B"},{"category":"Sm","mappings":{"default":{"default":"right double arrow tail"},"mathspeak":{"sbrief":"R double arrow tail"}},"key":"291C"},{"category":"Sm","mappings":{"default":{"default":"left arrow to black diamond"},"mathspeak":{"sbrief":"L arrow to black diamond"}},"key":"291D"},{"category":"Sm","mappings":{"default":{"default":"right arrow to black diamond"},"mathspeak":{"sbrief":"R arrow to black diamond"}},"key":"291E"},{"category":"Sm","mappings":{"default":{"default":"left arrow from bar to black diamond"},"mathspeak":{"sbrief":"L arrow from bar to black diamond"}},"key":"291F"},{"category":"Sm","mappings":{"default":{"default":"right arrow from bar to black diamond"},"mathspeak":{"sbrief":"R arrow from bar to black diamond"}},"key":"2920"},{"category":"Sm","mappings":{"default":{"default":"north west and south east arrow"}},"key":"2921"},{"category":"Sm","mappings":{"default":{"default":"north east and south west arrow"}},"key":"2922"},{"category":"Sm","mappings":{"default":{"default":"north west arrow with hook"}},"key":"2923"},{"category":"Sm","mappings":{"default":{"default":"north east arrow with hook"}},"key":"2924"},{"category":"Sm","mappings":{"default":{"default":"south east arrow with hook"}},"key":"2925"},{"category":"Sm","mappings":{"default":{"default":"south west arrow with hook"}},"key":"2926"},{"category":"Sm","mappings":{"default":{"default":"north west arrow and north east arrow"}},"key":"2927"},{"category":"Sm","mappings":{"default":{"default":"north east arrow and south east arrow"}},"key":"2928"},{"category":"Sm","mappings":{"default":{"default":"south east arrow and south west arrow"}},"key":"2929"},{"category":"Sm","mappings":{"default":{"default":"south west arrow and north west arrow"}},"key":"292A"},{"category":"Sm","mappings":{"default":{"default":"south east arrow crossing north east arrow"}},"key":"292D"},{"category":"Sm","mappings":{"default":{"default":"north east arrow crossing south east arrow"}},"key":"292E"},{"category":"Sm","mappings":{"default":{"default":"falling diagonal crossing north east arrow"}},"key":"292F"},{"category":"Sm","mappings":{"default":{"default":"rising diagonal crossing south east arrow"}},"key":"2930"},{"category":"Sm","mappings":{"default":{"default":"north east arrow crossing north west arrow"}},"key":"2931"},{"category":"Sm","mappings":{"default":{"default":"north west arrow crossing north east arrow"}},"key":"2932"},{"category":"Sm","mappings":{"default":{"default":"wave arrow pointing directly right"}},"key":"2933"},{"category":"Sm","mappings":{"default":{"default":"arrow pointing right then curving up"}},"key":"2934"},{"category":"Sm","mappings":{"default":{"default":"arrow pointing right then curving down"}},"key":"2935"},{"category":"Sm","mappings":{"default":{"default":"arrow pointing down then curving left"}},"key":"2936"},{"category":"Sm","mappings":{"default":{"default":"arrow pointing down then curving right"}},"key":"2937"},{"category":"Sm","mappings":{"default":{"default":"right side arc clockwise arrow"},"mathspeak":{"sbrief":"R side arc clockwise arrow"}},"key":"2938"},{"category":"Sm","mappings":{"default":{"default":"left side arc anticlockwise arrow"},"mathspeak":{"sbrief":"L side arc anticlockwise arrow"}},"key":"2939"},{"category":"Sm","mappings":{"default":{"default":"top arc anticlockwise arrow"}},"key":"293A"},{"category":"Sm","mappings":{"default":{"default":"bottom arc anticlockwise arrow"}},"key":"293B"},{"category":"Sm","mappings":{"default":{"default":"top arc clockwise arrow with minus"}},"key":"293C"},{"category":"Sm","mappings":{"default":{"default":"top arc anticlockwise arrow with plus"}},"key":"293D"},{"category":"Sm","mappings":{"default":{"default":"down right semicircular clockwise arrow"},"mathspeak":{"sbrief":"D R semicircular clockwise arrow"}},"key":"293E"},{"category":"Sm","mappings":{"default":{"default":"down left semicircular anticlockwise arrow"},"mathspeak":{"sbrief":"D L semicircular anticlockwise arrow"}},"key":"293F"},{"category":"Sm","mappings":{"default":{"default":"anticlockwise closed circle arrow"}},"key":"2940"},{"category":"Sm","mappings":{"default":{"default":"clockwise closed circle arrow"}},"key":"2941"},{"category":"Sm","mappings":{"default":{"default":"right arrow above short left arrow"},"mathspeak":{"sbrief":"R arrow above short L arrow"}},"key":"2942"},{"category":"Sm","mappings":{"default":{"default":"left arrow above short right arrow"},"mathspeak":{"sbrief":"L arrow above short R arrow"}},"key":"2943"},{"category":"Sm","mappings":{"default":{"default":"short right arrow above left arrow"},"mathspeak":{"sbrief":"short R arrow above L arrow"}},"key":"2944"},{"category":"Sm","mappings":{"default":{"default":"right arrow with plus below"},"mathspeak":{"sbrief":"R arrow with plus below"}},"key":"2945"},{"category":"Sm","mappings":{"default":{"default":"left arrow with plus below"},"mathspeak":{"sbrief":"L arrow with plus below"}},"key":"2946"},{"category":"Sm","mappings":{"default":{"default":"right arrow through x"},"mathspeak":{"sbrief":"R arrow through x"}},"key":"2947"},{"category":"Sm","mappings":{"default":{"default":"left right arrow through small circle"},"mathspeak":{"sbrief":"L R arrow through small circle"}},"key":"2948"},{"category":"Sm","mappings":{"default":{"default":"up two headed arrow from small circle"},"mathspeak":{"sbrief":"U two headed arrow from small circle"}},"key":"2949"},{"category":"Sm","mappings":{"default":{"default":"right double arrow with rounded head"},"mathspeak":{"sbrief":"R double arrow with rounded head"}},"key":"2970"},{"category":"Sm","mappings":{"default":{"default":"equals sign above right arrow"},"mathspeak":{"sbrief":"equals sign above R arrow"}},"key":"2971"},{"category":"Sm","mappings":{"default":{"default":"tilde operator above right arrow"},"mathspeak":{"sbrief":"tilde operator above R arrow"}},"key":"2972"},{"category":"Sm","mappings":{"default":{"default":"left arrow above tilde operator"},"mathspeak":{"sbrief":"L arrow above tilde operator"}},"key":"2973"},{"category":"Sm","mappings":{"default":{"default":"right arrow above tilde operator"},"mathspeak":{"sbrief":"R arrow above tilde operator"}},"key":"2974"},{"category":"Sm","mappings":{"default":{"default":"right arrow above almost equals"},"mathspeak":{"sbrief":"R arrow above almost equals"}},"key":"2975"},{"category":"Sm","mappings":{"default":{"default":"less than above left arrow"},"mathspeak":{"sbrief":"less than above L arrow"}},"key":"2976"},{"category":"Sm","mappings":{"default":{"default":"left arrow through less than"},"mathspeak":{"sbrief":"L arrow through less than"}},"key":"2977"},{"category":"Sm","mappings":{"default":{"default":"greater than above right arrow"},"mathspeak":{"sbrief":"greater than above R arrow"}},"key":"2978"},{"category":"Sm","mappings":{"default":{"default":"subset above right arrow"},"mathspeak":{"sbrief":"subset above R arrow"}},"key":"2979"},{"category":"Sm","mappings":{"default":{"default":"left arrow through subset"},"mathspeak":{"sbrief":"L arrow through subset"}},"key":"297A"},{"category":"Sm","mappings":{"default":{"default":"superset above left arrow"},"mathspeak":{"sbrief":"suerset above L arrow"}},"key":"297B"},{"category":"Sm","mappings":{"default":{"default":"empty set with right arrow above"},"mathspeak":{"sbrief":"empty set with R arrow above"}},"key":"29B3"},{"category":"Sm","mappings":{"default":{"default":"empty set with left arrow above"},"mathspeak":{"sbrief":"empty set with L arrow above"}},"key":"29B4"},{"category":"Sm","mappings":{"default":{"default":"up arrow through circle"},"mathspeak":{"sbrief":"U arrow through circle"}},"key":"29BD"},{"category":"Sm","mappings":{"default":{"default":"black diamond with down arrow"},"mathspeak":{"sbrief":"black diamond with D arrow"}},"key":"29EA"},{"category":"Sm","mappings":{"default":{"default":"white circle with down arrow"},"mathspeak":{"sbrief":"white circle with D arrow"}},"key":"29EC"},{"category":"Sm","mappings":{"default":{"default":"black circle with down arrow"},"mathspeak":{"sbrief":"black circle with D arrow"}},"key":"29ED"},{"category":"Sm","mappings":{"default":{"default":"integral with left arrow with hook"},"mathspeak":{"sbrief":"integral with L arrow with hook"}},"key":"2A17"},{"category":"So","mappings":{"default":{"default":"north east white arrow"}},"key":"2B00"},{"category":"So","mappings":{"default":{"default":"north west white arrow"}},"key":"2B01"},{"category":"So","mappings":{"default":{"default":"south east white arrow"}},"key":"2B02"},{"category":"So","mappings":{"default":{"default":"south west white arrow"}},"key":"2B03"},{"category":"So","mappings":{"default":{"default":"left right white arrow"},"mathspeak":{"sbrief":"L R white arrow"}},"key":"2B04"},{"category":"So","mappings":{"default":{"default":"left black arrow"},"mathspeak":{"sbrief":"L black arrow"}},"key":"2B05"},{"category":"So","mappings":{"default":{"default":"up black arrow"},"mathspeak":{"sbrief":"U black arrow"}},"key":"2B06"},{"category":"So","mappings":{"default":{"default":"down black arrow"},"mathspeak":{"sbrief":"D black arrow"}},"key":"2B07"},{"category":"So","mappings":{"default":{"default":"north east black arrow"}},"key":"2B08"},{"category":"So","mappings":{"default":{"default":"north west black arrow"}},"key":"2B09"},{"category":"So","mappings":{"default":{"default":"south east black arrow"}},"key":"2B0A"},{"category":"So","mappings":{"default":{"default":"south west black arrow"}},"key":"2B0B"},{"category":"So","mappings":{"default":{"default":"left right black arrow"},"mathspeak":{"sbrief":"L R black arrow"}},"key":"2B0C"},{"category":"So","mappings":{"default":{"default":"up down black arrow"},"mathspeak":{"sbrief":"U D black arrow"}},"key":"2B0D"},{"category":"So","mappings":{"default":{"default":"right arrow with tip down"},"mathspeak":{"sbrief":"R arrow with tip down"}},"key":"2B0E"},{"category":"So","mappings":{"default":{"default":"right arrow with tip up"},"mathspeak":{"sbrief":"R arrow with tip up"}},"key":"2B0F"},{"category":"So","mappings":{"default":{"default":"left arrow with tip down"},"mathspeak":{"sbrief":"L arrow with tip down"}},"key":"2B10"},{"category":"So","mappings":{"default":{"default":"left arrow with tip up"},"mathspeak":{"sbrief":"L arrow with tip up"}},"key":"2B11"},{"category":"Sm","mappings":{"default":{"default":"left arrow with small circle"},"mathspeak":{"sbrief":"L arrow with small circle"}},"key":"2B30"},{"category":"Sm","mappings":{"default":{"default":"three left arrows"},"mathspeak":{"sbrief":"three L arrows"}},"key":"2B31"},{"category":"Sm","mappings":{"default":{"default":"left arrow with circled plus"},"mathspeak":{"sbrief":"L arrow with circled plus"}},"key":"2B32"},{"category":"Sm","mappings":{"default":{"default":"long left squiggle arrow"},"mathspeak":{"sbrief":"long l squiggle arrow"}},"key":"2B33"},{"category":"Sm","mappings":{"default":{"default":"left two headed arrow with vertical stroke"},"mathspeak":{"sbrief":"L two headed arrow with vertical stroke"}},"key":"2B34"},{"category":"Sm","mappings":{"default":{"default":"left two headed arrow with double vertical stroke"},"mathspeak":{"sbrief":"L two headed arrow with double vertical stroke"}},"key":"2B35"},{"category":"Sm","mappings":{"default":{"default":"left two headed arrow from bar"},"mathspeak":{"sbrief":"L two headed arrow from bar"}},"key":"2B36"},{"category":"Sm","mappings":{"default":{"default":"left two headed triple dash arrow"},"mathspeak":{"sbrief":"L two headed triple dash arrow"}},"key":"2B37"},{"category":"Sm","mappings":{"default":{"default":"left arrow with dotted stem"},"mathspeak":{"sbrief":"L arrow with dotted stem"}},"key":"2B38"},{"category":"Sm","mappings":{"default":{"default":"left arrow with tail with vertical stroke"},"mathspeak":{"sbrief":"L arrow with tail with vertical stroke"}},"key":"2B39"},{"category":"Sm","mappings":{"default":{"default":"left arrow with tail with double vertical stroke"},"mathspeak":{"sbrief":"L arrow with tail with double vertical stroke"}},"key":"2B3A"},{"category":"Sm","mappings":{"default":{"default":"left two headed arrow with tail"},"mathspeak":{"sbrief":"L two headed arrow with tail"}},"key":"2B3B"},{"category":"Sm","mappings":{"default":{"default":"left two headed arrow with tail with vertical stroke"},"mathspeak":{"sbrief":"L two headed arrow with tail with vertical stroke"}},"key":"2B3C"},{"category":"Sm","mappings":{"default":{"default":"left two headed arrow with tail with double vertical stroke"},"mathspeak":{"sbrief":"L two headed arrow with tail with double vertical stroke"}},"key":"2B3D"},{"category":"Sm","mappings":{"default":{"default":"left arrow through x"},"mathspeak":{"sbrief":"L arrow through x"}},"key":"2B3E"},{"category":"Sm","mappings":{"default":{"default":"wave arrow pointing directly left"}},"key":"2B3F"},{"category":"Sm","mappings":{"default":{"default":"equals sign above left arrow"},"mathspeak":{"sbrief":"equals sign above L arrow"}},"key":"2B40"},{"category":"Sm","mappings":{"default":{"default":"reverse tilde operator above left arrow"},"mathspeak":{"sbrief":"reverse tilde operator above L arrow"}},"key":"2B41"},{"category":"Sm","mappings":{"default":{"default":"left arrow above reverse almost equals"},"mathspeak":{"sbrief":"L arrow above reverse almost equals"}},"key":"2B42"},{"category":"Sm","mappings":{"default":{"default":"right arrow through greater than"},"mathspeak":{"sbrief":"R arrow through greater than"}},"key":"2B43"},{"category":"Sm","mappings":{"default":{"default":"right arrow through superset"},"mathspeak":{"sbrief":"R arrow through superset"}},"key":"2B44"},{"category":"So","mappings":{"default":{"default":"left quadruple arrow"},"mathspeak":{"sbrief":"L quadrule arrow"}},"key":"2B45"},{"category":"So","mappings":{"default":{"default":"right quadruple arrow"},"mathspeak":{"sbrief":"R quadrule arrow"}},"key":"2B46"},{"category":"Sm","mappings":{"default":{"default":"reverse tilde operator above right arrow"},"mathspeak":{"sbrief":"reverse tilde operator above R arrow"}},"key":"2B47"},{"category":"Sm","mappings":{"default":{"default":"right arrow above reverse almost equals"},"mathspeak":{"sbrief":"R arrow above reverse almost equals"}},"key":"2B48"},{"category":"Sm","mappings":{"default":{"default":"tilde operator above left arrow"},"mathspeak":{"sbrief":"tilde operator above L arrow"}},"key":"2B49"},{"category":"Sm","mappings":{"default":{"default":"left arrow above almost equals"},"mathspeak":{"sbrief":"L arrow above almost equals"}},"key":"2B4A"},{"category":"Sm","mappings":{"default":{"default":"left arrow above reverse tilde operator"},"mathspeak":{"sbrief":"L arrow above reverse tilde operator"}},"key":"2B4B"},{"category":"Sm","mappings":{"default":{"default":"right arrow above reverse tilde operator"},"mathspeak":{"sbrief":"R arrow above reverse tilde operator"}},"key":"2B4C"},{"category":"Sm","mappings":{"default":{"default":"halfwidth left arrow"},"mathspeak":{"sbrief":"halfwidth L arrow"}},"key":"FFE9"},{"category":"Sm","mappings":{"default":{"default":"halfwidth up arrow"},"mathspeak":{"sbrief":"halfwidth U arrow"}},"key":"FFEA"},{"category":"Sm","mappings":{"default":{"default":"halfwidth right arrow"},"mathspeak":{"sbrief":"halfwidth R arrow"}},"key":"FFEB"},{"category":"Sm","mappings":{"default":{"default":"halfwidth down arrow"},"mathspeak":{"sbrief":"halfwidth D arrow"}},"key":"FFEC"}],"en/symbols/math_characters.min":[{"locale":"en"},{"category":"Ll","mappings":{"default":{"default":"script l"}},"key":"2113"},{"category":"Sm","mappings":{"default":{"default":"script cap P"},"mathspeak":{"default":"script upper P"}},"key":"2118"},{"category":"Ll","mappings":{"default":{"default":"double struck pi"}},"key":"213C"},{"category":"Ll","mappings":{"default":{"default":"double struck gamma"}},"key":"213D"},{"category":"Lu","mappings":{"default":{"default":"double struck cap Gamma"},"mathspeak":{"default":"double struck upper Gamma"}},"key":"213E"},{"category":"Lu","mappings":{"default":{"default":"double struck cap Pi"},"mathspeak":{"default":"double struck upper Pi"}},"key":"213F"},{"category":"Sm","mappings":{"default":{"default":"double struck sum"},"mathspeak":{"default":"double struck sigma summation"}},"key":"2140"},{"category":"Lu","mappings":{"default":{"default":"double struck italic cap D"},"mathspeak":{"default":"double struck italic upper D"}},"key":"2145"},{"category":"Ll","mappings":{"default":{"default":"double struck italic d"}},"key":"2146"},{"category":"Ll","mappings":{"default":{"default":"double struck italic e"}},"key":"2147"},{"category":"Ll","mappings":{"default":{"default":"double struck italic i"}},"key":"2148"},{"category":"Ll","mappings":{"default":{"default":"double struck italic j"}},"key":"2149"},{"category":"Ll","mappings":{"default":{"default":"italic dotless i"}},"key":"1D6A4"},{"category":"Ll","mappings":{"default":{"default":"italic dotless j"}},"key":"1D6A5"}],"en/symbols/math_delimiters.min":[{"locale":"en"},{"category":"Ps","mappings":{"default":{"default":"left parenthesis"},"mathspeak":{"brief":"left p\'ren","sbrief":"L p\'ren"},"clearspeak":{"default":"open paren"}},"key":"0028"},{"category":"Pe","mappings":{"default":{"default":"right parenthesis"},"mathspeak":{"brief":"right p\'ren","sbrief":"R p\'ren"},"clearspeak":{"default":"close paren"}},"key":"0029"},{"category":"Ps","mappings":{"default":{"default":"left bracket"},"mathspeak":{"brief":"left brack","sbrief":"L brack"},"clearspeak":{"default":"open bracket"}},"key":"005B"},{"category":"Pe","mappings":{"default":{"default":"right bracket"},"mathspeak":{"brief":"right brack","sbrief":"R brack"},"clearspeak":{"default":"close bracket"}},"key":"005D"},{"category":"Ps","mappings":{"default":{"default":"left brace"},"mathspeak":{"sbrief":"L brace"},"clearspeak":{"default":"open brace"}},"key":"007B"},{"category":"Pe","mappings":{"default":{"default":"right brace"},"mathspeak":{"sbrief":"R brace"},"clearspeak":{"default":"close brace"}},"key":"007D"},{"category":"Ps","mappings":{"default":{"default":"left bracket with quill"},"mathspeak":{"brief":"left brack with quill","sbrief":"L brack with quill"}},"key":"2045"},{"category":"Pe","mappings":{"default":{"default":"right bracket with quill"},"mathspeak":{"brief":"right brack with quill","sbrief":"R brack with quill"}},"key":"2046"},{"category":"Sm","mappings":{"default":{"default":"left ceiling"}},"key":"2308"},{"category":"Sm","mappings":{"default":{"default":"right ceiling"}},"key":"2309"},{"category":"Sm","mappings":{"default":{"default":"left floor"}},"key":"230A"},{"category":"Sm","mappings":{"default":{"default":"right floor"}},"key":"230B"},{"category":"So","mappings":{"default":{"default":"bottom right crop"}},"key":"230C"},{"category":"So","mappings":{"default":{"default":"bottom left crop"}},"key":"230D"},{"category":"So","mappings":{"default":{"default":"top right crop"}},"key":"230E"},{"category":"So","mappings":{"default":{"default":"top left crop"}},"key":"230F"},{"category":"So","mappings":{"default":{"default":"top left corner"}},"key":"231C"},{"category":"So","mappings":{"default":{"default":"top right corner"}},"key":"231D"},{"category":"So","mappings":{"default":{"default":"bottom left corner"}},"key":"231E"},{"category":"So","mappings":{"default":{"default":"bottom right corner"}},"key":"231F"},{"category":"Sm","mappings":{"default":{"default":"top half integral"}},"key":"2320"},{"category":"Sm","mappings":{"default":{"default":"bottom half integral"}},"key":"2321"},{"category":"Ps","mappings":{"default":{"default":"left pointing angle bracket","physics":"bra"}},"key":"2329"},{"category":"Pe","mappings":{"default":{"default":"right pointing angle bracket","physics":"ket"}},"key":"232A"},{"category":"Sm","mappings":{"default":{"default":"left parenthesis upper hook"},"mathspeak":{"brief":"left p\'ren upper hook","sbrief":"L p\'ren upper hook"}},"key":"239B"},{"category":"Sm","mappings":{"default":{"default":"left parenthesis extension"},"mathspeak":{"brief":"left p\'ren extension","sbrief":"L p\'ren extension"}},"key":"239C"},{"category":"Sm","mappings":{"default":{"default":"left parenthesis lower hook"},"mathspeak":{"brief":"left p\'ren lower hook","sbrief":"L p\'ren lower hook"}},"key":"239D"},{"category":"Sm","mappings":{"default":{"default":"right parenthesis upper hook"},"mathspeak":{"brief":"right p\'ren upper hook","sbrief":"R p\'ren upper hook"}},"key":"239E"},{"category":"Sm","mappings":{"default":{"default":"right parenthesis extension"},"mathspeak":{"brief":"right p\'ren extension","sbrief":"R p\'ren extension"}},"key":"239F"},{"category":"Sm","mappings":{"default":{"default":"right parenthesis lower hook"},"mathspeak":{"brief":"right p\'ren lower hook","sbrief":"R p\'ren lower hook"}},"key":"23A0"},{"category":"Sm","mappings":{"default":{"default":"left bracket upper corner"},"mathspeak":{"brief":"left brack upper corner","sbrief":"L brack upper corner"}},"key":"23A1"},{"category":"Sm","mappings":{"default":{"default":"left bracket extension"},"mathspeak":{"brief":"left brack extension","sbrief":"L brack extension"}},"key":"23A2"},{"category":"Sm","mappings":{"default":{"default":"left bracket lower corner"},"mathspeak":{"brief":"left brack lower corner","sbrief":"L brack lower corner"}},"key":"23A3"},{"category":"Sm","mappings":{"default":{"default":"right bracket upper corner"},"mathspeak":{"brief":"right brack upper corner","sbrief":"R brack upper corner"}},"key":"23A4"},{"category":"Sm","mappings":{"default":{"default":"right bracket extension"},"mathspeak":{"brief":"right brack extension","sbrief":"R brack extension"}},"key":"23A5"},{"category":"Sm","mappings":{"default":{"default":"right bracket lower corner"},"mathspeak":{"brief":"right brack lower corner","sbrief":"R brack lower corner"}},"key":"23A6"},{"category":"Sm","mappings":{"default":{"default":"left brace upper hook"},"mathspeak":{"sbrief":"L brace upper hook"}},"key":"23A7"},{"category":"Sm","mappings":{"default":{"default":"left brace middle piece"},"mathspeak":{"sbrief":"L brace middle piece"}},"key":"23A8"},{"category":"Sm","mappings":{"default":{"default":"left brace lower hook"},"mathspeak":{"sbrief":"L brace lower hook"}},"key":"23A9"},{"category":"Sm","mappings":{"default":{"default":"brace extension"}},"key":"23AA"},{"category":"Sm","mappings":{"default":{"default":"right brace upper hook"},"mathspeak":{"sbrief":"R brace upper hook"}},"key":"23AB"},{"category":"Sm","mappings":{"default":{"default":"right brace middle piece"},"mathspeak":{"sbrief":"R brace middle piece"}},"key":"23AC"},{"category":"Sm","mappings":{"default":{"default":"right brace lower hook"},"mathspeak":{"sbrief":"R brace lower hook"}},"key":"23AD"},{"category":"Sm","mappings":{"default":{"default":"integral extension"}},"key":"23AE"},{"category":"Sm","mappings":{"default":{"default":"horizontal line extension"}},"key":"23AF"},{"category":"Sm","mappings":{"default":{"default":"upper left or lower right brace section"}},"key":"23B0"},{"category":"Sm","mappings":{"default":{"default":"upper right or lower left brace section"}},"key":"23B1"},{"category":"Sm","mappings":{"default":{"default":"summation top"}},"key":"23B2"},{"category":"Sm","mappings":{"default":{"default":"summation bottom"}},"key":"23B3"},{"category":"So","mappings":{"default":{"default":"top bracket"},"mathspeak":{"brief":"top brack","sbrief":"T brack"}},"key":"23B4"},{"category":"So","mappings":{"default":{"default":"bottom bracket"},"mathspeak":{"brief":"bottom brack","sbrief":"B brack"}},"key":"23B5"},{"category":"So","mappings":{"default":{"default":"bottom bracket over top bracket"},"mathspeak":{"brief":"bottom brack over top brack","sbrief":"B brack over T brack"}},"key":"23B6"},{"category":"So","mappings":{"default":{"default":"radical symbol bottom"}},"key":"23B7"},{"category":"So","mappings":{"default":{"default":"left vertical box line"}},"key":"23B8"},{"category":"So","mappings":{"default":{"default":"right vertical box line"}},"key":"23B9"},{"category":"Sm","mappings":{"default":{"default":"top parenthesis"},"mathspeak":{"brief":"top p\'ren","sbrief":"t p\'ren"}},"key":"23DC"},{"category":"Sm","mappings":{"default":{"default":"bottom parenthesis"},"mathspeak":{"brief":"bottom p\'ren","sbrief":"b p\'ren"}},"key":"23DD"},{"category":"Sm","mappings":{"default":{"default":"top brace"},"mathspeak":{"sbrief":"T brace"}},"key":"23DE"},{"category":"Sm","mappings":{"default":{"default":"bottom brace"},"mathspeak":{"sbrief":"B brace"}},"key":"23DF"},{"category":"Sm","mappings":{"default":{"default":"top tortoise shell bracket"}},"key":"23E0"},{"category":"Sm","mappings":{"default":{"default":"bottom tortoise shell bracket"}},"key":"23E1"},{"category":"Ps","mappings":{"default":{"default":"medium left parenthesis ornament"},"mathspeak":{"brief":"medium left p\'ren ornament","sbrief":"medium L p\'ren ornament"}},"key":"2768"},{"category":"Pe","mappings":{"default":{"default":"medium right parenthesis ornament"},"mathspeak":{"brief":"medium right p\'ren ornament","sbrief":"medium R p\'ren ornament"}},"key":"2769"},{"category":"Ps","mappings":{"default":{"default":"medium flattened left parenthesis ornament"},"mathspeak":{"brief":"medium flattened left p\'ren ornament","sbrief":"medium flattened L p\'ren ornament"}},"key":"276A"},{"category":"Pe","mappings":{"default":{"default":"medium flattened right parenthesis ornament"},"mathspeak":{"brief":"medium flattened right p\'ren ornament","sbrief":"medium flattened R p\'ren ornament"}},"key":"276B"},{"category":"Ps","mappings":{"default":{"default":"medium left pointing angle bracket ornament"}},"key":"276C"},{"category":"Pe","mappings":{"default":{"default":"medium right pointing angle bracket ornament"}},"key":"276D"},{"category":"Ps","mappings":{"default":{"default":"heavy left pointing angle quotation mark ornament"}},"key":"276E"},{"category":"Pe","mappings":{"default":{"default":"heavy right pointing angle quotation mark ornament"}},"key":"276F"},{"category":"Ps","mappings":{"default":{"default":"heavy left pointing angle bracket ornament"}},"key":"2770"},{"category":"Pe","mappings":{"default":{"default":"heavy right pointing angle bracket ornament"}},"key":"2771"},{"category":"Ps","mappings":{"default":{"default":"light left tortoise shell bracket ornament"}},"key":"2772"},{"category":"Pe","mappings":{"default":{"default":"light right tortoise shell bracket ornament"}},"key":"2773"},{"category":"Ps","mappings":{"default":{"default":"medium left brace ornament"},"mathspeak":{"sbrief":"medium L brace ornament"}},"key":"2774"},{"category":"Pe","mappings":{"default":{"default":"medium right brace ornament"},"mathspeak":{"sbrief":"medium R brace ornament"}},"key":"2775"},{"category":"Ps","mappings":{"default":{"default":"left s shaped bag delimiter"}},"key":"27C5"},{"category":"Pe","mappings":{"default":{"default":"right s shaped bag delimiter"}},"key":"27C6"},{"category":"Ps","mappings":{"default":{"default":"left white bracket"}},"key":"27E6"},{"category":"Pe","mappings":{"default":{"default":"right white bracket"}},"key":"27E7"},{"category":"Ps","mappings":{"default":{"default":"left angle bracket"},"mathspeak":{"sbrief":"l angle bracket"}},"key":"27E8"},{"category":"Pe","mappings":{"default":{"default":"right angle bracket"},"mathspeak":{"sbrief":"r angle bracket"}},"key":"27E9"},{"category":"Ps","mappings":{"default":{"default":"left double angle bracket"}},"key":"27EA"},{"category":"Pe","mappings":{"default":{"default":"right double angle bracket"}},"key":"27EB"},{"category":"Ps","mappings":{"default":{"default":"left white tortoise shell bracket"}},"key":"27EC"},{"category":"Pe","mappings":{"default":{"default":"right white tortoise shell bracket"}},"key":"27ED"},{"category":"Ps","mappings":{"default":{"default":"flattened left parenthesis"},"mathspeak":{"brief":"flattened left p\'ren","sbrief":"flattened L p\'ren"}},"key":"27EE"},{"category":"Pe","mappings":{"default":{"default":"flattened right parenthesis"},"mathspeak":{"brief":"flattened right p\'ren","sbrief":"flattened R p\'ren"}},"key":"27EF"},{"category":"Ps","mappings":{"default":{"default":"left white brace"}},"key":"2983"},{"category":"Pe","mappings":{"default":{"default":"right white brace"}},"key":"2984"},{"category":"Ps","mappings":{"default":{"default":"white left parenthesis"},"mathspeak":{"brief":"white left p\'ren","sbrief":"white L p\'ren"}},"key":"2985"},{"category":"Pe","mappings":{"default":{"default":"white right parenthesis"},"mathspeak":{"brief":"white right p\'ren","sbrief":"white R p\'ren"}},"key":"2986"},{"category":"Ps","mappings":{"default":{"default":"z notation left image bracket"}},"key":"2987"},{"category":"Pe","mappings":{"default":{"default":"z notation right image bracket"}},"key":"2988"},{"category":"Ps","mappings":{"default":{"default":"z notation left binding bracket"}},"key":"2989"},{"category":"Pe","mappings":{"default":{"default":"z notation right binding bracket"}},"key":"298A"},{"category":"Ps","mappings":{"default":{"default":"left bracket with underbar"},"mathspeak":{"brief":"left brack with underbar","sbrief":"L brack with underbar"}},"key":"298B"},{"category":"Pe","mappings":{"default":{"default":"right bracket with underbar"},"mathspeak":{"brief":"right brack with underbar","sbrief":"R brack with underbar"}},"key":"298C"},{"category":"Ps","mappings":{"default":{"default":"left bracket with tick in top corner"},"mathspeak":{"brief":"left brack with tick in top corner","sbrief":"L brack with tick in top corner"}},"key":"298D"},{"category":"Pe","mappings":{"default":{"default":"right bracket with tick in bottom corner"},"mathspeak":{"brief":"right brack with tick in bottom corner","sbrief":"R brack with tick in bottom corner"}},"key":"298E"},{"category":"Ps","mappings":{"default":{"default":"left bracket with tick in bottom corner"},"mathspeak":{"brief":"left brack with tick in bottom corner","sbrief":"L brack with tick in bottom corner"}},"key":"298F"},{"category":"Pe","mappings":{"default":{"default":"right bracket with tick in top corner"},"mathspeak":{"brief":"right brack with tick in top corner","sbrief":"R brack with tick in top corner"}},"key":"2990"},{"category":"Ps","mappings":{"default":{"default":"left angle bracket with dot"},"mathspeak":{"sbrief":"l angle bracket with dot"}},"key":"2991"},{"category":"Pe","mappings":{"default":{"default":"right angle bracket with dot"},"mathspeak":{"sbrief":"r angle bracket with dot"}},"key":"2992"},{"category":"Ps","mappings":{"default":{"default":"left arc less than bracket"}},"key":"2993"},{"category":"Pe","mappings":{"default":{"default":"right arc greater than bracket"}},"key":"2994"},{"category":"Ps","mappings":{"default":{"default":"double left arc greater than bracket"}},"key":"2995"},{"category":"Pe","mappings":{"default":{"default":"double right arc less than bracket"}},"key":"2996"},{"category":"Ps","mappings":{"default":{"default":"left black tortoise shell bracket"}},"key":"2997"},{"category":"Pe","mappings":{"default":{"default":"right black tortoise shell bracket"}},"key":"2998"},{"category":"Ps","mappings":{"default":{"default":"left wiggly fence"}},"key":"29D8"},{"category":"Pe","mappings":{"default":{"default":"right wiggly fence"}},"key":"29D9"},{"category":"Ps","mappings":{"default":{"default":"left double wiggly fence"}},"key":"29DA"},{"category":"Pe","mappings":{"default":{"default":"right double wiggly fence"}},"key":"29DB"},{"category":"Ps","mappings":{"default":{"default":"left pointing curved angle bracket"}},"key":"29FC"},{"category":"Pe","mappings":{"default":{"default":"right pointing curved angle bracket"}},"key":"29FD"},{"category":"Ps","mappings":{"default":{"default":"top half left bracket"},"mathspeak":{"brief":"top half left brack","sbrief":"top half L brack"}},"key":"2E22"},{"category":"Pe","mappings":{"default":{"default":"top half right bracket"},"mathspeak":{"brief":"top half right brack","sbrief":"top half R brack"}},"key":"2E23"},{"category":"Ps","mappings":{"default":{"default":"bottom half left bracket"},"mathspeak":{"brief":"bottom half left brack","sbrief":"bottom half L brack"}},"key":"2E24"},{"category":"Pe","mappings":{"default":{"default":"bottom half right bracket"},"mathspeak":{"brief":"bottom half right brack","sbrief":"bottom half R brack"}},"key":"2E25"},{"category":"Ps","mappings":{"default":{"default":"left sideways U bracket"}},"key":"2E26"},{"category":"Pe","mappings":{"default":{"default":"right sideways U bracket"}},"key":"2E27"},{"category":"Ps","mappings":{"default":{"default":"double left parenthesis"},"mathspeak":{"brief":"double left p\'ren","sbrief":"double L p\'ren"}},"key":"2E28"},{"category":"Pe","mappings":{"default":{"default":"double right parenthesis"},"mathspeak":{"brief":"double right p\'ren","sbrief":"double R p\'ren"}},"key":"2E29"},{"category":"Ps","mappings":{"default":{"default":"left angle bracket"},"mathspeak":{"sbrief":"l angle bracket"}},"key":"3008"},{"category":"Pe","mappings":{"default":{"default":"right angle bracket"},"mathspeak":{"sbrief":"r angle bracket"}},"key":"3009"},{"category":"Ps","mappings":{"default":{"default":"left double angle bracket"}},"key":"300A"},{"category":"Pe","mappings":{"default":{"default":"right double angle bracket"}},"key":"300B"},{"category":"Ps","mappings":{"default":{"default":"left corner bracket"}},"key":"300C"},{"category":"Pe","mappings":{"default":{"default":"right corner bracket"}},"key":"300D"},{"category":"Ps","mappings":{"default":{"default":"left white corner bracket"}},"key":"300E"},{"category":"Pe","mappings":{"default":{"default":"right white corner bracket"}},"key":"300F"},{"category":"Ps","mappings":{"default":{"default":"left black lenticular bracket"}},"key":"3010"},{"category":"Pe","mappings":{"default":{"default":"right black lenticular bracket"}},"key":"3011"},{"category":"Ps","mappings":{"default":{"default":"left tortoise shell bracket"}},"key":"3014"},{"category":"Pe","mappings":{"default":{"default":"right tortoise shell bracket"}},"key":"3015"},{"category":"Ps","mappings":{"default":{"default":"left white lenticular bracket"}},"key":"3016"},{"category":"Pe","mappings":{"default":{"default":"right white lenticular bracket"}},"key":"3017"},{"category":"Ps","mappings":{"default":{"default":"left white tortoise shell bracket"}},"key":"3018"},{"category":"Pe","mappings":{"default":{"default":"right white tortoise shell bracket"}},"key":"3019"},{"category":"Ps","mappings":{"default":{"default":"left white bracket"}},"key":"301A"},{"category":"Pe","mappings":{"default":{"default":"right white bracket"}},"key":"301B"},{"category":"Ps","mappings":{"default":{"default":"reversed double prime quotation mark"}},"key":"301D"},{"category":"Pe","mappings":{"default":{"default":"double prime quotation mark"}},"key":"301E"},{"category":"Pe","mappings":{"default":{"default":"low double prime quotation mark"}},"key":"301F"},{"category":"Ps","mappings":{"default":{"default":"ornate left parenthesis"},"mathspeak":{"brief":"ornate left p\'ren","sbrief":"ornate L p\'ren"}},"key":"FD3E"},{"category":"Pe","mappings":{"default":{"default":"ornate right parenthesis"},"mathspeak":{"brief":"ornate right p\'ren","sbrief":"ornate R p\'ren"}},"key":"FD3F"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left white lenticular bracket"}},"key":"FE17"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right white lenticular bracket"}},"key":"FE18"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left parenthesis"},"mathspeak":{"brief":"presentation form for vertical left p\'ren","sbrief":"presentation form for vertical L p\'ren"}},"key":"FE35"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right parenthesis"},"mathspeak":{"brief":"presentation form for vertical right p\'ren","sbrief":"presentation form for vertical R p\'ren"}},"key":"FE36"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left brace"},"mathspeak":{"sbrief":"presentation form for vertical L brace"}},"key":"FE37"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right brace"},"mathspeak":{"sbrief":"presentation form for vertical R brace"}},"key":"FE38"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left tortoise shell bracket"}},"key":"FE39"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right tortoise shell bracket"}},"key":"FE3A"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left black lenticular bracket"}},"key":"FE3B"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right black lenticular bracket"}},"key":"FE3C"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left double angle bracket"}},"key":"FE3D"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right double angle bracket"}},"key":"FE3E"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left angle bracket"},"mathspeak":{"sbrief":"presentation form for vertical L angle bracket"}},"key":"FE3F"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right angle bracket"},"mathspeak":{"sbrief":"presentation form for vertical R angle bracket"}},"key":"FE40"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left corner bracket"}},"key":"FE41"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right corner bracket"}},"key":"FE42"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left white corner bracket"}},"key":"FE43"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right white corner bracket"}},"key":"FE44"},{"category":"Ps","mappings":{"default":{"default":"presentation form for vertical left bracket"},"mathspeak":{"brief":"presentation form for vertical left brack","sbrief":"presentation form for vertical L brack"}},"key":"FE47"},{"category":"Pe","mappings":{"default":{"default":"presentation form for vertical right bracket"},"mathspeak":{"brief":"presentation form for vertical right brack","sbrief":"presentation form for vertical R brack"}},"key":"FE48"},{"category":"Ps","mappings":{"default":{"default":"small left parenthesis"},"mathspeak":{"brief":"small left p\'ren","sbrief":"small L p\'ren"}},"key":"FE59"},{"category":"Pe","mappings":{"default":{"default":"small right parenthesis"},"mathspeak":{"brief":"small right p\'ren","sbrief":"small R p\'ren"}},"key":"FE5A"},{"category":"Ps","mappings":{"default":{"default":"small left brace"},"mathspeak":{"sbrief":"small L brace"}},"key":"FE5B"},{"category":"Pe","mappings":{"default":{"default":"small right brace"},"mathspeak":{"sbrief":"small R brace"}},"key":"FE5C"},{"category":"Ps","mappings":{"default":{"default":"small left tortoise shell bracket"}},"key":"FE5D"},{"category":"Pe","mappings":{"default":{"default":"small right tortoise shell bracket"}},"key":"FE5E"},{"category":"Ps","mappings":{"default":{"default":"fullwidth left parenthesis"},"mathspeak":{"brief":"fullwidth left p\'ren","sbrief":"fullwidth L p\'ren"}},"key":"FF08"},{"category":"Pe","mappings":{"default":{"default":"fullwidth right parenthesis"},"mathspeak":{"brief":"fullwidth right p\'ren","sbrief":"fullwidth R p\'ren"}},"key":"FF09"},{"category":"Ps","mappings":{"default":{"default":"fullwidth left bracket"},"mathspeak":{"brief":"fullwidth left brack","sbrief":"fullwidth L brack"}},"key":"FF3B"},{"category":"Pe","mappings":{"default":{"default":"fullwidth right bracket"},"mathspeak":{"brief":"fullwidth right brack","sbrief":"fullwidth R brack"}},"key":"FF3D"},{"category":"Ps","mappings":{"default":{"default":"fullwidth left brace"},"mathspeak":{"sbrief":"fullwidth L brace"}},"key":"FF5B"},{"category":"Pe","mappings":{"default":{"default":"fullwidth right brace"},"mathspeak":{"sbrief":"fullwidth R brace"}},"key":"FF5D"},{"category":"Ps","mappings":{"default":{"default":"fullwidth white left parenthesis"},"mathspeak":{"brief":"fullwidth white left p\'ren","sbrief":"fullwidth white L p\'ren"}},"key":"FF5F"},{"category":"Pe","mappings":{"default":{"default":"fullwidth white right parenthesis"},"mathspeak":{"brief":"fullwidth white right p\'ren","sbrief":"fullwidth white R p\'ren"}},"key":"FF60"},{"category":"Ps","mappings":{"default":{"default":"halfwidth left corner bracket"}},"key":"FF62"},{"category":"Pe","mappings":{"default":{"default":"halfwidth right corner bracket"}},"key":"FF63"}],"en/symbols/math_geometry.min":[{"locale":"en"},{"category":"So","mappings":{"default":{"default":"box drawings light horizontal"}},"key":"2500"},{"category":"So","mappings":{"default":{"default":"box drawings heavy horizontal"}},"key":"2501"},{"category":"So","mappings":{"default":{"default":"box drawings light vertical"}},"key":"2502"},{"category":"So","mappings":{"default":{"default":"box drawings heavy vertical"}},"key":"2503"},{"category":"So","mappings":{"default":{"default":"box drawings light triple dash horizontal"}},"key":"2504"},{"category":"So","mappings":{"default":{"default":"box drawings heavy triple dash horizontal"}},"key":"2505"},{"category":"So","mappings":{"default":{"default":"box drawings light triple dash vertical"}},"key":"2506"},{"category":"So","mappings":{"default":{"default":"box drawings heavy triple dash vertical"}},"key":"2507"},{"category":"So","mappings":{"default":{"default":"box drawings light quadruple dash horizontal"}},"key":"2508"},{"category":"So","mappings":{"default":{"default":"box drawings heavy quadruple dash horizontal"}},"key":"2509"},{"category":"So","mappings":{"default":{"default":"box drawings light quadruple dash vertical"}},"key":"250A"},{"category":"So","mappings":{"default":{"default":"box drawings heavy quadruple dash vertical"}},"key":"250B"},{"category":"So","mappings":{"default":{"default":"box drawings light down and right"}},"key":"250C"},{"category":"So","mappings":{"default":{"default":"box drawings down light and right heavy"}},"key":"250D"},{"category":"So","mappings":{"default":{"default":"box drawings down heavy and right light"}},"key":"250E"},{"category":"So","mappings":{"default":{"default":"box drawings heavy down and right"}},"key":"250F"},{"category":"So","mappings":{"default":{"default":"box drawings light down and left"}},"key":"2510"},{"category":"So","mappings":{"default":{"default":"box drawings down light and left heavy"}},"key":"2511"},{"category":"So","mappings":{"default":{"default":"box drawings down heavy and left light"}},"key":"2512"},{"category":"So","mappings":{"default":{"default":"box drawings heavy down and left"}},"key":"2513"},{"category":"So","mappings":{"default":{"default":"box drawings light up and right"}},"key":"2514"},{"category":"So","mappings":{"default":{"default":"box drawings up light and right heavy"}},"key":"2515"},{"category":"So","mappings":{"default":{"default":"box drawings up heavy and right light"}},"key":"2516"},{"category":"So","mappings":{"default":{"default":"box drawings heavy up and right"}},"key":"2517"},{"category":"So","mappings":{"default":{"default":"box drawings light up and left"}},"key":"2518"},{"category":"So","mappings":{"default":{"default":"box drawings up light and left heavy"}},"key":"2519"},{"category":"So","mappings":{"default":{"default":"box drawings up heavy and left light"}},"key":"251A"},{"category":"So","mappings":{"default":{"default":"box drawings heavy up and left"}},"key":"251B"},{"category":"So","mappings":{"default":{"default":"box drawings light vertical and right"}},"key":"251C"},{"category":"So","mappings":{"default":{"default":"box drawings vertical light and right heavy"}},"key":"251D"},{"category":"So","mappings":{"default":{"default":"box drawings up heavy and right down light"}},"key":"251E"},{"category":"So","mappings":{"default":{"default":"box drawings down heavy and right up light"}},"key":"251F"},{"category":"So","mappings":{"default":{"default":"box drawings vertical heavy and right light"}},"key":"2520"},{"category":"So","mappings":{"default":{"default":"box drawings down light and right up heavy"}},"key":"2521"},{"category":"So","mappings":{"default":{"default":"box drawings up light and right down heavy"}},"key":"2522"},{"category":"So","mappings":{"default":{"default":"box drawings heavy vertical and right"}},"key":"2523"},{"category":"So","mappings":{"default":{"default":"box drawings light vertical and left"}},"key":"2524"},{"category":"So","mappings":{"default":{"default":"box drawings vertical light and left heavy"}},"key":"2525"},{"category":"So","mappings":{"default":{"default":"box drawings up heavy and left down light"}},"key":"2526"},{"category":"So","mappings":{"default":{"default":"box drawings down heavy and left up light"}},"key":"2527"},{"category":"So","mappings":{"default":{"default":"box drawings vertical heavy and left light"}},"key":"2528"},{"category":"So","mappings":{"default":{"default":"box drawings down light and left up heavy"}},"key":"2529"},{"category":"So","mappings":{"default":{"default":"box drawings up light and left down heavy"}},"key":"252A"},{"category":"So","mappings":{"default":{"default":"box drawings heavy vertical and left"}},"key":"252B"},{"category":"So","mappings":{"default":{"default":"box drawings light down and horizontal"}},"key":"252C"},{"category":"So","mappings":{"default":{"default":"box drawings left heavy and right down light"}},"key":"252D"},{"category":"So","mappings":{"default":{"default":"box drawings right heavy and left down light"}},"key":"252E"},{"category":"So","mappings":{"default":{"default":"box drawings down light and horizontal heavy"}},"key":"252F"},{"category":"So","mappings":{"default":{"default":"box drawings down heavy and horizontal light"}},"key":"2530"},{"category":"So","mappings":{"default":{"default":"box drawings right light and left down heavy"}},"key":"2531"},{"category":"So","mappings":{"default":{"default":"box drawings left light and right down heavy"}},"key":"2532"},{"category":"So","mappings":{"default":{"default":"box drawings heavy down and horizontal"}},"key":"2533"},{"category":"So","mappings":{"default":{"default":"box drawings light up and horizontal"}},"key":"2534"},{"category":"So","mappings":{"default":{"default":"box drawings left heavy and right up light"}},"key":"2535"},{"category":"So","mappings":{"default":{"default":"box drawings right heavy and left up light"}},"key":"2536"},{"category":"So","mappings":{"default":{"default":"box drawings up light and horizontal heavy"}},"key":"2537"},{"category":"So","mappings":{"default":{"default":"box drawings up heavy and horizontal light"}},"key":"2538"},{"category":"So","mappings":{"default":{"default":"box drawings right light and left up heavy"}},"key":"2539"},{"category":"So","mappings":{"default":{"default":"box drawings left light and right up heavy"}},"key":"253A"},{"category":"So","mappings":{"default":{"default":"box drawings heavy up and horizontal"}},"key":"253B"},{"category":"So","mappings":{"default":{"default":"box drawings light vertical and horizontal"}},"key":"253C"},{"category":"So","mappings":{"default":{"default":"box drawings left heavy and right vertical light"}},"key":"253D"},{"category":"So","mappings":{"default":{"default":"box drawings right heavy and left vertical light"}},"key":"253E"},{"category":"So","mappings":{"default":{"default":"box drawings vertical light and horizontal heavy"}},"key":"253F"},{"category":"So","mappings":{"default":{"default":"box drawings up heavy and down horizontal light"}},"key":"2540"},{"category":"So","mappings":{"default":{"default":"box drawings down heavy and up horizontal light"}},"key":"2541"},{"category":"So","mappings":{"default":{"default":"box drawings vertical heavy and horizontal light"}},"key":"2542"},{"category":"So","mappings":{"default":{"default":"box drawings left up heavy and right down light"}},"key":"2543"},{"category":"So","mappings":{"default":{"default":"box drawings right up heavy and left down light"}},"key":"2544"},{"category":"So","mappings":{"default":{"default":"box drawings left down heavy and right up light"}},"key":"2545"},{"category":"So","mappings":{"default":{"default":"box drawings right down heavy and left up light"}},"key":"2546"},{"category":"So","mappings":{"default":{"default":"box drawings down light and up horizontal heavy"}},"key":"2547"},{"category":"So","mappings":{"default":{"default":"box drawings up light and down horizontal heavy"}},"key":"2548"},{"category":"So","mappings":{"default":{"default":"box drawings right light and left vertical heavy"}},"key":"2549"},{"category":"So","mappings":{"default":{"default":"box drawings left light and right vertical heavy"}},"key":"254A"},{"category":"So","mappings":{"default":{"default":"box drawings heavy vertical and horizontal"}},"key":"254B"},{"category":"So","mappings":{"default":{"default":"box drawings light double dash horizontal"}},"key":"254C"},{"category":"So","mappings":{"default":{"default":"box drawings heavy double dash horizontal"}},"key":"254D"},{"category":"So","mappings":{"default":{"default":"box drawings light double dash vertical"}},"key":"254E"},{"category":"So","mappings":{"default":{"default":"box drawings heavy double dash vertical"}},"key":"254F"},{"category":"So","mappings":{"default":{"default":"box drawings double horizontal"}},"key":"2550"},{"category":"So","mappings":{"default":{"default":"box drawings double vertical"}},"key":"2551"},{"category":"So","mappings":{"default":{"default":"box drawings down single and right double"}},"key":"2552"},{"category":"So","mappings":{"default":{"default":"box drawings down double and right single"}},"key":"2553"},{"category":"So","mappings":{"default":{"default":"box drawings double down and right"}},"key":"2554"},{"category":"So","mappings":{"default":{"default":"box drawings down single and left double"}},"key":"2555"},{"category":"So","mappings":{"default":{"default":"box drawings down double and left single"}},"key":"2556"},{"category":"So","mappings":{"default":{"default":"box drawings double down and left"}},"key":"2557"},{"category":"So","mappings":{"default":{"default":"box drawings up single and right double"}},"key":"2558"},{"category":"So","mappings":{"default":{"default":"box drawings up double and right single"}},"key":"2559"},{"category":"So","mappings":{"default":{"default":"box drawings double up and right"}},"key":"255A"},{"category":"So","mappings":{"default":{"default":"box drawings up single and left double"}},"key":"255B"},{"category":"So","mappings":{"default":{"default":"box drawings up double and left single"}},"key":"255C"},{"category":"So","mappings":{"default":{"default":"box drawings double up and left"}},"key":"255D"},{"category":"So","mappings":{"default":{"default":"box drawings vertical single and right double"}},"key":"255E"},{"category":"So","mappings":{"default":{"default":"box drawings vertical double and right single"}},"key":"255F"},{"category":"So","mappings":{"default":{"default":"box drawings double vertical and right"}},"key":"2560"},{"category":"So","mappings":{"default":{"default":"box drawings vertical single and left double"}},"key":"2561"},{"category":"So","mappings":{"default":{"default":"box drawings vertical double and left single"}},"key":"2562"},{"category":"So","mappings":{"default":{"default":"box drawings double vertical and left"}},"key":"2563"},{"category":"So","mappings":{"default":{"default":"box drawings down single and horizontal double"}},"key":"2564"},{"category":"So","mappings":{"default":{"default":"box drawings down double and horizontal single"}},"key":"2565"},{"category":"So","mappings":{"default":{"default":"box drawings double down and horizontal"}},"key":"2566"},{"category":"So","mappings":{"default":{"default":"box drawings up single and horizontal double"}},"key":"2567"},{"category":"So","mappings":{"default":{"default":"box drawings up double and horizontal single"}},"key":"2568"},{"category":"So","mappings":{"default":{"default":"box drawings double up and horizontal"}},"key":"2569"},{"category":"So","mappings":{"default":{"default":"box drawings vertical single and horizontal double"}},"key":"256A"},{"category":"So","mappings":{"default":{"default":"box drawings vertical double and horizontal single"}},"key":"256B"},{"category":"So","mappings":{"default":{"default":"box drawings double vertical and horizontal"}},"key":"256C"},{"category":"So","mappings":{"default":{"default":"box drawings light arc down and right"}},"key":"256D"},{"category":"So","mappings":{"default":{"default":"box drawings light arc down and left"}},"key":"256E"},{"category":"So","mappings":{"default":{"default":"box drawings light arc up and left"}},"key":"256F"},{"category":"So","mappings":{"default":{"default":"box drawings light arc up and right"}},"key":"2570"},{"category":"So","mappings":{"default":{"default":"box drawings light diagonal upper right to lower left"}},"key":"2571"},{"category":"So","mappings":{"default":{"default":"box drawings light diagonal upper left to lower right"}},"key":"2572"},{"category":"So","mappings":{"default":{"default":"box drawings light diagonal cross"}},"key":"2573"},{"category":"So","mappings":{"default":{"default":"box drawings light left"}},"key":"2574"},{"category":"So","mappings":{"default":{"default":"box drawings light up"}},"key":"2575"},{"category":"So","mappings":{"default":{"default":"box drawings light right"}},"key":"2576"},{"category":"So","mappings":{"default":{"default":"box drawings light down"}},"key":"2577"},{"category":"So","mappings":{"default":{"default":"box drawings heavy left"}},"key":"2578"},{"category":"So","mappings":{"default":{"default":"box drawings heavy up"}},"key":"2579"},{"category":"So","mappings":{"default":{"default":"box drawings heavy right"}},"key":"257A"},{"category":"So","mappings":{"default":{"default":"box drawings heavy down"}},"key":"257B"},{"category":"So","mappings":{"default":{"default":"box drawings light left and heavy right"}},"key":"257C"},{"category":"So","mappings":{"default":{"default":"box drawings light up and heavy down"}},"key":"257D"},{"category":"So","mappings":{"default":{"default":"box drawings heavy left and light right"}},"key":"257E"},{"category":"So","mappings":{"default":{"default":"box drawings heavy up and light down"}},"key":"257F"},{"category":"So","mappings":{"default":{"default":"upper half block"}},"key":"2580"},{"category":"So","mappings":{"default":{"default":"lower one eighth block"}},"key":"2581"},{"category":"So","mappings":{"default":{"default":"lower one quarter block"}},"key":"2582"},{"category":"So","mappings":{"default":{"default":"lower three eighths block"}},"key":"2583"},{"category":"So","mappings":{"default":{"default":"lower half block"}},"key":"2584"},{"category":"So","mappings":{"default":{"default":"lower five eighths block"}},"key":"2585"},{"category":"So","mappings":{"default":{"default":"lower three quarters block"}},"key":"2586"},{"category":"So","mappings":{"default":{"default":"lower seven eighths block"}},"key":"2587"},{"category":"So","mappings":{"default":{"default":"full block"}},"key":"2588"},{"category":"So","mappings":{"default":{"default":"left seven eighths block"}},"key":"2589"},{"category":"So","mappings":{"default":{"default":"left three quarters block"}},"key":"258A"},{"category":"So","mappings":{"default":{"default":"left five eighths block"}},"key":"258B"},{"category":"So","mappings":{"default":{"default":"left half block"}},"key":"258C"},{"category":"So","mappings":{"default":{"default":"left three eighths block"}},"key":"258D"},{"category":"So","mappings":{"default":{"default":"left one quarter block"}},"key":"258E"},{"category":"So","mappings":{"default":{"default":"left one eighth block"}},"key":"258F"},{"category":"So","mappings":{"default":{"default":"right half block"}},"key":"2590"},{"category":"So","mappings":{"default":{"default":"light shade"}},"key":"2591"},{"category":"So","mappings":{"default":{"default":"medium shade"}},"key":"2592"},{"category":"So","mappings":{"default":{"default":"dark shade"}},"key":"2593"},{"category":"So","mappings":{"default":{"default":"upper one eighth block"}},"key":"2594"},{"category":"So","mappings":{"default":{"default":"right one eighth block"}},"key":"2595"},{"category":"So","mappings":{"default":{"default":"quadrant lower left"}},"key":"2596"},{"category":"So","mappings":{"default":{"default":"quadrant lower right"}},"key":"2597"},{"category":"So","mappings":{"default":{"default":"quadrant upper left"}},"key":"2598"},{"category":"So","mappings":{"default":{"default":"quadrant upper left and lower left and lower right"}},"key":"2599"},{"category":"So","mappings":{"default":{"default":"quadrant upper left and lower right"}},"key":"259A"},{"category":"So","mappings":{"default":{"default":"quadrant upper left and upper right and lower left"}},"key":"259B"},{"category":"So","mappings":{"default":{"default":"quadrant upper left and upper right and lower right"}},"key":"259C"},{"category":"So","mappings":{"default":{"default":"quadrant upper right"}},"key":"259D"},{"category":"So","mappings":{"default":{"default":"quadrant upper right and lower left"}},"key":"259E"},{"category":"So","mappings":{"default":{"default":"quadrant upper right and lower left and lower right"}},"key":"259F"},{"category":"So","mappings":{"default":{"default":"black square"}},"key":"25A0"},{"category":"So","mappings":{"default":{"default":"white square"}},"key":"25A1"},{"category":"So","mappings":{"default":{"default":"white square with rounded corners"}},"key":"25A2"},{"category":"So","mappings":{"default":{"default":"white square containing black small square"}},"key":"25A3"},{"category":"So","mappings":{"default":{"default":"square with horizontal fill"}},"key":"25A4"},{"category":"So","mappings":{"default":{"default":"square with vertical fill"}},"key":"25A5"},{"category":"So","mappings":{"default":{"default":"square with orthogonal crosshatch fill"}},"key":"25A6"},{"category":"So","mappings":{"default":{"default":"square with upper left to lower right fill"}},"key":"25A7"},{"category":"So","mappings":{"default":{"default":"square with upper right to lower left fill"}},"key":"25A8"},{"category":"So","mappings":{"default":{"default":"square with diagonal crosshatch fill"}},"key":"25A9"},{"category":"So","mappings":{"default":{"default":"black small square"}},"key":"25AA"},{"category":"So","mappings":{"default":{"default":"white small square"}},"key":"25AB"},{"category":"So","mappings":{"default":{"default":"black rectangle"}},"key":"25AC"},{"category":"So","mappings":{"default":{"default":"white rectangle"}},"key":"25AD"},{"category":"So","mappings":{"default":{"default":"black vertical rectangle"}},"key":"25AE"},{"category":"So","mappings":{"default":{"default":"white vertical rectangle"}},"key":"25AF"},{"category":"So","mappings":{"default":{"default":"black parallelogram"}},"key":"25B0"},{"category":"So","mappings":{"default":{"default":"white parallelogram"}},"key":"25B1"},{"category":"So","mappings":{"default":{"default":"black up pointing triangle"}},"key":"25B2"},{"category":"So","mappings":{"default":{"default":"white up pointing triangle"}},"key":"25B3"},{"category":"So","mappings":{"default":{"default":"black up pointing small triangle"}},"key":"25B4"},{"category":"So","mappings":{"default":{"default":"white up pointing small triangle"}},"key":"25B5"},{"category":"So","mappings":{"default":{"default":"black right pointing triangle"}},"key":"25B6"},{"category":"Sm","mappings":{"default":{"default":"white right pointing triangle"}},"key":"25B7"},{"category":"So","mappings":{"default":{"default":"black right pointing small triangle"}},"key":"25B8"},{"category":"So","mappings":{"default":{"default":"white right pointing small triangle"}},"key":"25B9"},{"category":"So","mappings":{"default":{"default":"black right pointing pointer"}},"key":"25BA"},{"category":"So","mappings":{"default":{"default":"white right pointing pointer"}},"key":"25BB"},{"category":"So","mappings":{"default":{"default":"black down pointing triangle"}},"key":"25BC"},{"category":"So","mappings":{"default":{"default":"white down pointing triangle"}},"key":"25BD"},{"category":"So","mappings":{"default":{"default":"black down pointing small triangle"}},"key":"25BE"},{"category":"So","mappings":{"default":{"default":"white down pointing small triangle"}},"key":"25BF"},{"category":"So","mappings":{"default":{"default":"black left pointing triangle"}},"key":"25C0"},{"category":"Sm","mappings":{"default":{"default":"white left pointing triangle"}},"key":"25C1"},{"category":"So","mappings":{"default":{"default":"black left pointing small triangle"}},"key":"25C2"},{"category":"So","mappings":{"default":{"default":"white left pointing small triangle"}},"key":"25C3"},{"category":"So","mappings":{"default":{"default":"black left pointing pointer"}},"key":"25C4"},{"category":"So","mappings":{"default":{"default":"white left pointing pointer"}},"key":"25C5"},{"category":"So","mappings":{"default":{"default":"black diamond"}},"key":"25C6"},{"category":"So","mappings":{"default":{"default":"white diamond"}},"key":"25C7"},{"category":"So","mappings":{"default":{"default":"white diamond containing black small diamond"}},"key":"25C8"},{"category":"So","mappings":{"default":{"default":"fisheye"}},"key":"25C9"},{"category":"So","mappings":{"default":{"default":"lozenge"}},"key":"25CA"},{"category":"So","mappings":{"default":{"default":"white circle"}},"key":"25CB"},{"category":"So","mappings":{"default":{"default":"dotted circle"}},"key":"25CC"},{"category":"So","mappings":{"default":{"default":"circle with vertical fill"}},"key":"25CD"},{"category":"So","mappings":{"default":{"default":"bullseye"}},"key":"25CE"},{"category":"So","mappings":{"default":{"default":"black circle"}},"key":"25CF"},{"category":"So","mappings":{"default":{"default":"circle with left half black"}},"key":"25D0"},{"category":"So","mappings":{"default":{"default":"circle with right half black"}},"key":"25D1"},{"category":"So","mappings":{"default":{"default":"circle with lower half black"}},"key":"25D2"},{"category":"So","mappings":{"default":{"default":"circle with upper half black"}},"key":"25D3"},{"category":"So","mappings":{"default":{"default":"circle with upper right quadrant black"}},"key":"25D4"},{"category":"So","mappings":{"default":{"default":"circle with all but upper left quadrant black"}},"key":"25D5"},{"category":"So","mappings":{"default":{"default":"left half black circle"}},"key":"25D6"},{"category":"So","mappings":{"default":{"default":"right half black circle"}},"key":"25D7"},{"category":"So","mappings":{"default":{"default":"inverse bullet"}},"key":"25D8"},{"category":"So","mappings":{"default":{"default":"inverse white circle"}},"key":"25D9"},{"category":"So","mappings":{"default":{"default":"upper half inverse white circle"}},"key":"25DA"},{"category":"So","mappings":{"default":{"default":"lower half inverse white circle"}},"key":"25DB"},{"category":"So","mappings":{"default":{"default":"upper left quadrant circular arc"}},"key":"25DC"},{"category":"So","mappings":{"default":{"default":"upper right quadrant circular arc"}},"key":"25DD"},{"category":"So","mappings":{"default":{"default":"lower right quadrant circular arc"}},"key":"25DE"},{"category":"So","mappings":{"default":{"default":"lower left quadrant circular arc"}},"key":"25DF"},{"category":"So","mappings":{"default":{"default":"upper half circle"}},"key":"25E0"},{"category":"So","mappings":{"default":{"default":"lower half circle"}},"key":"25E1"},{"category":"So","mappings":{"default":{"default":"black lower right triangle"}},"key":"25E2"},{"category":"So","mappings":{"default":{"default":"black lower left triangle"}},"key":"25E3"},{"category":"So","mappings":{"default":{"default":"black upper left triangle"}},"key":"25E4"},{"category":"So","mappings":{"default":{"default":"black upper right triangle"}},"key":"25E5"},{"category":"So","mappings":{"default":{"default":"white bullet"}},"key":"25E6"},{"category":"So","mappings":{"default":{"default":"square with left half black"}},"key":"25E7"},{"category":"So","mappings":{"default":{"default":"square with right half black"}},"key":"25E8"},{"category":"So","mappings":{"default":{"default":"square with upper left diagonal half black"}},"key":"25E9"},{"category":"So","mappings":{"default":{"default":"square with lower right diagonal half black"}},"key":"25EA"},{"category":"So","mappings":{"default":{"default":"white square with vertical bisecting line"}},"key":"25EB"},{"category":"So","mappings":{"default":{"default":"white up pointing triangle with dot"}},"key":"25EC"},{"category":"So","mappings":{"default":{"default":"up pointing triangle with left half black"}},"key":"25ED"},{"category":"So","mappings":{"default":{"default":"up pointing triangle with right half black"}},"key":"25EE"},{"category":"So","mappings":{"default":{"default":"large circle"}},"key":"25EF"},{"category":"So","mappings":{"default":{"default":"white square with upper left quadrant"}},"key":"25F0"},{"category":"So","mappings":{"default":{"default":"white square with lower left quadrant"}},"key":"25F1"},{"category":"So","mappings":{"default":{"default":"white square with lower right quadrant"}},"key":"25F2"},{"category":"So","mappings":{"default":{"default":"white square with upper right quadrant"}},"key":"25F3"},{"category":"So","mappings":{"default":{"default":"white circle with upper left quadrant"}},"key":"25F4"},{"category":"So","mappings":{"default":{"default":"white circle with lower left quadrant"}},"key":"25F5"},{"category":"So","mappings":{"default":{"default":"white circle with lower right quadrant"}},"key":"25F6"},{"category":"So","mappings":{"default":{"default":"white circle with upper right quadrant"}},"key":"25F7"},{"category":"Sm","mappings":{"default":{"default":"upper left triangle"}},"key":"25F8"},{"category":"Sm","mappings":{"default":{"default":"upper right triangle"}},"key":"25F9"},{"category":"Sm","mappings":{"default":{"default":"lower left triangle"}},"key":"25FA"},{"category":"Sm","mappings":{"default":{"default":"white medium square"}},"key":"25FB"},{"category":"Sm","mappings":{"default":{"default":"black medium square"}},"key":"25FC"},{"category":"Sm","mappings":{"default":{"default":"white medium small square"}},"key":"25FD"},{"category":"Sm","mappings":{"default":{"default":"black medium small square"}},"key":"25FE"},{"category":"Sm","mappings":{"default":{"default":"lower right triangle"}},"key":"25FF"},{"category":"So","mappings":{"default":{"default":"square with top half black"}},"key":"2B12"},{"category":"So","mappings":{"default":{"default":"square with bottom half black"}},"key":"2B13"},{"category":"So","mappings":{"default":{"default":"square with upper right diagonal half black"}},"key":"2B14"},{"category":"So","mappings":{"default":{"default":"square with lower left diagonal half black"}},"key":"2B15"},{"category":"So","mappings":{"default":{"default":"diamond with left half black"}},"key":"2B16"},{"category":"So","mappings":{"default":{"default":"diamond with right half black"}},"key":"2B17"},{"category":"So","mappings":{"default":{"default":"diamond with top half black"}},"key":"2B18"},{"category":"So","mappings":{"default":{"default":"diamond with bottom half black"}},"key":"2B19"},{"category":"So","mappings":{"default":{"default":"dotted square"}},"key":"2B1A"},{"category":"So","mappings":{"default":{"default":"black large square"}},"key":"2B1B"},{"category":"So","mappings":{"default":{"default":"white large square"}},"key":"2B1C"},{"category":"So","mappings":{"default":{"default":"black very small square"}},"key":"2B1D"},{"category":"So","mappings":{"default":{"default":"white very small square"}},"key":"2B1E"},{"category":"So","mappings":{"default":{"default":"black pentagon"}},"key":"2B1F"},{"category":"So","mappings":{"default":{"default":"white pentagon"}},"key":"2B20"},{"category":"So","mappings":{"default":{"default":"white hexagon"}},"key":"2B21"},{"category":"So","mappings":{"default":{"default":"black hexagon"}},"key":"2B22"},{"category":"So","mappings":{"default":{"default":"horizontal black hexagon"}},"key":"2B23"},{"category":"So","mappings":{"default":{"default":"black large circle"}},"key":"2B24"},{"category":"So","mappings":{"default":{"default":"black medium diamond"}},"key":"2B25"},{"category":"So","mappings":{"default":{"default":"white medium diamond"}},"key":"2B26"},{"category":"So","mappings":{"default":{"default":"black medium lozenge"}},"key":"2B27"},{"category":"So","mappings":{"default":{"default":"white medium lozenge"}},"key":"2B28"},{"category":"So","mappings":{"default":{"default":"black small diamond"}},"key":"2B29"},{"category":"So","mappings":{"default":{"default":"black small lozenge"}},"key":"2B2A"},{"category":"So","mappings":{"default":{"default":"white small lozenge"}},"key":"2B2B"},{"category":"So","mappings":{"default":{"default":"black horizontal ellipse"}},"key":"2B2C"},{"category":"So","mappings":{"default":{"default":"white horizontal ellipse"}},"key":"2B2D"},{"category":"So","mappings":{"default":{"default":"black vertical ellipse"}},"key":"2B2E"},{"category":"So","mappings":{"default":{"default":"white vertical ellipse"}},"key":"2B2F"},{"category":"So","mappings":{"default":{"default":"white medium star"}},"key":"2B50"},{"category":"So","mappings":{"default":{"default":"black small star"}},"key":"2B51"},{"category":"So","mappings":{"default":{"default":"white small star"}},"key":"2B52"},{"category":"So","mappings":{"default":{"default":"black right pointing pentagon"}},"key":"2B53"},{"category":"So","mappings":{"default":{"default":"white right pointing pentagon"}},"key":"2B54"},{"category":"So","mappings":{"default":{"default":"heavy large circle"}},"key":"2B55"},{"category":"So","mappings":{"default":{"default":"heavy oval with oval inside"}},"key":"2B56"},{"category":"So","mappings":{"default":{"default":"heavy circle with circle inside"}},"key":"2B57"},{"category":"So","mappings":{"default":{"default":"heavy circle"}},"key":"2B58"},{"category":"So","mappings":{"default":{"default":"heavy circled saltire"}},"key":"2B59"}],"en/symbols/math_harpoons.min":[{"locale":"en"},{"category":"So","mappings":{"default":{"default":"left harpoon with barb up"}},"key":"21BC"},{"category":"So","mappings":{"default":{"default":"left harpoon with barb down"}},"key":"21BD"},{"category":"So","mappings":{"default":{"default":"up harpoon with barb right"}},"key":"21BE"},{"category":"So","mappings":{"default":{"default":"up harpoon with barb left"}},"key":"21BF"},{"category":"So","mappings":{"default":{"default":"right harpoon with barb up"}},"key":"21C0"},{"category":"So","mappings":{"default":{"default":"right harpoon with barb down"}},"key":"21C1"},{"category":"So","mappings":{"default":{"default":"down harpoon with barb right"}},"key":"21C2"},{"category":"So","mappings":{"default":{"default":"down harpoon with barb left"}},"key":"21C3"},{"category":"So","mappings":{"default":{"default":"left harpoon over right harpoon"}},"key":"21CB"},{"category":"So","mappings":{"default":{"default":"right harpoon over left harpoon"}},"key":"21CC"},{"category":"Sm","mappings":{"default":{"default":"left barb up right barb down harpoon"}},"key":"294A"},{"category":"Sm","mappings":{"default":{"default":"left barb down right barb up harpoon"}},"key":"294B"},{"category":"Sm","mappings":{"default":{"default":"up barb right down barb left harpoon"}},"key":"294C"},{"category":"Sm","mappings":{"default":{"default":"up barb left down barb right harpoon"}},"key":"294D"},{"category":"Sm","mappings":{"default":{"default":"left barb up right barb up harpoon"}},"key":"294E"},{"category":"Sm","mappings":{"default":{"default":"up barb right down barb right harpoon"}},"key":"294F"},{"category":"Sm","mappings":{"default":{"default":"left barb down right barb down harpoon"}},"key":"2950"},{"category":"Sm","mappings":{"default":{"default":"up barb left down barb left harpoon"}},"key":"2951"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb up to bar"}},"key":"2952"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb up to bar"}},"key":"2953"},{"category":"Sm","mappings":{"default":{"default":"up harpoon with barb right to bar"}},"key":"2954"},{"category":"Sm","mappings":{"default":{"default":"down harpoon with barb right to bar"}},"key":"2955"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb down to bar"}},"key":"2956"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb down to bar"}},"key":"2957"},{"category":"Sm","mappings":{"default":{"default":"up harpoon with barb left to bar"}},"key":"2958"},{"category":"Sm","mappings":{"default":{"default":"down harpoon with barb left to bar"}},"key":"2959"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb up from bar"}},"key":"295A"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb up from bar"}},"key":"295B"},{"category":"Sm","mappings":{"default":{"default":"up harpoon with barb right from bar"}},"key":"295C"},{"category":"Sm","mappings":{"default":{"default":"down harpoon with barb right from bar"}},"key":"295D"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb down from bar"}},"key":"295E"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb down from bar"}},"key":"295F"},{"category":"Sm","mappings":{"default":{"default":"up harpoon with barb left from bar"}},"key":"2960"},{"category":"Sm","mappings":{"default":{"default":"down harpoon with barb left from bar"}},"key":"2961"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb up above left harpoon with barb down"}},"key":"2962"},{"category":"Sm","mappings":{"default":{"default":"up harpoon with barb left beside up harpoon with barb right"}},"key":"2963"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb up above right harpoon with barb down"}},"key":"2964"},{"category":"Sm","mappings":{"default":{"default":"down harpoon with barb left beside down harpoon with barb right"}},"key":"2965"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb up above right harpoon with barb up"}},"key":"2966"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb down above right harpoon with barb down"}},"key":"2967"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb up above left harpoon with barb up"}},"key":"2968"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb down above left harpoon with barb down"}},"key":"2969"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb up above long dash"}},"key":"296A"},{"category":"Sm","mappings":{"default":{"default":"left harpoon with barb down below long dash"}},"key":"296B"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb up above long dash"}},"key":"296C"},{"category":"Sm","mappings":{"default":{"default":"right harpoon with barb down below long dash"}},"key":"296D"},{"category":"Sm","mappings":{"default":{"default":"up harpoon with barb left beside down harpoon with barb right"}},"key":"296E"},{"category":"Sm","mappings":{"default":{"default":"down harpoon with barb left beside up harpoon with barb right"}},"key":"296F"},{"category":"Sm","mappings":{"default":{"default":"left fish tail"}},"key":"297C"},{"category":"Sm","mappings":{"default":{"default":"right fish tail"}},"key":"297D"},{"category":"Sm","mappings":{"default":{"default":"up fish tail"}},"key":"297E"},{"category":"Sm","mappings":{"default":{"default":"down fish tail"}},"key":"297F"}],"en/symbols/math_non_characters.min":[{"locale":"en"},{"category":"Ll","mappings":{"default":{"default":"italic h over two pi","physics":"planck constant over two pi"}},"key":"210F"},{"category":"So","mappings":{"default":{"default":"l b bar"}},"key":"2114"},{"category":"So","mappings":{"default":{"default":"numero"}},"key":"2116"},{"category":"So","mappings":{"default":{"default":"sound recording copyright"}},"key":"2117"},{"category":"So","mappings":{"default":{"default":"prescription take"}},"key":"211E"},{"category":"So","mappings":{"default":{"default":"response"}},"key":"211F"},{"category":"So","mappings":{"default":{"default":"service mark"}},"key":"2120"},{"category":"So","mappings":{"default":{"default":"telephone sign","alternative":"t e l symbol"}},"key":"2121"},{"category":"So","mappings":{"default":{"default":"trade mark"}},"key":"2122"},{"category":"So","mappings":{"default":{"default":"versicle"}},"key":"2123"},{"category":"So","mappings":{"default":{"default":"ounce"}},"key":"2125"},{"category":"Lu","mappings":{"default":{"default":"ohm"}},"key":"2126"},{"category":"So","mappings":{"default":{"default":"inverted ohm"}},"key":"2127"},{"category":"Lu","mappings":{"default":{"default":"kelvin"}},"key":"212A"},{"category":"Lu","mappings":{"default":{"default":"angstrom"}},"key":"212B"},{"category":"So","mappings":{"default":{"default":"estimated"}},"key":"212E"},{"category":"Lu","mappings":{"default":{"default":"turned cap F"},"mathspeak":{"default":"turned upper F"}},"key":"2132"},{"category":"Ll","mappings":{"default":{"default":"information source"}},"key":"2139"},{"category":"So","mappings":{"default":{"default":"rotated cap Q"},"mathspeak":{"default":"rotated upper Q"}},"key":"213A"},{"category":"So","mappings":{"default":{"default":"facsimile sign"}},"key":"213B"},{"category":"Sm","mappings":{"default":{"default":"turned sans serif cap G"},"mathspeak":{"default":"turned sans serif upper G"}},"key":"2141"},{"category":"Sm","mappings":{"default":{"default":"turned sans serif cap L"},"mathspeak":{"default":"turned sans serif upper L"}},"key":"2142"},{"category":"Sm","mappings":{"default":{"default":"reversed sans serif cap L"},"mathspeak":{"default":"reversed sans serif upper L"}},"key":"2143"},{"category":"Sm","mappings":{"default":{"default":"turned sans serif cap Y"},"mathspeak":{"default":"turned sans serif upper Y"}},"key":"2144"}],"en/symbols/math_symbols.min":[{"locale":"en"},{"category":"Po","mappings":{"default":{"default":"exclamation mark"}},"key":"0021"},{"category":"Po","mappings":{"default":{"default":"quotation mark"}},"key":"0022"},{"category":"Po","mappings":{"default":{"default":"number sign","alternative":"hash"},"mathspeak":{"brief":"num sign","sbrief":"num sign"}},"key":"0023"},{"category":"Sc","mappings":{"default":{"default":"dollar sign"}},"key":"0024"},{"category":"Po","mappings":{"default":{"default":"percent sign"}},"key":"0025"},{"category":"Po","mappings":{"default":{"default":"ampersand"}},"key":"0026"},{"category":"Po","mappings":{"default":{"default":"prime"}},"key":"0027"},{"category":"Po","mappings":{"default":{"default":"asterisk"}},"key":"002A"},{"category":"Sm","mappings":{"default":{"default":"plus"}},"key":"002B"},{"category":"Po","mappings":{"default":{"default":"comma"}},"key":"002C"},{"category":"Pd","mappings":{"default":{"default":"minus"},"mathspeak":{"default":"hyphen"}},"key":"002D"},{"category":"Po","mappings":{"default":{"default":"period"}},"key":"002E"},{"category":"Po","mappings":{"default":{"default":"slash","alternative":"solidus"},"emacspeak":{"default":"slash"}},"key":"002F"},{"category":"Po","mappings":{"default":{"default":"colon"}},"key":"003A"},{"category":"Po","mappings":{"default":{"default":"semicolon"}},"key":"003B"},{"category":"Sm","mappings":{"default":{"default":"less than"},"clearspeak":{"default":"is less than"}},"key":"003C"},{"category":"Sm","mappings":{"default":{"default":"equals"}},"key":"003D"},{"category":"Sm","mappings":{"default":{"default":"greater than"},"clearspeak":{"default":"is greater than"}},"key":"003E"},{"category":"Po","mappings":{"default":{"default":"question mark"}},"key":"003F"},{"category":"Po","mappings":{"default":{"default":"at"}},"key":"0040"},{"category":"Po","mappings":{"default":{"default":"backslash"}},"key":"005C"},{"category":"Sk","mappings":{"default":{"default":"hat"},"mathspeak":{"default":"caret"}},"key":"005E"},{"category":"Pc","mappings":{"default":{"default":"bar","alternative":"underline"}},"key":"005F"},{"category":"Sk","mappings":{"default":{"default":"grave"},"mathspeak":{"default":"grave"}},"key":"0060"},{"category":"Sm","mappings":{"default":{"default":"vertical bar"}},"key":"007C"},{"category":"Sm","mappings":{"default":{"default":"tilde"}},"key":"007E"},{"category":"Po","mappings":{"default":{"default":"inverted exclamation mark"}},"key":"00A1"},{"category":"Sc","mappings":{"default":{"default":"cent sign"}},"key":"00A2"},{"category":"Sc","mappings":{"default":{"default":"pound sign"}},"key":"00A3"},{"category":"Sc","mappings":{"default":{"default":"currency sign"}},"key":"00A4"},{"category":"Sc","mappings":{"default":{"default":"yen sign"}},"key":"00A5"},{"category":"So","mappings":{"default":{"default":"broken vertical bar"}},"key":"00A6"},{"category":"Po","mappings":{"default":{"default":"section sign"}},"key":"00A7"},{"category":"Sk","mappings":{"default":{"default":"two dots"}},"key":"00A8"},{"category":"So","mappings":{"default":{"default":"copyright sign"}},"key":"00A9"},{"category":"Lo","mappings":{"default":{"default":"feminine ordinal indicator"}},"key":"00AA"},{"category":"Pi","mappings":{"default":{"default":"left pointing guillemet"}},"key":"00AB"},{"category":"Sm","mappings":{"default":{"default":"not sign"}},"key":"00AC"},{"category":"So","mappings":{"default":{"default":"registered sign"},"mathspeak":{"default":"registered trade mark sign"},"clearspeak":{"default":"trade mark sign"}},"key":"00AE"},{"category":"Sk","mappings":{"default":{"default":"bar"}},"key":"00AF"},{"category":"So","mappings":{"default":{"default":"degree"},"clearspeak":{"default":"degrees"}},"key":"00B0"},{"category":"Sm","mappings":{"default":{"default":"plus or minus"}},"key":"00B1"},{"category":"Sk","mappings":{"default":{"default":"acute"}},"key":"00B4"},{"category":"Ll","mappings":{"default":{"default":"micro sign"}},"key":"00B5"},{"category":"Po","mappings":{"default":{"default":"paragraph sign"}},"key":"00B6"},{"category":"Po","mappings":{"default":{"default":"dot"},"clearspeak":{"default":"times"}},"key":"00B7"},{"category":"Sk","mappings":{"default":{"default":"cedilla"}},"key":"00B8"},{"category":"Lo","mappings":{"default":{"default":"masculine ordinal indicator"}},"key":"00BA"},{"category":"Pf","mappings":{"default":{"default":"right pointing guillemet"}},"key":"00BB"},{"category":"Po","mappings":{"default":{"default":"inverted question mark"}},"key":"00BF"},{"category":"Sm","mappings":{"default":{"default":"times"},"clearspeak":{"MultsymbolX_By":"by","MultsymbolX_Cross":"cross"}},"key":"00D7"},{"category":"Sm","mappings":{"default":{"default":"division sign"}},"key":"00F7"},{"category":"Sk","mappings":{"default":{"default":"breve"}},"key":"02D8"},{"key":"02B9","mappings":{"default":{"default":"prime"}},"category":"Lm"},{"key":"02BA","mappings":{"default":{"default":"double prime"}},"category":"Lm"},{"category":"Sk","mappings":{"default":{"default":"dot above"},"mathspeak":{"default":"dot"}},"key":"02D9"},{"category":"Sk","mappings":{"default":{"default":"ring above"}},"key":"02DA"},{"category":"Sk","mappings":{"default":{"default":"ogonek"}},"key":"02DB"},{"category":"Sk","mappings":{"default":{"default":"tilde"}},"key":"02DC"},{"category":"Sk","mappings":{"default":{"default":"double acute"}},"key":"02DD"},{"category":"Pd","mappings":{"default":{"default":"hyphen"}},"key":"2010"},{"category":"Pd","mappings":{"default":{"default":"non breaking hyphen"}},"key":"2011"},{"category":"Pd","mappings":{"default":{"default":"figure dash"}},"key":"2012"},{"category":"Pd","mappings":{"default":{"default":"en dash"}},"key":"2013"},{"category":"Pd","mappings":{"default":{"default":"em dash"}},"key":"2014"},{"category":"Pd","mappings":{"default":{"default":"horizontal bar"},"mathspeak":{"default":"quotation dash"}},"key":"2015"},{"category":"Po","mappings":{"default":{"default":"double vertical bar"}},"key":"2016"},{"category":"Po","mappings":{"default":{"default":"double underline"}},"key":"2017"},{"category":"Pi","mappings":{"default":{"default":"left single quotation mark"}},"key":"2018"},{"category":"Pf","mappings":{"default":{"default":"right single quotation mark"}},"key":"2019"},{"category":"Ps","mappings":{"default":{"default":"low right single quotation mark"}},"key":"201A"},{"category":"Pi","mappings":{"default":{"default":"left reversed single quotation mark"}},"key":"201B"},{"category":"Pi","mappings":{"default":{"default":"left double quotation mark"}},"key":"201C"},{"category":"Pf","mappings":{"default":{"default":"right double quotation mark"}},"key":"201D"},{"category":"Ps","mappings":{"default":{"default":"low right double quotation mark"}},"key":"201E"},{"category":"Pi","mappings":{"default":{"default":"left reversed double quotation mark"}},"key":"201F"},{"category":"Po","mappings":{"default":{"default":"dagger"}},"key":"2020"},{"category":"Po","mappings":{"default":{"default":"double dagger"}},"key":"2021"},{"category":"Po","mappings":{"default":{"default":"bullet"}},"key":"2022"},{"category":"Po","mappings":{"default":{"default":"triangular bullet"}},"key":"2023"},{"category":"Po","mappings":{"default":{"default":"one dot leader"}},"key":"2024"},{"category":"Po","mappings":{"default":{"default":"two dot leader"}},"key":"2025"},{"category":"Po","mappings":{"default":{"default":"ellipsis"},"clearspeak":{"default":"dot dot dot"}},"key":"2026"},{"category":"Po","mappings":{"default":{"default":"hyphenation point"}},"key":"2027"},{"category":"Po","mappings":{"default":{"default":"per mille"}},"key":"2030"},{"category":"Po","mappings":{"default":{"default":"per ten thousand"}},"key":"2031"},{"category":"Po","mappings":{"default":{"default":"prime"}},"key":"2032"},{"category":"Po","mappings":{"default":{"default":"double prime"}},"key":"2033"},{"category":"Po","mappings":{"default":{"default":"triple prime"}},"key":"2034"},{"category":"Po","mappings":{"default":{"default":"reversed prime"}},"key":"2035"},{"category":"Po","mappings":{"default":{"default":"reversed double prime"}},"key":"2036"},{"category":"Po","mappings":{"default":{"default":"reversed triple prime"}},"key":"2037"},{"category":"Po","mappings":{"default":{"default":"caret"}},"key":"2038"},{"category":"Pi","mappings":{"default":{"default":"left pointing single guillemet"}},"key":"2039"},{"category":"Pf","mappings":{"default":{"default":"right pointing single guillemet"}},"key":"203A"},{"category":"Po","mappings":{"default":{"default":"reference mark"}},"key":"203B"},{"category":"Po","mappings":{"default":{"default":"double exclamation mark"}},"key":"203C"},{"category":"Po","mappings":{"default":{"default":"interrobang"}},"key":"203D"},{"category":"Po","mappings":{"default":{"default":"overline"},"mathspeak":{"default":"bar"}},"key":"203E"},{"category":"Pc","mappings":{"default":{"default":"undertie"}},"key":"203F"},{"category":"Pc","mappings":{"default":{"default":"character tie"}},"key":"2040"},{"category":"Po","mappings":{"default":{"default":"caret insertion point"}},"key":"2041"},{"category":"Po","mappings":{"default":{"default":"asterism"}},"key":"2042"},{"category":"Po","mappings":{"default":{"default":"hyphen bullet"}},"key":"2043"},{"category":"Sm","mappings":{"default":{"default":"fraction slash"}},"key":"2044"},{"category":"Po","mappings":{"default":{"default":"double question mark"}},"key":"2047"},{"category":"Po","mappings":{"default":{"default":"question exclamation mark"}},"key":"2048"},{"category":"Po","mappings":{"default":{"default":"exclamation question mark"}},"key":"2049"},{"category":"Po","mappings":{"default":{"default":"reversed pilcrow"}},"key":"204B"},{"category":"Po","mappings":{"default":{"default":"black leftwards bullet"}},"key":"204C"},{"category":"Po","mappings":{"default":{"default":"black rightwards bullet"}},"key":"204D"},{"category":"Po","mappings":{"default":{"default":"low asterisk"}},"key":"204E"},{"category":"Po","mappings":{"default":{"default":"reversed semicolon"}},"key":"204F"},{"category":"Po","mappings":{"default":{"default":"close up"}},"key":"2050"},{"category":"Po","mappings":{"default":{"default":"two asterisks aligned vertically"}},"key":"2051"},{"category":"Sm","mappings":{"default":{"default":"commercial minus"}},"key":"2052"},{"category":"Po","mappings":{"default":{"default":"swung dash"}},"key":"2053"},{"category":"Pc","mappings":{"default":{"default":"inverted undertie"}},"key":"2054"},{"category":"Po","mappings":{"default":{"default":"flower punctuation mark"}},"key":"2055"},{"category":"Po","mappings":{"default":{"default":"three dot punctuation"}},"key":"2056"},{"category":"Po","mappings":{"default":{"default":"quadruple prime"}},"key":"2057"},{"category":"Po","mappings":{"default":{"default":"four dot punctuation"}},"key":"2058"},{"category":"Po","mappings":{"default":{"default":"five dot punctuation"}},"key":"2059"},{"category":"Po","mappings":{"default":{"default":"two dot punctuation"}},"key":"205A"},{"category":"Po","mappings":{"default":{"default":"four dot mark"}},"key":"205B"},{"category":"Po","mappings":{"default":{"default":"dotted cross"}},"key":"205C"},{"category":"Po","mappings":{"default":{"default":"tricolon"}},"key":"205D"},{"category":"Po","mappings":{"default":{"default":"vertical four dots"}},"key":"205E"},{"category":"Sm","mappings":{"default":{"default":"superscript plus"}},"key":"207A"},{"category":"Sm","mappings":{"default":{"default":"superscript minus"}},"key":"207B"},{"category":"Sm","mappings":{"default":{"default":"superscript equals"}},"key":"207C"},{"category":"Ps","mappings":{"default":{"default":"superscript left parenthesis"}},"key":"207D"},{"category":"Pe","mappings":{"default":{"default":"superscript right parenthesis"}},"key":"207E"},{"category":"Sm","mappings":{"default":{"default":"subscript plus"}},"key":"208A"},{"category":"Sm","mappings":{"default":{"default":"subscript minus"}},"key":"208B"},{"category":"Sm","mappings":{"default":{"default":"subscript equals"}},"key":"208C"},{"category":"Ps","mappings":{"default":{"default":"subscript left parenthesis"}},"key":"208D"},{"category":"Pe","mappings":{"default":{"default":"subscript right parenthesis"}},"key":"208E"},{"category":"So","mappings":{"default":{"default":"property line"}},"key":"214A"},{"category":"Sm","mappings":{"default":{"default":"turned ampersand"}},"key":"214B"},{"category":"So","mappings":{"default":{"default":"per"}},"key":"214C"},{"category":"So","mappings":{"default":{"default":"aktieselskab"}},"key":"214D"},{"category":"Ll","mappings":{"default":{"default":"turned small f"}},"key":"214E"},{"category":"Sm","mappings":{"default":{"default":"for all"}},"key":"2200"},{"category":"Sm","mappings":{"default":{"default":"complement"}},"key":"2201"},{"category":"Sm","mappings":{"default":{"default":"there exists"}},"key":"2203"},{"category":"Sm","mappings":{"default":{"default":"there does not exist"}},"key":"2204"},{"category":"Sm","mappings":{"default":{"default":"empty set"}},"key":"2205"},{"category":"Sm","mappings":{"default":{"default":"increment"}},"key":"2206"},{"category":"Sm","mappings":{"default":{"default":"element of"},"clearspeak":{"default":"is a member of"}},"key":"2208"},{"category":"Sm","mappings":{"default":{"default":"not an element of"},"clearspeak":{"default":"is not a member of"}},"key":"2209"},{"category":"Sm","mappings":{"default":{"default":"element of"},"clearspeak":{"default":"is a member of"}},"key":"220A"},{"category":"Sm","mappings":{"default":{"default":"contains as member"}},"key":"220B"},{"category":"Sm","mappings":{"default":{"default":"does not contain as member"}},"key":"220C"},{"category":"Sm","mappings":{"default":{"default":"contains as member"}},"key":"220D"},{"category":"Sm","mappings":{"default":{"default":"end of proof"}},"key":"220E"},{"category":"Sm","mappings":{"default":{"default":"product"}},"key":"220F"},{"category":"Sm","mappings":{"default":{"default":"coproduct"}},"key":"2210"},{"category":"Sm","mappings":{"default":{"default":"sum"},"mathspeak":{"default":"sigma summation"}},"key":"2211"},{"category":"Sm","mappings":{"default":{"default":"minus"}},"key":"2212"},{"category":"Sm","mappings":{"default":{"default":"minus or plus"}},"key":"2213"},{"category":"Sm","mappings":{"default":{"default":"dot plus"}},"key":"2214"},{"category":"Sm","mappings":{"default":{"default":"division slash"}},"key":"2215"},{"category":"Sm","mappings":{"default":{"default":"set minus"}},"key":"2216"},{"category":"Sm","mappings":{"default":{"default":"asterisk"}},"key":"2217"},{"category":"Sm","mappings":{"default":{"default":"ring"},"clearspeak":{"default":"composed with"}},"key":"2218"},{"category":"Sm","mappings":{"default":{"default":"bullet"}},"key":"2219"},{"category":"Sm","mappings":{"default":{"default":"square root"}},"key":"221A"},{"category":"Sm","mappings":{"default":{"default":"cube root"}},"key":"221B"},{"category":"Sm","mappings":{"default":{"default":"fourth root"}},"key":"221C"},{"category":"Sm","mappings":{"default":{"default":"proportional to"}},"key":"221D"},{"category":"Sm","mappings":{"default":{"default":"infinity"}},"key":"221E"},{"category":"Sm","mappings":{"default":{"default":"right angle"}},"key":"221F"},{"category":"Sm","mappings":{"default":{"default":"angle"}},"key":"2220"},{"category":"Sm","mappings":{"default":{"default":"measured angle"}},"key":"2221"},{"category":"Sm","mappings":{"default":{"default":"spherical angle"}},"key":"2222"},{"category":"Sm","mappings":{"default":{"default":"vertical bar","alternative":"divides"}},"key":"2223"},{"category":"Sm","mappings":{"default":{"default":"does not divide"}},"key":"2224"},{"category":"Sm","mappings":{"default":{"default":"parallel to"}},"key":"2225"},{"category":"Sm","mappings":{"default":{"default":"not parallel to"}},"key":"2226"},{"category":"Sm","mappings":{"default":{"default":"and"}},"key":"2227"},{"category":"Sm","mappings":{"default":{"default":"or"}},"key":"2228"},{"category":"Sm","mappings":{"default":{"default":"intersection"}},"key":"2229"},{"category":"Sm","mappings":{"default":{"default":"union"}},"key":"222A"},{"category":"Sm","mappings":{"default":{"default":"integral"}},"key":"222B"},{"category":"Sm","mappings":{"default":{"default":"double integral"}},"key":"222C"},{"category":"Sm","mappings":{"default":{"default":"triple integral"}},"key":"222D"},{"category":"Sm","mappings":{"default":{"default":"contour integral"}},"key":"222E"},{"category":"Sm","mappings":{"default":{"default":"surface integral"}},"key":"222F"},{"category":"Sm","mappings":{"default":{"default":"volume integral"}},"key":"2230"},{"category":"Sm","mappings":{"default":{"default":"clockwise integral"}},"key":"2231"},{"category":"Sm","mappings":{"default":{"default":"clockwise contour integral"}},"key":"2232"},{"category":"Sm","mappings":{"default":{"default":"anticlockwise contour integral"}},"key":"2233"},{"category":"Sm","mappings":{"default":{"default":"therefore"}},"key":"2234"},{"category":"Sm","mappings":{"default":{"default":"because"}},"key":"2235"},{"category":"Sm","mappings":{"default":{"default":"ratio"}},"key":"2236"},{"category":"Sm","mappings":{"default":{"default":"proportion"}},"key":"2237"},{"category":"Sm","mappings":{"default":{"default":"dot minus"}},"key":"2238"},{"category":"Sm","mappings":{"default":{"default":"excess"}},"key":"2239"},{"category":"Sm","mappings":{"default":{"default":"geometric proportion"}},"key":"223A"},{"category":"Sm","mappings":{"default":{"default":"homothetic"}},"key":"223B"},{"category":"Sm","mappings":{"default":{"default":"tilde"}},"key":"223C"},{"category":"Sm","mappings":{"default":{"default":"reversed tilde"}},"key":"223D"},{"category":"Sm","mappings":{"default":{"default":"inverted lazy s"}},"key":"223E"},{"category":"Sm","mappings":{"default":{"default":"sine wave"}},"key":"223F"},{"category":"Sm","mappings":{"default":{"default":"wreath product"}},"key":"2240"},{"category":"Sm","mappings":{"default":{"default":"not tilde"}},"key":"2241"},{"category":"Sm","mappings":{"default":{"default":"minus tilde"}},"key":"2242"},{"category":"Sm","mappings":{"default":{"default":"asymptotically equals"}},"key":"2243"},{"category":"Sm","mappings":{"default":{"default":"not asymptotically equals"}},"key":"2244"},{"category":"Sm","mappings":{"default":{"default":"approximately equals"}},"key":"2245"},{"category":"Sm","mappings":{"default":{"default":"approximately but not actually equals"}},"key":"2246"},{"category":"Sm","mappings":{"default":{"default":"neither approximately nor actually equals"}},"key":"2247"},{"category":"Sm","mappings":{"default":{"default":"almost equals"}},"key":"2248"},{"category":"Sm","mappings":{"default":{"default":"not almost equals"}},"key":"2249"},{"category":"Sm","mappings":{"default":{"default":"almost equal or equals"}},"key":"224A"},{"category":"Sm","mappings":{"default":{"default":"triple tilde"}},"key":"224B"},{"category":"Sm","mappings":{"default":{"default":"all equals"}},"key":"224C"},{"category":"Sm","mappings":{"default":{"default":"equivalent to"}},"key":"224D"},{"category":"Sm","mappings":{"default":{"default":"geometrically equivalent to"}},"key":"224E"},{"category":"Sm","mappings":{"default":{"default":"difference between"}},"key":"224F"},{"category":"Sm","mappings":{"default":{"default":"approaches the limit"}},"key":"2250"},{"category":"Sm","mappings":{"default":{"default":"geometrically equals"}},"key":"2251"},{"category":"Sm","mappings":{"default":{"default":"approximately equals or the image of"}},"key":"2252"},{"category":"Sm","mappings":{"default":{"default":"image of or approximately equals"}},"key":"2253"},{"category":"Sm","mappings":{"default":{"default":"colon equals"}},"key":"2254"},{"category":"Sm","mappings":{"default":{"default":"equals colon"}},"key":"2255"},{"category":"Sm","mappings":{"default":{"default":"ring in equals"}},"key":"2256"},{"category":"Sm","mappings":{"default":{"default":"ring equals"}},"key":"2257"},{"category":"Sm","mappings":{"default":{"default":"corresponds to"}},"key":"2258"},{"category":"Sm","mappings":{"default":{"default":"estimates"}},"key":"2259"},{"category":"Sm","mappings":{"default":{"default":"equiangular to"},"clearspeak":{"default":"is equiangular to"}},"key":"225A"},{"category":"Sm","mappings":{"default":{"default":"star equals"}},"key":"225B"},{"category":"Sm","mappings":{"default":{"default":"delta equals"}},"key":"225C"},{"category":"Sm","mappings":{"default":{"default":"equals by definition"},"clearspeak":{"default":"is defined to be"}},"key":"225D"},{"category":"Sm","mappings":{"default":{"default":"measured by"},"clearspeak":{"default":"is measured by"}},"key":"225E"},{"category":"Sm","mappings":{"default":{"default":"questioned equals"}},"key":"225F"},{"category":"Sm","mappings":{"default":{"default":"not equals"},"clearspeak":{"default":"is not equal to"}},"key":"2260"},{"category":"Sm","mappings":{"default":{"default":"identical to"},"clearspeak":{"default":"is identical to"}},"key":"2261"},{"category":"Sm","mappings":{"default":{"default":"not identical to"},"clearspeak":{"default":"is not identical to"}},"key":"2262"},{"category":"Sm","mappings":{"default":{"default":"strictly equivalent to"},"clearspeak":{"default":"is strictly equivalent to"}},"key":"2263"},{"category":"Sm","mappings":{"default":{"default":"less than or equals"},"clearspeak":{"default":"is less than or equal to"}},"key":"2264"},{"category":"Sm","mappings":{"default":{"default":"greater than or equals"},"clearspeak":{"default":"is greater than or equal to"}},"key":"2265"},{"category":"Sm","mappings":{"default":{"default":"less than over equals"},"clearspeak":{"default":"is less than over equals"}},"key":"2266"},{"category":"Sm","mappings":{"default":{"default":"greater than over equals"},"clearspeak":{"default":"is greater than over equals"}},"key":"2267"},{"category":"Sm","mappings":{"default":{"default":"less than but not equals"},"clearspeak":{"default":"is less than but not equal to"}},"key":"2268"},{"category":"Sm","mappings":{"default":{"default":"greater than but not equals"},"clearspeak":{"default":"is greater than but not equal to"}},"key":"2269"},{"category":"Sm","mappings":{"default":{"default":"much less than"},"clearspeak":{"default":"is much less than"}},"key":"226A"},{"category":"Sm","mappings":{"default":{"default":"much greater than"},"clearspeak":{"default":"is much greater than"}},"key":"226B"},{"category":"Sm","mappings":{"default":{"default":"between"}},"key":"226C"},{"category":"Sm","mappings":{"default":{"default":"not equivalent to"},"clearspeak":{"default":"is not equivalent to"}},"key":"226D"},{"category":"Sm","mappings":{"default":{"default":"not less than"},"clearspeak":{"default":"is not less than"}},"key":"226E"},{"category":"Sm","mappings":{"default":{"default":"not greater than"},"clearspeak":{"default":"is not greater than"}},"key":"226F"},{"category":"Sm","mappings":{"default":{"default":"neither less than nor equals"},"clearspeak":{"default":"is neither less than nor equal to"}},"key":"2270"},{"category":"Sm","mappings":{"default":{"default":"neither greater than nor equals"},"clearspeak":{"default":"is neither greater than nor equal to"}},"key":"2271"},{"category":"Sm","mappings":{"default":{"default":"less than or equivalent to"},"clearspeak":{"default":"is less than or equivalent to"}},"key":"2272"},{"category":"Sm","mappings":{"default":{"default":"greater than or equivalent to"},"clearspeak":{"default":"is greater than or equivalent to"}},"key":"2273"},{"category":"Sm","mappings":{"default":{"default":"neither less than nor equivalent to"},"clearspeak":{"default":"is neither less than nor equivalent to"}},"key":"2274"},{"category":"Sm","mappings":{"default":{"default":"neither greater than nor equivalent to"},"clearspeak":{"default":"is neither greater than nor equivalent to"}},"key":"2275"},{"category":"Sm","mappings":{"default":{"default":"less than or greater than"},"clearspeak":{"default":"is less than or greater than"}},"key":"2276"},{"category":"Sm","mappings":{"default":{"default":"greater than or less than"},"clearspeak":{"default":"is greater than or less than"}},"key":"2277"},{"category":"Sm","mappings":{"default":{"default":"neither less than nor greater than"},"clearspeak":{"default":"is neither less than nor greater than"}},"key":"2278"},{"category":"Sm","mappings":{"default":{"default":"neither greater than nor less than"},"clearspeak":{"default":"is neither greater than nor less than"}},"key":"2279"},{"category":"Sm","mappings":{"default":{"default":"precedes"}},"key":"227A"},{"category":"Sm","mappings":{"default":{"default":"succeeds"}},"key":"227B"},{"category":"Sm","mappings":{"default":{"default":"precedes or equal to"}},"key":"227C"},{"category":"Sm","mappings":{"default":{"default":"succeeds or equal to"}},"key":"227D"},{"category":"Sm","mappings":{"default":{"default":"precedes or equivalent to"}},"key":"227E"},{"category":"Sm","mappings":{"default":{"default":"succeeds or equivalent to"}},"key":"227F"},{"category":"Sm","mappings":{"default":{"default":"does not precede"}},"key":"2280"},{"category":"Sm","mappings":{"default":{"default":"does not succeed"}},"key":"2281"},{"category":"Sm","mappings":{"default":{"default":"subset of"}},"key":"2282"},{"category":"Sm","mappings":{"default":{"default":"superset of"}},"key":"2283"},{"category":"Sm","mappings":{"default":{"default":"not a subset of"}},"key":"2284"},{"category":"Sm","mappings":{"default":{"default":"not a superset of"}},"key":"2285"},{"category":"Sm","mappings":{"default":{"default":"subset of or equal to"}},"key":"2286"},{"category":"Sm","mappings":{"default":{"default":"superset of or equal to"}},"key":"2287"},{"category":"Sm","mappings":{"default":{"default":"neither a subset of nor equal to"}},"key":"2288"},{"category":"Sm","mappings":{"default":{"default":"neither a superset of nor equal to"}},"key":"2289"},{"category":"Sm","mappings":{"default":{"default":"subset of or not equals"}},"key":"228A"},{"category":"Sm","mappings":{"default":{"default":"superset of or not equals"}},"key":"228B"},{"category":"Sm","mappings":{"default":{"default":"multiset"}},"key":"228C"},{"category":"Sm","mappings":{"default":{"default":"multiset multiplication"}},"key":"228D"},{"category":"Sm","mappings":{"default":{"default":"multiset union"}},"key":"228E"},{"category":"Sm","mappings":{"default":{"default":"square image of"}},"key":"228F"},{"category":"Sm","mappings":{"default":{"default":"square original of"}},"key":"2290"},{"category":"Sm","mappings":{"default":{"default":"square image of or equal to"}},"key":"2291"},{"category":"Sm","mappings":{"default":{"default":"square original of or equal to"}},"key":"2292"},{"category":"Sm","mappings":{"default":{"default":"square cap"}},"key":"2293"},{"category":"Sm","mappings":{"default":{"default":"square cup"}},"key":"2294"},{"category":"Sm","mappings":{"default":{"default":"circled plus"}},"key":"2295"},{"category":"Sm","mappings":{"default":{"default":"circled minus"}},"key":"2296"},{"category":"Sm","mappings":{"default":{"default":"circled times"}},"key":"2297"},{"category":"Sm","mappings":{"default":{"default":"circled division slash"}},"key":"2298"},{"category":"Sm","mappings":{"default":{"default":"circled dot"}},"key":"2299"},{"category":"Sm","mappings":{"default":{"default":"circled ring"}},"key":"229A"},{"category":"Sm","mappings":{"default":{"default":"circled asterisk"}},"key":"229B"},{"category":"Sm","mappings":{"default":{"default":"circled equals"}},"key":"229C"},{"category":"Sm","mappings":{"default":{"default":"circled dash"}},"key":"229D"},{"category":"Sm","mappings":{"default":{"default":"squared plus"}},"key":"229E"},{"category":"Sm","mappings":{"default":{"default":"squared minus"}},"key":"229F"},{"category":"Sm","mappings":{"default":{"default":"squared times"}},"key":"22A0"},{"category":"Sm","mappings":{"default":{"default":"squared dot"}},"key":"22A1"},{"category":"Sm","mappings":{"default":{"default":"right tack"}},"key":"22A2"},{"category":"Sm","mappings":{"default":{"default":"left tack"}},"key":"22A3"},{"category":"Sm","mappings":{"default":{"default":"down tack"}},"key":"22A4"},{"category":"Sm","mappings":{"default":{"default":"up tack"}},"key":"22A5"},{"category":"Sm","mappings":{"default":{"default":"assertion"}},"key":"22A6"},{"category":"Sm","mappings":{"default":{"default":"models"}},"key":"22A7"},{"category":"Sm","mappings":{"default":{"default":"true"}},"key":"22A8"},{"category":"Sm","mappings":{"default":{"default":"forces"}},"key":"22A9"},{"category":"Sm","mappings":{"default":{"default":"triple vertical bar right turnstile"}},"key":"22AA"},{"category":"Sm","mappings":{"default":{"default":"double vertical bar double right turnstile"}},"key":"22AB"},{"category":"Sm","mappings":{"default":{"default":"does not prove"}},"key":"22AC"},{"category":"Sm","mappings":{"default":{"default":"not true"}},"key":"22AD"},{"category":"Sm","mappings":{"default":{"default":"does not force"}},"key":"22AE"},{"category":"Sm","mappings":{"default":{"default":"negated double vertical bar double right turnstile"}},"key":"22AF"},{"category":"Sm","mappings":{"default":{"default":"precedes under relation"}},"key":"22B0"},{"category":"Sm","mappings":{"default":{"default":"succeeds under relation"}},"key":"22B1"},{"category":"Sm","mappings":{"default":{"default":"normal subgroup of"}},"key":"22B2"},{"category":"Sm","mappings":{"default":{"default":"contains as normal subgroup"}},"key":"22B3"},{"category":"Sm","mappings":{"default":{"default":"normal subgroup of or equal to"}},"key":"22B4"},{"category":"Sm","mappings":{"default":{"default":"contains as normal subgroup or equal to"}},"key":"22B5"},{"category":"Sm","mappings":{"default":{"default":"original of"}},"key":"22B6"},{"category":"Sm","mappings":{"default":{"default":"image of"}},"key":"22B7"},{"category":"Sm","mappings":{"default":{"default":"multimap"}},"key":"22B8"},{"category":"Sm","mappings":{"default":{"default":"hermitian conjugate matrix"}},"key":"22B9"},{"category":"Sm","mappings":{"default":{"default":"intercalate"}},"key":"22BA"},{"category":"Sm","mappings":{"default":{"default":"xor"}},"key":"22BB"},{"category":"Sm","mappings":{"default":{"default":"nand"}},"key":"22BC"},{"category":"Sm","mappings":{"default":{"default":"nor"}},"key":"22BD"},{"category":"Sm","mappings":{"default":{"default":"right triangle"}},"key":"22BF"},{"category":"Sm","mappings":{"default":{"default":"n ary and"},"mathspeak":{"default":"and"}},"key":"22C0"},{"category":"Sm","mappings":{"default":{"default":"n ary or"},"mathspeak":{"default":"or"}},"key":"22C1"},{"category":"Sm","mappings":{"default":{"default":"n ary intersection"},"mathspeak":{"default":"intersection"}},"key":"22C2"},{"category":"Sm","mappings":{"default":{"default":"n ary union"},"mathspeak":{"default":"union"}},"key":"22C3"},{"category":"Sm","mappings":{"default":{"default":"diamond"}},"key":"22C4"},{"category":"Sm","mappings":{"default":{"default":"dot"},"clearspeak":{"default":"times","MultsymbolDot_Dot":"dot"}},"key":"22C5"},{"category":"Sm","mappings":{"default":{"default":"star"}},"key":"22C6"},{"category":"Sm","mappings":{"default":{"default":"division times"}},"key":"22C7"},{"category":"Sm","mappings":{"default":{"default":"bowtie"}},"key":"22C8"},{"category":"Sm","mappings":{"default":{"default":"left normal factor semidirect product"}},"key":"22C9"},{"category":"Sm","mappings":{"default":{"default":"right normal factor semidirect product"}},"key":"22CA"},{"category":"Sm","mappings":{"default":{"default":"left semidirect product"}},"key":"22CB"},{"category":"Sm","mappings":{"default":{"default":"right semidirect product"}},"key":"22CC"},{"category":"Sm","mappings":{"default":{"default":"reversed tilde equals"}},"key":"22CD"},{"category":"Sm","mappings":{"default":{"default":"curly or"}},"key":"22CE"},{"category":"Sm","mappings":{"default":{"default":"curly and"}},"key":"22CF"},{"category":"Sm","mappings":{"default":{"default":"double subset"}},"key":"22D0"},{"category":"Sm","mappings":{"default":{"default":"double superset"}},"key":"22D1"},{"category":"Sm","mappings":{"default":{"default":"double intersection"}},"key":"22D2"},{"category":"Sm","mappings":{"default":{"default":"double union"}},"key":"22D3"},{"category":"Sm","mappings":{"default":{"default":"pitchfork"}},"key":"22D4"},{"category":"Sm","mappings":{"default":{"default":"equal and parallel to"},"clearspeak":{"default":"is equal and parallel to"}},"key":"22D5"},{"category":"Sm","mappings":{"default":{"default":"less than dot"},"clearspeak":{"default":"is less than dot"}},"key":"22D6"},{"category":"Sm","mappings":{"default":{"default":"greater than dot"},"clearspeak":{"default":"is greater than dot"}},"key":"22D7"},{"category":"Sm","mappings":{"default":{"default":"very much less than"},"clearspeak":{"default":"is very much less than"}},"key":"22D8"},{"category":"Sm","mappings":{"default":{"default":"very much greater than"},"clearspeak":{"default":"is very much greater than"}},"key":"22D9"},{"category":"Sm","mappings":{"default":{"default":"less than equals or greater than"},"clearspeak":{"default":"is less than equal to or greater than"}},"key":"22DA"},{"category":"Sm","mappings":{"default":{"default":"greater than equals or less than"},"clearspeak":{"default":"is greater than equal to or less than"}},"key":"22DB"},{"category":"Sm","mappings":{"default":{"default":"equals or less than"},"clearspeak":{"default":"is equal to or less than"}},"key":"22DC"},{"category":"Sm","mappings":{"default":{"default":"equals or greater than"},"clearspeak":{"default":"is equal to or greater than"}},"key":"22DD"},{"category":"Sm","mappings":{"default":{"default":"equals or precedes"},"clearspeak":{"default":"is equal to or precedes"}},"key":"22DE"},{"category":"Sm","mappings":{"default":{"default":"equals or succeeds"},"clearspeak":{"default":"is equal to or succeeds"}},"key":"22DF"},{"category":"Sm","mappings":{"default":{"default":"does not precede or equal"}},"key":"22E0"},{"category":"Sm","mappings":{"default":{"default":"does not succeed or equal"}},"key":"22E1"},{"category":"Sm","mappings":{"default":{"default":"not square image of or equals"},"clearspeak":{"default":"is not square image of or equal to"}},"key":"22E2"},{"category":"Sm","mappings":{"default":{"default":"not square original of or equals"},"clearspeak":{"default":"is not square original of or equal to"}},"key":"22E3"},{"category":"Sm","mappings":{"default":{"default":"square image of or not equals"},"clearspeak":{"default":"is square image of or not equal to"}},"key":"22E4"},{"category":"Sm","mappings":{"default":{"default":"square original of or not equals"},"clearspeak":{"default":"is square original of or not equal to"}},"key":"22E5"},{"category":"Sm","mappings":{"default":{"default":"less than but not equivalent to"},"clearspeak":{"default":"is less than but not equivalent to"}},"key":"22E6"},{"category":"Sm","mappings":{"default":{"default":"greater than but not equivalent to"},"clearspeak":{"default":"is greater than but not equivalent to"}},"key":"22E7"},{"category":"Sm","mappings":{"default":{"default":"precedes but not equivalent to"}},"key":"22E8"},{"category":"Sm","mappings":{"default":{"default":"succeeds but not equivalent to"}},"key":"22E9"},{"category":"Sm","mappings":{"default":{"default":"not normal subgroup of"},"clearspeak":{"default":"is not normal subgroup of"}},"key":"22EA"},{"category":"Sm","mappings":{"default":{"default":"does not contain as normal subgroup"}},"key":"22EB"},{"category":"Sm","mappings":{"default":{"default":"not normal subgroup of or equals"},"clearspeak":{"default":"is not normal subgroup of or equal to"}},"key":"22EC"},{"category":"Sm","mappings":{"default":{"default":"does not contain as normal subgroup or equal"}},"key":"22ED"},{"category":"Sm","mappings":{"default":{"default":"vertical ellipsis"}},"key":"22EE"},{"category":"Sm","mappings":{"default":{"default":"midline horizontal ellipsis"},"clearspeak":{"default":"dot dot dot"}},"key":"22EF"},{"category":"Sm","mappings":{"default":{"default":"up right diagonal ellipsis"}},"key":"22F0"},{"category":"Sm","mappings":{"default":{"default":"down right diagonal ellipsis"}},"key":"22F1"},{"category":"Sm","mappings":{"default":{"default":"element of with long horizontal stroke"}},"key":"22F2"},{"category":"Sm","mappings":{"default":{"default":"element of with vertical bar at end of horizontal stroke"}},"key":"22F3"},{"category":"Sm","mappings":{"default":{"default":"element of with vertical bar at end of horizontal stroke"}},"key":"22F4"},{"category":"Sm","mappings":{"default":{"default":"element of with dot above"}},"key":"22F5"},{"category":"Sm","mappings":{"default":{"default":"element of with overbar"}},"key":"22F6"},{"category":"Sm","mappings":{"default":{"default":"element of with overbar"}},"key":"22F7"},{"category":"Sm","mappings":{"default":{"default":"element of with underbar"}},"key":"22F8"},{"category":"Sm","mappings":{"default":{"default":"element of with two horizontal strokes"}},"key":"22F9"},{"category":"Sm","mappings":{"default":{"default":"contains with long horizontal stroke"}},"key":"22FA"},{"category":"Sm","mappings":{"default":{"default":"contains with vertical bar at end of horizontal stroke"}},"key":"22FB"},{"category":"Sm","mappings":{"default":{"default":"contains with vertical bar at end of horizontal stroke"}},"key":"22FC"},{"category":"Sm","mappings":{"default":{"default":"contains with overbar"}},"key":"22FD"},{"category":"Sm","mappings":{"default":{"default":"contains with overbar"}},"key":"22FE"},{"category":"Sm","mappings":{"default":{"default":"z notation bag membership"}},"key":"22FF"},{"category":"So","mappings":{"default":{"default":"diameter sign"}},"key":"2300"},{"category":"So","mappings":{"default":{"default":"house"}},"key":"2302"},{"category":"So","mappings":{"default":{"default":"projective"}},"key":"2305"},{"category":"So","mappings":{"default":{"default":"perspective"}},"key":"2306"},{"category":"So","mappings":{"default":{"default":"wavy line"}},"key":"2307"},{"category":"So","mappings":{"default":{"default":"reversed not"}},"key":"2310"},{"category":"So","mappings":{"default":{"default":"square lozenge"}},"key":"2311"},{"category":"So","mappings":{"default":{"default":"arc"}},"key":"2312"},{"category":"So","mappings":{"default":{"default":"segment"}},"key":"2313"},{"category":"So","mappings":{"default":{"default":"sector"}},"key":"2314"},{"category":"So","mappings":{"default":{"default":"bold plus"}},"key":"2795"},{"category":"So","mappings":{"default":{"default":"bold minus"}},"key":"2796"},{"category":"So","mappings":{"default":{"default":"bold division"}},"key":"2797"},{"category":"So","mappings":{"default":{"default":"curly loop"}},"key":"27B0"},{"category":"So","mappings":{"default":{"default":"double curly loop"}},"key":"27BF"},{"category":"Sm","mappings":{"default":{"default":"white triangle containing small white triangle"}},"key":"27C1"},{"category":"Sm","mappings":{"default":{"default":"perpendicular"}},"key":"27C2"},{"category":"Sm","mappings":{"default":{"default":"open subset"}},"key":"27C3"},{"category":"Sm","mappings":{"default":{"default":"open superset"}},"key":"27C4"},{"category":"Sm","mappings":{"default":{"default":"or with dot inside"}},"key":"27C7"},{"category":"Sm","mappings":{"default":{"default":"backslash preceding subset"}},"key":"27C8"},{"category":"Sm","mappings":{"default":{"default":"superset preceding solidus"}},"key":"27C9"},{"category":"Sm","mappings":{"default":{"default":"vertical bar with horizontal stroke"}},"key":"27CA"},{"category":"Sm","mappings":{"default":{"default":"rising diagonal"}},"key":"27CB"},{"category":"Sm","mappings":{"default":{"default":"long division"}},"key":"27CC"},{"category":"Sm","mappings":{"default":{"default":"falling diagonal"}},"key":"27CD"},{"category":"Sm","mappings":{"default":{"default":"squared and"}},"key":"27CE"},{"category":"Sm","mappings":{"default":{"default":"squared or"}},"key":"27CF"},{"category":"Sm","mappings":{"default":{"default":"white diamond with centered dot"}},"key":"27D0"},{"category":"Sm","mappings":{"default":{"default":"and with dot"}},"key":"27D1"},{"category":"Sm","mappings":{"default":{"default":"element of opening upwards"}},"key":"27D2"},{"category":"Sm","mappings":{"default":{"default":"lower right corner with dot"}},"key":"27D3"},{"category":"Sm","mappings":{"default":{"default":"upper left corner with dot"}},"key":"27D4"},{"category":"Sm","mappings":{"default":{"default":"left outer join"}},"key":"27D5"},{"category":"Sm","mappings":{"default":{"default":"right outer join"}},"key":"27D6"},{"category":"Sm","mappings":{"default":{"default":"full outer join"}},"key":"27D7"},{"category":"Sm","mappings":{"default":{"default":"large up tack"}},"key":"27D8"},{"category":"Sm","mappings":{"default":{"default":"large down tack"}},"key":"27D9"},{"category":"Sm","mappings":{"default":{"default":"left and right double turnstile"}},"key":"27DA"},{"category":"Sm","mappings":{"default":{"default":"left and right tack"}},"key":"27DB"},{"category":"Sm","mappings":{"default":{"default":"left multimap"}},"key":"27DC"},{"category":"Sm","mappings":{"default":{"default":"long right tack"}},"key":"27DD"},{"category":"Sm","mappings":{"default":{"default":"long left tack"}},"key":"27DE"},{"category":"Sm","mappings":{"default":{"default":"up tack with circle above"}},"key":"27DF"},{"category":"Sm","mappings":{"default":{"default":"lozenge divided by horizontal rule"}},"key":"27E0"},{"category":"Sm","mappings":{"default":{"default":"white concave sided diamond"}},"key":"27E1"},{"category":"Sm","mappings":{"default":{"default":"white concave sided diamond with leftwards tick"}},"key":"27E2"},{"category":"Sm","mappings":{"default":{"default":"white concave sided diamond with rightwards tick"}},"key":"27E3"},{"category":"Sm","mappings":{"default":{"default":"white square with leftwards tick"}},"key":"27E4"},{"category":"Sm","mappings":{"default":{"default":"white square with rightwards tick"}},"key":"27E5"},{"category":"Sm","mappings":{"default":{"default":"rising diagonal crossing falling diagonal"}},"key":"292B"},{"category":"Sm","mappings":{"default":{"default":"falling diagonal crossing rising diagonal"}},"key":"292C"},{"category":"Sm","mappings":{"default":{"default":"triple vertical bar"}},"key":"2980"},{"category":"Sm","mappings":{"default":{"default":"z notation spot"}},"key":"2981"},{"category":"Sm","mappings":{"default":{"default":"z notation type colon"}},"key":"2982"},{"category":"Sm","mappings":{"default":{"default":"dotted fence"}},"key":"2999"},{"category":"Sm","mappings":{"default":{"default":"vertical zigzag line"}},"key":"299A"},{"category":"Sm","mappings":{"default":{"default":"reversed empty set"}},"key":"29B0"},{"category":"Sm","mappings":{"default":{"default":"empty set with overbar"}},"key":"29B1"},{"category":"Sm","mappings":{"default":{"default":"empty set with small circle above"}},"key":"29B2"},{"category":"Sm","mappings":{"default":{"default":"circle with horizontal bar"}},"key":"29B5"},{"category":"Sm","mappings":{"default":{"default":"circled vertical bar"}},"key":"29B6"},{"category":"Sm","mappings":{"default":{"default":"circled parallel"}},"key":"29B7"},{"category":"Sm","mappings":{"default":{"default":"circled backslash"}},"key":"29B8"},{"category":"Sm","mappings":{"default":{"default":"circled perpendicular"}},"key":"29B9"},{"category":"Sm","mappings":{"default":{"default":"circle divided by horizontal bar and top half divided by vertical bar"}},"key":"29BA"},{"category":"Sm","mappings":{"default":{"default":"circle with superimposed x"}},"key":"29BB"},{"category":"Sm","mappings":{"default":{"default":"circled anticlockwise rotated division"}},"key":"29BC"},{"category":"Sm","mappings":{"default":{"default":"circled white bullet"}},"key":"29BE"},{"category":"Sm","mappings":{"default":{"default":"circled bullet"}},"key":"29BF"},{"category":"Sm","mappings":{"default":{"default":"circled less than"}},"key":"29C0"},{"category":"Sm","mappings":{"default":{"default":"circled greater than"}},"key":"29C1"},{"category":"Sm","mappings":{"default":{"default":"circle with small circle to the right"}},"key":"29C2"},{"category":"Sm","mappings":{"default":{"default":"circle with two horizontal strokes to the right"}},"key":"29C3"},{"category":"Sm","mappings":{"default":{"default":"squared rising diagonal slash"}},"key":"29C4"},{"category":"Sm","mappings":{"default":{"default":"squared falling diagonal slash"}},"key":"29C5"},{"category":"Sm","mappings":{"default":{"default":"squared asterisk"}},"key":"29C6"},{"category":"Sm","mappings":{"default":{"default":"squared small circle"}},"key":"29C7"},{"category":"Sm","mappings":{"default":{"default":"squared square"}},"key":"29C8"},{"category":"Sm","mappings":{"default":{"default":"two joined squares"}},"key":"29C9"},{"category":"Sm","mappings":{"default":{"default":"triangle with dot above"}},"key":"29CA"},{"category":"Sm","mappings":{"default":{"default":"triangle with underbar"}},"key":"29CB"},{"category":"Sm","mappings":{"default":{"default":"s in triangle"}},"key":"29CC"},{"category":"Sm","mappings":{"default":{"default":"triangle with serifs at bottom"}},"key":"29CD"},{"category":"Sm","mappings":{"default":{"default":"right triangle above left triangle"}},"key":"29CE"},{"category":"Sm","mappings":{"default":{"default":"left triangle beside vertical bar"}},"key":"29CF"},{"category":"Sm","mappings":{"default":{"default":"vertical bar beside right triangle"}},"key":"29D0"},{"category":"Sm","mappings":{"default":{"default":"bowtie with left half black"}},"key":"29D1"},{"category":"Sm","mappings":{"default":{"default":"bowtie with right half black"}},"key":"29D2"},{"category":"Sm","mappings":{"default":{"default":"black bowtie"}},"key":"29D3"},{"category":"Sm","mappings":{"default":{"default":"times with left half black"}},"key":"29D4"},{"category":"Sm","mappings":{"default":{"default":"times with right half black"}},"key":"29D5"},{"category":"Sm","mappings":{"default":{"default":"white hourglass"}},"key":"29D6"},{"category":"Sm","mappings":{"default":{"default":"black hourglass"}},"key":"29D7"},{"category":"Sm","mappings":{"default":{"default":"incomplete infinity"}},"key":"29DC"},{"category":"Sm","mappings":{"default":{"default":"tie over infinity"}},"key":"29DD"},{"category":"Sm","mappings":{"default":{"default":"infinity negated with vertical bar"}},"key":"29DE"},{"category":"Sm","mappings":{"default":{"default":"double ended multimap"}},"key":"29DF"},{"category":"Sm","mappings":{"default":{"default":"square with contoured outline"}},"key":"29E0"},{"category":"Sm","mappings":{"default":{"default":"increases as"}},"key":"29E1"},{"category":"Sm","mappings":{"default":{"default":"shuffle product"}},"key":"29E2"},{"category":"Sm","mappings":{"default":{"default":"equals and slanted parallel"}},"key":"29E3"},{"category":"Sm","mappings":{"default":{"default":"equals and slanted parallel with tilde above"}},"key":"29E4"},{"category":"Sm","mappings":{"default":{"default":"identical to and slanted parallel"}},"key":"29E5"},{"category":"Sm","mappings":{"default":{"default":"gleich stark"}},"key":"29E6"},{"category":"Sm","mappings":{"default":{"default":"thermodynamic"}},"key":"29E7"},{"category":"Sm","mappings":{"default":{"default":"down pointing triangle with left half black"}},"key":"29E8"},{"category":"Sm","mappings":{"default":{"default":"down pointing triangle with right half black"}},"key":"29E9"},{"category":"Sm","mappings":{"default":{"default":"black lozenge"}},"key":"29EB"},{"category":"Sm","mappings":{"default":{"default":"error barred white square"}},"key":"29EE"},{"category":"Sm","mappings":{"default":{"default":"error barred black square"}},"key":"29EF"},{"category":"Sm","mappings":{"default":{"default":"error barred white diamond"}},"key":"29F0"},{"category":"Sm","mappings":{"default":{"default":"error barred black diamond"}},"key":"29F1"},{"category":"Sm","mappings":{"default":{"default":"error barred white circle"}},"key":"29F2"},{"category":"Sm","mappings":{"default":{"default":"error barred black circle"}},"key":"29F3"},{"category":"Sm","mappings":{"default":{"default":"rule delayed"}},"key":"29F4"},{"category":"Sm","mappings":{"default":{"default":"backslash"}},"key":"29F5"},{"category":"Sm","mappings":{"default":{"default":"solidus with overbar"}},"key":"29F6"},{"category":"Sm","mappings":{"default":{"default":"backslash with horizontal stroke"}},"key":"29F7"},{"category":"Sm","mappings":{"default":{"default":"big solidus"},"mathspeak":{"default":"solidus"}},"key":"29F8"},{"category":"Sm","mappings":{"default":{"default":"big backslash"},"mathspeak":{"default":"backslash"}},"key":"29F9"},{"category":"Sm","mappings":{"default":{"default":"double plus"}},"key":"29FA"},{"category":"Sm","mappings":{"default":{"default":"triple plus"}},"key":"29FB"},{"category":"Sm","mappings":{"default":{"default":"tiny"}},"key":"29FE"},{"category":"Sm","mappings":{"default":{"default":"miny"}},"key":"29FF"},{"category":"Sm","mappings":{"default":{"default":"n ary circled dot"},"mathspeak":{"default":"circled dot"}},"key":"2A00"},{"category":"Sm","mappings":{"default":{"default":"n ary circled plus"},"mathspeak":{"default":"circled plus"}},"key":"2A01"},{"category":"Sm","mappings":{"default":{"default":"n ary circled times"},"mathspeak":{"default":"circled times"}},"key":"2A02"},{"category":"Sm","mappings":{"default":{"default":"n ary union with dot"},"mathspeak":{"default":"union with dot"}},"key":"2A03"},{"category":"Sm","mappings":{"default":{"default":"n ary union operator with plus"},"mathspeak":{"default":"union with plus"}},"key":"2A04"},{"category":"Sm","mappings":{"default":{"default":"n ary square intersection"},"mathspeak":{"default":"square intersection"}},"key":"2A05"},{"category":"Sm","mappings":{"default":{"default":"n ary square union"},"mathspeak":{"default":"square union"}},"key":"2A06"},{"category":"Sm","mappings":{"default":{"default":"two and"}},"key":"2A07"},{"category":"Sm","mappings":{"default":{"default":"two or"}},"key":"2A08"},{"category":"Sm","mappings":{"default":{"default":"n ary times"},"mathspeak":{"default":"times"}},"key":"2A09"},{"category":"Sm","mappings":{"default":{"default":"modulo two sum"}},"key":"2A0A"},{"category":"Sm","mappings":{"default":{"default":"summation with integral"}},"key":"2A0B"},{"category":"Sm","mappings":{"default":{"default":"quadruple integral"}},"key":"2A0C"},{"category":"Sm","mappings":{"default":{"default":"finite part integral"}},"key":"2A0D"},{"category":"Sm","mappings":{"default":{"default":"integral with double stroke"}},"key":"2A0E"},{"category":"Sm","mappings":{"default":{"default":"integral average with slash"}},"key":"2A0F"},{"category":"Sm","mappings":{"default":{"default":"circulation function"}},"key":"2A10"},{"category":"Sm","mappings":{"default":{"default":"anticlockwise integration"}},"key":"2A11"},{"category":"Sm","mappings":{"default":{"default":"line integration with rectangular path around pole"}},"key":"2A12"},{"category":"Sm","mappings":{"default":{"default":"line integration with semicircular path around pole"}},"key":"2A13"},{"category":"Sm","mappings":{"default":{"default":"line integration not including the pole"}},"key":"2A14"},{"category":"Sm","mappings":{"default":{"default":"integral around a point"}},"key":"2A15"},{"category":"Sm","mappings":{"default":{"default":"quaternion integral"}},"key":"2A16"},{"category":"Sm","mappings":{"default":{"default":"integral with times"}},"key":"2A18"},{"category":"Sm","mappings":{"default":{"default":"integral with intersection"}},"key":"2A19"},{"category":"Sm","mappings":{"default":{"default":"integral with union"}},"key":"2A1A"},{"category":"Sm","mappings":{"default":{"default":"integral with overbar"}},"key":"2A1B"},{"category":"Sm","mappings":{"default":{"default":"integral with underbar"}},"key":"2A1C"},{"category":"Sm","mappings":{"default":{"default":"join"}},"key":"2A1D"},{"category":"Sm","mappings":{"default":{"default":"large left triangle"}},"key":"2A1E"},{"category":"Sm","mappings":{"default":{"default":"z notation schema composition"}},"key":"2A1F"},{"category":"Sm","mappings":{"default":{"default":"z notation schema piping"}},"key":"2A20"},{"category":"Sm","mappings":{"default":{"default":"z notation schema projection"}},"key":"2A21"},{"category":"Sm","mappings":{"default":{"default":"plus with circle above"}},"key":"2A22"},{"category":"Sm","mappings":{"default":{"default":"plus hat"}},"key":"2A23"},{"category":"Sm","mappings":{"default":{"default":"plus tilde"}},"key":"2A24"},{"category":"Sm","mappings":{"default":{"default":"plus underdot"}},"key":"2A25"},{"category":"Sm","mappings":{"default":{"default":"plus sign with tilde below"}},"key":"2A26"},{"category":"Sm","mappings":{"default":{"default":"plus sign with subscript two"}},"key":"2A27"},{"category":"Sm","mappings":{"default":{"default":"plus sign with black triangle"}},"key":"2A28"},{"category":"Sm","mappings":{"default":{"default":"minus sign with comma above"}},"key":"2A29"},{"category":"Sm","mappings":{"default":{"default":"minus sign with dot below"}},"key":"2A2A"},{"category":"Sm","mappings":{"default":{"default":"minus sign with falling dots"}},"key":"2A2B"},{"category":"Sm","mappings":{"default":{"default":"minus sign with rising dots"}},"key":"2A2C"},{"category":"Sm","mappings":{"default":{"default":"plus sign in left half circle"}},"key":"2A2D"},{"category":"Sm","mappings":{"default":{"default":"plus sign in right half circle"}},"key":"2A2E"},{"category":"Sm","mappings":{"default":{"default":"vector or cross product"}},"key":"2A2F"},{"category":"Sm","mappings":{"default":{"default":"multiplication sign with dot above"}},"key":"2A30"},{"category":"Sm","mappings":{"default":{"default":"multiplication sign with underbar"}},"key":"2A31"},{"category":"Sm","mappings":{"default":{"default":"semidirect product with bottom closed"}},"key":"2A32"},{"category":"Sm","mappings":{"default":{"default":"smash product"}},"key":"2A33"},{"category":"Sm","mappings":{"default":{"default":"multiplication sign in left half circle"}},"key":"2A34"},{"category":"Sm","mappings":{"default":{"default":"multiplication sign in right half circle"}},"key":"2A35"},{"category":"Sm","mappings":{"default":{"default":"circled multiplication sign with circumflex accent"}},"key":"2A36"},{"category":"Sm","mappings":{"default":{"default":"multiplication sign in double circle"}},"key":"2A37"},{"category":"Sm","mappings":{"default":{"default":"circled division"}},"key":"2A38"},{"category":"Sm","mappings":{"default":{"default":"plus sign in triangle"}},"key":"2A39"},{"category":"Sm","mappings":{"default":{"default":"minus sign in triangle"}},"key":"2A3A"},{"category":"Sm","mappings":{"default":{"default":"multiplication sign in triangle"}},"key":"2A3B"},{"category":"Sm","mappings":{"default":{"default":"interior product"}},"key":"2A3C"},{"category":"Sm","mappings":{"default":{"default":"righthand interior product"}},"key":"2A3D"},{"category":"Sm","mappings":{"default":{"default":"z notation relational composition"}},"key":"2A3E"},{"category":"Sm","mappings":{"default":{"default":"amalgamation or coproduct"}},"key":"2A3F"},{"category":"Sm","mappings":{"default":{"default":"intersection with dot"}},"key":"2A40"},{"category":"Sm","mappings":{"default":{"default":"union with minus"}},"key":"2A41"},{"category":"Sm","mappings":{"default":{"default":"union with overbar"}},"key":"2A42"},{"category":"Sm","mappings":{"default":{"default":"intersection with overbar"}},"key":"2A43"},{"category":"Sm","mappings":{"default":{"default":"intersection with and"}},"key":"2A44"},{"category":"Sm","mappings":{"default":{"default":"union with or"}},"key":"2A45"},{"category":"Sm","mappings":{"default":{"default":"union above intersection"}},"key":"2A46"},{"category":"Sm","mappings":{"default":{"default":"intersection above union"}},"key":"2A47"},{"category":"Sm","mappings":{"default":{"default":"union above bar above intersection"}},"key":"2A48"},{"category":"Sm","mappings":{"default":{"default":"intersection above bar above union"}},"key":"2A49"},{"category":"Sm","mappings":{"default":{"default":"union beside and joined with union"}},"key":"2A4A"},{"category":"Sm","mappings":{"default":{"default":"intersection beside and joined with intersection"}},"key":"2A4B"},{"category":"Sm","mappings":{"default":{"default":"closed union with serifs"}},"key":"2A4C"},{"category":"Sm","mappings":{"default":{"default":"closed intersection with serifs"}},"key":"2A4D"},{"category":"Sm","mappings":{"default":{"default":"double square intersection"}},"key":"2A4E"},{"category":"Sm","mappings":{"default":{"default":"double square union"}},"key":"2A4F"},{"category":"Sm","mappings":{"default":{"default":"closed union with serifs and smash product"}},"key":"2A50"},{"category":"Sm","mappings":{"default":{"default":"and with dot above"}},"key":"2A51"},{"category":"Sm","mappings":{"default":{"default":"or with dot above"}},"key":"2A52"},{"category":"Sm","mappings":{"default":{"default":"double and"}},"key":"2A53"},{"category":"Sm","mappings":{"default":{"default":"double or"}},"key":"2A54"},{"category":"Sm","mappings":{"default":{"default":"two intersecting and"}},"key":"2A55"},{"category":"Sm","mappings":{"default":{"default":"two intersecting or"}},"key":"2A56"},{"category":"Sm","mappings":{"default":{"default":"sloping large or"}},"key":"2A57"},{"category":"Sm","mappings":{"default":{"default":"sloping large and"}},"key":"2A58"},{"category":"Sm","mappings":{"default":{"default":"or overlapping and"}},"key":"2A59"},{"category":"Sm","mappings":{"default":{"default":"and with middle stem"}},"key":"2A5A"},{"category":"Sm","mappings":{"default":{"default":"or with middle stem"}},"key":"2A5B"},{"category":"Sm","mappings":{"default":{"default":"and with horizontal dash"}},"key":"2A5C"},{"category":"Sm","mappings":{"default":{"default":"or with horizontal dash"}},"key":"2A5D"},{"category":"Sm","mappings":{"default":{"default":"and with double overbar"}},"key":"2A5E"},{"category":"Sm","mappings":{"default":{"default":"and with underbar"}},"key":"2A5F"},{"category":"Sm","mappings":{"default":{"default":"and with double underbar"}},"key":"2A60"},{"category":"Sm","mappings":{"default":{"default":"small vee with underbar"}},"key":"2A61"},{"category":"Sm","mappings":{"default":{"default":"or with double overbar"}},"key":"2A62"},{"category":"Sm","mappings":{"default":{"default":"or with double underbar"}},"key":"2A63"},{"category":"Sm","mappings":{"default":{"default":"z notation domain antirestriction"}},"key":"2A64"},{"category":"Sm","mappings":{"default":{"default":"z notation range antirestriction"}},"key":"2A65"},{"category":"Sm","mappings":{"default":{"default":"equals sign with dot below"}},"key":"2A66"},{"category":"Sm","mappings":{"default":{"default":"identical with dot above"}},"key":"2A67"},{"category":"Sm","mappings":{"default":{"default":"triple horizontal bar with double vertical stroke"}},"key":"2A68"},{"category":"Sm","mappings":{"default":{"default":"triple horizontal bar with triple vertical stroke"}},"key":"2A69"},{"category":"Sm","mappings":{"default":{"default":"tilde with dot above"}},"key":"2A6A"},{"category":"Sm","mappings":{"default":{"default":"tilde with rising dots"}},"key":"2A6B"},{"category":"Sm","mappings":{"default":{"default":"similar minus similar"}},"key":"2A6C"},{"category":"Sm","mappings":{"default":{"default":"congruent with dot above"}},"key":"2A6D"},{"category":"Sm","mappings":{"default":{"default":"equals with asterisk"}},"key":"2A6E"},{"category":"Sm","mappings":{"default":{"default":"almost equal hat"}},"key":"2A6F"},{"category":"Sm","mappings":{"default":{"default":"approximately equal or equal to"}},"key":"2A70"},{"category":"Sm","mappings":{"default":{"default":"equals above plus"}},"key":"2A71"},{"category":"Sm","mappings":{"default":{"default":"plus above equals"}},"key":"2A72"},{"category":"Sm","mappings":{"default":{"default":"equals above tilde"}},"key":"2A73"},{"category":"Sm","mappings":{"default":{"default":"double colon equal"}},"key":"2A74"},{"category":"Sm","mappings":{"default":{"default":"two consecutive equals"}},"key":"2A75"},{"category":"Sm","mappings":{"default":{"default":"three consecutive equals"}},"key":"2A76"},{"category":"Sm","mappings":{"default":{"default":"equals sign with two dots above and two dots below"}},"key":"2A77"},{"category":"Sm","mappings":{"default":{"default":"equivalent with four dots above"}},"key":"2A78"},{"category":"Sm","mappings":{"default":{"default":"less than with circle inside"}},"key":"2A79"},{"category":"Sm","mappings":{"default":{"default":"greater than with circle inside"}},"key":"2A7A"},{"category":"Sm","mappings":{"default":{"default":"less than with question mark above"}},"key":"2A7B"},{"category":"Sm","mappings":{"default":{"default":"greater than with question mark above"}},"key":"2A7C"},{"category":"Sm","mappings":{"default":{"default":"less than or slanted equals"}},"key":"2A7D"},{"category":"Sm","mappings":{"default":{"default":"greater than or slanted equals"}},"key":"2A7E"},{"category":"Sm","mappings":{"default":{"default":"less than or slanted equals with dot inside"}},"key":"2A7F"},{"category":"Sm","mappings":{"default":{"default":"greater than or slanted equals with dot inside"}},"key":"2A80"},{"category":"Sm","mappings":{"default":{"default":"less than or slanted equals with dot above"}},"key":"2A81"},{"category":"Sm","mappings":{"default":{"default":"greater than or slanted equals with dot above"}},"key":"2A82"},{"category":"Sm","mappings":{"default":{"default":"less than or slanted equals with dot above right"}},"key":"2A83"},{"category":"Sm","mappings":{"default":{"default":"greater than or slanted equals with dot above left"}},"key":"2A84"},{"category":"Sm","mappings":{"default":{"default":"less than or approximate"}},"key":"2A85"},{"category":"Sm","mappings":{"default":{"default":"greater than or approximate"}},"key":"2A86"},{"category":"Sm","mappings":{"default":{"default":"less than and single line not equals"}},"key":"2A87"},{"category":"Sm","mappings":{"default":{"default":"greater than and single line not equals"}},"key":"2A88"},{"category":"Sm","mappings":{"default":{"default":"less than and not approximate"}},"key":"2A89"},{"category":"Sm","mappings":{"default":{"default":"greater than and not approximate"}},"key":"2A8A"},{"category":"Sm","mappings":{"default":{"default":"less than above double line equal above greater than"}},"key":"2A8B"},{"category":"Sm","mappings":{"default":{"default":"greater than above double line equal above less than"}},"key":"2A8C"},{"category":"Sm","mappings":{"default":{"default":"less than above similar or equal"}},"key":"2A8D"},{"category":"Sm","mappings":{"default":{"default":"greater than above similar or equal"}},"key":"2A8E"},{"category":"Sm","mappings":{"default":{"default":"less than above similar above greater than"}},"key":"2A8F"},{"category":"Sm","mappings":{"default":{"default":"greater than above similar above less than"}},"key":"2A90"},{"category":"Sm","mappings":{"default":{"default":"less than above greater than above double line equal"}},"key":"2A91"},{"category":"Sm","mappings":{"default":{"default":"greater than above less than above double line equal"}},"key":"2A92"},{"category":"Sm","mappings":{"default":{"default":"less than above slanted equal above greater than above slanted equal"}},"key":"2A93"},{"category":"Sm","mappings":{"default":{"default":"greater than above slanted equal above less than above slanted equal"}},"key":"2A94"},{"category":"Sm","mappings":{"default":{"default":"slanted equals or less than"}},"key":"2A95"},{"category":"Sm","mappings":{"default":{"default":"slanted equals or greater than"}},"key":"2A96"},{"category":"Sm","mappings":{"default":{"default":"slanted equals or less than with dot inside"}},"key":"2A97"},{"category":"Sm","mappings":{"default":{"default":"slanted equals or greater than with dot inside"}},"key":"2A98"},{"category":"Sm","mappings":{"default":{"default":"double line equals or less than"}},"key":"2A99"},{"category":"Sm","mappings":{"default":{"default":"double line equals or greater than"}},"key":"2A9A"},{"category":"Sm","mappings":{"default":{"default":"double line slanted equals or less than"}},"key":"2A9B"},{"category":"Sm","mappings":{"default":{"default":"double line slanted equals or greater than"}},"key":"2A9C"},{"category":"Sm","mappings":{"default":{"default":"similar or less than"}},"key":"2A9D"},{"category":"Sm","mappings":{"default":{"default":"similar or greater than"}},"key":"2A9E"},{"category":"Sm","mappings":{"default":{"default":"similar above less than above equals sign"}},"key":"2A9F"},{"category":"Sm","mappings":{"default":{"default":"similar above greater than above equals sign"}},"key":"2AA0"},{"category":"Sm","mappings":{"default":{"default":"double nested less than"}},"key":"2AA1"},{"category":"Sm","mappings":{"default":{"default":"double nested greater than"}},"key":"2AA2"},{"category":"Sm","mappings":{"default":{"default":"double nested less than with underbar"}},"key":"2AA3"},{"category":"Sm","mappings":{"default":{"default":"greater than overlapping less than"}},"key":"2AA4"},{"category":"Sm","mappings":{"default":{"default":"greater than beside less than"}},"key":"2AA5"},{"category":"Sm","mappings":{"default":{"default":"less than closed by curve"}},"key":"2AA6"},{"category":"Sm","mappings":{"default":{"default":"greater than closed by curve"}},"key":"2AA7"},{"category":"Sm","mappings":{"default":{"default":"less than closed by curve above slanted equal"}},"key":"2AA8"},{"category":"Sm","mappings":{"default":{"default":"greater than closed by curve above slanted equal"}},"key":"2AA9"},{"category":"Sm","mappings":{"default":{"default":"smaller than"},"clearspeak":{"default":"is smaller than"}},"key":"2AAA"},{"category":"Sm","mappings":{"default":{"default":"larger than"},"clearspeak":{"default":"is larger than"}},"key":"2AAB"},{"category":"Sm","mappings":{"default":{"default":"smaller than or equals"},"clearspeak":{"default":"is smaller than or equal to"}},"key":"2AAC"},{"category":"Sm","mappings":{"default":{"default":"larger than or equal"},"clearspeak":{"default":"is larger than or equal to"}},"key":"2AAD"},{"category":"Sm","mappings":{"default":{"default":"equals with bumpy above"}},"key":"2AAE"},{"category":"Sm","mappings":{"default":{"default":"precedes above single line equals sign"}},"key":"2AAF"},{"category":"Sm","mappings":{"default":{"default":"succeeds above single line equals sign"}},"key":"2AB0"},{"category":"Sm","mappings":{"default":{"default":"precedes above single line not equals"}},"key":"2AB1"},{"category":"Sm","mappings":{"default":{"default":"succeeds above single line not equals"}},"key":"2AB2"},{"category":"Sm","mappings":{"default":{"default":"precedes above equals"}},"key":"2AB3"},{"category":"Sm","mappings":{"default":{"default":"succeeds above equals"}},"key":"2AB4"},{"category":"Sm","mappings":{"default":{"default":"precedes above not equals"}},"key":"2AB5"},{"category":"Sm","mappings":{"default":{"default":"succeeds above not equals"}},"key":"2AB6"},{"category":"Sm","mappings":{"default":{"default":"precedes above almost equals"}},"key":"2AB7"},{"category":"Sm","mappings":{"default":{"default":"succeeds above almost equals"}},"key":"2AB8"},{"category":"Sm","mappings":{"default":{"default":"precedes above not almost equals"}},"key":"2AB9"},{"category":"Sm","mappings":{"default":{"default":"succeeds above not almost equals"}},"key":"2ABA"},{"category":"Sm","mappings":{"default":{"default":"double precedes"}},"key":"2ABB"},{"category":"Sm","mappings":{"default":{"default":"double succeeds"}},"key":"2ABC"},{"category":"Sm","mappings":{"default":{"default":"subset with dot"}},"key":"2ABD"},{"category":"Sm","mappings":{"default":{"default":"superset with dot"}},"key":"2ABE"},{"category":"Sm","mappings":{"default":{"default":"subset with plus sign below"}},"key":"2ABF"},{"category":"Sm","mappings":{"default":{"default":"superset with plus sign below"}},"key":"2AC0"},{"category":"Sm","mappings":{"default":{"default":"subset with multiplication sign below"}},"key":"2AC1"},{"category":"Sm","mappings":{"default":{"default":"superset with multiplication sign below"}},"key":"2AC2"},{"category":"Sm","mappings":{"default":{"default":"subset of or equals with dot above"}},"key":"2AC3"},{"category":"Sm","mappings":{"default":{"default":"superset of or equals with dot above"}},"key":"2AC4"},{"category":"Sm","mappings":{"default":{"default":"subset of above equals sign"}},"key":"2AC5"},{"category":"Sm","mappings":{"default":{"default":"superset of above equals sign"}},"key":"2AC6"},{"category":"Sm","mappings":{"default":{"default":"subset of above tilde"}},"key":"2AC7"},{"category":"Sm","mappings":{"default":{"default":"superset of above tilde"}},"key":"2AC8"},{"category":"Sm","mappings":{"default":{"default":"subset of above almost equals"}},"key":"2AC9"},{"category":"Sm","mappings":{"default":{"default":"superset of above almost equals"}},"key":"2ACA"},{"category":"Sm","mappings":{"default":{"default":"subset of above not equals"}},"key":"2ACB"},{"category":"Sm","mappings":{"default":{"default":"superset of above not equals"}},"key":"2ACC"},{"category":"Sm","mappings":{"default":{"default":"square left open box"}},"key":"2ACD"},{"category":"Sm","mappings":{"default":{"default":"square right open box"}},"key":"2ACE"},{"category":"Sm","mappings":{"default":{"default":"closed subset"}},"key":"2ACF"},{"category":"Sm","mappings":{"default":{"default":"closed superset"}},"key":"2AD0"},{"category":"Sm","mappings":{"default":{"default":"closed subset or equals"}},"key":"2AD1"},{"category":"Sm","mappings":{"default":{"default":"closed superset or equals"}},"key":"2AD2"},{"category":"Sm","mappings":{"default":{"default":"subset above superset"}},"key":"2AD3"},{"category":"Sm","mappings":{"default":{"default":"superset above subset"}},"key":"2AD4"},{"category":"Sm","mappings":{"default":{"default":"subset above subset"}},"key":"2AD5"},{"category":"Sm","mappings":{"default":{"default":"superset above superset"}},"key":"2AD6"},{"category":"Sm","mappings":{"default":{"default":"superset beside subset"}},"key":"2AD7"},{"category":"Sm","mappings":{"default":{"default":"superset beside and joined by dash with subset"}},"key":"2AD8"},{"category":"Sm","mappings":{"default":{"default":"element of opening downwards"}},"key":"2AD9"},{"category":"Sm","mappings":{"default":{"default":"pitchfork with tee top"}},"key":"2ADA"},{"category":"Sm","mappings":{"default":{"default":"transversal intersection"}},"key":"2ADB"},{"category":"Sm","mappings":{"default":{"default":"forking"}},"key":"2ADC"},{"category":"Sm","mappings":{"default":{"default":"nonforking"}},"key":"2ADD"},{"category":"Sm","mappings":{"default":{"default":"short left tack"}},"key":"2ADE"},{"category":"Sm","mappings":{"default":{"default":"short down tack"}},"key":"2ADF"},{"category":"Sm","mappings":{"default":{"default":"short up tack"}},"key":"2AE0"},{"category":"Sm","mappings":{"default":{"default":"perpendicular with s"}},"key":"2AE1"},{"category":"Sm","mappings":{"default":{"default":"vertical bar triple right turnstile"}},"key":"2AE2"},{"category":"Sm","mappings":{"default":{"default":"double vertical bar left turnstile"}},"key":"2AE3"},{"category":"Sm","mappings":{"default":{"default":"vertical bar double left turnstile"}},"key":"2AE4"},{"category":"Sm","mappings":{"default":{"default":"double vertical bar double left turnstile"}},"key":"2AE5"},{"category":"Sm","mappings":{"default":{"default":"long dash from left member of double vertical"}},"key":"2AE6"},{"category":"Sm","mappings":{"default":{"default":"short down tack with overbar"}},"key":"2AE7"},{"category":"Sm","mappings":{"default":{"default":"short up tack with underbar"}},"key":"2AE8"},{"category":"Sm","mappings":{"default":{"default":"short up tack above short down tack"}},"key":"2AE9"},{"category":"Sm","mappings":{"default":{"default":"double down tack"}},"key":"2AEA"},{"category":"Sm","mappings":{"default":{"default":"double up tack"}},"key":"2AEB"},{"category":"Sm","mappings":{"default":{"default":"double stroke not sign"}},"key":"2AEC"},{"category":"Sm","mappings":{"default":{"default":"reversed double stroke not sign"}},"key":"2AED"},{"category":"Sm","mappings":{"default":{"default":"does not divide with reversed negation slash"}},"key":"2AEE"},{"category":"Sm","mappings":{"default":{"default":"vertical line with circle above"}},"key":"2AEF"},{"category":"Sm","mappings":{"default":{"default":"vertical line with circle below"}},"key":"2AF0"},{"category":"Sm","mappings":{"default":{"default":"down tack with circle below"}},"key":"2AF1"},{"category":"Sm","mappings":{"default":{"default":"parallel with horizontal stroke"}},"key":"2AF2"},{"category":"Sm","mappings":{"default":{"default":"parallel with tilde"}},"key":"2AF3"},{"category":"Sm","mappings":{"default":{"default":"triple vertical bar"}},"key":"2AF4"},{"category":"Sm","mappings":{"default":{"default":"triple vertical bar with horizontal stroke"}},"key":"2AF5"},{"category":"Sm","mappings":{"default":{"default":"triple colon"}},"key":"2AF6"},{"category":"Sm","mappings":{"default":{"default":"triple nested less than"}},"key":"2AF7"},{"category":"Sm","mappings":{"default":{"default":"triple nested greater than"}},"key":"2AF8"},{"category":"Sm","mappings":{"default":{"default":"double line slanted less than or equals"}},"key":"2AF9"},{"category":"Sm","mappings":{"default":{"default":"double line slanted greater than or equals"}},"key":"2AFA"},{"category":"Sm","mappings":{"default":{"default":"triple solidus"}},"key":"2AFB"},{"category":"Sm","mappings":{"default":{"default":"large triple vertical bar"}},"key":"2AFC"},{"category":"Sm","mappings":{"default":{"default":"double solidus"}},"key":"2AFD"},{"category":"Sm","mappings":{"default":{"default":"white vertical bar"}},"key":"2AFE"},{"category":"Sm","mappings":{"default":{"default":"n ary white vertical bar"},"mathspeak":{"default":"white vertical bar"}},"key":"2AFF"},{"category":"Pd","mappings":{"default":{"default":"wave dash"}},"key":"301C"},{"category":"Po","mappings":{"default":{"default":"presentation form for vertical comma"}},"key":"FE10"},{"category":"Po","mappings":{"default":{"default":"presentation form for vertical colon"}},"key":"FE13"},{"category":"Po","mappings":{"default":{"default":"presentation form for vertical semicolon"}},"key":"FE14"},{"category":"Po","mappings":{"default":{"default":"presentation form for vertical exclamation mark"}},"key":"FE15"},{"category":"Po","mappings":{"default":{"default":"presentation form for vertical question mark"}},"key":"FE16"},{"category":"Po","mappings":{"default":{"default":"presentation form for vertical horizontal ellipsis"}},"key":"FE19"},{"category":"Po","mappings":{"default":{"default":"glyph for vertical two dot leader"}},"key":"FE30"},{"category":"Pd","mappings":{"default":{"default":"glyph for vertical em dash"}},"key":"FE31"},{"category":"Pd","mappings":{"default":{"default":"glyph for vertical en dash"}},"key":"FE32"},{"category":"Pc","mappings":{"default":{"default":"glyph for vertical underline"}},"key":"FE33"},{"category":"Pc","mappings":{"default":{"default":"glyph for vertical wavy underline"}},"key":"FE34"},{"category":"Po","mappings":{"default":{"default":"sesame dot"}},"key":"FE45"},{"category":"Po","mappings":{"default":{"default":"white sesame dot"}},"key":"FE46"},{"category":"Po","mappings":{"default":{"default":"dashed overline"}},"key":"FE49"},{"category":"Po","mappings":{"default":{"default":"dash dot overline"}},"key":"FE4A"},{"category":"Po","mappings":{"default":{"default":"wavy overline"}},"key":"FE4B"},{"category":"Po","mappings":{"default":{"default":"double wavy overline"}},"key":"FE4C"},{"category":"Pc","mappings":{"default":{"default":"dashed underline"}},"key":"FE4D"},{"category":"Pc","mappings":{"default":{"default":"dash dot underline"}},"key":"FE4E"},{"category":"Pc","mappings":{"default":{"default":"wavy underline"}},"key":"FE4F"},{"category":"Po","mappings":{"default":{"default":"small comma"}},"key":"FE50"},{"category":"Po","mappings":{"default":{"default":"small period"}},"key":"FE52"},{"category":"Po","mappings":{"default":{"default":"small semicolon"}},"key":"FE54"},{"category":"Po","mappings":{"default":{"default":"small colon"}},"key":"FE55"},{"category":"Po","mappings":{"default":{"default":"small question mark"}},"key":"FE56"},{"category":"Po","mappings":{"default":{"default":"small exclamation mark"}},"key":"FE57"},{"category":"Pd","mappings":{"default":{"default":"small em dash"}},"key":"FE58"},{"category":"Po","mappings":{"default":{"default":"small number sign"}},"key":"FE5F"},{"category":"Po","mappings":{"default":{"default":"small ampersand"}},"key":"FE60"},{"category":"Po","mappings":{"default":{"default":"small asterisk"}},"key":"FE61"},{"category":"Sm","mappings":{"default":{"default":"small plus sign"}},"key":"FE62"},{"category":"Pd","mappings":{"default":{"default":"small hyphen minus"}},"key":"FE63"},{"category":"Sm","mappings":{"default":{"default":"small less than sign"}},"key":"FE64"},{"category":"Sm","mappings":{"default":{"default":"small greater than sign"}},"key":"FE65"},{"category":"Sm","mappings":{"default":{"default":"small equals"}},"key":"FE66"},{"category":"Po","mappings":{"default":{"default":"small backslash","alternative":"small reverse solidus"}},"key":"FE68"},{"category":"Sc","mappings":{"default":{"default":"small dollar sign"}},"key":"FE69"},{"category":"Po","mappings":{"default":{"default":"small percent sign"}},"key":"FE6A"},{"category":"Po","mappings":{"default":{"default":"small commercial at"}},"key":"FE6B"},{"category":"Po","mappings":{"default":{"default":"exclamation mark"}},"key":"FF01"},{"category":"Po","mappings":{"default":{"default":"quotation mark"}},"key":"FF02"},{"category":"Po","mappings":{"default":{"default":"number sign"}},"key":"FF03"},{"category":"Sc","mappings":{"default":{"default":"dollar sign"}},"key":"FF04"},{"category":"Po","mappings":{"default":{"default":"percent sign"}},"key":"FF05"},{"category":"Po","mappings":{"default":{"default":"ampersand"}},"key":"FF06"},{"category":"Po","mappings":{"default":{"default":"apostrophe"}},"key":"FF07"},{"category":"Po","mappings":{"default":{"default":"asterisk"}},"key":"FF0A"},{"category":"Sm","mappings":{"default":{"default":"plus sign"}},"key":"FF0B"},{"category":"Po","mappings":{"default":{"default":"comma"}},"key":"FF0C"},{"category":"Pd","mappings":{"default":{"default":"hyphen minus"}},"key":"FF0D"},{"category":"Po","mappings":{"default":{"default":"period"}},"key":"FF0E"},{"category":"Po","mappings":{"default":{"default":"slash","alternative":"solidus"}},"key":"FF0F"},{"category":"Po","mappings":{"default":{"default":"colon"}},"key":"FF1A"},{"category":"Po","mappings":{"default":{"default":"semicolon"}},"key":"FF1B"},{"category":"Sm","mappings":{"default":{"default":"less than"}},"key":"FF1C"},{"category":"Sm","mappings":{"default":{"default":"equals"}},"key":"FF1D"},{"category":"Sm","mappings":{"default":{"default":"greater than"}},"key":"FF1E"},{"category":"Po","mappings":{"default":{"default":"question mark"}},"key":"FF1F"},{"category":"Po","mappings":{"default":{"default":"commercial at"}},"key":"FF20"},{"category":"Po","mappings":{"default":{"default":"backslash","alternative":"reverse solidus"}},"key":"FF3C"},{"category":"Sk","mappings":{"default":{"default":"caret","alternative":"circumflex"}},"key":"FF3E"},{"category":"Pc","mappings":{"default":{"default":"bar","alternative":"underline"}},"key":"FF3F"},{"category":"Sk","mappings":{"default":{"default":"grave"}},"key":"FF40"},{"category":"Sm","mappings":{"default":{"default":"vertical bar"}},"key":"FF5C"},{"category":"Sm","mappings":{"default":{"default":"tilde"}},"key":"FF5E"},{"category":"Sc","mappings":{"default":{"default":"cent sign"}},"key":"FFE0"},{"category":"Sc","mappings":{"default":{"default":"pound sign"}},"key":"FFE1"},{"category":"Sm","mappings":{"default":{"default":"not sign"}},"key":"FFE2"},{"category":"Sk","mappings":{"default":{"default":"macron"},"mathspeak":{"default":"bar"}},"key":"FFE3"},{"category":"So","mappings":{"default":{"default":"broken vertical bar"}},"key":"FFE4"},{"category":"Sc","mappings":{"default":{"default":"yen sign"}},"key":"FFE5"},{"category":"Sc","mappings":{"default":{"default":"won sign"}},"key":"FFE6"},{"category":"So","mappings":{"default":{"default":"halfwidth forms light vertical"}},"key":"FFE8"},{"category":"So","mappings":{"default":{"default":"halfwidth black square"}},"key":"FFED"},{"category":"So","mappings":{"default":{"default":"halfwidth white circle"}},"key":"FFEE"}],"en/symbols/math_whitespace.min":[{"locale":"en"},{"category":"Zs","mappings":{"default":{"default":"space"}},"key":"0020"},{"category":"Zs","mappings":{"default":{"default":"no break space","alternative":"non breaking space"}},"key":"00A0"},{"category":"Cf","mappings":{"default":{"default":"soft hyphen"}},"key":"00AD"},{"category":"Zs","mappings":{"default":{"default":"en quad"}},"key":"2000"},{"category":"Zs","mappings":{"default":{"default":"em quad"}},"key":"2001"},{"category":"Zs","mappings":{"default":{"default":"en space"}},"key":"2002"},{"category":"Zs","mappings":{"default":{"default":"em space"}},"key":"2003"},{"category":"Zs","mappings":{"default":{"default":"three per em space"}},"key":"2004"},{"category":"Zs","mappings":{"default":{"default":"four per em space"}},"key":"2005"},{"category":"Zs","mappings":{"default":{"default":"six per em space"}},"key":"2006"},{"category":"Zs","mappings":{"default":{"default":"figure space"}},"key":"2007"},{"category":"Zs","mappings":{"default":{"default":"punctuation space"}},"key":"2008"},{"category":"Zs","mappings":{"default":{"default":"thin space"}},"key":"2009"},{"category":"Zs","mappings":{"default":{"default":"hair space"}},"key":"200A"},{"category":"Cf","mappings":{"default":{"default":"zero width space"}},"key":"200B"},{"category":"Cf","mappings":{"default":{"default":"zero width non joiner"}},"key":"200C"},{"category":"Cf","mappings":{"default":{"default":"zero width joiner"}},"key":"200D"},{"category":"Cf","mappings":{"default":{"default":"left to right mark"}},"key":"200E"},{"category":"Cf","mappings":{"default":{"default":"right to left mark"}},"key":"200F"},{"category":"Zl","mappings":{"default":{"default":"line separator"}},"key":"2028"},{"category":"Zp","mappings":{"default":{"default":"paragraph separator"}},"key":"2029"},{"category":"Cf","mappings":{"default":{"default":"left to right embedding"}},"key":"202A"},{"category":"Cf","mappings":{"default":{"default":"right to left embedding"}},"key":"202B"},{"category":"Cf","mappings":{"default":{"default":"pop directional formatting"}},"key":"202C"},{"category":"Cf","mappings":{"default":{"default":"left to right override"}},"key":"202D"},{"category":"Cf","mappings":{"default":{"default":"right to left override"}},"key":"202E"},{"category":"Zs","mappings":{"default":{"default":"narrow no break space"}},"key":"202F"},{"category":"Zs","mappings":{"default":{"default":"medium mathematical space"}},"key":"205F"},{"category":"Cf","mappings":{"default":{"default":"word joiner"}},"key":"2060"},{"category":"Cf","mappings":{"default":{"default":"of","alternative":"function application"}},"key":"2061"},{"category":"Cf","mappings":{"default":{"default":"times","alternative":"invisible times"}},"key":"2062"},{"category":"Cf","mappings":{"default":{"default":"comma","alternative":"invisible separator"}},"key":"2063"},{"category":"Cf","mappings":{"default":{"default":"plus","alternative":"invisible plus"}},"key":"2064"},{"category":"Cf","mappings":{"default":{"default":"inhibit symmetric swapping"}},"key":"206A"},{"category":"Cf","mappings":{"default":{"default":"activate symmetric swapping"}},"key":"206B"},{"category":"Cf","mappings":{"default":{"default":"national digit shapes"}},"key":"206E"},{"category":"Cf","mappings":{"default":{"default":"nominal digit shapes"}},"key":"206F"},{"category":"Cf","mappings":{"default":{"default":"zero width no break space","alternative":"byte order mark"}},"key":"FEFF"},{"category":"Cf","mappings":{"default":{"default":"interlinear annotation anchor"}},"key":"FFF9"},{"category":"Cf","mappings":{"default":{"default":"interlinear annotation separator"}},"key":"FFFA"},{"category":"Cf","mappings":{"default":{"default":"interlinear annotation terminator"}},"key":"FFFB"}],"en/symbols/other_stars.min":[{"locale":"en"},{"category":"So","mappings":{"default":{"default":"decimal exponent symbol"}},"key":"23E8"},{"category":"So","mappings":{"default":{"default":"black star"}},"key":"2605"},{"category":"So","mappings":{"default":{"default":"white star"}},"key":"2606"},{"category":"So","mappings":{"default":{"default":"white circle","alternative":"medium white circle"}},"key":"26AA"},{"category":"So","mappings":{"default":{"default":"black circle","alternative":"medium black circle"}},"key":"26AB"},{"category":"So","mappings":{"default":{"default":"white check mark","alternative":"white heavy check mark"}},"key":"2705"},{"category":"So","mappings":{"default":{"default":"check mark"}},"key":"2713"},{"category":"So","mappings":{"default":{"default":"heavy check mark"}},"key":"2714"},{"category":"So","mappings":{"default":{"default":"multiplication x"}},"key":"2715"},{"category":"So","mappings":{"default":{"default":"heavy multiplication x"}},"key":"2716"},{"category":"So","mappings":{"default":{"default":"ballot x"}},"key":"2717"},{"category":"So","mappings":{"default":{"default":"heavy ballot x"}},"key":"2718"},{"category":"So","mappings":{"default":{"default":"open center cross"}},"key":"271B"},{"category":"So","mappings":{"default":{"default":"heavy open center cross"}},"key":"271C"},{"category":"So","mappings":{"default":{"default":"maltese cross"}},"key":"2720"},{"category":"So","mappings":{"default":{"default":"star of david"}},"key":"2721"},{"category":"So","mappings":{"default":{"default":"four teardrop spoked asterisk"}},"key":"2722"},{"category":"So","mappings":{"default":{"default":"four balloon spoked asterisk"}},"key":"2723"},{"category":"So","mappings":{"default":{"default":"heavy four balloon spoked asterisk"}},"key":"2724"},{"category":"So","mappings":{"default":{"default":"four club spoked asterisk"}},"key":"2725"},{"category":"So","mappings":{"default":{"default":"black four pointed star"}},"key":"2726"},{"category":"So","mappings":{"default":{"default":"white four pointed star"}},"key":"2727"},{"category":"So","mappings":{"default":{"default":"sparkles"}},"key":"2728"},{"category":"So","mappings":{"default":{"default":"stress outlined white star"}},"key":"2729"},{"category":"So","mappings":{"default":{"default":"circled white star"}},"key":"272A"},{"category":"So","mappings":{"default":{"default":"open center black star"}},"key":"272B"},{"category":"So","mappings":{"default":{"default":"black center white star"}},"key":"272C"},{"category":"So","mappings":{"default":{"default":"outlined black star"}},"key":"272D"},{"category":"So","mappings":{"default":{"default":"heavy outlined black star"}},"key":"272E"},{"category":"So","mappings":{"default":{"default":"pinwheel star"}},"key":"272F"},{"category":"So","mappings":{"default":{"default":"shadowed white star"}},"key":"2730"},{"category":"So","mappings":{"default":{"default":"heavy asterisk"}},"key":"2731"},{"category":"So","mappings":{"default":{"default":"open center asterisk"}},"key":"2732"},{"category":"So","mappings":{"default":{"default":"eight spoked asterisk"}},"key":"2733"},{"category":"So","mappings":{"default":{"default":"eight pointed black star"}},"key":"2734"},{"category":"So","mappings":{"default":{"default":"eight pointed pinwheel star"}},"key":"2735"},{"category":"So","mappings":{"default":{"default":"six pointed black star"}},"key":"2736"},{"category":"So","mappings":{"default":{"default":"twelve pointed black star"}},"key":"2739"},{"category":"So","mappings":{"default":{"default":"sixteen pointed asterisk"}},"key":"273A"},{"category":"So","mappings":{"default":{"default":"teardrop spoked asterisk"}},"key":"273B"},{"category":"So","mappings":{"default":{"default":"open center teardrop spoked asterisk"}},"key":"273C"},{"category":"So","mappings":{"default":{"default":"heavy teardrop spoked asterisk"}},"key":"273D"},{"category":"So","mappings":{"default":{"default":"six petalled black and white florette"}},"key":"273E"},{"category":"So","mappings":{"default":{"default":"black florette"}},"key":"273F"},{"category":"So","mappings":{"default":{"default":"white florette"}},"key":"2740"},{"category":"So","mappings":{"default":{"default":"eight petalled outlined black florette"}},"key":"2741"},{"category":"So","mappings":{"default":{"default":"circled open center eight pointed star"}},"key":"2742"},{"category":"So","mappings":{"default":{"default":"heavy teardrop spoked pinwheel asterisk"}},"key":"2743"},{"category":"So","mappings":{"default":{"default":"snowflake"}},"key":"2744"},{"category":"So","mappings":{"default":{"default":"tight trifoliate snowflake"}},"key":"2745"},{"category":"So","mappings":{"default":{"default":"heavy chevron snowflake"}},"key":"2746"},{"category":"So","mappings":{"default":{"default":"sparkle"}},"key":"2747"},{"category":"So","mappings":{"default":{"default":"heavy sparkle"}},"key":"2748"},{"category":"So","mappings":{"default":{"default":"balloon spoked asterisk"}},"key":"2749"},{"category":"So","mappings":{"default":{"default":"eight teardrop spoked propeller asterisk"}},"key":"274A"},{"category":"So","mappings":{"default":{"default":"heavy eight teardrop spoked propeller asterisk"}},"key":"274B"},{"category":"So","mappings":{"default":{"default":"cross mark"}},"key":"274C"},{"category":"So","mappings":{"default":{"default":"shadowed white circle"}},"key":"274D"}],"en/units/area.min":[{"locale":"en"},{"category":"other","mappings":{"default":{"default":"square"}},"key":"sq","names":["sq","sq."]},{"category":"area","mappings":{"default":{"default":"square inch","plural":"square inches"}},"key":"sq inch","names":["sq in","sq. in.","sq inch","sq. inch"]},{"category":"area","mappings":{"default":{"default":"square rod"}},"key":"sq rd","names":["sq rd","sq. rd."]},{"category":"area","mappings":{"default":{"default":"square foot","plural":"square feet"}},"key":"sq ft","names":["sq ft","sq. ft."]},{"category":"area","mappings":{"default":{"default":"square yard"}},"key":"sq yd","names":["sq yd","sq. yd."]},{"category":"area","mappings":{"default":{"default":"square mile"}},"key":"sq mi","names":["sq mi","sq. mi."]},{"category":"area","mappings":{"default":{"default":"acre"}},"key":"acr","names":["ac","ac.","acr","acr."]},{"category":"area","mappings":{"default":{"default":"hectare"}},"key":"ha","names":["ha"]}],"en/units/currency.min":[{"locale":"en"},{"category":"currency","key":"$","mappings":{"default":{"default":"dollar"}},"names":["$","💲","＄","﹩","USD"]},{"category":"currency","key":"£","mappings":{"default":{"default":"pound"}},"names":["£","￡","GBP"]},{"category":"currency","key":"¥","mappings":{"default":{"default":"yen"}},"names":["¥","￥","JPY"]},{"category":"currency","key":"€","mappings":{"default":{"default":"euro"}},"names":["€","EUR"]},{"category":"currency","key":"₡","mappings":{"default":{"default":"colon"}},"names":["₡","CRC"]},{"category":"currency","key":"₢","mappings":{"default":{"default":"cruzeiro"}},"names":["₢"]},{"category":"currency","key":"₣","mappings":{"default":{"default":"franc"}},"names":["₣"]},{"category":"currency","key":"₤","mappings":{"default":{"default":"lira"}},"names":["₤"]},{"category":"currency","key":"₥","mappings":{"default":{"default":"mill"}},"names":["₥"]},{"category":"currency","key":"₦","mappings":{"default":{"default":"naira"}},"names":["₦","NGN"]},{"category":"currency","key":"₧","mappings":{"default":{"default":"peseta"}},"names":["₧"]},{"category":"currency","key":"₨","mappings":{"default":{"default":"rupee"}},"names":["₨","₹","INR","NPR","PKR","LKR"]},{"category":"currency","key":"₩","mappings":{"default":{"default":"won"}},"names":["₩","￦","KRW"]},{"category":"currency","key":"₪","mappings":{"default":{"default":"sheqel"}},"names":["₪"]},{"category":"currency","key":"₫","mappings":{"default":{"default":"dong"}},"names":["₫"]},{"category":"currency","key":"₭","mappings":{"default":{"default":"kip"}},"names":["₭"]},{"category":"currency","key":"₮","mappings":{"default":{"default":"tugrik"}},"names":["₮"]},{"category":"currency","key":"₯","mappings":{"default":{"default":"drachma"}},"names":["₯"]},{"category":"currency","key":"₰","mappings":{"default":{"default":"Pfennig"}},"names":["₰"]},{"category":"currency","key":"₱","mappings":{"default":{"default":"peso"}},"names":["₱"]},{"category":"currency","key":"₲","mappings":{"default":{"default":"guaranis"}},"names":["₲"]},{"category":"currency","key":"₳","mappings":{"default":{"default":"austral"}},"names":["₳"]},{"category":"currency","key":"₴","mappings":{"default":{"default":"hryvnia"}},"names":["₴","UAH"]},{"category":"currency","key":"₵","mappings":{"default":{"default":"cedis"}},"names":["₵","GHS"]},{"category":"currency","key":"₶","mappings":{"default":{"default":"livre tournois"}},"names":["₶"]},{"category":"currency","key":"₷","mappings":{"default":{"default":"spesmilo"}},"names":["₷"]},{"category":"currency","key":"₸","mappings":{"default":{"default":"tenge"}},"names":["₸","KZT"]},{"category":"currency","key":"₺","mappings":{"default":{"default":"turkish lira"}},"names":["₺","TRY"]},{"category":"currency","key":"元","mappings":{"default":{"default":"yuan"}},"names":["元"]},{"category":"currency","key":"¢","mappings":{"default":{"default":"cent"}},"names":["￠","¢"]}],"en/units/energy.min":[{"locale":"en"},{"category":"energy","si":true,"mappings":{"default":{"default":"watt"}},"key":"W","names":["W","w"]},{"category":"energy","mappings":{"default":{"default":"kilowatt hour"}},"key":"kwh","names":["kwh","kWh"]},{"category":"energy","si":true,"mappings":{"default":{"default":"joule"}},"key":"J","names":["J"]},{"category":"energy","si":true,"mappings":{"default":{"default":"Newton"}},"key":"N","names":["N"]},{"category":"energy","si":true,"mappings":{"default":{"default":"ampere"}},"key":"A","names":["A"]},{"category":"energy","si":true,"mappings":{"default":{"default":"volt"}},"key":"V","names":["V"]},{"category":"energy","mappings":{"default":{"default":"ohm"}},"key":"ohm","names":["Ohm","ohm"]},{"category":"energy","si":true,"mappings":{"default":{"default":"ohm"}},"key":"Ω","names":["Ω"]},{"category":"energy","si":true,"mappings":{"default":{"default":"megohm"}},"key":"MΩ","names":["MΩ"]},{"category":"energy","si":true,"mappings":{"default":{"default":"kilohm"}},"key":"kΩ","names":["kΩ"]}],"en/units/length.min":[{"locale":"en"},{"category":"length","mappings":{"default":{"default":"foot","plural":"feet"}},"key":"ft","names":["ft","ft."]},{"category":"length","mappings":{"default":{"default":"inch","plural":"inches"}},"key":"in","names":["in","in."]},{"category":"length","mappings":{"default":{"default":"mile"}},"key":"mi","names":["mi","mi."]},{"category":"length","mappings":{"default":{"default":"yard"}},"key":"yd","names":["yd","yd."]},{"category":"length","mappings":{"default":{"default":"link"}},"key":"link","names":["li","li."]},{"category":"length","mappings":{"default":{"default":"rod"}},"key":"rod","names":["rd","rd."]},{"category":"length","mappings":{"default":{"default":"chain"}},"key":"chain","names":["ch","ch."]},{"category":"length","mappings":{"default":{"default":"furlong"}},"key":"furlong","names":["fur","fur."]},{"category":"length","mappings":{"default":{"default":"nautical mile"}},"key":"n.m.","names":["n.m."]},{"category":"length","si":true,"mappings":{"default":{"default":"meter"}},"key":"m","names":["m"]}],"en/units/memory.min":[{"locale":"en"},{"category":"memory","mappings":{"default":{"default":"bit"}},"key":"b","names":["b"]},{"category":"memory","si":true,"mappings":{"default":{"default":"byte"}},"key":"B","names":["B"]},{"category":"memory","mappings":{"default":{"default":"kilobyte"}},"key":"KB","names":["KB"]}],"en/units/other.min":[{"locale":"en"},{"category":"other","mappings":{"default":{"default":"dozen"}},"key":"doz","names":["doz","doz.","dz","dz."]}],"en/units/speed.min":[{"locale":"en"},{"category":"speed","mappings":{"default":{"default":"knot"}},"key":"kt","names":["kt","kt."]},{"category":"speed","mappings":{"default":{"default":"mile per hour","plural":"miles per hour"}},"key":"mph","names":["mph"]},{"category":"speed","mappings":{"default":{"default":"revolution per minute","plural":"revolutions per minute"}},"key":"rpm","names":["rpm"]},{"category":"speed","mappings":{"default":{"default":"kilometer per hour","plural":"kilometers per hour"}},"key":"kmh","names":["kmh","kph"]}],"en/units/temperature.min":[{"locale":"en"},{"category":"temperature","mappings":{"default":{"default":"Fahrenheit"}},"key":"F","names":["F","F.","°F"]},{"category":"temperature","mappings":{"default":{"default":"Celsius","alternative":"Centigrade"}},"key":"C","names":["C","°C"]},{"category":"temperature","mappings":{"default":{"default":"Kelvin"}},"key":"K","names":["K","°K"]}],"en/units/time.min":[{"locale":"en"},{"category":"time","si":true,"mappings":{"default":{"default":"second"}},"key":"s","names":["s"]},{"category":"time","mappings":{"default":{"default":"second"}},"key":"″","names":["″"]},{"category":"time","mappings":{"default":{"default":"minute"}},"key":"min","names":["min","′"]},{"category":"time","mappings":{"default":{"default":"degree"}},"key":"°","names":["°"]},{"category":"time","mappings":{"default":{"default":"hour"}},"key":"h","names":["h","hr"]}],"en/units/volume.min":[{"locale":"en"},{"category":"volume","mappings":{"default":{"default":"cubic"}},"key":"cu","names":["cu","cu."]},{"category":"volume","mappings":{"default":{"default":"cubic inch","plural":"cubic inches"}},"key":"cu inch","names":["cu in","cu. in."]},{"category":"volume","mappings":{"default":{"default":"cubic foot","plural":"cubic feet"}},"key":"cu ft","names":["cu ft","cu. ft."]},{"category":"volume","mappings":{"default":{"default":"cubic yard"}},"key":"cu yd","names":["cu yd","cu. yd."]},{"category":"volume","mappings":{"default":{"default":"barrel"}},"key":"bbl","names":["bbl.","bbl"]},{"category":"volume","mappings":{"default":{"default":"fluid ounce"}},"key":"fl. oz.","names":["fl. oz.","fl oz"]},{"category":"volume","mappings":{"default":{"default":"gallon"}},"key":"gal","names":["gal","gal."]},{"category":"volume","mappings":{"default":{"default":"pint"}},"key":"pt","names":["pt","pt."]},{"category":"volume","mappings":{"default":{"default":"quart"}},"key":"qt","names":["qt","qt."]},{"category":"volume","mappings":{"default":{"default":"fluid dram"}},"key":"fluid dram","names":["fl dr","fl. dr."]},{"category":"volume","mappings":{"default":{"default":"tablespoon"}},"key":"tbsp","names":["tbsp","tbsp.","Tbsp","Tbsp."]},{"category":"volume","mappings":{"default":{"default":"teaspoon"}},"key":"tsp","names":["tsp","tsp."]},{"category":"volume","mappings":{"default":{"default":"cup"}},"key":"cup","names":["cp","cp."]},{"category":"volume","mappings":{"default":{"default":"cubic centimeter"}},"key":"cc","names":["cc","ccm"]},{"category":"volume","si":true,"mappings":{"default":{"default":"liter"}},"key":"l","names":["l"]}],"en/units/weight.min":[{"locale":"en"},{"category":"weight","mappings":{"default":{"default":"dram"}},"key":"dram","names":["dr","dr."]},{"category":"weight","mappings":{"default":{"default":"ounce"}},"key":"oz","names":["oz","oz."]},{"category":"weight","mappings":{"default":{"default":"pound"}},"key":"lb","names":["lb","lb."]},{"category":"weight","mappings":{"default":{"default":"stone"}},"key":"st","names":["st","st."]},{"category":"weight","mappings":{"default":{"default":"quarter"}},"key":"qtr","names":["qtr","qtr."]},{"category":"weight","mappings":{"default":{"default":"hundredweight"}},"key":"cwt","names":["cwt","cwt."]},{"category":"weight","mappings":{"default":{"default":"long ton"}},"key":"LT","names":["LT","L.T."]},{"category":"weight","mappings":{"default":{"default":"gram"}},"key":"gr","names":["gr"]},{"category":"weight","si":true,"mappings":{"default":{"default":"gram"}},"key":"g","names":["g"]},{"category":"weight","mappings":{"default":{"default":"microgram"}},"key":"mcg","names":["mcg"]},{"category":"weight","mappings":{"default":{"default":"ton"}},"key":"t","names":["t","T"]}],"en/rules/chromevox.min":{"locale":"en","domain":"chromevox","modality":"speech","rules":[["Precondition","collapsed","default","self::*[@alternative]","not(contains(@grammar, \\"collapsed\\"))"],["Precondition","stree","default","self::stree"],["Precondition","factorial","default","self::punctuation","text()=\\"!\\"","name(preceding-sibling::*[1])!=\\"text\\""],["Precondition","multrel","default","self::multirel"],["Precondition","variable-equality","default","self::relseq[@role=\\"equality\\"]","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","multi-equality","default","self::relseq[@role=\\"equality\\"]","count(./children/*)>2"],["Precondition","equality","default","self::relseq[@role=\\"equality\\"]","count(./children/*)=2"],["Precondition","simple-equality","default","self::relseq[@role=\\"equality\\"]","count(./children/*)=2","./children/identifier or ./children/number"],["Precondition","simple-equality2","default","self::relseq[@role=\\"equality\\"]","count(./children/*)=2","./children/function or ./children/appl"],["Precondition","relseq","default","self::relseq"],["Precondition","binary-operation","default","self::infixop"],["Precondition","variable-addition","default","self::infixop[@role=\\"addition\\"]","count(children/*)>2","children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","multi-addition","default","self::infixop[@role=\\"addition\\"]","count(./children/*)>2"],["Precondition","prefix","default","self::prefixop"],["Precondition","negative","default","self::prefixop","self::prefixop[@role=\\"negative\\"]"],["Precondition","postfix","default","self::postfixop"],["Precondition","identifier","default","self::identifier"],["Precondition","number","default","self::number"],["Precondition","mixed-number","default","self::number","@role=\\"mixed\\""],["Precondition","font","default","self::*[@font!=\\"normal\\"]","not(contains(@grammar, \\"ignoreFont\\"))"],["Precondition","font-identifier-short","default","self::identifier","string-length(text())=1","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font=\\"normal\\"","\\"\\"=translate(text(), \\"abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ\\", \\"\\")","@role!=\\"unit\\""],["Precondition","font-identifier","default","self::identifier","string-length(text())=1","@font","@font=\\"normal\\"","not(contains(@grammar, \\"ignoreFont\\"))","@role!=\\"unit\\""],["Precondition","omit-font","default","self::identifier[@font=\\"italic\\"]","string-length(text())=1","not(contains(@grammar, \\"ignoreFont\\"))"],["Precondition","fraction","default","self::fraction"],["Precondition","superscript","default","self::superscript"],["Precondition","subscript","default","self::subscript"],["Precondition","ellipsis","default","self::punctuation","self::punctuation[@role=\\"ellipsis\\"]"],["Precondition","fence-single","default","self::punctuation","self::punctuation[@role=\\"openfence\\"]"],["Alias","fence-single","self::punctuation","self::punctuation[@role=\\"closefence\\"]"],["Alias","fence-single","self::punctuation","self::punctuation[@role=\\"vbar\\"]"],["Alias","fence-single","self::punctuation","self::punctuation[@role=\\"application\\"]"],["Precondition","omit-empty","default","self::empty"],["Precondition","fences-open-close","default","self::fenced","@role=\\"leftright\\""],["Precondition","fences-open-close-in-appl","default","self::fenced[@role=\\"leftright\\"]","./parent::children/parent::appl"],["Precondition","fences-neutral","default","self::fenced[@role=\\"neutral\\"]"],["Precondition","omit-fences","default","self::fenced"],["Precondition","matrix","default","self::matrix"],["Precondition","matrix-row","default","self::row[@role=\\"matrix\\"]"],["Precondition","matrix-cell","default","self::cell[@role=\\"matrix\\"]"],["Precondition","vector","default","self::vector"],["Precondition","cases","default","self::cases"],["Precondition","cases-row","default","self::row[@role=\\"cases\\"]"],["Precondition","cases-cell","default","self::cell[@role=\\"cases\\"]"],["Precondition","row","default","self::row"],["Precondition","cases-end","default","self::cases","following-sibling::*"],["Precondition","multiline","default","self::multiline"],["Precondition","multiline-ineq","default","self::multiline","@role=\\"inequality\\""],["Precondition","line","default","self::line"],["Precondition","table","default","self::table"],["Precondition","table-ineq","default","self::table","@role=\\"inequality\\""],["Precondition","table-row","default","self::row[@role=\\"table\\"]"],["Alias","cases-cell","self::cell[@role=\\"table\\"]"],["Precondition","empty-cell","default","self::cell","count(children/*)=0"],["Precondition","end-punct","default","self::punctuated","@role=\\"endpunct\\""],["Precondition","start-punct","default","self::punctuated","@role=\\"startpunct\\""],["Precondition","punctuated","default","self::punctuated"],["Precondition","function","default","self::function"],["Precondition","appl","default","self::appl"],["Precondition","sum-only","default","self::limboth","self::limboth[@role=\\"sum\\"]"],["Precondition","limboth","default","self::limboth"],["Precondition","limlower","default","self::limlower"],["Precondition","limupper","default","self::limupper"],["Precondition","largeop","default","self::largeop"],["Precondition","bigop","default","self::bigop"],["Precondition","integral","default","self::integral"],["Precondition","sqrt","default","self::sqrt"],["Precondition","square","default","self::superscript","children/*[2][text()=2]","name(./children/*[1])!=\\"text\\""],["Precondition","cube","default","self::superscript","children/*[2][text()=3]","name(./children/*[1])!=\\"text\\""],["Precondition","root","default","self::root"],["Precondition","text","default","self::text"],["Precondition","unit","default","self::identifier","@role=\\"unit\\""],["Precondition","unit-square","default","self::superscript","@role=\\"unit\\"","children/*[2][text()=2]","name(children/*[1])=\\"identifier\\""],["Precondition","unit-cubic","default","self::superscript","@role=\\"unit\\"","children/*[2][text()=3]","name(children/*[1])=\\"identifier\\""],["Precondition","reciprocal","default","self::superscript","@role=\\"unit\\"","name(children/*[1])=\\"identifier\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=1]","count(preceding-sibling::*)=0 or preceding-sibling::*[@role!=\\"unit\\"]"],["Precondition","per","default","self::superscript","@role=\\"unit\\"","name(children/*[1])=\\"identifier\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=1]","preceding-sibling::*[@role=\\"unit\\"]"],["Precondition","unit-combine","default","self::infixop","@role=\\"unit\\""],["Precondition","unit-divide","default","self::fraction","@role=\\"unit\\""]]},"en/rules/chromevox_actions.min":{"locale":"en","domain":"chromevox","modality":"speech","kind":"actions","rules":[["Action","collapsed","[t] \\"collapsed\\"; [n] . (engine:modality=summary,grammar:collapsed)"],["Action","stree","[n] ./*[1]"],["Action","factorial","[t] \\"factorial\\""],["Action","multrel","[t] \\"multirelation\\"; [m] children/* (sepFunc:CTFcontentIterator)"],["Action","variable-equality","[t] \\"equation sequence\\"; [m] children/* (context:\\"part\\",ctxtFunc:CTFnodeCounter,sepFunc:CTFcontentIterator)"],["Action","multi-equality","[t] \\"equation sequence\\"; [m] children/* (context:\\"part\\",ctxtFunc:CTFnodeCounter,sepFunc:CTFcontentIterator)"],["Action","equality","[n] children/*[1] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]"],["Action","simple-equality","[n] children/*[1] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]"],["Action","simple-equality2","[n] children/*[1] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]"],["Action","relseq","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","binary-operation","[m] children/* (sepFunc:CTFcontentIterator);"],["Action","variable-addition","[t] \\"sum with variable number of summands\\" (pause:400); [m] children/* (sepFunc:CTFcontentIterator)"],["Action","multi-addition","[t] \\"sum with\\"; [t] count(./children/*); [t] \\"summands\\" (pause:400); [m] children/* (sepFunc:CTFcontentIterator)"],["Action","prefix","[t] \\"prefix\\"; [m] content/* (pause 150);[n] children/*[1]"],["Action","negative","[t] \\"negative\\"; [n] children/*[1]"],["Action","postfix","[n] children/*[1]; [t] \\"postfix\\"; [m] content/* (pause 300)"],["Action","identifier","[n] text()"],["Action","number","[n] text()"],["Action","mixed-number","[n] children/*[1]; [t] \\"and\\"; [n] children/*[2]; "],["Action","font","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)"],["Action","font-identifier-short","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)"],["Action","font-identifier","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)"],["Action","omit-font","[n] . (grammar:ignoreFont=@font)"],["Action","fraction","[p] (pause:250); [n] children/*[1] (rate:0.35, pause:250); [t] \\"divided by\\"; [n] children/*[2] (rate:-0.35, pause:400)"],["Action","superscript","[n] children/*[1]; [t] \\"super\\"; [n] children/*[2] (pitch:0.35, pause:300)"],["Action","subscript","[n] children/*[1]; [t] \\"sub\\"; [n] children/*[2] (pitch:-0.35, pause:300)"],["Action","ellipsis","[p] (pause:200); [t] \\"ellipsis\\" (pause:300)"],["Action","fence-single","[n] text()"],["Action","omit-empty","[p] (pause:100)"],["Action","fences-open-close","[p] (pause:100); [n] content/*[1]; [n] children/*[1]; [n] content/*[2] (pause:100)"],["Action","fences-open-close-in-appl","[p] (pause:200); [n] children/*[1] (pause:200);"],["Action","fences-neutral","[p] (pause:100); [t] \\"absolute value of\\"; [n] children/*[1] (pause:350);"],["Action","omit-fences","[p] (pause:500); [n] children/*[1] (pause:200);"],["Action","matrix","[t] \\"matrix\\"; [m] children/* (ctxtFunc:CTFnodeCounter,context:\\"row\\",pause:100)"],["Action","matrix-row","[m] children/* (ctxtFunc:CTFnodeCounter,context:\\"column\\",pause:100)"],["Action","matrix-cell","[n] children/*[1]"],["Action","vector","[t] \\"vector\\"; [m] children/* (ctxtFunc:CTFnodeCounter,context:\\"element\\",pause:100)"],["Action","cases","[t] \\"case statement\\"; [m] children/* (ctxtFunc:CTFnodeCounter,context:\\"case\\",pause:100)"],["Action","cases-row","[m] children/*"],["Action","cases-cell","[n] children/*[1]"],["Action","row","[m] ./* (ctxtFunc:CTFnodeCounter,context:\\"column\\",pause:100)"],["Action","cases-end","[t] \\"case statement\\"; [m] children/* (ctxtFunc:CTFnodeCounter,context:\\"case\\",pause:100);[t] \\"end cases\\""],["Action","multiline","[t] \\"multiline equation\\";[m] children/* (ctxtFunc:CTFnodeCounter,context:\\"line\\",pause:100)"],["Action","multiline-ineq","[t] \\"multiline inequality\\";[m] children/* (ctxtFunc:CTFnodeCounter,context:\\"row\\",pause:100)"],["Action","line","[m] children/*"],["Action","table","[t] \\"multiline equation\\";[m] children/* (ctxtFunc:CTFnodeCounter,context:\\"row\\",pause:200)"],["Action","table-ineq","[t] \\"multiline inequality\\";[m] children/* (ctxtFunc:CTFnodeCounter,context:\\"row\\",pause:200)"],["Action","table-row","[m] children/* (pause:100)"],["Action","empty-cell","[t] \\"Blank\\""],["Action","end-punct","[m] children/* (pause:300)"],["Action","start-punct","[n] content/*[1] (pause:200); [m] children/*[position()>1]"],["Action","punctuated","[m] children/* (pause:100)"],["Action","function","[n] text()"],["Action","appl","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]"],["Action","sum-only","[n] children/*[1]; [t] \\"from\\"; [n] children/*[2]; [t] \\"to\\";[n] children/*[3]"],["Action","limboth","[n] children/*[1] (pause 100); [t] \\"over\\"; [n] children/*[2];[t] \\"under\\"; [n] children/*[3] (pause 250);"],["Action","limlower","[n] children/*[1]; [t] \\"over\\"; [n] children/*[2];"],["Action","limupper","[n] children/*[1]; [t] \\"under\\"; [n] children/*[2];"],["Action","largeop","[n] text()"],["Action","bigop","[n] children/*[1] (pause 100); [t] \\"over\\"; [n] children/*[2] (pause 250);"],["Action","integral","[n] children/*[1] (pause 100); [n] children/*[2] (pause 200); [n] children/*[3] (rate:0.35);"],["Action","sqrt","[t] \\"Square root of\\"; [n] children/*[1] (rate:0.35, pause:400)"],["Action","square","[n] children/*[1]; [t] \\"squared\\" (pitch:0.35, pause:300)"],["Action","cube","[n] children/*[1]; [t] \\"cubed\\" (pitch:0.35, pause:300)"],["Action","root","[t] \\"root of order\\"; [n] children/*[1];[t] \\"over\\"; [n] children/*[2] (rate:0.35, pause:400)"],["Action","text","[n] text() (pause:200)"],["Action","unit","[t] text() (grammar:annotation=\\"unit\\":translate:plural)"],["Action","unit-square","[t] \\"square\\"; [n] children/*[1]"],["Action","unit-cubic","[t] \\"cubic\\"; [n] children/*[1]"],["Action","reciprocal","[t] \\"reciprocal\\"; [n] children/*[1]"],["Action","per","[t] \\"per\\"; [n] children/*[1]"],["Action","unit-combine","[m] children/*"],["Action","unit-divide","[n] children/*[1] (pitch:0.3); [t] \\"per\\"; [n] children/*[2] (pitch:-0.3)"]]},"en/rules/clearspeak_english.min":{"domain":"clearspeak","locale":"en","modality":"speech","inherits":"base","rules":[["Precondition","german-font","default","self::*[@font=\\"fraktur\\"]","not(contains(@grammar, \\"ignoreFont\\"))"],["Precondition","german-font-bold","default","self::*[@font=\\"bold-fraktur\\"]","not(contains(@grammar, \\"ignoreFont\\"))"],["Precondition","unit-square","default","self::superscript[@role=\\"unit\\"]","children/*[2][text()=2]","name(children/*[1])=\\"identifier\\"","children/*[1][@category=\\"unit:length\\"]"],["Precondition","unit-cubic","default","self::superscript[@role=\\"unit\\"]","children/*[2][text()=3]","name(children/*[1])=\\"identifier\\"","children/*[1][@category=\\"unit:length\\"]"]]},"en/rules/clearspeak_english_actions.min":{"domain":"clearspeak","locale":"en","modality":"speech","kind":"actions","rules":[["Action","collapsed","[t] \\"collapsed\\"; [n] . (engine:modality=summary, grammar:collapsed)"],["Action","font","[t] @font (grammar:localFont); [n] . (pause:short, grammar:ignoreFont=@font)"],["Action","german-font","[t] \\"German\\"; [n] . (grammar:ignoreFont=@font)"],["Action","german-font-bold","[t] \\"bold German\\"; [n] . (grammar:ignoreFont=@font)"],["Action","ellipsis","[t] \\"and so on\\""],["Action","ellipsis-andsoon","[t] \\"and so on up to\\""],["Action","vbar-evaluated","[n] children/*[1] (pause:short); [t] \\"evaluated at\\"; [n] content/*[1]/children/*[2] (pause:short)"],["Action","vbar-evaluated-both","[n] children/*[1] (pause:short); [t] \\"evaluated at\\"; [n] content/*[1]/children/*[2] (pause:short); [t] \\"minus the same expression evaluated at\\"; [n] content/*[1]/children/*[1]/children/*[2] (pause:short)"],["Action","vbar-such-that","[t] \\"such that\\""],["Action","vbar-divides","[t] \\"divides\\""],["Action","vbar-always-divides","[t] \\"divides\\""],["Action","vbar-given","[t] \\"given\\""],["Action","member","[t] \\"is a member of\\""],["Action","member-member","[t] \\"is a member of\\""],["Action","member-element","[t] \\"is an element of\\""],["Action","member-in","[t] \\"is in\\""],["Action","member-belongs","[t] \\"belongs to\\""],["Action","not-member","[t] \\"is not a member of\\""],["Action","not-member-member","[t] \\"is not a member of\\""],["Action","not-member-element","[t] \\"is not an element of\\""],["Action","not-member-in","[t] \\"is not in\\""],["Action","not-member-belongs","[t] \\"does not belong to\\""],["Action","set-member","[t] \\"in\\""],["Action","set-member-member","[t] \\"member of\\""],["Action","set-member-element","[t] \\"element of\\""],["Action","set-member-in","[t] \\"in\\""],["Action","set-member-belongs","[t] \\"belonging to\\""],["Action","set-not-member","[t] \\"not in\\""],["Action","set-not-member-member","[t] \\"not a member of\\""],["Action","set-not-member-element","[t] \\"not an element of\\""],["Action","set-not-member-in","[t] \\"not in\\""],["Action","set-not-member-belongs","[t] \\"not belonging to\\""],["Action","article","[t] \\"the\\"; [n] . (grammar:noArticle)"],["Action","appl","[n] children/*[1]; [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","appl-simple","[n] children/*[1]; [t] \\"of\\" (pause:short); [n] children/*[2] (pause:short)"],["Action","appl-simple-fenced","[n] children/*[1]; [t] \\"of\\" (pause:short); [n] children/*[2] (pause:short)"],["Action","appl-times","[p] (pause:short); [n] children/*[1]; [t] \\"times\\"; [n] children/*[2] (pause:short)"],["Action","function-prefix","[n] children/*[1]; [n] children/*[2]"],["Action","function-prefix-simple-arg","[n] children/*[1]; [n] children/*[2]"],["Action","function-prefix-embell","[p] (pause:short); [n] children/*[1]; [n] children/*[2] (pause:short)"],["Action","function-prefix-fenced-or-frac-arg","[p] (pause:short); [n] children/*[1] (grammar:addArticle); [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","function-prefix-subscript","[p] (pause:short); [n] children/*[1] (grammar:addArticle); [t] \\"of\\" (pause:short); [n] children/*[2] (pause:short)"],["Action","function-ln","[n] children/*[1]; [n] children/*[2]"],["Action","function-ln-pause","[n] children/*[1]; [n] children/*[2] (pause:short)"],["Action","function-ln-of","[n] children/*[1]; [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","function-prefix-as-exp","[n] children/*[1]; [t] \\"of\\" (pause:short); [n] children/*[2] (pause:short)"],["Action","function-prefix-subscript-as-exp","[n] children/*[1]; [t] \\"of\\" (pause:short); [n] children/*[2] (pause:short)"],["Action","function-prefix-hyper","[p] (pause:short); [n] children/*[1]; [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","function-prefix-inverse","[p] (pause:short); [t] \\"the inverse\\"; [n] children/*[1]/children/*[1]; [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","appl-triginverse","[p] (pause:short); [n] children/*[1]; [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","function-prefix-arc-simple","[p] (pause:short); [t] \\"arc\\"; [n] children/*[1]/children/*[1]; [n] children/*[2] (pause:short)"],["Action","function-prefix-arc-simple-fenced","[p] (pause:short); [t] \\"arc\\"; [n] children/*[1]/children/*[1] (pause:short); [n] children/*[2] (pause:short)"],["Action","function-prefix-arc","[p] (pause:short); [t] \\"arc\\"; [n] children/*[1]/children/*[1]; [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","function-inverse","[n] children/*[1]; [t] \\"inverse\\""],["Action","superscript-prefix-function","[n] children/*[2] (grammar:ordinal:addArticle); [t] \\"power of\\"; [n] children/*[1]"],["Action","superscript","[n] children/*[1]; [t] \\"raised to the exponent\\" (pause:short); [n] children/*[2] (pause:short); [t] \\"end exponent\\" (pause:short)"],["Action","superscript-simple-exponent","[n] children/*[1]; [t] \\"raised to the\\"; [n] children/*[2] (grammar:noArticle); [t] \\"power\\" (pause:short)"],["Action","superscript-simple-exponent-end","[n] children/*[1]; [t] \\"raised to the\\"; [n] children/*[2] (grammar:noArticle); [t] \\"power\\""],["Action","superscript-ordinal","[n] children/*[1]; [t] \\"to the\\"; [n] children/*[2] (grammar:ordinal:noArticle); [t] \\"power\\" (pause:short)"],["Action","superscript-non-ordinal","[n] children/*[1]; [t] \\"to the\\"; [n] children/*[2] (grammar:noArticle); [t] \\"power\\" (pause:short)"],["Action","superscript-simple-function","[n] children/*[2] (grammar:ordinal:addArticle); [t] \\"power of\\" (pause:short); [n] children/*[1]"],["Action","superscript-simple-function-none","[n] . (grammar:functions_none)"],["Action","superscript-ordinal-number","[n] children/*[1]; [t] \\"to the\\"; [n] children/*[2] (pause:short, grammar:ordinal:noArticle)"],["Action","superscript-ordinal-negative","[n] children/*[1]; [t] \\"to the\\"; [n] children/*[2] (pause:short, grammar:noArticle)"],["Action","superscript-ordinal-default","[n] children/*[1]; [t] \\"raised to the exponent\\" (pause:short); [n] children/*[2] (pause:short); [t] \\"end exponent\\" (pause:short)"],["Action","superscript-ordinal-power-number","[n] children/*[1]; [t] \\"to the\\"; [n] children/*[2] (grammar:ordinal:noArticle); [t] \\"power\\" (pause:short)"],["Action","superscript-ordinal-power-negative","[n] children/*[1]; [t] \\"to the\\"; [n] children/*[2] (grammar:noArticle); [t] \\"power\\" (pause:short)"],["Action","superscript-ordinal-power-identifier","[n] children/*[1]; [t] \\"to the\\"; [n] children/*[2] (grammar:ordinal:noArticle); [t] \\"power\\" (pause:short)"],["Action","superscript-ordinal-power-default","[n] children/*[1]; [t] \\"raised to the exponent\\" (pause:short); [n] children/*[2] (pause:short); [t] \\"end exponent\\" (pause:short)"],["Action","superscript-power","[n] children/*[1]; [t] \\"raised to the power\\"; [n] children/*[2] (pause:short, grammar:afterPower)"],["Action","superscript-power-default","[n] children/*[1]; [t] \\"raised to the exponent\\" (pause:short); [n] children/*[2] (pause:short); [t] \\"end exponent\\" (pause:short)"],["Action","exponent","[n] text() (join:\\"-\\"); [t] \\"th\\""],["Action","exponent-number","[t] CSFordinalExponent"],["Action","exponent-ordinal","[t] CSFwordOrdinal"],["Action","exponent-ordinal-zero","[t] \\"zero\\""],["Action","exponent-ordinalpower","[t] CSFwordOrdinal"],["Action","exponent-ordinalpower-zero","[t] \\"zero\\""],["Action","square","[n] children/*[1]; [t] \\"squared\\" (span:children/*[2])"],["Action","cube","[n] children/*[1]; [t] \\"cubed\\" (span:children/*[2])"],["Action","fences-points","[t] \\"the point with coordinates\\"; [n] children/*[1]"],["Action","fences-interval","[t] \\"the interval from\\"; [n] children/*[1]/children/*[1]; [t] \\"to\\"; [n] children/*[1]/children/*[3] (pause:short); [n] . (grammar:interval)"],["Action","interval-open","[t] \\"not including\\"; [n] children/*[1]/children/*[1]; [t] \\"or\\"; [n] children/*[1]/children/*[3]"],["Action","interval-closed-open","[t] \\"including\\"; [n] children/*[1]/children/*[1] (pause:short); [t] \\"but not including\\"; [n] children/*[1]/children/*[3]"],["Action","interval-open-closed","[t] \\"not including\\"; [n] children/*[1]/children/*[1] (pause:short); [t] \\"but including\\"; [n] children/*[1]/children/*[3]"],["Action","interval-closed","[t] \\"including\\"; [n] children/*[1]/children/*[1]; [t] \\"and\\"; [n] children/*[1]/children/*[3]"],["Action","interval-open-inf-r","[t] \\"not including\\"; [n] children/*[1]/children/*[1]"],["Action","interval-open-inf-l","[t] \\"not including\\"; [n] children/*[1]/children/*[3]"],["Action","interval-closed-open-inf","[t] \\"including\\"; [n] children/*[1]/children/*[1]"],["Action","interval-open-closed-inf","[t] \\"including\\"; [n] children/*[1]/children/*[3]"],["Action","set-empty","[t] \\"the empty set\\""],["Action","set-extended","[t] \\"the set of all\\"; [n] children/*[1]/children/*[1]; [t] \\"such that\\"; [n] children/*[1]/children/*[3]"],["Action","set-collection","[t] \\"the set\\"; [n] children/*[1]"],["Action","set-extended-woall","[t] \\"the set of\\"; [n] children/*[1]/children/*[1]; [t] \\"such that\\"; [n] children/*[1]/children/*[3]"],["Action","subscript","[p] (pause:short); [n] children/*[1]; [t] \\"sub\\"; [n] children/*[2] (pause:short)"],["Action","logarithm-base","[n] children/*[1]; [t] \\"base\\"; [n] children/*[2]"],["Action","subscript-index","[n] children/*[1]; [t] \\"sub\\"; [n] children/*[2]"],["Action","fraction","[p] (pause:short); [t] \\"the\\" (grammar:article); [t] \\"fraction with numerator\\"; [n] children/*[1] (pause:short); [t] \\"and denominator\\"; [n] children/*[2] (pause:short)"],["Action","fraction-none","[p] (pause:short); [t] \\"the\\" (grammar:article); [t] \\"fraction with numerator\\"; [n] children/*[1] (pause:short); [t] \\"and denominator\\"; [n] children/*[2] (pause:short)"],["Action","simple-fraction","[p] (pause:short); [n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short)"],["Action","simple-vulgar-fraction","[p] (pause:short); [n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short)"],["Action","simple-text-fraction","[p] (pause:short); [n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short)"],["Action","vulgar-fraction","[t] CSFvulgarFraction"],["Action","fraction-over","[p] (pause:short); [n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short)"],["Action","fraction-overendfrac","[p] (pause:short); [n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short); [t] \\"end fraction\\" (pause:short)"],["Action","fraction-fracover","[p] (pause:short); [t] \\"the fraction\\"; [n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short)"],["Action","fraction-per","[p] (pause:short); [n] children/*[1]; [t] \\"per\\"; [n] children/*[2] (pause:short)"],["Action","fraction-generalendfrac","[p] (pause:short); [t] \\"the fraction with numerator\\"; [n] children/*[1] (pause:short); [t] \\"and denominator\\"; [n] children/*[2] (pause:short); [t] \\"end fraction\\" (pause:short)"],["Action","fraction-general","[p] (pause:short); [t] \\"the fraction with numerator\\"; [n] children/*[1] (pause:short); [t] \\"and denominator\\"; [n] children/*[2] (pause:short)"],["Action","simple-vulgar-fraction-ordinal","[t] CSFvulgarFraction"],["Action","fraction-endfrac","[p] (pause:short); [n] . (grammar:endfrac); [t] \\"end fraction\\" (pause:short)"],["Action","vulgar-fraction-endfrac","[p] (pause:short); [n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short)"],["Action","simple-vulgar-fraction-endfrac","[t] CSFvulgarFraction"],["Action","sqrt","[t] \\"the square root of\\"; [n] children/*[1] (pause:short, grammar:!EndRoot)"],["Action","sqrt-nested","[p] (pause:\\"short\\"); [t] \\"the square root of\\"; [n] children/*[1] (pause:short, grammar:!EndRoot)"],["Action","negative-sqrt","[t] \\"the negative square root of\\"; [n] children/*[1]/children/*[1] (pause:short, grammar:!EndRoot)"],["Action","negative-sqrt-default","[p] (pause:\\"short\\"); [t] \\"the negative square root of\\"; [n] children/*[1]/children/*[1] (pause:short, grammar:!EndRoot)"],["Action","sqrt-plus-minus","[t] \\"the positive square root of\\"; [n] children/*[1] (pause:short, grammar:!EndRoot)"],["Action","sqrt-nested-plus-minus","[p] (pause:\\"short\\"); [t] \\"the positive square root of\\"; [n] children/*[1] (pause:short, grammar:!EndRoot)"],["Action","sqrt-plus-minus-posnegsqrootend","[t] \\"the positive square root of\\"; [n] children/*[1] (pause:short, grammar:!EndRoot)"],["Action","sqrt-nested-plus-minus-posnegsqrootend","[p] (pause:\\"short\\"); [t] \\"the positive square root of\\"; [n] children/*[1] (pause:short, grammar:!EndRoot)"],["Action","sqrt-endroot","[n] . (grammar:EndRoot); [t] \\"end root\\" (pause:short)"],["Action","negative-sqrt-endroot","[n] . (grammar:EndRoot); [t] \\"end root\\" (pause:short)"],["Action","sqrt-posnegsqrootend","[n] . (grammar:EndRoot); [t] \\"end root\\" (pause:short)"],["Action","negative-sqrt-posnegsqrootend","[n] . (grammar:EndRoot); [t] \\"end root\\" (pause:short)"],["Action","cubic","[t] \\"the cube root of\\"; [n] children/*[2] (pause:short, grammar:!EndRoot)"],["Action","cubic-nested","[p] (pause:short); [t] \\"the cube root of\\"; [n] children/*[2] (pause:short, grammar:!EndRoot)"],["Action","root","[n] children/*[1] (grammar:ordinal:addArticle); [t] \\"root of\\"; [n] children/*[2] (pause:short, grammar:!EndRoot)"],["Action","root-nested","[p] (pause:short); [n] children/*[1] (grammar:ordinal:addArticle); [t] \\"root of\\"; [n] children/*[2] (pause:short, grammar:!EndRoot)"],["Action","root-endroot","[n] . (grammar:EndRoot); [t] \\"end root\\" (pause:short)"],["Action","root-posnegsqrootend","[n] . (grammar:EndRoot); [t] \\"end root\\" (pause:short)"],["Action","negative","[t] \\"negative\\" (span:content/*[1]); [n] children/*[1]"],["Action","positive","[t] \\"positive\\" (span:content/*[1]); [n] children/*[1]"],["Action","angle-measure","[t] \\"the measure of\\"; [n] content/*[1]; [n] children/*[2] (grammar:angle)"],["Action","set-prefix-operators","[n] . (grammar:!prefix:addArticle); [t] \\"of\\""],["Action","division","[n] children/*[1]; [t] \\"divided by\\" (span:content/*[1]); [n] children/*[2]"],["Action","operators-after-power","[m] children/* (rate:\\"0.5\\")"],["Action","natural-numbers","[t] \\"the natural numbers\\" (span:.)"],["Action","integers","[t] \\"the integers\\" (span:.)"],["Action","rational-numbers","[t] \\"the rational numbers\\" (span:.)"],["Action","real-numbers","[t] \\"the real numbers\\" (span:.)"],["Action","complex-numbers","[t] \\"the complex numbers\\" (span:.)"],["Action","natural-numbers-with-zero","[t] \\"the natural numbers with zero\\" (span:.)"],["Action","positive-integers","[t] \\"the positive integers\\" (span:.)"],["Action","negative-integers","[t] \\"the negative integers\\" (span:.)"],["Action","positive-rational-numbers","[t] \\"the positive rational numbers\\" (span:.)"],["Action","negative-rational-numbers","[t] \\"the negative rational numbers\\" (span:.)"],["Action","fences-neutral","[p] (pause:short); [t] \\"the absolute value of\\" (span:.); [n] children/*[1] (pause:short)"],["Action","fences-neutral-absend","[p] (pause:short); [t] \\"the absolute value of\\" (span:content/*[1]); [n] children/*[1] (pause:short); [t] \\"end absolute value\\" (span:content/*[1], pause:short)"],["Action","fences-neutral-cardinality","[p] (pause:short); [t] \\"the cardinality of\\" (span:.); [n] children/*[1] (pause:short)"],["Action","fences-neutral-determinant","[p] (pause:short); [t] \\"the determinant of\\" (span:.); [n] children/*[1] (pause:short)"],["Action","fences-metric","[p] (pause:short); [t] \\"the metric of\\" (span:.); [n] children/*[1] (pause:short)"],["Action","fences-metric-absend","[p] (pause:short); [t] \\"the metric of\\" (span:content/*[1]); [n] children/*[1] (pause:short); [t] \\"end metric\\" (span:content/*[1], pause:short)"],["Action","matrix","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"matrix\\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Row-:\\", pause:long)"],["Action","matrix-simple","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"matrix\\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Row-:\\", pause:long, grammar:simpleDet)"],["Action","matrix-trivial","[t] \\"the 1 by 1 matrix with entry\\"; [n] children/*[1] (pause:long)"],["Action","determinant","[t] \\"the determinant of the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"matrix\\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Row-:\\", pause:long, grammar:simpleDet)"],["Action","determinant-simple","[t] \\"the determinant of the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"matrix\\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Row-:\\", pause:long)"],["Action","matrix-vector","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"column matrix\\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Row-:\\", pause:long, grammar:simpleDet)"],["Action","matrix-vector-simple","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"column matrix\\" (pause:long); [m] children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\", pause:long, grammar:simpleDet)"],["Action","matrix-vector-simple-silentcolnum","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"column matrix\\" (pause:long); [m] children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\", pause:long, grammar:simpleDet)"],["Action","matrix-row-vector","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"row matrix\\" (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTFnodeCounter, context:\\"Column-:\\", pause:long, grammar:simpleDet)"],["Action","matrix-row-vector-simple","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"row matrix\\" (pause:long); [m] children/*[1]/children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\", pause:long, grammar:simpleDet)"],["Action","matrix-row-vector-simple-silentcolnum","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"row matrix\\" (pause:long); [m] children/*[1]/children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\", pause:long, grammar:simpleDet)"],["Action","matrix-row","[m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Column-,- \\", sepFunc:CTFpauseSeparator, separator:\\"medium\\", pause:long)"],["Action","matrix-end-matrix","[n] . (grammar:EndMatrix); [t] \\"end matrix\\""],["Action","matrix-end-vector","[n] . (grammar:EndMatrix); [t] \\"end matrix\\""],["Action","matrix-end-determinant","[n] . (grammar:EndMatrix); [t] \\"end determinant\\""],["Action","vector","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"column vector\\" (pause:long); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Row-:\\", pause:long, grammar:simpleDet)"],["Action","vector-simple","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"column vector\\" (pause:long); [m] children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\", pause:long, grammar:simpleDet)"],["Action","row-vector","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"row vector\\" (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTFnodeCounter, context:\\"Column-:\\", pause:long, grammar:simpleDet)"],["Action","row-vector-simple","[t] \\"the\\"; [t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"row vector\\" (pause:long); [m] children/*[1]/children/* (sepFunc:CTFpauseSeparator, separator:\\"short\\", pause:long, grammar:simpleDet)"],["Action","vector-end-matrix","[n] . (grammar:EndMatrix); [t] \\"end matrix\\""],["Action","vector-end-vector","[n] . (grammar:EndMatrix); [t] \\"end vector\\""],["Action","vector-end-vector-endvector","[n] . (grammar:EndMatrix); [t] \\"end vector\\""],["Action","vector-end-determinant","[n] . (grammar:EndMatrix); [t] \\"end determinant\\""],["Action","binomial","[n] children/*[1]/children/*[1]; [t] \\"choose\\"; [n] children/*[2]/children/*[1]"],["Action","lines-summary","[p] (pause:short); [t] count(children/*); [t] \\"lines\\"; [n] . (grammar:layoutSummary)"],["Action","cases-summary","[p] (pause:short); [t] count(children/*); [t] \\"cases\\"; [n] . (grammar:layoutSummary)"],["Action","lines","[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Line-:\\", sepFunc:CTFpauseSeparator, separator:\\"long\\", pause:long)"],["Action","blank-cell","[t] \\"blank\\""],["Action","blank-line","[t] \\"blank\\""],["Action","blank-cell-empty","[t] \\"blank\\""],["Action","blank-line-empty","[t] \\"blank\\""],["Action","cases","[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Case-:\\", sepFunc:CTFpauseSeparator, separator:\\"long\\", pause:long)"],["Action","lines-cases-summary","[p] (pause:short); [t] count(children/*); [t] \\"cases\\"; [n] . (grammar:layoutSummary)"],["Action","lines-cases","[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Case-:\\", sepFunc:CTFpauseSeparator, separator:\\"long\\", pause:long)"],["Action","lines-equations-summary","[p] (pause:short); [t] count(children/*); [t] \\"equations\\"; [n] . (grammar:layoutSummary)"],["Action","lines-equations","[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Equation-:\\", sepFunc:CTFpauseSeparator, separator:\\"long\\", pause:long)"],["Action","lines-steps-summary","[p] (pause:short); [t] count(children/*); [t] \\"steps\\"; [n] . (grammar:layoutSummary)"],["Action","lines-steps","[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Step-:\\", sepFunc:CTFpauseSeparator, separator:\\"long\\", pause:long)"],["Action","lines-rows-summary","[p] (pause:short); [t] count(children/*); [t] \\"rows\\"; [n] . (grammar:layoutSummary)"],["Action","lines-rows","[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Row-:\\", sepFunc:CTFpauseSeparator, separator:\\"long\\", pause:long)"],["Action","lines-constraints-summary","[p] (pause:short); [t] count(children/*); [t] \\"constraints\\"; [n] . (grammar:layoutSummary)"],["Action","lines-constraints","[p] (pause:short); [m] children/* (ctxtFunc:CTFnodeCounter, context:\\"Constraint-:\\", sepFunc:CTFpauseSeparator, separator:\\"long\\", pause:long)"],["Action","bigop","[n] children/*[1] (grammar:addArticle); [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","limboth","[n] children/*[1]; [t] \\"from\\"; [n] children/*[2]; [t] \\"to\\"; [n] children/*[3]"],["Action","limlower","[n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short)"],["Action","limupper","[n] children/*[1]; [t] \\"under\\"; [n] children/*[2] (pause:short)"],["Action","integral","[n] children/*[1] (grammar:addArticle); [t] \\"of\\"; [n] children/*[2] (pause:short); [n] children/*[3] (pause:short)"],["Action","integral-novar","[n] children/*[1] (grammar:addArticle); [t] \\"of\\"; [n] children/*[2] (pause:short)"],["Action","overscript","[n] children/*[1]; [t] \\"under\\"; [n] children/*[2] (pause:short)"],["Action","overscript-limits","[n] children/*[1]; [t] \\"to\\"; [n] children/*[2]"],["Action","underscript","[n] children/*[1]; [t] \\"over\\"; [n] children/*[2] (pause:short)"],["Action","underscript-limits","[n] children/*[1]; [t] \\"from\\"; [n] children/*[2]"],["Action","mixed-number","[n] children/*[1]; [t] \\"and\\"; [n] children/*[2]"],["Action","number-with-chars","[t] \\"number\\"; [m] CQFspaceoutNumber (grammar:protected)"],["Action","decimal-period","[t] \\"the repeating decimal\\"; [n] children/*[1] (grammar:spaceout); [t] \\"point followed by repeating digits\\"; [n] children/*[3]/children/*[1] (grammar:spaceout)"],["Action","decimal-period-float","[t] \\"the repeating decimal\\"; [n] children/*[1] (grammar:spaceout); [t] \\"followed by repeating digits\\"; [n] children/*[2]/children/*[1] (grammar:spaceout)"],["Action","decimal-period-singular","[t] \\"the repeating decimal\\"; [n] children/*[1] (grammar:spaceout); [t] \\"point followed by repeating digit\\"; [n] children/*[3]/children/*[1] (grammar:spaceout)"],["Action","decimal-period-singular-float","[t] \\"the repeating decimal\\"; [n] children/*[1] (grammar:spaceout); [t] \\"followed by repeating digit\\"; [n] children/*[2]/children/*[1] (grammar:spaceout)"],["Action","decimal-point","[t] \\"point\\""],["Action","line-segment","[t] \\"the line segment\\"; [n] children/*[1]/children/*[1]; [n] children/*[1]/children/*[2] (pause:short)"],["Action","conjugate","[t] \\"the complex conjugate of\\"; [n] children/*[1]"],["Action","defined-by","[t] \\"is defined to be\\" (pause:short)"],["Action","adorned-sign","[n] children/*[1]; [t] \\"sign with\\"; [n] children/*[2]; [t] \\"over it\\""],["Action","factorial","[t] \\"factorial\\""],["Action","left-super","[t] \\"left super\\"; [n] text()"],["Action","left-super-list","[t] \\"left super\\"; [m] children/*"],["Action","left-sub","[t] \\"left sub\\"; [n] text()"],["Action","left-sub-list","[t] \\"left sub\\"; [m] children/*"],["Action","right-super","[t] \\"right super\\"; [n] text()"],["Action","right-super-list","[t] \\"right super\\"; [m] children/*"],["Action","right-sub","[t] \\"right sub\\"; [n] text()"],["Action","right-sub-list","[t] \\"right sub\\"; [m] children/*"],["Action","choose","[n] children/*[2] (grammar:combinatorics); [t] \\"choose\\"; [n] children/*[4] (grammar:combinatorics)"],["Action","permute","[n] children/*[2] (grammar:combinatorics); [t] \\"permute\\"; [n] children/*[4] (grammar:combinatorics)"],["Action","unit-square","[t] \\"square\\"; [n] children/*[1]"],["Action","unit-cubic","[t] \\"cubic\\"; [n] children/*[1]"],["Action","unit-reciprocal","[t] \\"reciprocal\\"; [n] children/*[1]"],["Action","unit-reciprocal-singular","[t] \\"per\\"; [n] children/*[1] (grammar:singular)"],["Action","unit-divide","[n] children/*[1]; [t] \\"per\\"; [n] children/*[2] (grammar:singular)"],["Action","enclose","[t] \\"enclosed with\\"; [t] @role (grammar:localEnclose); [n] children/*[1]"],["Action","enclose-end","[t] \\"enclosed with\\"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] \\"end enclosed\\""],["Action","overbar","[n] children/*[1]; [t] \\"horizontal bar\\""],["Action","underbar","[n] children/*[1]; [t] \\"over horizontal bar\\""],["Action","leftbar","[t] \\"vertical bar\\"; [n] children/*[1]"],["Action","rightbar","[n] children/*[1]; [t] \\"vertical bar\\""],["Action","crossout","[t] \\"crossed out\\"; [n] children/*[1]"],["Action","crossout-end","[t] \\"crossed out\\"; [n] children/*[1]; [t] \\"end crossout\\""],["Action","cancel-over","[n] children/*[1]/children/*[1]; [t] \\"crossed out with\\"; [n] children/*[2]"],["Action","cancel-under","[n] children/*[2]/children/*[1]; [t] \\"crossed out with\\"; [n] children/*[1]"],["Action","cancel-over-end","[t] \\"crossed out\\"; [n] children/*[1]/children/*[1]; [t] \\"with\\"; [n] children/*[2]; [t] \\"end crossout\\""],["Action","cancel-under-end","[t] \\"crossed out\\"; [n] children/*[2]/children/*[1]; [t] \\"with\\"; [n] children/*[1]; [t] \\"end crossout\\""]]},"en/rules/emacspeak.min":{"domain":"emacspeak","locale":"en","modality":"speech","rules":[["Precondition","stree","default","self::stree"],["Precondition","multrel","default","self::multirel"],["Precondition","variable-equality","default","self::relseq[@role=\\"equality\\"]","count(./children/*)>2","./children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","multi-equality","default","self::relseq[@role=\\"equality\\"]","count(./children/*)>2"],["Precondition","equality","default","self::relseq[@role=\\"equality\\"]","count(./children/*)=2"],["Precondition","simple-equality","default","self::relseq[@role=\\"equality\\"]","count(./children/*)=2","./children/identifier or ./children/number"],["Precondition","simple-equality2","default","self::relseq[@role=\\"equality\\"]","count(./children/*)=2","./children/function or ./children/appl"],["Precondition","relseq","default","self::relseq"],["Precondition","implicit","default","self::infixop","@role=\\"implicit\\"","children/*[1][@role=\\"latinletter\\"] or children/*[1][@role=\\"greekletter\\"] or children/*[1][@role=\\"otherletter\\"] or name(children/*[1])=\\"number\\"","children/*[2][@role=\\"latinletter\\"] or children/*[2][@role=\\"greekletter\\"] or children/*[2][@role=\\"otherletter\\"] or name(children/*[2])=\\"number\\""],["Precondition","binary-operation","default","self::infixop"],["Precondition","variable-addition","default","self::infixop[@role=\\"addition\\"]","count(children/*)>2","children/punctuation[@role=\\"ellipsis\\"]"],["Precondition","prefix","default","self::prefixop"],["Precondition","negative","default","self::prefixop","self::prefixop[@role=\\"negative\\"]"],["Precondition","postfix","default","self::postfixop"],["Precondition","identifier","default","self::identifier"],["Precondition","number","default","self::number"],["Precondition","font","default","self::*","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font!=\\"normal\\""],["Precondition","font-identifier-short","default","self::identifier","string-length(text())=1","@font","@font=\\"normal\\"","\\"\\"=translate(text(), \\"abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ\\", \\"\\")","@role!=\\"unit\\""],["Precondition","font-identifier","default","self::identifier","string-length(text())=1","@font","@font=\\"normal\\"","not(contains(@grammar, \\"ignoreFont\\"))","@role!=\\"unit\\""],["Precondition","omit-font","default","self::identifier","string-length(text())=1","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font=\\"italic\\""],["Precondition","simple-fraction","default","self::fraction","name(children/*[1])=\\"number\\" or name(children/*[1])=\\"identifier\\"","name(children/*[2])=\\"number\\" or name(children/*[2])=\\"identifier\\""],["Precondition","vulgar-fraction","default","self::fraction","@role=\\"vulgar\\"","CQFvulgarFractionSmall"],["Precondition","fraction","default","self::fraction"],["Precondition","superscript","default","self::superscript"],["Precondition","subscript","default","self::subscript"],["Precondition","ellipsis","default","self::punctuation","self::punctuation[@role=\\"ellipsis\\"]"],["Precondition","fence-single","default","self::punctuation","self::punctuation[@role=\\"openfence\\"]"],["Alias","fence-single","self::punctuation","self::punctuation[@role=\\"closefence\\"]"],["Alias","fence-single","self::punctuation","self::punctuation[@role=\\"vbar\\"]"],["Alias","fence-single","self::punctuation","self::punctuation[@role=\\"application\\"]"],["Precondition","omit-empty","default","self::empty"],["Precondition","fences-open-close","default","self::fenced","@role=\\"leftright\\""],["Precondition","fences-open-close-in-appl","default","self::fenced[@role=\\"leftright\\"]","./parent::children/parent::appl"],["Precondition","fences-neutral","default","self::fenced[@role=\\"neutral\\"]"],["Precondition","omit-fences","default","self::fenced"],["Precondition","matrix","default","self::matrix"],["Precondition","matrix-row","default","self::row[@role=\\"matrix\\"]"],["Precondition","matrix-cell","default","self::cell[@role=\\"matrix\\"]"],["Precondition","vector","default","self::vector"],["Precondition","cases","default","self::cases"],["Precondition","cases-row","default","self::row[@role=\\"cases\\"]"],["Precondition","cases-cell","default","self::cell[@role=\\"cases\\"]"],["Precondition","row","default","self::row"],["Precondition","cases-end","default","self::cases","following-sibling::*"],["Precondition","multiline","default","self::multiline"],["Precondition","line","default","self::line"],["Precondition","table","default","self::table"],["Precondition","table-row","default","self::row[@role=\\"table\\"]"],["Alias","cases-cell","self::cell[@role=\\"table\\"]"],["Precondition","end-punct","default","self::punctuated","@role=\\"endpunct\\""],["Precondition","start-punct","default","self::punctuated","@role=\\"startpunct\\""],["Precondition","punctuated","default","self::punctuated"],["Precondition","function","default","self::function"],["Precondition","appl","default","self::appl"],["Precondition","sum-only","default","self::limboth","@role=\\"sum\\" or @role=\\"integral\\""],["Precondition","limboth","default","self::limboth"],["Precondition","limlower","default","self::limlower"],["Precondition","limupper","default","self::limupper"],["Precondition","largeop","default","self::largeop"],["Precondition","bigop","default","self::bigop"],["Precondition","integral","default","self::integral"],["Precondition","sqrt","default","self::sqrt"],["Precondition","square","default","self::superscript","children/*[2][text()=2]","name(./children/*[1])!=\\"text\\""],["Precondition","cube","default","self::superscript","children/*[2][text()=3]","name(./children/*[1])!=\\"text\\""],["Precondition","root","default","self::root"],["Precondition","text-no-mult","default","self::infixop","children/text"],["Precondition","text","default","self::text"],["Precondition","unit","default","self::identifier","@role=\\"unit\\""],["Precondition","unit-square","default","self::superscript","@role=\\"unit\\"","children/*[2][text()=2]","name(children/*[1])=\\"identifier\\""],["Precondition","unit-cubic","default","self::superscript","@role=\\"unit\\"","children/*[2][text()=3]","name(children/*[1])=\\"identifier\\""],["Precondition","reciprocal","default","self::superscript","@role=\\"unit\\"","name(children/*[1])=\\"identifier\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=1]","count(preceding-sibling::*)=0 or preceding-sibling::*[@role!=\\"unit\\"]"],["Precondition","per","default","self::superscript","@role=\\"unit\\"","name(children/*[1])=\\"identifier\\"","name(children/*[2])=\\"prefixop\\"","children/*[2][@role=\\"negative\\"]","children/*[2]/children/*[1][text()=1]","preceding-sibling::*[@role=\\"unit\\"]"],["Precondition","unit-combine","default","self::infixop","@role=\\"unit\\""],["Precondition","unit-divide","default","self::fraction","@role=\\"unit\\""]]},"en/rules/emacspeak_actions.min":{"domain":"emacspeak","locale":"en","modality":"speech","kind":"actions","rules":[["Action","stree","[n] ./*[1]"],["Action","multrel","[t] \\"multirelation\\"; [m] children/* (sepFunc:CTFcontentIterator)"],["Action","variable-equality","[t] \\"equation sequence\\"; [m] children/* (context:\\"part\\",ctxtFunc:CTFnodeCounter,sepFunc:CTFcontentIterator)"],["Action","multi-equality","[t] \\"equation sequence\\"; [m] children/* (context:\\"part\\",ctxtFunc:CTFnodeCounter,sepFunc:CTFcontentIterator)"],["Action","equality","[t] \\"equation\\"; [t] \\"left hand side\\"; [n] children/*[1] (pause:200); [n] content/*[1] (pause:200);[t] \\"right hand side\\"; [n] children/*[2]"],["Action","simple-equality","[n] children/*[1] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]"],["Action","simple-equality2","[n] children/*[1] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2]"],["Action","relseq","[m] children/* (sepFunc:CTFcontentIterator)"],["Action","implicit","[m] children/*"],["Action","binary-operation","[p] (pause:100); [m] children/* (sepFunc:CTFcontentIterator, pause:100);"],["Action","variable-addition","[t] \\"sum with variable number of summands\\" (pause:400); [m] children/* (sepFunc:CTFcontentIterator)"],["Action","prefix","[t] \\"prefix\\"; [n] text(); [t] \\"of\\" (pause 150);[n] children/*[1]"],["Action","negative","[t] \\"negative\\"; [n] children/*[1]"],["Action","postfix","[n] children/*[1]; [t] \\"postfix\\"; [n] text() (pause 300)"],["Action","identifier","[n] text()"],["Action","number","[n] text()"],["Action","font","[t] @font; [n] . (grammar:ignoreFont=@font)"],["Action","font-identifier-short","[t] @font; [n] CQFhideFont; [t] CSFshowFont"],["Action","font-identifier","[t] @font; [n] . (grammar:ignoreFont=@font)"],["Action","omit-font","[n] . (grammar:ignoreFont=@font)"],["Action","simple-fraction","[p] (pause:100); [n] children/*[1] (rate:0.35); [t] \\"over\\";  [n] children/*[2] (rate:0.35, pause:100)"],["Action","vulgar-fraction","[t] CSFvulgarFraction"],["Action","fraction","[p] (pause:250); [n] children/*[1] (rate:0.35, pause:250); [t] \\"divided by\\" (pause:250);  [n] children/*[2] (rate:0.35, pause:250)"],["Action","superscript","[n] children/*[1]; [t] \\"super\\"; [n] children/*[2] (pitch:0.35, pause:300)"],["Action","subscript","[n] children/*[1]; [t] \\"sub\\"; [n] children/*[2] (pitch:-0.35, pause:300)"],["Action","ellipsis","[p] (pause:200); [t] \\"ellipsis\\" (pause:300)"],["Action","fence-single","[n] text()"],["Action","omit-empty","[p] (pause:100)"],["Action","fences-open-close","[p] (pause:200); [n] children/*[1] (rate:0.35, pause:200)"],["Action","fences-open-close-in-appl","[p] (pause:200); [n] children/*[1] (pause:200);"],["Action","fences-neutral","[p] (pause:100); [t] \\"absolute value of\\"; [n] children/*[1] (pause:350);"],["Action","omit-fences","[p] (pause:500); [n] children/*[1] (pause:200);"],["Action","matrix","[t] \\"matrix\\"; [m] children/* (ctxtFunc:CTFnodeCounter,context:\\"row\\",pause:100)"],["Action","matrix-row","[m] children/* (ctxtFunc:CTFnodeCounter,context:\\"column\\",pause:100)"],["Action","matrix-cell","[n] children/*[1]"],["Action","vector","[t] \\"vector\\"; [m] children/* (ctxtFunc:CTFnodeCounter,context:\\"element\\",pause:100)"],["Action","cases","[t] \\"case statement\\"; [m] children/* (ctxtFunc:CTFnodeCounter,context:\\"case\\",pause:100)"],["Action","cases-row","[m] children/*"],["Action","cases-cell","[n] children/*[1]"],["Action","row","[m] ./* (ctxtFunc:CTFnodeCounter,context:\\"column\\",pause:100)"],["Action","cases-end","[t] \\"case statement\\"; [m] children/* (ctxtFunc:CTFnodeCounter,context:\\"case\\",pause:100);[t] \\"end cases\\""],["Action","multiline","[t] \\"multiline equation\\";[m] children/* (ctxtFunc:CTFnodeCounter,context:\\"line\\",pause:100)"],["Action","line","[m] children/*"],["Action","table","[t] \\"multiline equation\\";[m] children/* (ctxtFunc:CTFnodeCounter,context:\\"row\\",pause:200)"],["Action","table-row","[m] children/* (pause:100)"],["Action","end-punct","[m] children/* (pause:300)"],["Action","start-punct","[n] content/*[1] (pause:200); [m] children/*[position()>1]"],["Action","punctuated","[m] children/* (pause:100)"],["Action","function","[n] text()"],["Action","appl","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]"],["Action","sum-only","[n] children/*[1]; [t] \\"from\\"; [n] children/*[2]; [t] \\"to\\";[n] children/*[3]"],["Action","limboth","[n] children/*[1] (pause 100); [t] \\"over\\"; [n] children/*[2];[t] \\"under\\"; [n] children/*[3] (pause 250);"],["Action","limlower","[n] children/*[1]; [t] \\"over\\"; [n] children/*[2];"],["Action","limupper","[n] children/*[1]; [t] \\"under\\"; [n] children/*[2];"],["Action","largeop","[n] text()"],["Action","bigop","[n] children/*[1] (pause 100); [t] \\"over\\"; [n] children/*[2] (pause 250);"],["Action","integral","[n] children/*[1] (pause 100); [n] children/*[2] (pause 200); [n] children/*[3] (rate:0.35);"],["Action","sqrt","[t] \\"Square root of\\"; [n] children/*[1] (rate:0.35, pause:400)"],["Action","square","[n] children/*[1]; [t] \\"squared\\" (pitch:0.35, pause:200)"],["Action","cube","[n] children/*[1]; [t] \\"cubed\\" (pitch:0.35, pause:200)"],["Action","root","[t] \\"root of order\\"; [n] children/*[1];[t] \\"over\\"; [n] children/*[1] (rate:0.35, pause:400)"],["Action","text-no-mult","[n] children/*[1] (pause:200); [n] children/*[2]"],["Action","text","[n] text() (pause:200)"],["Action","unit","[t] text() (annotation:unit, preprocess)"],["Action","unit-square","[t] \\"square\\"; [n] children/*[1]"],["Action","unit-cubic","[t] \\"cubic\\"; [n] children/*[1]"],["Action","reciprocal","[t] \\"reciprocal\\"; [n] children/*[1]"],["Action","per","[t] \\"per\\"; [n] children/*[1]"],["Action","unit-combine","[m] children/*"],["Action","unit-divide","[n] children/*[1] (pitch:0.3); [t] \\"per\\"; [n] children/*[2] (pitch:-0.3)"]]},"en/rules/mathspeak_english.min":{"domain":"mathspeak","locale":"en","modality":"speech","inherits":"base","rules":[["Precondition","german-font","default","self::*[@font=\\"fraktur\\"]","not(contains(@grammar, \\"ignoreFont\\"))"],["Precondition","german-font-bold","default","self::*[@font=\\"bold-fraktur\\"]","not(contains(@grammar, \\"ignoreFont\\"))"]]},"en/rules/mathspeak_english_actions.min":{"domain":"mathspeak","locale":"en","modality":"speech","kind":"actions","rules":[["Action","collapsed","[t] \\"collapsed\\"; [n] . (engine:modality=summary, grammar:collapsed)"],["Action","blank-cell-empty","[t] \\"Blank\\""],["Action","blank-line-empty","[t] \\"Blank\\""],["Action","font","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)"],["Action","german-font","[t] \\"German\\"; [n] . (grammar:ignoreFont=@font)"],["Action","german-font-bold","[t] \\"bold German\\"; [n] . (grammar:ignoreFont=@font)"],["Action","mixed-number","[n] children/*[1]; [t] \\"and\\"; [n] children/*[2]"],["Action","number-with-chars","[t] \\"Number\\"; [m] CQFspaceoutNumber (grammar:protected)"],["Action","number-with-chars-brief","[t] \\"Num\\"; [m] CQFspaceoutNumber (grammar:protected)"],["Action","number-as-upper-word","[t] \\"UpperWord\\"; [t] CSFspaceoutText"],["Action","number-baseline","[t] \\"Baseline\\"; [n] . (grammar:baseline)"],["Action","number-baseline-brief","[t] \\"Base\\"; [n] . (grammar:baseline)"],["Action","number-baseline-font","[t] \\"Baseline\\"; [t] @font; [n] . (grammar:ignoreFont=@font)"],["Action","number-baseline-font-brief","[t] \\"Base\\"; [t] @font; [n] . (grammar:ignoreFont=@font)"],["Action","negative-number","[t] \\"negative\\"; [n] children/*[1]"],["Action","negative","[t] \\"minus\\"; [n] children/*[1]"],["Action","division","[n] children/*[1]; [t] \\"divided by\\"; [n] children/*[2]"],["Action","subtraction","[m] children/* (separator:\\"minus\\")"],["Action","fences-neutral","[t] \\"StartAbsoluteValue\\"; [n] children/*[1]; [t] \\"EndAbsoluteValue\\""],["Action","fences-neutral-sbrief","[t] \\"AbsoluteValue\\"; [n] children/*[1]; [t] \\"EndAbsoluteValue\\""],["Action","fences-metric","[t] \\"StartMetric\\"; [n] children/*[1]; [t] \\"EndMetric\\""],["Action","fences-metric-sbrief","[t] \\"Metric\\"; [n] children/*[1]; [t] \\"EndMetric\\""],["Action","empty-set","[t] \\"empty set\\""],["Action","fences-set","[t] \\"StartSet\\"; [n] children/*[1]; [t] \\"EndSet\\""],["Action","fences-set-sbrief","[t] \\"Set\\"; [n] children/*[1]; [t] \\"EndSet\\""],["Action","factorial","[t] \\"factorial\\""],["Action","minus","[t] \\"minus\\""],["Action","continued-fraction-outer","[t] \\"ContinuedFraction\\"; [n] children/*[1]; [t] \\"Over\\"; [n] children/*[2]"],["Action","continued-fraction-outer-brief","[t] \\"ContinuedFrac\\"; [n] children/*[1]; [t] \\"Over\\"; [n] children/*[2]"],["Action","continued-fraction-inner","[t] \\"StartFraction\\"; [n] children/*[1]; [t] \\"Over\\"; [n] children/*[2]"],["Action","continued-fraction-inner-brief","[t] \\"StartFrac\\"; [n] children/*[1]; [t] \\"Over\\"; [n] children/*[2]"],["Action","continued-fraction-inner-sbrief","[t] \\"Frac\\"; [n] children/*[1]; [t] \\"Over\\"; [n] children/*[2]"],["Action","integral","[n] children/*[1]; [t] \\"Subscript\\"; [n] children/*[2]; [t] \\"Superscript\\"; [n] children/*[3]; [t] \\"Baseline\\""],["Action","integral-brief","[n] children/*[1]; [t] \\"Sub\\"; [n] children/*[2]; [t] \\"Sup\\"; [n] children/*[3]; [t] \\"Base\\""],["Action","square","[n] children/*[1]; [t] \\"squared\\""],["Action","cube","[n] children/*[1]; [t] \\"cubed\\""],["Action","prime","[n] children/*[1]; [n] children/*[2]"],["Action","counted-prime","[t] count(children/*) (grammar:numbers2alpha); [t] \\"prime\\""],["Action","counted-prime-multichar","[t] string-length(text()) (grammar:numbers2alpha); [t] \\"prime\\""],["Action","overscore","[t] \\"ModifyingAbove\\"; [n] children/*[1]; [t] \\"With\\"; [n] children/*[2]"],["Action","overscore-brief","[t] \\"ModAbove\\"; [n] children/*[1]; [t] \\"With\\"; [n] children/*[2]"],["Action","double-overscore","[t] \\"ModifyingAbove Above\\"; [n] children/*[1]; [t] \\"With\\"; [n] children/*[2]"],["Action","double-overscore-brief","[t] \\"ModAbove Above\\"; [n] children/*[1]; [t] \\"With\\"; [n] children/*[2]"],["Action","underscore","[t] \\"ModifyingBelow\\"; [n] children/*[1]; [t] \\"With\\"; [n] children/*[2]"],["Action","underscore-brief","[t] \\"ModBelow\\"; [n] children/*[1]; [t] \\"With\\"; [n] children/*[2]"],["Action","double-underscore","[t] \\"ModifyingBelow Below\\"; [n] children/*[1]; [t] \\"With\\"; [n] children/*[2]"],["Action","double-underscore-brief","[t] \\"ModBelow Below\\"; [n] children/*[1]; [t] \\"With\\"; [n] children/*[2]"],["Action","overbar","[n] children/*[1]; [t] \\"overbar\\""],["Action","underbar","[n] children/*[1]; [t] \\"underbar\\""],["Action","overtilde","[n] children/*[1]; [t] \\"overtilde\\""],["Action","undertilde","[n] children/*[1]; [t] \\"undertilde\\""],["Action","matrix","[t] \\"Start\\"; [t] count(children/*); [t] \\"By\\"; [t] count(children/*[1]/children/*); [t] \\"Matrix\\"; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row \\"); [t] \\"EndMatrix\\""],["Action","matrix-sbrief","[t] count(children/*); [t] \\"By\\"; [t] count(children/*[1]/children/*); [t] \\"Matrix\\"; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row \\"); [t] \\"EndMatrix\\""],["Action","matrix-row","[m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Column\\", pause:200)"],["Action","row-with-label","[t] \\"with Label\\"; [n] content/*[1]; [t] \\"EndLabel\\" (pause:200); [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Column\\")"],["Action","row-with-label-brief","[t] \\"Label\\"; [n] content/*[1]; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Column\\")"],["Action","row-with-text-label","[t] \\"Label\\"; [t] CSFRemoveParens; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Column\\")"],["Action","empty-row","[t] \\"Blank\\""],["Action","empty-cell","[t] \\"Blank\\" (pause:300)"],["Action","determinant","[t] \\"Start\\"; [t] count(children/*); [t] \\"By\\"; [t] count(children/*[1]/children/*); [t] \\"Determinant\\"; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row \\"); [t] \\"EndDeterminant\\""],["Action","determinant-sbrief","[t] count(children/*); [t] \\"By\\"; [t] count(children/*[1]/children/*); [t] \\"Determinant\\"; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row \\"); [t] \\"EndDeterminant\\""],["Action","determinant-simple","[t] \\"Start\\"; [t] count(children/*); [t] \\"By\\"; [t] count(children/*[1]/children/*); [t] \\"Determinant\\"; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row\\", grammar:simpleDet); [t] \\"EndDeterminant\\""],["Action","determinant-simple-sbrief","[t] count(children/*); [t] \\"By\\"; [t] count(children/*[1]/children/*); [t] \\"Determinant\\"; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row\\", grammar:simpleDet); [t] \\"EndDeterminant\\""],["Action","layout","[t] \\"StartLayout\\"; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row \\"); [t] \\"EndLayout\\""],["Action","layout-sbrief","[t] \\"Layout\\"; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row \\"); [t] \\"EndLayout\\""],["Action","binomial","[t] \\"StartBinomialOrMatrix\\"; [n] children/*[1]/children/*[1]; [t] \\"Choose\\"; [n] children/*[2]/children/*[1]; [t] \\"EndBinomialOrMatrix\\""],["Action","binomial-sbrief","[t] \\"BinomialOrMatrix\\"; [n] children/*[1]/children/*[1]; [t] \\"Choose\\"; [n] children/*[2]/children/*[1]; [t] \\"EndBinomialOrMatrix\\""],["Action","cases","[t] \\"StartLayout\\"; [t] \\"Enlarged\\"; [n] content/*[1]; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row \\"); [t] \\"EndLayout\\""],["Action","cases-sbrief","[t] \\"Layout\\"; [t] \\"Enlarged\\"; [n] content/*[1]; [m] children/* (ctxtFunc:CTFordinalCounter, context:\\"Row \\"); [t] \\"EndLayout\\""],["Action","line-with-label","[t] \\"with Label\\"; [n] content/*[1]; [t] \\"EndLabel\\" (pause:200); [m] children/*"],["Action","line-with-label-brief","[t] \\"Label\\"; [n] content/*[1] (pause:200); [m] children/*"],["Action","line-with-text-label","[t] \\"Label\\"; [t] CSFRemoveParens; [m] children/*"],["Action","empty-line","[t] \\"Blank\\""],["Action","empty-line-with-label","[t] \\"with Label\\"; [n] content/*[1]; [t] \\"EndLabel\\" (pause:200); [t] \\"Blank\\""],["Action","empty-line-with-label-brief","[t] \\"Label\\"; [n] content/*[1] (pause:200); [t] \\"Blank\\""],["Action","enclose","[t] \\"StartEnclose\\"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] \\"EndEnclose\\""],["Action","leftbar","[t] \\"vertical bar\\"; [n] children/*[1]"],["Action","rightbar","[n] children/*[1]; [t] \\"vertical bar\\""],["Action","crossout","[t] \\"CrossOut\\"; [n] children/*[1]; [t] \\"EndCrossOut\\""],["Action","cancel","[t] \\"CrossOut\\"; [n] children/*[1]/children/*[1]; [t] \\"With\\"; [n] children/*[2]; [t] \\"EndCrossOut\\""],["Action","cancel-reverse","[t] \\"CrossOut\\"; [n] children/*[2]/children/*[1]; [t] \\"With\\"; [n] children/*[1]; [t] \\"EndCrossOut\\""],["Action","multi-inference","[t] \\"inference rule\\"; [m] content/*; [t] \\"with conclusion\\"; [n] children/*[1]; [t] \\"and\\"; [t] count(children/*[2]/children/*); [t] \\"premises\\""],["Action","inference","[t] \\"inference rule\\"; [m] content/*; [t] \\"with conclusion\\"; [n] children/*[1]; [t] \\"and\\"; [t] count(children/*[2]/children/*); [t] \\"premise\\""],["Action","premise","[m] children/* (ctxtFunc:CTFordinalCounter, context:\\"premise \\")"],["Action","conclusion","[n] children/*[1]"],["Action","label","[t] \\"label\\"; [n] children/*[1]"],["Action","axiom","[t] \\"axiom\\"; [m] children/*[1]"],["Action","empty-axiom","[t] \\"empty axiom\\""]]},"en/rules/prefix_english.min":{"modality":"prefix","domain":"default","locale":"en","inherits":"base","rules":[]},"en/rules/prefix_english_actions.min":{"modality":"prefix","domain":"default","locale":"en","kind":"actions","rules":[["Action","numerator","[t] \\"Numerator\\" (pause:200)"],["Action","denominator","[t] \\"Denominator\\" (pause:200)"],["Action","base","[t] \\"Base\\" (pause:200)"],["Action","exponent","[t] \\"Exponent\\" (pause:200)"],["Action","subscript","[t] \\"Subscript\\" (pause:200)"],["Action","overscript","[t] \\"Overscript\\" (pause:200)"],["Action","underscript","[t] \\"Underscript\\" (pause:200)"],["Action","radicand","[t] \\"Radicand\\" (pause:200)"],["Action","index","[t] \\"Index\\" (pause:200)"],["Action","leftsub","[t] \\"Left Subscript\\" (pause:200)"],["Action","leftsub-counted","[t] CSFordinalPosition; [t] \\"Left Subscript\\" (pause:200)"],["Action","leftsuper","[t] \\"Left Superscript\\" (pause:200)"],["Action","leftsuper-counted","[t] CSFordinalPosition; [t] \\"Left Superscript\\" (pause:200)"],["Action","rightsub","[t] \\"Right Subscript\\" (pause:200)"],["Action","rightsub-counted","[t] CSFordinalPosition; [t] \\"Right Subscript\\" (pause:200)"],["Action","rightsuper","[t] \\"Right Superscript\\" (pause:200)"],["Action","rightsuper-counted","[t] CSFordinalPosition; [t] \\"Right Superscript\\" (pause:200)"],["Action","choice","[t] \\"Choice Quantity\\" (pause:200)"],["Action","select","[t] \\"Selection Quantity\\" (pause:200)"],["Action","row","[t] CSFordinalPosition; [t] \\"Row\\" (pause:200)"],["Action","cell","[n] ../..; [t] CSFordinalPosition; [t] \\"Column\\" (pause:200)"],["Action","cell-simple","[t] CSFordinalPosition; [t] \\"Column\\" (pause:200)"]]},"en/rules/summary_english.min":{"locale":"en","modality":"summary","inherits":"base","rules":[]},"en/rules/summary_english_actions.min":{"locale":"en","modality":"summary","kind":"actions","rules":[["Action","abstr-identifier-long","[t] \\"long identifier\\""],["Action","abstr-identifier","[t] \\"identifier\\""],["Action","abstr-number-long","[t] \\"long number\\""],["Action","abstr-number","[t] \\"number\\""],["Action","abstr-mixed-number-long","[t] \\"long mixed number\\""],["Action","abstr-mixed-number","[t] \\"mixed number\\""],["Action","abstr-text","[t] \\"text\\""],["Action","abstr-function","[t] \\"functional expression\\""],["Action","abstr-function-brief","[t] \\"function\\""],["Action","abstr-lim","[t] \\"limit function\\""],["Action","abstr-lim-brief","[t] \\"lim\\""],["Action","abstr-fraction","[t] \\"fraction\\""],["Action","abstr-fraction-brief","[t] \\"frac\\""],["Action","abstr-continued-fraction","[t] \\"continued fraction\\""],["Action","abstr-continued-fraction-brief","[t] \\"continued frac\\""],["Action","abstr-sqrt","[t] \\"square root\\""],["Action","abstr-sqrt-nested","[t] \\"nested square root\\""],["Action","abstr-root-end","[t] \\"root of index\\"; [n] children/*[1] (engine:modality=speech); [t] \\"endindex\\""],["Action","abstr-root","[t] \\"root of index\\"; [n] children/*[1] (engine:modality=speech)"],["Action","abstr-root-brief","[t] \\"root\\""],["Action","abstr-root-nested-end","[t] \\"nested root of index\\"; [n] children/*[1] (engine:modality=speech); [t] \\"endindex\\""],["Action","abstr-root-nested","[t] \\"nested root of index\\"; [n] children/*[1] (engine:modality=speech)"],["Action","abstr-root-nested-brief","[t] \\"nested root\\""],["Action","abstr-superscript","[t] \\"power\\""],["Action","abstr-subscript","[t] \\"subscript\\""],["Action","abstr-subsup","[t] \\"power with subscript\\""],["Action","abstr-infixop","[t] @role (grammar:localRole); [t] \\"with\\"; [t] count(./children/*); [t] \\"elements\\""],["Action","abstr-infixop-var","[t] @role (grammar:localRole); [t] \\"with variable number of elements\\""],["Action","abstr-infixop-brief","[t] @role (grammar:localRole)"],["Action","abstr-addition","[t] \\"sum with\\"; [t] count(./children/*); [t] \\"summands\\""],["Action","abstr-addition-brief","[t] \\"sum\\""],["Action","abstr-addition-var","[t] \\"sum with variable number of summands\\""],["Action","abstr-multiplication","[t] \\"product with\\"; [t] count(./children/*); [t] \\"factors\\""],["Action","abstr-multiplication-brief","[t] \\"product\\""],["Action","abstr-multiplication-var","[t] \\"product with variable number of factors\\""],["Action","abstr-vector","[t] count(./children/*); [t] \\"dimensional vector\\""],["Action","abstr-vector-brief","[t] \\"vector\\""],["Action","abstr-vector-var","[t] \\"n dimensional vector\\""],["Action","abstr-binomial","[t] \\"binomial\\""],["Action","abstr-determinant","[t] count(./children/*); [t] \\"dimensional determinant\\""],["Action","abstr-determinant-brief","[t] \\"determinant\\""],["Action","abstr-determinant-var","[t] \\"n dimensional determinant\\""],["Action","abstr-squarematrix","[t] count(./children/*); [t] \\"dimensional square matrix\\""],["Action","abstr-squarematrix-brief","[t] \\"square matrix\\""],["Action","abstr-rowvector","[t] count(./children/row/children/*); [t] \\"dimensional row vector\\""],["Action","abstr-rowvector-brief","[t] \\"row vector\\""],["Action","abstr-rowvector-var","[t] \\"n dimensional row vector\\""],["Action","abstr-matrix","[t] count(children/*); [t] \\"by\\"; [t] count(children/*[1]/children/*); [t] \\"matrix\\""],["Action","abstr-matrix-brief","[t] \\"matrix\\""],["Action","abstr-matrix-var","[t] \\"n by m dimensional matrix\\""],["Action","abstr-cases","[t] \\"case statement\\"; [t] \\"with\\"; [t] count(children/*); [t] \\"cases\\""],["Action","abstr-cases-brief","[t] \\"case statement\\""],["Action","abstr-cases-var","[t] \\"case statement with variable number of cases\\""],["Action","abstr-punctuated","[n] content/*[1]; [t] \\"separated list\\"; [t] \\"of length\\"; [t] count(children/*) - count(content/*)"],["Action","abstr-punctuated-brief","[n] content/*[1]; [t] \\"separated list\\""],["Action","abstr-punctuated-var","[n] content/*[1]; [t] \\"separated list\\"; [t] \\"of variable length\\""],["Action","abstr-bigop","[n] content/*[1]"],["Action","abstr-integral","[t] \\"integral\\""],["Action","abstr-relation","[t] @role (grammar:localRole)"],["Action","abstr-relation-seq","[t] @role (grammar:localRole); [t] \\"sequence\\"; [t] \\"with\\"; [t] count(./children/*); [t] \\"elements\\""],["Action","abstr-relation-seq-brief","[t] @role (grammar:localRole); [t] \\"sequence\\""],["Action","abstr-relation-var","[t] @role (grammar:localRole); [t] \\"sequence\\"; [t] \\"with variable number of elements\\""],["Action","abstr-multirel","[t] \\"relation sequence\\"; [t] \\"with\\"; [t] count(./children/*); [t] \\"elements\\""],["Action","abstr-multirel-brief","[t] \\"relation sequence\\""],["Action","abstr-multirel-var","[t] \\"relation sequence with variable number of elements\\""],["Action","abstr-table","[t] \\"table with\\"; [t] count(children/*); [t] \\"rows and\\"; [t] count(children/*[1]/children/*); [t] \\"columns\\""],["Action","abstr-line","[t] \\"in\\"; [t] @role (grammar:localRole)"],["Action","abstr-row","[t] \\"in\\"; [t] @role (grammar:localRole); [t] count(preceding-sibling::..); [t] \\"with\\"; [t] count(children/*); [t] \\"columns\\""],["Action","abstr-cell","[t] \\"in\\"; [t] @role (grammar:localRole)"]]}}');
;// CONCATENATED MODULE: ../../../node_modules/speech-rule-engine/lib/mathmaps/nemeth.json
var nemeth_namespaceObject = JSON.parse('{"nemeth/messages/alphabets.min":{"kind":"alphabets","locale":"nemeth","messages":{"latinSmall":["⠰⠁","⠰⠃","⠰⠉","⠰⠙","⠰⠑","⠰⠋","⠰⠛","⠰⠓","⠰⠊","⠰⠚","⠰⠅","⠰⠇","⠰⠍","⠰⠝","⠰⠕","⠰⠏","⠰⠟","⠰⠗","⠰⠎","⠰⠞","⠰⠥","⠰⠧","⠰⠺","⠰⠭","⠰⠽","⠰⠵"],"latinCap":["⠰⠠⠁","⠰⠠⠃","⠰⠠⠉","⠰⠠⠙","⠰⠠⠑","⠰⠠⠋","⠰⠠⠛","⠰⠠⠓","⠰⠠⠊","⠰⠠⠚","⠰⠠⠅","⠰⠠⠇","⠰⠠⠍","⠰⠠⠝","⠰⠠⠕","⠰⠠⠏","⠰⠠⠟","⠰⠠⠗","⠰⠠⠎","⠰⠠⠞","⠰⠠⠥","⠰⠠⠧","⠰⠠⠺","⠰⠠⠭","⠰⠠⠽","⠰⠠⠵"],"greekSmall":["⠨⠫","⠨⠁","⠨⠃","⠨⠛","⠨⠙","⠨⠑","⠨⠵","⠨⠱","⠨⠹","⠨⠊","⠨⠅","⠨⠇","⠨⠍","⠨⠝","⠨⠭","⠨⠕","⠨⠏","⠨⠗","⠨⠈⠎","⠨⠎","⠨⠞","⠨⠥","⠨⠈⠋","⠨⠯","⠨⠽","⠨⠺","⠈⠙","⠨⠑","⠨⠈⠹","⠨⠅","⠨⠋","⠨⠗","⠨⠏"],"greekCap":["⠨⠠⠁","⠨⠠⠃","⠨⠠⠛","⠨⠠⠙","⠨⠠⠑","⠨⠠⠵","⠨⠠⠱","⠨⠠⠹","⠨⠠⠊","⠨⠠⠅","⠨⠠⠇","⠨⠠⠍","⠨⠠⠝","⠨⠠⠭","⠨⠠⠕","⠨⠠⠏","⠨⠠⠗","⠨⠠⠹","⠨⠠⠎","⠨⠠⠞","⠨⠠⠥","⠨⠠⠋","⠨⠠⠯","⠨⠠⠽","⠨⠠⠺"],"capPrefix":{"default":""},"smallPrefix":{"default":""},"digitPrefix":{"default":"⠼"},"languagePrefix":{"greek":"⠨","english":"⠰","german":"⠸","hebrew":"⠠⠠","number":"⠼"}}},"nemeth/messages/messages.min":{"kind":"messages","locale":"nemeth","messages":{"MS":{"FRACTION_REPEAT":"⠠","FRACTION_START":"⠹","FRAC_V":"⠹","FRAC_B":"Frac","FRAC_S":"Frac","END":"⠠","FRACTION_OVER":"⠌","TWICE":"Twice","NEST_FRAC":"Nest","ENDFRAC":"⠼","FRACTION_END":"⠼","SUPER":"⠘","SUB":"⠰","SUP":"⠘","SUPERSCRIPT":"⠘","SUBSCRIPT":"⠰","BASELINE":"⠐","BASE":"⠐","NESTED":"⠨","NEST_ROOT":"Nest","STARTROOT":"⠜","ENDROOT":"⠻","ROOTINDEX":"⠣","ROOT":"⠨","INDEX":"⠣","UNDER":"⠩","UNDERSCRIPT":"⠩","OVER":"⠣","OVERSCRIPT":"⠣"},"MSroots":{},"font":{"bold":"⠸","bold-fraktur":["⠸⠸","germanCombiner"],"bold-italic":"⠸⠨","bold-script":"⠸⠈","caligraphic":"⠈","caligraphic-bold":"⠈⠸","double-struck":"⠈","double-struck-italic":"⠸⠨","fraktur":["⠸","germanCombiner"],"fullwidth":"","italic":"⠨","monospace":"","normal":"","oldstyle":"","oldstyle-bold":"⠸","script":"⠈","sans-serif":"⠠⠨","sans-serif-italic":"⠠⠨⠨","sans-serif-bold":"⠠⠨⠸","sans-serif-bold-italic":"⠠⠨⠸⠨","unknown":""},"embellish":{"super":["⠘","germanCombiner"],"sub":["⠰","germanCombiner"],"circled":["⠫⠉⠸⠫","embellishCombiner"],"parenthesized":["⠷","parensCombiner"],"period":["⠸⠲","postfixCombiner"],"negative-circled":["⠫⠸⠉⠸⠫","embellishCombiner"],"double-circled":["⠫⠉⠸⠫⠫⠉⠸⠫","doubleEmbellishCombiner"],"circled-sans-serif":["⠫⠉⠸⠫⠠⠨","embellishCombiner"],"negative-circled-sans-serif":["⠫⠸⠉⠸⠫⠠⠨","embellishCombiner"],"comma":["⠠","postfixCombiner"],"squared":["⠫⠲⠸⠫","embellishCombiner"],"negative-squared":["⠫⠸⠲⠸⠫","embellishCombiner"]},"role":{"addition":"addition","multiplication":"multiplication","subtraction":"subtraction","division":"division","equality":"equality","inequality":"inequality","element":"element","arrow":"arrow","determinant":"determinant","rowvector":"row vector","binomial":"binomial","squarematrix":"square matrix","multiline":"multiple lines","matrix":"matrix","vector":"vector","cases":"case statement","table":"table","unknown":"unknown"},"enclose":{"longdiv":"long division","actuarial":"actuarial symbol","radical":"square root","box":"⠗","roundedbox":"rounded box","circle":"⠉","left":"left vertical-line","right":"right vertical-line","top":"overbar","bottom":"underbar","updiagonalstrike":"crossout","downdiagonalstrike":"crossout","verticalstrike":"vertical strikeout","horizontalstrike":"crossout","madruwb":"Arabic factorial symbol","updiagonalarrow":"diagonal arrow","phasorangle":"⠪","unknown":"long division"},"navigate":{"COLLAPSIBLE":"collapsible","EXPANDABLE":"expandable","LEVEL":"Level"},"regexp":{"TEXT":"a-zA-Z","NUMBER":"((\\\\d{1,3})(?=(,| ))((,| )\\\\d{3})*(\\\\.\\\\d+)?)|^\\\\d*\\\\.\\\\d+|^\\\\d+","DECIMAL_MARK":".","DIGIT_GROUP":",","JOINER_SUBSUPER":"","JOINER_FRAC":""},"unitTimes":""}},"nemeth/messages/numbers.min":{"kind":"numbers","locale":"nemeth","messages":{"ones":["⠴","⠂","⠆","⠒","⠲","⠢","⠖","⠶","⠦","⠔"],"vulgarSep":""}},"nemeth/si/prefixes.min":[{}],"nemeth/functions/algebra.min":[{"locale":"nemeth"}],"nemeth/functions/elementary.min":[{"locale":"nemeth"}],"nemeth/functions/hyperbolic.min":[{"locale":"nemeth"}],"nemeth/functions/trigonometry.min":[{"locale":"nemeth"}],"nemeth/symbols/currency_symbols.min":[{"locale":"nemeth"},{"key":"0024","category":"Sc","mappings":{"default":{"default":"⠈⠎"}}},{"key":"1F4B2","category":"Sc","mappings":{"default":{"default":"⠈⠎"}}},{"key":"FF04","category":"Sc","mappings":{"default":{"default":"⠈⠎"}}},{"key":"FE69","category":"Sc","mappings":{"default":{"default":"⠈⠎"}}},{"key":"00A3","category":"Sc","mappings":{"default":{"default":"⠈⠇"}}},{"key":"FFE1","category":"Sc","mappings":{"default":{"default":"⠈⠇"}}},{"key":"00A5","category":"Sc","mappings":{"default":{"default":"⠈⠽"}}},{"key":"FFE5","category":"Sc","mappings":{"default":{"default":"⠈⠽"}}},{"key":"20AC","category":"Sc","mappings":{"default":{"default":"⠈⠑"}}},{"key":"20A3","category":"Sc","mappings":{"default":{"default":"⠈⠋"}}},{"key":"20A6","category":"Sc","mappings":{"default":{"default":"⠈⠝"}}},{"key":"FFE0","category":"Sc","mappings":{"default":{"default":"⠈⠉"}}},{"key":"00A2","category":"Sc","mappings":{"default":{"default":"⠈⠉"}}},{"category":"Sc","mappings":{"default":{"default":"⠈⠫"}},"key":"00A4"},{"category":"Sc","mappings":{"default":{"default":""}},"key":"FFE6"}],"nemeth/symbols/digits_rest.min":[{"locale":"nemeth"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠲⠼"}},"key":"00BC"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠆⠼"}},"key":"00BD"},{"category":"No","mappings":{"default":{"default":"⠹⠒⠌⠲⠼"}},"key":"00BE"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠶⠼"}},"key":"2150"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠔⠼"}},"key":"2151"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠂⠴⠼"}},"key":"2152"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠒⠼"}},"key":"2153"},{"category":"No","mappings":{"default":{"default":"⠹⠆⠌⠒⠼"}},"key":"2154"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠢⠼"}},"key":"2155"},{"category":"No","mappings":{"default":{"default":"⠹⠆⠌⠢⠼"}},"key":"2156"},{"category":"No","mappings":{"default":{"default":"⠹⠒⠌⠢⠼"}},"key":"2157"},{"category":"No","mappings":{"default":{"default":"⠹⠲⠌⠢⠼"}},"key":"2158"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠖⠼"}},"key":"2159"},{"category":"No","mappings":{"default":{"default":"⠹⠢⠌⠖⠼"}},"key":"215A"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠦⠼"}},"key":"215B"},{"category":"No","mappings":{"default":{"default":"⠹⠒⠌⠦⠼"}},"key":"215C"},{"category":"No","mappings":{"default":{"default":"⠹⠢⠌⠦⠼"}},"key":"215D"},{"category":"No","mappings":{"default":{"default":"⠹⠶⠌⠦⠼"}},"key":"215E"},{"category":"No","mappings":{"default":{"default":"⠹⠂⠌⠼"}},"key":"215F"},{"category":"No","mappings":{"default":{"default":"⠹⠴⠌⠒⠼"}},"key":"2189"},{"category":"No","mappings":{"default":{"default":"⠫⠸⠲⠸⠫⠫⠉⠸⠫⠼⠂⠴⠻⠻"}},"key":"3248"},{"category":"No","mappings":{"default":{"default":"⠫⠸⠲⠸⠫⠫⠉⠸⠫⠼⠆⠴⠻⠻"}},"key":"3249"},{"category":"No","mappings":{"default":{"default":"⠫⠸⠲⠸⠫⠫⠉⠸⠫⠼⠒⠴⠻⠻"}},"key":"324A"},{"category":"No","mappings":{"default":{"default":"⠫⠸⠲⠸⠫⠫⠉⠸⠫⠼⠲⠴⠻⠻"}},"key":"324B"},{"category":"No","mappings":{"default":{"default":"⠫⠸⠲⠸⠫⠫⠉⠸⠫⠼⠢⠴⠻⠻"}},"key":"324C"},{"category":"No","mappings":{"default":{"default":"⠫⠸⠲⠸⠫⠫⠉⠸⠫⠼⠖⠴⠻⠻"}},"key":"324D"},{"category":"No","mappings":{"default":{"default":"⠫⠸⠲⠸⠫⠫⠉⠸⠫⠼⠶⠴⠻⠻"}},"key":"324E"},{"category":"No","mappings":{"default":{"default":"⠫⠸⠲⠸⠫⠫⠉⠸⠫⠼⠦⠴⠻⠻"}},"key":"324F"}],"nemeth/symbols/greek-rest.min":[{"locale":"nemeth"}],"nemeth/symbols/greek-scripts.min":[{"locale":"nemeth"},{"category":"Ll","key":"1D26","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D27","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D28","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D29","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D2A","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D5E","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D60","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D66","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D67","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D68","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D69","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D6A","mappings":{"default":{"default":""}}}],"nemeth/symbols/greek-symbols.min":[{"locale":"nemeth"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"03D0"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"03D7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"03F6"},{"category":"Lu","mappings":{"default":{"default":""}},"key":"1D7CA"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"1D7CB"}],"nemeth/symbols/hebrew_letters.min":[{"locale":"nemeth"},{"category":"Lo","mappings":{"default":{"default":"⠠⠠⠁"}},"key":"2135"},{"category":"Lo","mappings":{"default":{"default":"⠠⠠⠃"}},"key":"2136"},{"category":"Lo","mappings":{"default":{"default":"⠠⠠⠉"}},"key":"2137"},{"category":"Lo","mappings":{"default":{"default":"⠠⠠⠙"}},"key":"2138"}],"nemeth/symbols/latin-lower-double-accent.min":[{"locale":"nemeth"},{"category":"Ll","key":"01D6","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01D8","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01DA","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01DC","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01DF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01E1","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01ED","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01FB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"022B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"022D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0231","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E09","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E15","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E17","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E1D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E2F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E39","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E4D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E4F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E51","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E53","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E5D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E65","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E67","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E69","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E79","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E7B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EA5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EA7","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EA9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EAB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EAD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EAF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EB1","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EB3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EB5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EB7","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EBF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EC1","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EC3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EC5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EC7","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1ED1","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1ED3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1ED5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1ED7","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1ED9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EDB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EDD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EDF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EE1","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EE3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EE9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EEB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EED","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EEF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EF1","mappings":{"default":{"default":""}}}],"nemeth/symbols/latin-lower-phonetic.min":[{"locale":"nemeth"},{"category":"Ll","key":"00F8","mappings":{"default":{"default":"⠈⠕"}}},{"category":"Ll","key":"0111","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0127","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0142","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0167","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0180","mappings":{"default":{"default":""}}},{"category":"Ll","key":"019B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01B6","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01BE","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01E5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01FF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"023C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0247","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0249","mappings":{"default":{"default":""}}},{"category":"Ll","key":"024D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"024F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"025F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0268","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0284","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A1","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A2","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D13","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D7C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D7D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D7F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E9C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E9D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"018D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E9B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E9F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0138","mappings":{"default":{"default":""}}},{"category":"Ll","key":"017F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0183","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0185","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0188","mappings":{"default":{"default":""}}},{"category":"Ll","key":"018C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0192","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0195","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0199","mappings":{"default":{"default":""}}},{"category":"Ll","key":"019A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"019E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01A1","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01A3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01A5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01A8","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01AA","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01AB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01AD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01B0","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01B4","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01B9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01BA","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01BD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01BF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01C6","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01C9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01CC","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01E3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01EF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01F3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01DD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01FD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"021D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0221","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0223","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0225","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0234","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0235","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0236","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0238","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0239","mappings":{"default":{"default":""}}},{"category":"Ll","key":"023F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0240","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0242","mappings":{"default":{"default":""}}},{"category":"Ll","key":"024B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0250","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0251","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0252","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0253","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0254","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0255","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0256","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0257","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0258","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0259","mappings":{"default":{"default":""}}},{"category":"Ll","key":"025A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"025B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"025C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"025D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"025E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0260","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0261","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0263","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0264","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0265","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0266","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0267","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0269","mappings":{"default":{"default":""}}},{"category":"Ll","key":"026B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"026C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"026D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"026E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"026F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0270","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0271","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0272","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0273","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0275","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0277","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0278","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0279","mappings":{"default":{"default":""}}},{"category":"Ll","key":"027A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"027B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"027C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"027D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"027E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"027F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0282","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0283","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0285","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0286","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0287","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0288","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0289","mappings":{"default":{"default":""}}},{"category":"Ll","key":"028A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"028B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"028C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"028D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"028E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0290","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0291","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0292","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0293","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0295","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0296","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0297","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0298","mappings":{"default":{"default":""}}},{"category":"Ll","key":"029A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"029E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A0","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A4","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A6","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A7","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A8","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02A9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02AA","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02AB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02AC","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02AD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02AE","mappings":{"default":{"default":""}}},{"category":"Ll","key":"02AF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D02","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D08","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D09","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D11","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D12","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D14","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D16","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D17","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D1D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D1E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D1F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D24","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D25","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D6B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D6C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D6D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D6E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D6F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D70","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D71","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D72","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D73","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D74","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D75","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D76","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D77","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D79","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D7A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D80","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D81","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D82","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D83","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D84","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D85","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D86","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D87","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D88","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D89","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D8A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D8B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D8C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D8D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D8E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D8F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D90","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D91","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D92","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D93","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D94","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D95","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D96","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D97","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D98","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D99","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1D9A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0149","mappings":{"default":{"default":""}}},{"category":"Ll","key":"014B","mappings":{"default":{"default":""}}}],"nemeth/symbols/latin-lower-single-accent.min":[{"locale":"nemeth"},{"category":"Ll","key":"00E0","mappings":{"default":{"default":"⠈⠁"}}},{"category":"Ll","key":"00E1","mappings":{"default":{"default":"⠈⠁"}}},{"category":"Ll","key":"00E2","mappings":{"default":{"default":"⠈⠁"}}},{"category":"Ll","key":"00E3","mappings":{"default":{"default":"⠈⠁"}}},{"category":"Ll","key":"00E4","mappings":{"default":{"default":"⠈⠁"}}},{"category":"Ll","key":"00E5","mappings":{"default":{"default":"⠈⠁"}}},{"category":"Ll","key":"00E7","mappings":{"default":{"default":"⠈⠉"}}},{"category":"Ll","key":"00E8","mappings":{"default":{"default":"⠈⠑"}}},{"category":"Ll","key":"00E9","mappings":{"default":{"default":"⠈⠑"}}},{"category":"Ll","key":"00EA","mappings":{"default":{"default":"⠈⠑"}}},{"category":"Ll","key":"00EB","mappings":{"default":{"default":"⠈⠑"}}},{"category":"Ll","key":"00EC","mappings":{"default":{"default":"⠈⠊"}}},{"category":"Ll","key":"00ED","mappings":{"default":{"default":"⠈⠊"}}},{"category":"Ll","key":"00EE","mappings":{"default":{"default":"⠈⠊"}}},{"category":"Ll","key":"00EF","mappings":{"default":{"default":"⠈⠊"}}},{"category":"Ll","key":"00F1","mappings":{"default":{"default":"⠈⠝"}}},{"category":"Ll","key":"00F2","mappings":{"default":{"default":"⠈⠕"}}},{"category":"Ll","key":"00F3","mappings":{"default":{"default":"⠈⠕"}}},{"category":"Ll","key":"00F4","mappings":{"default":{"default":"⠈⠕"}}},{"category":"Ll","key":"00F5","mappings":{"default":{"default":"⠈⠕"}}},{"category":"Ll","key":"00F6","mappings":{"default":{"default":"⠈⠕"}}},{"category":"Ll","key":"00F9","mappings":{"default":{"default":"⠈⠥"}}},{"category":"Ll","key":"00FA","mappings":{"default":{"default":"⠈⠥"}}},{"category":"Ll","key":"00FB","mappings":{"default":{"default":"⠈⠥"}}},{"category":"Ll","key":"00FC","mappings":{"default":{"default":"⠈⠥"}}},{"category":"Ll","key":"00FD","mappings":{"default":{"default":"⠈⠽"}}},{"category":"Ll","key":"00FF","mappings":{"default":{"default":"⠈⠽"}}},{"category":"Ll","key":"0101","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0103","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0105","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0107","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0109","mappings":{"default":{"default":""}}},{"category":"Ll","key":"010B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"010D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"010F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0113","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0115","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0117","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0119","mappings":{"default":{"default":""}}},{"category":"Ll","key":"011B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"011D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"011F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0121","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0123","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0125","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0129","mappings":{"default":{"default":""}}},{"category":"Ll","key":"012B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"012D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"012F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0131","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0135","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0137","mappings":{"default":{"default":""}}},{"category":"Ll","key":"013A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"013C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"013E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0140","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0144","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0146","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0148","mappings":{"default":{"default":""}}},{"category":"Ll","key":"014D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"014F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0151","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0155","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0157","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0159","mappings":{"default":{"default":""}}},{"category":"Ll","key":"015B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"015D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"015F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0161","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0163","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0165","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0169","mappings":{"default":{"default":""}}},{"category":"Ll","key":"016B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"016D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"016F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0171","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0173","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0175","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0177","mappings":{"default":{"default":""}}},{"category":"Ll","key":"017A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"017C","mappings":{"default":{"default":""}}},{"category":"Ll","key":"017E","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01CE","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01D0","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01D2","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01D4","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01E7","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01E9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01EB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01F0","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01F5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"01F9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0201","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0203","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0205","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0207","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0209","mappings":{"default":{"default":""}}},{"category":"Ll","key":"020B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"020D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"020F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0211","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0213","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0215","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0217","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0219","mappings":{"default":{"default":""}}},{"category":"Ll","key":"021B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"021F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0227","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0229","mappings":{"default":{"default":""}}},{"category":"Ll","key":"022F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0233","mappings":{"default":{"default":""}}},{"category":"Ll","key":"0237","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E01","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E03","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E05","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E07","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E0B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E0D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E0F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E11","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E13","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E19","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E1B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E1F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E21","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E23","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E25","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E27","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E29","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E2B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E2D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E31","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E33","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E35","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E37","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E3B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E3D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E3F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E41","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E43","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E45","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E47","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E49","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E4B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E55","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E57","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E59","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E5B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E5F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E61","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E63","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E6B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E6D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E6F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E71","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E73","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E75","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E77","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E7D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E7F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E81","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E83","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E85","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E87","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E89","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E8B","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E8D","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E8F","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E91","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E93","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E95","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E96","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E97","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E98","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E99","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1E9A","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EA1","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EA3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EB9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EBB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EBD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EC9","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1ECB","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1ECD","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1ECF","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EE5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EE7","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EF3","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EF5","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EF7","mappings":{"default":{"default":""}}},{"category":"Ll","key":"1EF9","mappings":{"default":{"default":""}}}],"nemeth/symbols/latin-rest.min":[{"locale":"nemeth"},{"category":"Mn","key":"0363","mappings":{"default":{"default":""}}},{"category":"Mn","key":"0364","mappings":{"default":{"default":""}}},{"category":"Mn","key":"0365","mappings":{"default":{"default":""}}},{"category":"Mn","key":"0366","mappings":{"default":{"default":""}}},{"category":"Mn","key":"0367","mappings":{"default":{"default":""}}},{"category":"Mn","key":"0368","mappings":{"default":{"default":""}}},{"category":"Mn","key":"0369","mappings":{"default":{"default":""}}},{"category":"Mn","key":"036A","mappings":{"default":{"default":""}}},{"category":"Mn","key":"036B","mappings":{"default":{"default":""}}},{"category":"Mn","key":"036C","mappings":{"default":{"default":""}}},{"category":"Mn","key":"036D","mappings":{"default":{"default":""}}},{"category":"Mn","key":"036E","mappings":{"default":{"default":""}}},{"category":"Mn","key":"036F","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D62","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D63","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D64","mappings":{"default":{"default":""}}},{"category":"Lm","key":"1D65","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DCA","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DD3","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DD4","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DD5","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DD6","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DD7","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DD8","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DD9","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DDA","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DDB","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DDC","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DDD","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DDE","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DDF","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DE0","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DE1","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DE2","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DE3","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DE4","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DE5","mappings":{"default":{"default":""}}},{"category":"Mn","key":"1DE6","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2071","mappings":{"default":{"default":""}}},{"category":"Lm","key":"207F","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2090","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2091","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2092","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2093","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2094","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2095","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2096","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2097","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2098","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2099","mappings":{"default":{"default":""}}},{"category":"Lm","key":"209A","mappings":{"default":{"default":""}}},{"category":"Lm","key":"209B","mappings":{"default":{"default":""}}},{"category":"Lm","key":"209C","mappings":{"default":{"default":""}}},{"category":"Lm","key":"2C7C","mappings":{"default":{"default":""}}},{"category":"So","key":"1F12A","mappings":{"default":{"default":""}}},{"category":"So","key":"1F12B","mappings":{"default":{"default":""}}},{"category":"So","key":"1F12C","mappings":{"default":{"default":""}}},{"category":"So","key":"1F18A","mappings":{"default":{"default":""}}}],"nemeth/symbols/latin-upper-double-accent.min":[{"locale":"nemeth"},{"category":"Lu","key":"01D5","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01D7","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01D9","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01DB","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01DE","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01E0","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01EC","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01FA","mappings":{"default":{"default":""}}},{"category":"Lu","key":"022A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"022C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0230","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E08","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E14","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E16","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E1C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E2E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E38","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E4C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E4E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E50","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E52","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E5C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E64","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E66","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E68","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E78","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E7A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EA4","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EA6","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EA8","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EAA","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EAC","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EAE","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EB0","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EB2","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EB4","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EB6","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EBE","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EC0","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EC2","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EC4","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EC6","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1ED0","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1ED2","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1ED4","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1ED6","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1ED8","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EDA","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EDC","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EDE","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EE0","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EE2","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EE8","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EEA","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EEC","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EEE","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EF0","mappings":{"default":{"default":""}}}],"nemeth/symbols/latin-upper-single-accent.min":[{"locale":"nemeth"},{"category":"Lu","key":"00C0","mappings":{"default":{"default":"⠠⠈⠁"}}},{"category":"Lu","key":"00C1","mappings":{"default":{"default":"⠠⠈⠁"}}},{"category":"Lu","key":"00C2","mappings":{"default":{"default":"⠠⠈⠁"}}},{"category":"Lu","key":"00C3","mappings":{"default":{"default":"⠠⠈⠁"}}},{"category":"Lu","key":"00C4","mappings":{"default":{"default":"⠠⠈⠁"}}},{"category":"Lu","key":"00C5","mappings":{"default":{"default":"⠠⠈⠁"}}},{"category":"Lu","key":"00C7","mappings":{"default":{"default":"⠠⠈⠉"}}},{"category":"Lu","key":"00C8","mappings":{"default":{"default":"⠠⠈⠑"}}},{"category":"Lu","key":"00C9","mappings":{"default":{"default":"⠠⠈⠑"}}},{"category":"Lu","key":"00CA","mappings":{"default":{"default":"⠠⠈⠑"}}},{"category":"Lu","key":"00CB","mappings":{"default":{"default":"⠠⠈⠑"}}},{"category":"Lu","key":"00CC","mappings":{"default":{"default":"⠠⠈⠊"}}},{"category":"Lu","key":"00CD","mappings":{"default":{"default":"⠠⠈⠊"}}},{"category":"Lu","key":"00CE","mappings":{"default":{"default":"⠠⠈⠊"}}},{"category":"Lu","key":"00CF","mappings":{"default":{"default":"⠠⠈⠊"}}},{"category":"Lu","key":"00D1","mappings":{"default":{"default":"⠠⠈⠝"}}},{"category":"Lu","key":"00D2","mappings":{"default":{"default":"⠠⠈⠕"}}},{"category":"Lu","key":"00D3","mappings":{"default":{"default":"⠠⠈⠕"}}},{"category":"Lu","key":"00D4","mappings":{"default":{"default":"⠠⠈⠕"}}},{"category":"Lu","key":"00D5","mappings":{"default":{"default":""}}},{"category":"Lu","key":"00D6","mappings":{"default":{"default":"⠠⠈⠕"}}},{"category":"Lu","key":"00D9","mappings":{"default":{"default":"⠠⠈⠥"}}},{"category":"Lu","key":"00DA","mappings":{"default":{"default":"⠠⠈⠥"}}},{"category":"Lu","key":"00DB","mappings":{"default":{"default":"⠠⠈⠥"}}},{"category":"Lu","key":"00DC","mappings":{"default":{"default":"⠠⠈⠥"}}},{"category":"Lu","key":"00DD","mappings":{"default":{"default":"⠠⠈⠽"}}},{"category":"Lu","key":"0100","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0102","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0104","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0106","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0108","mappings":{"default":{"default":""}}},{"category":"Lu","key":"010A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"010C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"010E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0112","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0114","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0116","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0118","mappings":{"default":{"default":""}}},{"category":"Lu","key":"011A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"011C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"011E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0120","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0122","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0124","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0128","mappings":{"default":{"default":""}}},{"category":"Lu","key":"012A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"012C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"012E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0130","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0134","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0136","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0139","mappings":{"default":{"default":""}}},{"category":"Lu","key":"013B","mappings":{"default":{"default":""}}},{"category":"Lu","key":"013D","mappings":{"default":{"default":""}}},{"category":"Lu","key":"013F","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0143","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0145","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0147","mappings":{"default":{"default":""}}},{"category":"Lu","key":"014C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"014E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0150","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0154","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0156","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0158","mappings":{"default":{"default":""}}},{"category":"Lu","key":"015A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"015C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"015E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0160","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0162","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0164","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0168","mappings":{"default":{"default":""}}},{"category":"Lu","key":"016A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"016C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"016E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0170","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0172","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0174","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0176","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0178","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0179","mappings":{"default":{"default":""}}},{"category":"Lu","key":"017B","mappings":{"default":{"default":""}}},{"category":"Lu","key":"017D","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01CD","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01CF","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01D1","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01D3","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01E6","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01E8","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01EA","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01F4","mappings":{"default":{"default":""}}},{"category":"Lu","key":"01F8","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0200","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0202","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0204","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0206","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0208","mappings":{"default":{"default":""}}},{"category":"Lu","key":"020A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"020C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"020E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0210","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0212","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0214","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0216","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0218","mappings":{"default":{"default":""}}},{"category":"Lu","key":"021A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"021E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0226","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0228","mappings":{"default":{"default":""}}},{"category":"Lu","key":"022E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"0232","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E00","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E02","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E04","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E06","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E0A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E0C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E0E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E10","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E12","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E18","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E1A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E1E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E20","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E22","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E24","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E26","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E28","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E2A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E2C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E30","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E32","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E34","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E36","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E3A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E3C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E3E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E40","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E42","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E44","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E46","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E48","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E4A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E54","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E56","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E58","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E5A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E5E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E60","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E62","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E6A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E6C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E6E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E70","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E72","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E74","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E76","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E7C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E7E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E80","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E82","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E84","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E86","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E88","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E8A","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E8C","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E8E","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E90","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E92","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1E94","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EA0","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EA2","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EB8","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EBA","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EBC","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EC8","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1ECA","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1ECC","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1ECE","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EE4","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EE6","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EF2","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EF4","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EF6","mappings":{"default":{"default":""}}},{"category":"Lu","key":"1EF8","mappings":{"default":{"default":""}}}],"nemeth/symbols/math_angles.min":[{"locale":"nemeth"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22BE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"237C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27C0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"299B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"299C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"299D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"299E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"299F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29A9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29AA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29AB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29AC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29AD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29AE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29AF"}],"nemeth/symbols/math_arrows.min":[{"locale":"nemeth"},{"category":"Sm","mappings":{"default":{"default":"⠫⠪⠒⠒"}},"key":"2190"},{"category":"Sm","mappings":{"default":{"default":"⠫⠣⠒⠒⠕"}},"key":"2191"},{"category":"Sm","mappings":{"default":{"default":"⠫⠕","uncontracted":"⠫⠒⠒⠕"}},"key":"2192"},{"category":"Sm","mappings":{"default":{"default":"⠫⠩⠒⠒⠕"}},"key":"2193"},{"category":"Sm","mappings":{"default":{"default":"⠫⠪⠒⠒⠕"}},"key":"2194"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠩⠪⠒⠒⠕"}},"key":"2195"},{"category":"So","mappings":{"default":{"default":"⠫⠘⠪⠒⠒"}},"key":"2196"},{"category":"So","mappings":{"default":{"default":"⠫⠘⠒⠒⠕"}},"key":"2197"},{"category":"So","mappings":{"default":{"default":"⠫⠰⠒⠒⠕"}},"key":"2198"},{"category":"So","mappings":{"default":{"default":"⠫⠰⠪⠒⠒"}},"key":"2199"},{"category":"Sm","mappings":{"default":{"default":"⠳⠈⠫⠪⠒⠒⠻"}},"key":"219A"},{"category":"Sm","mappings":{"default":{"default":"⠳⠈⠫⠒⠒⠕⠻"}},"key":"219B"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠔⠒⠢"}},"key":"219C"},{"category":"So","mappings":{"default":{"default":"⠫⠔⠒⠢⠕"}},"key":"219D"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠪⠒⠒"}},"key":"219E"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠒⠒⠕⠕"}},"key":"219F"},{"category":"Sm","mappings":{"default":{"default":"⠫⠒⠒⠕⠕"}},"key":"21A0"},{"category":"So","mappings":{"default":{"default":"⠫⠩⠒⠒⠕⠕"}},"key":"21A1"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠒⠒⠠⠽"}},"key":"21A2"},{"category":"Sm","mappings":{"default":{"default":"⠫⠠⠯⠒⠒⠕"}},"key":"21A3"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠒⠒⠳"}},"key":"21A4"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠳⠒⠒⠕"}},"key":"21A5"},{"category":"Sm","mappings":{"default":{"default":"⠫⠳⠒⠒⠕"}},"key":"21A6"},{"category":"So","mappings":{"default":{"default":"⠫⠩⠳⠒⠒⠕"}},"key":"21A7"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠒⠳⠒⠕"}},"key":"21A8"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠒⠒⠠⠕"}},"key":"21A9"},{"category":"So","mappings":{"default":{"default":"⠫⠠⠪⠒⠒⠕"}},"key":"21AA"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠒⠒⠨⠡"}},"key":"21AB"},{"category":"So","mappings":{"default":{"default":"⠫⠨⠡⠒⠒⠕"}},"key":"21AC"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠔⠒⠢⠕"}},"key":"21AD"},{"category":"Sm","mappings":{"default":{"default":"⠳⠈⠫⠪⠒⠒⠕"}},"key":"21AE"},{"category":"So","mappings":{"default":{"default":"⠫⠩⠔⠢⠔"}},"key":"21AF"},{"category":"So","mappings":{"default":{"default":""}},"key":"21B0"},{"category":"So","mappings":{"default":{"default":""}},"key":"21B1"},{"category":"So","mappings":{"default":{"default":""}},"key":"21B2"},{"category":"So","mappings":{"default":{"default":""}},"key":"21B3"},{"category":"So","mappings":{"default":{"default":"⠫⠠⠳⠒⠒⠕"}},"key":"21B4"},{"category":"So","mappings":{"default":{"default":"⠫⠩⠠⠳⠒⠒⠕"}},"key":"21B5"},{"category":"So","mappings":{"default":{"default":"⠫⠢⠔⠕"}},"key":"21B6"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠢⠔"}},"key":"21B7"},{"category":"So","mappings":{"default":{"default":""}},"key":"21B8"},{"category":"So","mappings":{"default":{"default":""}},"key":"21B9"},{"category":"So","mappings":{"default":{"default":"⠫⠢⠔⠕"}},"key":"21BA"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠢⠔"}},"key":"21BB"},{"category":"So","mappings":{"default":{"default":"⠫⠒⠒⠕⠫⠪⠒⠒"}},"key":"21C4"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠒⠒⠕⠐⠫⠩⠒⠒⠕"}},"key":"21C5"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠒⠒⠫⠒⠒⠕"}},"key":"21C6"},{"category":"So","mappings":{"default":{"default":"⠫⠚⠒⠒⠫⠚⠒⠒"}},"key":"21C7"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠒⠒⠕⠐⠫⠣⠒⠒⠕"}},"key":"21C8"},{"category":"So","mappings":{"default":{"default":"⠫⠒⠒⠕⠫⠒⠒⠕"}},"key":"21C9"},{"category":"So","mappings":{"default":{"default":"⠫⠩⠒⠒⠕⠐⠫⠩⠒⠒⠕"}},"key":"21CA"},{"category":"So","mappings":{"default":{"default":"⠳⠈⠫⠪⠪⠒⠒"}},"key":"21CD"},{"category":"Sm","mappings":{"default":{"default":"⠳⠈⠫⠪⠪⠒⠒⠕⠕"}},"key":"21CE"},{"category":"Sm","mappings":{"default":{"default":"⠳⠈⠫⠒⠒⠕⠕"}},"key":"21CF"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠶⠶"}},"key":"21D0"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠒⠒⠕⠕"}},"key":"21D1"},{"category":"Sm","mappings":{"default":{"default":"⠫⠒⠒⠕⠕"}},"key":"21D2"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠒⠒⠕⠕"}},"key":"21D3"},{"category":"Sm","mappings":{"default":{"default":"⠫⠪⠪⠒⠒⠕⠕"}},"key":"21D4"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠪⠪⠒⠒⠕⠕"}},"key":"21D5"},{"category":"So","mappings":{"default":{"default":"⠫⠘⠪⠪⠒⠒"}},"key":"21D6"},{"category":"So","mappings":{"default":{"default":"⠫⠘⠒⠒⠕⠕"}},"key":"21D7"},{"category":"So","mappings":{"default":{"default":"⠫⠰⠒⠒⠕⠕"}},"key":"21D8"},{"category":"So","mappings":{"default":{"default":"⠫⠰⠪⠪⠒⠒"}},"key":"21D9"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠪⠪⠒⠒"}},"key":"21DA"},{"category":"So","mappings":{"default":{"default":"⠫⠒⠒⠕⠕⠕"}},"key":"21DB"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠢⠤⠔⠒⠢"}},"key":"21DC"},{"category":"So","mappings":{"default":{"default":"⠫⠢⠤⠔⠒⠢⠕"}},"key":"21DD"},{"category":"So","mappings":{"default":{"default":"⠳⠳⠈⠫⠣⠒⠒⠕⠻"}},"key":"21DE"},{"category":"So","mappings":{"default":{"default":"⠳⠳⠈⠫⠩⠒⠒⠕⠻"}},"key":"21DF"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠒⠒"}},"key":"21E0"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠒⠒⠕"}},"key":"21E1"},{"category":"So","mappings":{"default":{"default":"⠫⠒⠒⠕"}},"key":"21E2"},{"category":"So","mappings":{"default":{"default":"⠫⠩⠒⠒⠕"}},"key":"21E3"},{"category":"So","mappings":{"default":{"default":"⠫⠳⠪⠒⠒"}},"key":"21E4"},{"category":"So","mappings":{"default":{"default":"⠫⠒⠒⠕⠳"}},"key":"21E5"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠪⠒⠒"}},"key":"21E6"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠸⠒⠒⠕"}},"key":"21E7"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠒⠒⠕"}},"key":"21E8"},{"category":"So","mappings":{"default":{"default":"⠫⠩⠸⠒⠒⠕"}},"key":"21E9"},{"category":"So","mappings":{"default":{"default":""}},"key":"21EA"},{"category":"So","mappings":{"default":{"default":""}},"key":"21EB"},{"category":"So","mappings":{"default":{"default":""}},"key":"21EC"},{"category":"So","mappings":{"default":{"default":""}},"key":"21ED"},{"category":"So","mappings":{"default":{"default":""}},"key":"21EE"},{"category":"So","mappings":{"default":{"default":""}},"key":"21EF"},{"category":"So","mappings":{"default":{"default":""}},"key":"21F0"},{"category":"So","mappings":{"default":{"default":""}},"key":"21F1"},{"category":"So","mappings":{"default":{"default":""}},"key":"21F2"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠸⠪⠒⠒⠕"}},"key":"21F3"},{"category":"Sm","mappings":{"default":{"default":"⠫⠒⠒⠕⠨⠡"}},"key":"21F4"},{"category":"Sm","mappings":{"default":{"default":"⠫⠩⠒⠒⠕⠐⠫⠣⠒⠒⠕"}},"key":"21F5"},{"category":"Sm","mappings":{"default":{"default":"⠫⠒⠒⠕⠫⠒⠒⠕⠫⠒⠒⠕"}},"key":"21F6"},{"category":"Sm","mappings":{"default":{"default":"⠳⠈⠫⠪⠒⠒⠻"}},"key":"21F7"},{"category":"Sm","mappings":{"default":{"default":"⠳⠈⠫⠒⠒⠕⠻"}},"key":"21F8"},{"category":"Sm","mappings":{"default":{"default":"⠳⠈⠫⠪⠒⠒⠕"}},"key":"21F9"},{"category":"Sm","mappings":{"default":{"default":"⠳⠳⠈⠫⠪⠒⠒⠻"}},"key":"21FA"},{"category":"Sm","mappings":{"default":{"default":"⠳⠳⠈⠫⠒⠒⠕⠻"}},"key":"21FB"},{"category":"Sm","mappings":{"default":{"default":"⠳⠳⠈⠫⠪⠒⠒⠕"}},"key":"21FC"},{"category":"Sm","mappings":{"default":{"default":"⠫⠳⠒⠒"}},"key":"21FD"},{"category":"Sm","mappings":{"default":{"default":"⠫⠒⠒⠳"}},"key":"21FE"},{"category":"Sm","mappings":{"default":{"default":"⠫⠳⠒⠒⠳"}},"key":"21FF"},{"category":"So","mappings":{"default":{"default":""}},"key":"2301"},{"category":"So","mappings":{"default":{"default":""}},"key":"2303"},{"category":"So","mappings":{"default":{"default":""}},"key":"2304"},{"category":"So","mappings":{"default":{"default":""}},"key":"2324"},{"category":"So","mappings":{"default":{"default":""}},"key":"238B"},{"category":"So","mappings":{"default":{"default":""}},"key":"2794"},{"category":"So","mappings":{"default":{"default":""}},"key":"2798"},{"category":"So","mappings":{"default":{"default":""}},"key":"2799"},{"category":"So","mappings":{"default":{"default":""}},"key":"279A"},{"category":"So","mappings":{"default":{"default":""}},"key":"279B"},{"category":"So","mappings":{"default":{"default":""}},"key":"279C"},{"category":"So","mappings":{"default":{"default":""}},"key":"279D"},{"category":"So","mappings":{"default":{"default":""}},"key":"279E"},{"category":"So","mappings":{"default":{"default":""}},"key":"279F"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A0"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A1"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A2"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A3"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A4"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A5"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A6"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A7"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A8"},{"category":"So","mappings":{"default":{"default":""}},"key":"27A9"},{"category":"So","mappings":{"default":{"default":""}},"key":"27AA"},{"category":"So","mappings":{"default":{"default":""}},"key":"27AB"},{"category":"So","mappings":{"default":{"default":""}},"key":"27AC"},{"category":"So","mappings":{"default":{"default":""}},"key":"27AD"},{"category":"So","mappings":{"default":{"default":""}},"key":"27AE"},{"category":"So","mappings":{"default":{"default":""}},"key":"27AF"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B1"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B2"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B3"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B4"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B5"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B6"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B7"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B8"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B9"},{"category":"So","mappings":{"default":{"default":""}},"key":"27BA"},{"category":"So","mappings":{"default":{"default":""}},"key":"27BB"},{"category":"So","mappings":{"default":{"default":""}},"key":"27BC"},{"category":"So","mappings":{"default":{"default":""}},"key":"27BD"},{"category":"So","mappings":{"default":{"default":""}},"key":"27BE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27F9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27FA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27FB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27FC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27FD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27FE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27FF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2900"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2901"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2902"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2903"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2904"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2905"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2906"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2907"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2908"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2909"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"290A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"290B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"290C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"290D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"290E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"290F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2910"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2911"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2912"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2913"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2914"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2915"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2916"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2917"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2918"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2919"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"291A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"291B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"291C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"291D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"291E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"291F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2920"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2921"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2922"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2923"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2924"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2925"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2926"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2927"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2928"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2929"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"292A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"292D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"292E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"292F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2930"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2931"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2932"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2933"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2934"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2935"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2936"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2937"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2938"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2939"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"293A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"293B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"293C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"293D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"293E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"293F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2940"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2941"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2942"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2943"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2944"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2945"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2946"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2947"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2948"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2949"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2970"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2971"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2972"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2973"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2974"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2975"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2976"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2977"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2978"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2979"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"297A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"297B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29B3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29B4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29BD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29EA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29EC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29ED"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A17"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B00"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B01"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B02"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B03"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B04"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B05"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B06"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B07"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B08"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B09"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B0A"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B0B"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B0C"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B0D"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B0E"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B0F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B10"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B11"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B30"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B31"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B32"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B33"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B34"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B35"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B36"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B37"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B38"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B39"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B3A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B3B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B3C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B3D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B3E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B3F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B40"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B41"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B42"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B43"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B44"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B45"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B46"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B47"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B48"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B49"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B4A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B4B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2B4C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FFE9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FFEA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FFEB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FFEC"}],"nemeth/symbols/math_characters.min":[{"locale":"nemeth"},{"category":"Ll","mappings":{"default":{"default":"⠈⠰⠇"}},"key":"2113"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2118"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"213C"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"213D"},{"category":"Lu","mappings":{"default":{"default":""}},"key":"213E"},{"category":"Lu","mappings":{"default":{"default":""}},"key":"213F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2140"},{"category":"Lu","mappings":{"default":{"default":""}},"key":"2145"},{"category":"Ll","mappings":{"default":{"default":"⠙"}},"key":"2146"},{"category":"Ll","mappings":{"default":{"default":"⠑"}},"key":"2147"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"2148"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"2149"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"1D6A4"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"1D6A5"}],"nemeth/symbols/math_delimiters.min":[{"locale":"nemeth"},{"category":"Ps","mappings":{"default":{"default":"⠷"}},"key":"0028"},{"category":"Pe","mappings":{"default":{"default":"⠾"}},"key":"0029"},{"category":"Ps","mappings":{"default":{"default":"⠈⠷"}},"key":"005B"},{"category":"Pe","mappings":{"default":{"default":"⠈⠾"}},"key":"005D"},{"category":"Ps","mappings":{"default":{"default":"⠨⠷"}},"key":"007B"},{"category":"Pe","mappings":{"default":{"default":"⠨⠾"}},"key":"007D"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2045"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2046"},{"category":"Sm","mappings":{"default":{"default":"⠈⠘⠷"}},"key":"2308"},{"category":"Sm","mappings":{"default":{"default":"⠈⠘⠾"}},"key":"2309"},{"category":"Sm","mappings":{"default":{"default":"⠈⠰⠷"}},"key":"230A"},{"category":"Sm","mappings":{"default":{"default":"⠈⠰⠾"}},"key":"230B"},{"category":"So","mappings":{"default":{"default":""}},"key":"230C"},{"category":"So","mappings":{"default":{"default":""}},"key":"230D"},{"category":"So","mappings":{"default":{"default":""}},"key":"230E"},{"category":"So","mappings":{"default":{"default":""}},"key":"230F"},{"category":"So","mappings":{"default":{"default":"⠈⠘⠷"}},"key":"231C"},{"category":"So","mappings":{"default":{"default":"⠈⠘⠾"}},"key":"231D"},{"category":"So","mappings":{"default":{"default":"⠈⠰⠷"}},"key":"231E"},{"category":"So","mappings":{"default":{"default":"⠈⠰⠾"}},"key":"231F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2320"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2321"},{"category":"Ps","mappings":{"default":{"default":"⠨⠨⠷"}},"key":"2329"},{"category":"Pe","mappings":{"default":{"default":"⠨⠨⠾"}},"key":"232A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"239B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"239C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"239D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"239E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"239F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23A9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23AA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23AB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23AC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23AD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23AE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23AF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23B0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23B1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23B2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23B3"},{"category":"So","mappings":{"default":{"default":""}},"key":"23B4"},{"category":"So","mappings":{"default":{"default":""}},"key":"23B5"},{"category":"So","mappings":{"default":{"default":""}},"key":"23B6"},{"category":"So","mappings":{"default":{"default":""}},"key":"23B7"},{"category":"So","mappings":{"default":{"default":""}},"key":"23B8"},{"category":"So","mappings":{"default":{"default":""}},"key":"23B9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23DC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23DD"},{"category":"Sm","mappings":{"default":{"default":"⠣⠨⠷"}},"key":"23DE"},{"category":"Sm","mappings":{"default":{"default":"⠣⠨⠾"}},"key":"23DF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23E0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"23E1"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2768"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2769"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"276A"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"276B"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"276C"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"276D"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"276E"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"276F"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2770"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2771"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2772"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2773"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2774"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2775"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"27C5"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"27C6"},{"category":"Ps","mappings":{"default":{"default":"⠈⠸⠷"}},"key":"27E6"},{"category":"Pe","mappings":{"default":{"default":"⠈⠸⠾"}},"key":"27E7"},{"category":"Ps","mappings":{"default":{"default":"⠨⠨⠷"}},"key":"27E8"},{"category":"Pe","mappings":{"default":{"default":"⠨⠨⠾"}},"key":"27E9"},{"category":"Ps","mappings":{"default":{"default":"⠨⠨⠨⠷"}},"key":"27EA"},{"category":"Pe","mappings":{"default":{"default":"⠨⠨⠨⠾"}},"key":"27EB"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"27EC"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"27ED"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"27EE"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"27EF"},{"category":"Ps","mappings":{"default":{"default":"⠨⠸⠷"}},"key":"2983"},{"category":"Pe","mappings":{"default":{"default":"⠨⠸⠾"}},"key":"2984"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2985"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2986"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2987"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2988"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2989"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"298A"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"298B"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"298C"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"298D"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"298E"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"298F"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2990"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2991"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2992"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2993"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2994"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2995"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2996"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2997"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2998"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"29D8"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"29D9"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"29DA"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"29DB"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"29FC"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"29FD"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2E22"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2E23"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2E24"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2E25"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2E26"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2E27"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"2E28"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"2E29"},{"category":"Ps","mappings":{"default":{"default":"⠨⠨⠷"}},"key":"3008"},{"category":"Pe","mappings":{"default":{"default":"⠨⠨⠾"}},"key":"3009"},{"category":"Ps","mappings":{"default":{"default":"⠨⠨⠨⠷"}},"key":"300A"},{"category":"Pe","mappings":{"default":{"default":"⠨⠨⠨⠾"}},"key":"300B"},{"category":"Ps","mappings":{"default":{"default":"⠈⠘⠷"}},"key":"300C"},{"category":"Pe","mappings":{"default":{"default":"⠈⠘⠾"}},"key":"300D"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"300E"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"300F"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"3010"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"3011"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"3014"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"3015"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"3016"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"3017"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"3018"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"3019"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"301A"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"301B"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"301D"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"301E"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"301F"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FD3E"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FD3F"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE17"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE18"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE35"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE36"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE37"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE38"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE39"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE3A"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE3B"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE3C"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE3D"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE3E"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE3F"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE40"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE41"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE42"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE43"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE44"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE47"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE48"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE59"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE5A"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE5B"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE5C"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FE5D"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FE5E"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FF08"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FF09"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FF3B"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FF3D"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FF5B"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FF5D"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FF5F"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FF60"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"FF62"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"FF63"}],"nemeth/symbols/math_geometry.min":[{"locale":"nemeth"},{"category":"So","mappings":{"default":{"default":"⠱"}},"key":"2500"},{"category":"So","mappings":{"default":{"default":""}},"key":"2501"},{"category":"So","mappings":{"default":{"default":"⠳"}},"key":"2502"},{"category":"So","mappings":{"default":{"default":""}},"key":"2503"},{"category":"So","mappings":{"default":{"default":""}},"key":"2504"},{"category":"So","mappings":{"default":{"default":""}},"key":"2505"},{"category":"So","mappings":{"default":{"default":""}},"key":"2506"},{"category":"So","mappings":{"default":{"default":""}},"key":"2507"},{"category":"So","mappings":{"default":{"default":""}},"key":"2508"},{"category":"So","mappings":{"default":{"default":""}},"key":"2509"},{"category":"So","mappings":{"default":{"default":""}},"key":"250A"},{"category":"So","mappings":{"default":{"default":""}},"key":"250B"},{"category":"So","mappings":{"default":{"default":""}},"key":"250C"},{"category":"So","mappings":{"default":{"default":""}},"key":"250D"},{"category":"So","mappings":{"default":{"default":""}},"key":"250E"},{"category":"So","mappings":{"default":{"default":""}},"key":"250F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2510"},{"category":"So","mappings":{"default":{"default":""}},"key":"2511"},{"category":"So","mappings":{"default":{"default":""}},"key":"2512"},{"category":"So","mappings":{"default":{"default":""}},"key":"2513"},{"category":"So","mappings":{"default":{"default":""}},"key":"2514"},{"category":"So","mappings":{"default":{"default":""}},"key":"2515"},{"category":"So","mappings":{"default":{"default":""}},"key":"2516"},{"category":"So","mappings":{"default":{"default":""}},"key":"2517"},{"category":"So","mappings":{"default":{"default":""}},"key":"2518"},{"category":"So","mappings":{"default":{"default":""}},"key":"2519"},{"category":"So","mappings":{"default":{"default":""}},"key":"251A"},{"category":"So","mappings":{"default":{"default":""}},"key":"251B"},{"category":"So","mappings":{"default":{"default":""}},"key":"251C"},{"category":"So","mappings":{"default":{"default":""}},"key":"251D"},{"category":"So","mappings":{"default":{"default":""}},"key":"251E"},{"category":"So","mappings":{"default":{"default":""}},"key":"251F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2520"},{"category":"So","mappings":{"default":{"default":""}},"key":"2521"},{"category":"So","mappings":{"default":{"default":""}},"key":"2522"},{"category":"So","mappings":{"default":{"default":""}},"key":"2523"},{"category":"So","mappings":{"default":{"default":""}},"key":"2524"},{"category":"So","mappings":{"default":{"default":""}},"key":"2525"},{"category":"So","mappings":{"default":{"default":""}},"key":"2526"},{"category":"So","mappings":{"default":{"default":""}},"key":"2527"},{"category":"So","mappings":{"default":{"default":""}},"key":"2528"},{"category":"So","mappings":{"default":{"default":""}},"key":"2529"},{"category":"So","mappings":{"default":{"default":""}},"key":"252A"},{"category":"So","mappings":{"default":{"default":""}},"key":"252B"},{"category":"So","mappings":{"default":{"default":""}},"key":"252C"},{"category":"So","mappings":{"default":{"default":""}},"key":"252D"},{"category":"So","mappings":{"default":{"default":""}},"key":"252E"},{"category":"So","mappings":{"default":{"default":""}},"key":"252F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2530"},{"category":"So","mappings":{"default":{"default":""}},"key":"2531"},{"category":"So","mappings":{"default":{"default":""}},"key":"2532"},{"category":"So","mappings":{"default":{"default":""}},"key":"2533"},{"category":"So","mappings":{"default":{"default":""}},"key":"2534"},{"category":"So","mappings":{"default":{"default":""}},"key":"2535"},{"category":"So","mappings":{"default":{"default":""}},"key":"2536"},{"category":"So","mappings":{"default":{"default":""}},"key":"2537"},{"category":"So","mappings":{"default":{"default":""}},"key":"2538"},{"category":"So","mappings":{"default":{"default":""}},"key":"2539"},{"category":"So","mappings":{"default":{"default":""}},"key":"253A"},{"category":"So","mappings":{"default":{"default":""}},"key":"253B"},{"category":"So","mappings":{"default":{"default":""}},"key":"253C"},{"category":"So","mappings":{"default":{"default":""}},"key":"253D"},{"category":"So","mappings":{"default":{"default":""}},"key":"253E"},{"category":"So","mappings":{"default":{"default":""}},"key":"253F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2540"},{"category":"So","mappings":{"default":{"default":""}},"key":"2541"},{"category":"So","mappings":{"default":{"default":""}},"key":"2542"},{"category":"So","mappings":{"default":{"default":""}},"key":"2543"},{"category":"So","mappings":{"default":{"default":""}},"key":"2544"},{"category":"So","mappings":{"default":{"default":""}},"key":"2545"},{"category":"So","mappings":{"default":{"default":""}},"key":"2546"},{"category":"So","mappings":{"default":{"default":""}},"key":"2547"},{"category":"So","mappings":{"default":{"default":""}},"key":"2548"},{"category":"So","mappings":{"default":{"default":""}},"key":"2549"},{"category":"So","mappings":{"default":{"default":""}},"key":"254A"},{"category":"So","mappings":{"default":{"default":""}},"key":"254B"},{"category":"So","mappings":{"default":{"default":""}},"key":"254C"},{"category":"So","mappings":{"default":{"default":""}},"key":"254D"},{"category":"So","mappings":{"default":{"default":""}},"key":"254E"},{"category":"So","mappings":{"default":{"default":""}},"key":"254F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2550"},{"category":"So","mappings":{"default":{"default":""}},"key":"2551"},{"category":"So","mappings":{"default":{"default":""}},"key":"2552"},{"category":"So","mappings":{"default":{"default":""}},"key":"2553"},{"category":"So","mappings":{"default":{"default":""}},"key":"2554"},{"category":"So","mappings":{"default":{"default":""}},"key":"2555"},{"category":"So","mappings":{"default":{"default":""}},"key":"2556"},{"category":"So","mappings":{"default":{"default":""}},"key":"2557"},{"category":"So","mappings":{"default":{"default":""}},"key":"2558"},{"category":"So","mappings":{"default":{"default":""}},"key":"2559"},{"category":"So","mappings":{"default":{"default":""}},"key":"255A"},{"category":"So","mappings":{"default":{"default":""}},"key":"255B"},{"category":"So","mappings":{"default":{"default":""}},"key":"255C"},{"category":"So","mappings":{"default":{"default":""}},"key":"255D"},{"category":"So","mappings":{"default":{"default":""}},"key":"255E"},{"category":"So","mappings":{"default":{"default":""}},"key":"255F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2560"},{"category":"So","mappings":{"default":{"default":""}},"key":"2561"},{"category":"So","mappings":{"default":{"default":""}},"key":"2562"},{"category":"So","mappings":{"default":{"default":""}},"key":"2563"},{"category":"So","mappings":{"default":{"default":""}},"key":"2564"},{"category":"So","mappings":{"default":{"default":""}},"key":"2565"},{"category":"So","mappings":{"default":{"default":""}},"key":"2566"},{"category":"So","mappings":{"default":{"default":""}},"key":"2567"},{"category":"So","mappings":{"default":{"default":""}},"key":"2568"},{"category":"So","mappings":{"default":{"default":""}},"key":"2569"},{"category":"So","mappings":{"default":{"default":""}},"key":"256A"},{"category":"So","mappings":{"default":{"default":""}},"key":"256B"},{"category":"So","mappings":{"default":{"default":""}},"key":"256C"},{"category":"So","mappings":{"default":{"default":""}},"key":"256D"},{"category":"So","mappings":{"default":{"default":""}},"key":"256E"},{"category":"So","mappings":{"default":{"default":""}},"key":"256F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2570"},{"category":"So","mappings":{"default":{"default":""}},"key":"2571"},{"category":"So","mappings":{"default":{"default":""}},"key":"2572"},{"category":"So","mappings":{"default":{"default":""}},"key":"2573"},{"category":"So","mappings":{"default":{"default":""}},"key":"2574"},{"category":"So","mappings":{"default":{"default":""}},"key":"2575"},{"category":"So","mappings":{"default":{"default":""}},"key":"2576"},{"category":"So","mappings":{"default":{"default":""}},"key":"2577"},{"category":"So","mappings":{"default":{"default":""}},"key":"2578"},{"category":"So","mappings":{"default":{"default":""}},"key":"2579"},{"category":"So","mappings":{"default":{"default":""}},"key":"257A"},{"category":"So","mappings":{"default":{"default":""}},"key":"257B"},{"category":"So","mappings":{"default":{"default":""}},"key":"257C"},{"category":"So","mappings":{"default":{"default":""}},"key":"257D"},{"category":"So","mappings":{"default":{"default":""}},"key":"257E"},{"category":"So","mappings":{"default":{"default":""}},"key":"257F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2580"},{"category":"So","mappings":{"default":{"default":""}},"key":"2581"},{"category":"So","mappings":{"default":{"default":""}},"key":"2582"},{"category":"So","mappings":{"default":{"default":""}},"key":"2583"},{"category":"So","mappings":{"default":{"default":""}},"key":"2584"},{"category":"So","mappings":{"default":{"default":""}},"key":"2585"},{"category":"So","mappings":{"default":{"default":""}},"key":"2586"},{"category":"So","mappings":{"default":{"default":""}},"key":"2587"},{"category":"So","mappings":{"default":{"default":""}},"key":"2588"},{"category":"So","mappings":{"default":{"default":""}},"key":"2589"},{"category":"So","mappings":{"default":{"default":""}},"key":"258A"},{"category":"So","mappings":{"default":{"default":""}},"key":"258B"},{"category":"So","mappings":{"default":{"default":""}},"key":"258C"},{"category":"So","mappings":{"default":{"default":""}},"key":"258D"},{"category":"So","mappings":{"default":{"default":""}},"key":"258E"},{"category":"So","mappings":{"default":{"default":""}},"key":"258F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2590"},{"category":"So","mappings":{"default":{"default":""}},"key":"2591"},{"category":"So","mappings":{"default":{"default":""}},"key":"2592"},{"category":"So","mappings":{"default":{"default":""}},"key":"2593"},{"category":"So","mappings":{"default":{"default":""}},"key":"2594"},{"category":"So","mappings":{"default":{"default":""}},"key":"2595"},{"category":"So","mappings":{"default":{"default":""}},"key":"2596"},{"category":"So","mappings":{"default":{"default":""}},"key":"2597"},{"category":"So","mappings":{"default":{"default":""}},"key":"2598"},{"category":"So","mappings":{"default":{"default":""}},"key":"2599"},{"category":"So","mappings":{"default":{"default":""}},"key":"259A"},{"category":"So","mappings":{"default":{"default":""}},"key":"259B"},{"category":"So","mappings":{"default":{"default":""}},"key":"259C"},{"category":"So","mappings":{"default":{"default":""}},"key":"259D"},{"category":"So","mappings":{"default":{"default":""}},"key":"259E"},{"category":"So","mappings":{"default":{"default":""}},"key":"259F"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠲"}},"key":"25A0"},{"category":"So","mappings":{"default":{"default":"⠫⠲"}},"key":"25A1"},{"category":"So","mappings":{"default":{"default":""}},"key":"25A2"},{"category":"So","mappings":{"default":{"default":""}},"key":"25A3"},{"category":"So","mappings":{"default":{"default":""}},"key":"25A4"},{"category":"So","mappings":{"default":{"default":""}},"key":"25A5"},{"category":"So","mappings":{"default":{"default":""}},"key":"25A6"},{"category":"So","mappings":{"default":{"default":""}},"key":"25A7"},{"category":"So","mappings":{"default":{"default":""}},"key":"25A8"},{"category":"So","mappings":{"default":{"default":""}},"key":"25A9"},{"category":"So","mappings":{"default":{"default":""}},"key":"25AA"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠗"}},"key":"25AB"},{"category":"So","mappings":{"default":{"default":"⠫⠗"}},"key":"25AC"},{"category":"So","mappings":{"default":{"default":""}},"key":"25AD"},{"category":"So","mappings":{"default":{"default":""}},"key":"25AE"},{"category":"So","mappings":{"default":{"default":""}},"key":"25AF"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠛"}},"key":"25B0"},{"category":"So","mappings":{"default":{"default":"⠫⠛"}},"key":"25B1"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠞"}},"key":"25B2"},{"category":"So","mappings":{"default":{"default":"⠫⠞"}},"key":"25B3"},{"category":"So","mappings":{"default":{"default":""}},"key":"25B4"},{"category":"So","mappings":{"default":{"default":""}},"key":"25B5"},{"category":"So","mappings":{"default":{"default":""}},"key":"25B6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25B7"},{"category":"So","mappings":{"default":{"default":""}},"key":"25B8"},{"category":"So","mappings":{"default":{"default":""}},"key":"25B9"},{"category":"So","mappings":{"default":{"default":""}},"key":"25BA"},{"category":"So","mappings":{"default":{"default":""}},"key":"25BB"},{"category":"So","mappings":{"default":{"default":"⠸⠨⠫"}},"key":"25BC"},{"category":"So","mappings":{"default":{"default":"⠨⠫"}},"key":"25BD"},{"category":"So","mappings":{"default":{"default":""}},"key":"25BE"},{"category":"So","mappings":{"default":{"default":""}},"key":"25BF"},{"category":"So","mappings":{"default":{"default":""}},"key":"25C0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25C1"},{"category":"So","mappings":{"default":{"default":""}},"key":"25C2"},{"category":"So","mappings":{"default":{"default":""}},"key":"25C3"},{"category":"So","mappings":{"default":{"default":""}},"key":"25C4"},{"category":"So","mappings":{"default":{"default":""}},"key":"25C5"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠙"}},"key":"25C6"},{"category":"So","mappings":{"default":{"default":"⠫⠙"}},"key":"25C7"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠙"}},"key":"25C8"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠉"}},"key":"25C9"},{"category":"So","mappings":{"default":{"default":"⠫⠙"}},"key":"25CA"},{"category":"So","mappings":{"default":{"default":"⠫⠉"}},"key":"25CB"},{"category":"So","mappings":{"default":{"default":""}},"key":"25CC"},{"category":"So","mappings":{"default":{"default":""}},"key":"25CD"},{"category":"So","mappings":{"default":{"default":""}},"key":"25CE"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠉"}},"key":"25CF"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D0"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D1"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D2"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D3"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D4"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D5"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D6"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D7"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D8"},{"category":"So","mappings":{"default":{"default":""}},"key":"25D9"},{"category":"So","mappings":{"default":{"default":""}},"key":"25DA"},{"category":"So","mappings":{"default":{"default":""}},"key":"25DB"},{"category":"So","mappings":{"default":{"default":""}},"key":"25DC"},{"category":"So","mappings":{"default":{"default":""}},"key":"25DD"},{"category":"So","mappings":{"default":{"default":""}},"key":"25DE"},{"category":"So","mappings":{"default":{"default":""}},"key":"25DF"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E0"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E1"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E2"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E3"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E4"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E5"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E6"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E7"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E8"},{"category":"So","mappings":{"default":{"default":""}},"key":"25E9"},{"category":"So","mappings":{"default":{"default":""}},"key":"25EA"},{"category":"So","mappings":{"default":{"default":""}},"key":"25EB"},{"category":"So","mappings":{"default":{"default":""}},"key":"25EC"},{"category":"So","mappings":{"default":{"default":""}},"key":"25ED"},{"category":"So","mappings":{"default":{"default":""}},"key":"25EE"},{"category":"So","mappings":{"default":{"default":""}},"key":"25EF"},{"category":"So","mappings":{"default":{"default":""}},"key":"25F0"},{"category":"So","mappings":{"default":{"default":""}},"key":"25F1"},{"category":"So","mappings":{"default":{"default":""}},"key":"25F2"},{"category":"So","mappings":{"default":{"default":""}},"key":"25F3"},{"category":"So","mappings":{"default":{"default":""}},"key":"25F4"},{"category":"So","mappings":{"default":{"default":""}},"key":"25F5"},{"category":"So","mappings":{"default":{"default":""}},"key":"25F6"},{"category":"So","mappings":{"default":{"default":""}},"key":"25F7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25F8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25F9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25FA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25FB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25FC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25FD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25FE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"25FF"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B12"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B13"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B14"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B15"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B16"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B17"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B18"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B19"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B1A"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B1B"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B1C"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B1D"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B1E"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠢"}},"key":"2B1F"},{"category":"So","mappings":{"default":{"default":"⠫⠢"}},"key":"2B20"},{"category":"So","mappings":{"default":{"default":"⠫⠖"}},"key":"2B21"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠖"}},"key":"2B22"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠖"}},"key":"2B23"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠉"}},"key":"2B24"},{"category":"So","mappings":{"default":{"default":"⠫⠸⠙"}},"key":"2B25"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B26"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B27"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B28"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B29"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B2A"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B2B"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B2C"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B2D"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B2E"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B2F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B50"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B51"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B52"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B53"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B54"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B55"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B56"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B57"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B58"},{"category":"So","mappings":{"default":{"default":""}},"key":"2B59"}],"nemeth/symbols/math_harpoons.min":[{"locale":"nemeth"},{"category":"So","mappings":{"default":{"default":"⠫⠈⠪⠒⠒"}},"key":"21BC"},{"category":"So","mappings":{"default":{"default":"⠫⠠⠪⠒⠒"}},"key":"21BD"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠒⠒⠠⠕"}},"key":"21BE"},{"category":"So","mappings":{"default":{"default":"⠫⠣⠒⠒⠈⠕"}},"key":"21BF"},{"category":"So","mappings":{"default":{"default":"⠫⠒⠒⠈⠕"}},"key":"21C0"},{"category":"So","mappings":{"default":{"default":"⠫⠒⠒⠠⠕"}},"key":"21C1"},{"category":"So","mappings":{"default":{"default":"⠫⠪⠒⠒⠈⠕"}},"key":"21C2"},{"category":"So","mappings":{"default":{"default":"⠫⠩⠒⠒⠠⠕"}},"key":"21C3"},{"category":"So","mappings":{"default":{"default":"⠫⠈⠪⠒⠒⠫⠒⠒⠈⠕"}},"key":"21CB"},{"category":"So","mappings":{"default":{"default":"⠫⠒⠒⠈⠕⠫⠈⠪⠒⠒"}},"key":"21CC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"294A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"294B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"294C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"294D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"294E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"294F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2950"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2951"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2952"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2953"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2954"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2955"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2956"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2957"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2958"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2959"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"295A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"295B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"295C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"295D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"295E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"295F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2960"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2961"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2962"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2963"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2964"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2965"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2966"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2967"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2968"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2969"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"296A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"296B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"296C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"296D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"296E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"296F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"297C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"297D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"297E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"297F"}],"nemeth/symbols/math_non_characters.min":[{"locale":"nemeth"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"210F"},{"category":"So","mappings":{"default":{"default":"⠳"}},"key":"2114"},{"category":"So","mappings":{"default":{"default":""}},"key":"2116"},{"category":"So","mappings":{"default":{"default":""}},"key":"2117"},{"category":"So","mappings":{"default":{"default":""}},"key":"211E"},{"category":"So","mappings":{"default":{"default":""}},"key":"211F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2120"},{"category":"So","mappings":{"default":{"default":""}},"key":"2121"},{"category":"So","mappings":{"default":{"default":"⠘⠞"}},"key":"2122"},{"category":"So","mappings":{"default":{"default":""}},"key":"2123"},{"category":"So","mappings":{"default":{"default":""}},"key":"2125"},{"category":"Lu","mappings":{"default":{"default":""}},"key":"2126"},{"category":"So","mappings":{"default":{"default":""}},"key":"2127"},{"category":"Lu","mappings":{"default":{"default":""}},"key":"212A"},{"category":"Lu","mappings":{"default":{"default":"⠈⠠⠁"}},"key":"212B"},{"category":"So","mappings":{"default":{"default":""}},"key":"212E"},{"category":"Lu","mappings":{"default":{"default":""}},"key":"2132"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"2139"},{"category":"So","mappings":{"default":{"default":""}},"key":"213A"},{"category":"So","mappings":{"default":{"default":""}},"key":"213B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2141"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2142"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2143"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2144"}],"nemeth/symbols/math_symbols.min":[{"locale":"nemeth"},{"category":"Po","mappings":{"default":{"default":"⠖"}},"key":"0021"},{"category":"Po","mappings":{"default":{"default":"⠄⠄"}},"key":"0022"},{"category":"Po","mappings":{"default":{"default":"⠨⠼"}},"key":"0023"},{"category":"Po","mappings":{"default":{"default":"⠈⠴"}},"key":"0025"},{"category":"Po","mappings":{"default":{"default":"⠸⠯"}},"key":"0026"},{"category":"Po","mappings":{"default":{"default":"⠄"}},"key":"0027"},{"category":"Po","mappings":{"default":{"default":"⠈⠼"}},"key":"002A"},{"category":"Sm","mappings":{"default":{"default":"⠬"}},"key":"002B"},{"category":"Po","mappings":{"default":{"default":"⠠","defaultLibLouis":"⠠⠀"}},"key":"002C"},{"category":"Pd","mappings":{"default":{"default":"⠤"}},"key":"002D"},{"category":"Po","mappings":{"default":{"default":"⠨","other":"⠲"}},"key":"002E"},{"category":"Po","mappings":{"default":{"default":"⠸⠌"}},"key":"002F"},{"category":"Po","mappings":{"default":{"default":"⠸⠒"}},"key":"003A"},{"category":"Po","mappings":{"default":{"default":"⠆"}},"key":"003B"},{"category":"Sm","mappings":{"default":{"default":"⠐⠅"}},"key":"003C"},{"category":"Sm","mappings":{"default":{"default":"⠨⠅"}},"key":"003D"},{"category":"Sm","mappings":{"default":{"default":"⠨⠂"}},"key":"003E"},{"category":"Po","mappings":{"default":{"default":"⠿"}},"key":"003F"},{"category":"Po","mappings":{"default":{"default":"⠈⠁"}},"key":"0040"},{"category":"Po","mappings":{"default":{"default":"⠸⠡"}},"key":"005C"},{"category":"Sk","mappings":{"default":{"default":"⠸⠣"}},"key":"005E"},{"category":"Pc","mappings":{"default":{"default":"⠸"}},"key":"005F"},{"category":"Sk","mappings":{"default":{"default":"⠈"}},"key":"0060"},{"category":"Sm","mappings":{"default":{"default":"⠳"}},"key":"007C"},{"category":"Sm","mappings":{"default":{"default":"⠈⠱"}},"key":"007E"},{"category":"Po","mappings":{"default":{"default":"⠖"}},"key":"00A1"},{"category":"So","mappings":{"default":{"default":""}},"key":"00A6"},{"category":"Po","mappings":{"default":{"default":"⠈⠠⠎"}},"key":"00A7"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"00A8"},{"category":"So","mappings":{"default":{"default":"⠘⠉"}},"key":"00A9"},{"category":"Lo","mappings":{"default":{"default":"⠸⠰⠁"}},"key":"00AA"},{"category":"Pi","mappings":{"default":{"default":"⠐⠅⠈⠐⠅⠻"}},"key":"00AB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"00AC"},{"category":"So","mappings":{"default":{"default":"⠘⠗"}},"key":"00AE"},{"category":"Sk","mappings":{"default":{"default":"⠱"}},"key":"00AF"},{"category":"So","mappings":{"default":{"default":"⠘⠨⠡"}},"key":"00B0"},{"category":"Sm","mappings":{"default":{"default":"⠬⠤"}},"key":"00B1"},{"category":"Sk","mappings":{"default":{"default":"⠈"}},"key":"00B4"},{"category":"Ll","mappings":{"default":{"default":"⠨⠍"}},"key":"00B5"},{"category":"Po","mappings":{"default":{"default":"⠈⠠⠏"}},"key":"00B6"},{"category":"Po","mappings":{"default":{"default":"⠡"}},"key":"00B7"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"00B8"},{"category":"Lo","mappings":{"default":{"default":""}},"key":"00BA"},{"category":"Pf","mappings":{"default":{"default":""}},"key":"00BB"},{"category":"Po","mappings":{"default":{"default":"⠦"}},"key":"00BF"},{"category":"Sm","mappings":{"default":{"default":"⠈⠡"}},"key":"00D7"},{"category":"Sm","mappings":{"default":{"default":"⠈⠌"}},"key":"00F7"},{"key":"02B9","mappings":{"default":{"default":"⠄"}},"category":"Lm"},{"key":"02BA","mappings":{"default":{"default":"⠄⠄"}},"category":"Lm"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"02D8"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"02D9"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"02DA"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"02DB"},{"category":"Sk","mappings":{"default":{"default":"⠈⠱"}},"key":"02DC"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"02DD"},{"category":"Pd","mappings":{"default":{"default":"⠤"}},"key":"2010"},{"category":"Pd","mappings":{"default":{"default":"⠤"}},"key":"2011"},{"category":"Pd","mappings":{"default":{"default":"⠤⠤"}},"key":"2012"},{"category":"Pd","mappings":{"default":{"default":"⠤⠤"}},"key":"2013"},{"category":"Pd","mappings":{"default":{"default":"⠤⠤"}},"key":"2014"},{"category":"Pd","mappings":{"default":{"default":"⠤⠤"}},"key":"2015"},{"category":"Po","mappings":{"default":{"default":"⠳⠳"}},"key":"2016"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2017"},{"category":"Pi","mappings":{"default":{"default":"⠠⠦"}},"key":"2018"},{"category":"Pf","mappings":{"default":{"default":"⠄"}},"key":"2019"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"201A"},{"category":"Pi","mappings":{"default":{"default":""}},"key":"201B"},{"category":"Pi","mappings":{"default":{"default":"⠦"}},"key":"201C"},{"category":"Pf","mappings":{"default":{"default":"⠴"}},"key":"201D"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"201E"},{"category":"Pi","mappings":{"default":{"default":""}},"key":"201F"},{"category":"Po","mappings":{"default":{"default":"⠸⠻"}},"key":"2020"},{"category":"Po","mappings":{"default":{"default":"⠸⠸⠻"}},"key":"2021"},{"category":"Po","mappings":{"default":{"default":"⠔⠔"}},"key":"2022"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2023"},{"category":"Po","mappings":{"default":{"default":"⠄"}},"key":"2024"},{"category":"Po","mappings":{"default":{"default":"⠄⠄"}},"key":"2025"},{"category":"Po","mappings":{"default":{"default":"⠄⠄⠄"}},"key":"2026"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2027"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2030"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2031"},{"category":"Po","mappings":{"default":{"default":"⠄"}},"key":"2032"},{"category":"Po","mappings":{"default":{"default":"⠄⠄"}},"key":"2033"},{"category":"Po","mappings":{"default":{"default":"⠄⠄⠄"}},"key":"2034"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2035"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2036"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2037"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2038"},{"category":"Pi","mappings":{"default":{"default":""}},"key":"2039"},{"category":"Pf","mappings":{"default":{"default":""}},"key":"203A"},{"category":"Po","mappings":{"default":{"default":""}},"key":"203B"},{"category":"Po","mappings":{"default":{"default":"⠖⠖"}},"key":"203C"},{"category":"Po","mappings":{"default":{"default":""}},"key":"203D"},{"category":"Po","mappings":{"default":{"default":"⠱"}},"key":"203E"},{"category":"Pc","mappings":{"default":{"default":""}},"key":"203F"},{"category":"Pc","mappings":{"default":{"default":""}},"key":"2040"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2041"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2042"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2043"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2044"},{"category":"Po","mappings":{"default":{"default":"⠹⠹"}},"key":"2047"},{"category":"Po","mappings":{"default":{"default":"⠹⠖"}},"key":"2048"},{"category":"Po","mappings":{"default":{"default":"⠖⠹"}},"key":"2049"},{"category":"Po","mappings":{"default":{"default":""}},"key":"204B"},{"category":"Po","mappings":{"default":{"default":""}},"key":"204C"},{"category":"Po","mappings":{"default":{"default":""}},"key":"204D"},{"category":"Po","mappings":{"default":{"default":""}},"key":"204E"},{"category":"Po","mappings":{"default":{"default":""}},"key":"204F"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2050"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2051"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2052"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2053"},{"category":"Pc","mappings":{"default":{"default":""}},"key":"2054"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2055"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2056"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2057"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2058"},{"category":"Po","mappings":{"default":{"default":""}},"key":"2059"},{"category":"Po","mappings":{"default":{"default":""}},"key":"205A"},{"category":"Po","mappings":{"default":{"default":""}},"key":"205B"},{"category":"Po","mappings":{"default":{"default":""}},"key":"205C"},{"category":"Po","mappings":{"default":{"default":""}},"key":"205D"},{"category":"Po","mappings":{"default":{"default":""}},"key":"205E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"207A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"207B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"207C"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"207D"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"207E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"208A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"208B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"208C"},{"category":"Ps","mappings":{"default":{"default":""}},"key":"208D"},{"category":"Pe","mappings":{"default":{"default":""}},"key":"208E"},{"category":"So","mappings":{"default":{"default":""}},"key":"214A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"214B"},{"category":"So","mappings":{"default":{"default":""}},"key":"214C"},{"category":"So","mappings":{"default":{"default":""}},"key":"214D"},{"category":"Ll","mappings":{"default":{"default":""}},"key":"214E"},{"category":"Sm","mappings":{"default":{"default":"⠈⠯"}},"key":"2200"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2201"},{"category":"Sm","mappings":{"default":{"default":"⠈⠿"}},"key":"2203"},{"category":"Sm","mappings":{"default":{"default":"⠌⠈⠿"}},"key":"2204"},{"category":"Sm","mappings":{"default":{"default":"⠸⠴"}},"key":"2205"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2206"},{"category":"Sm","mappings":{"default":{"default":"⠈⠑"}},"key":"2208"},{"category":"Sm","mappings":{"default":{"default":"⠌⠈⠑"}},"key":"2209"},{"category":"Sm","mappings":{"default":{"default":"⠈⠑"}},"key":"220A"},{"category":"Sm","mappings":{"default":{"default":"⠈⠢"}},"key":"220B"},{"category":"Sm","mappings":{"default":{"default":"⠌⠈⠢"}},"key":"220C"},{"category":"Sm","mappings":{"default":{"default":"⠈⠢"}},"key":"220D"},{"category":"Sm","mappings":{"default":{"default":"⠸⠳"}},"key":"220E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"220F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2210"},{"category":"Sm","mappings":{"default":{"default":"⠨⠠⠎"}},"key":"2211"},{"category":"Sm","mappings":{"default":{"default":"⠤"}},"key":"2212"},{"category":"Sm","mappings":{"default":{"default":"⠤⠬"}},"key":"2213"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2214"},{"category":"Sm","mappings":{"default":{"default":"⠸⠌"}},"key":"2215"},{"category":"Sm","mappings":{"default":{"default":"⠸⠡"}},"key":"2216"},{"category":"Sm","mappings":{"default":{"default":"⠈⠼"}},"key":"2217"},{"category":"Sm","mappings":{"default":{"default":"⠨⠡"}},"key":"2218"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2219"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"221A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"221B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"221C"},{"category":"Sm","mappings":{"default":{"default":"⠰⠆"}},"key":"221D"},{"category":"Sm","mappings":{"default":{"default":"⠠⠿"}},"key":"221E"},{"category":"Sm","mappings":{"default":{"default":"⠫⠪⠨⠗⠻"}},"key":"221F"},{"category":"Sm","mappings":{"default":{"default":"⠫⠪"}},"key":"2220"},{"category":"Sm","mappings":{"default":{"default":"⠫⠪⠸⠫⠫⠁⠻"}},"key":"2221"},{"category":"Sm","mappings":{"default":{"default":"⠫⠪⠸⠫⠫⠁⠻"}},"key":"2222"},{"category":"Sm","mappings":{"default":{"default":"⠳"}},"key":"2223"},{"category":"Sm","mappings":{"default":{"default":"⠌⠳"}},"key":"2224"},{"category":"Sm","mappings":{"default":{"default":"⠫⠇"}},"key":"2225"},{"category":"Sm","mappings":{"default":{"default":"⠌⠫⠇"}},"key":"2226"},{"category":"Sm","mappings":{"default":{"default":"⠈⠩"}},"key":"2227"},{"category":"Sm","mappings":{"default":{"default":"⠈⠬"}},"key":"2228"},{"category":"Sm","mappings":{"default":{"default":"⠨⠩"}},"key":"2229"},{"category":"Sm","mappings":{"default":{"default":"⠨⠬"}},"key":"222A"},{"category":"Sm","mappings":{"default":{"default":"⠮"}},"key":"222B"},{"category":"Sm","mappings":{"default":{"default":"⠮⠮"}},"key":"222C"},{"category":"Sm","mappings":{"default":{"default":"⠮⠮⠮"}},"key":"222D"},{"category":"Sm","mappings":{"default":{"default":"⠮⠈⠫⠉⠻"}},"key":"222E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"222F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2230"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2231"},{"category":"Sm","mappings":{"default":{"default":"⠮⠈⠫⠪⠢⠔⠻"}},"key":"2232"},{"category":"Sm","mappings":{"default":{"default":"⠮⠈⠫⠢⠔⠕⠻"}},"key":"2233"},{"category":"Sm","mappings":{"default":{"default":"⠠⠡"}},"key":"2234"},{"category":"Sm","mappings":{"default":{"default":"⠈⠌"}},"key":"2235"},{"category":"Sm","mappings":{"default":{"default":"⠐⠂"}},"key":"2236"},{"category":"Sm","mappings":{"default":{"default":"⠰⠆"}},"key":"2237"},{"category":"Sm","mappings":{"default":{"default":"⠨⠤"}},"key":"2238"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2239"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"223A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"223B"},{"category":"Sm","mappings":{"default":{"default":"⠈⠱"}},"key":"223C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"223D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"223E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"223F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2240"},{"category":"Sm","mappings":{"default":{"default":"⠌⠈⠱"}},"key":"2241"},{"category":"Sm","mappings":{"default":{"default":"⠱⠈⠱"}},"key":"2242"},{"category":"Sm","mappings":{"default":{"default":"⠈⠱⠱"}},"key":"2243"},{"category":"Sm","mappings":{"default":{"default":"⠌⠈⠱⠱"}},"key":"2244"},{"category":"Sm","mappings":{"default":{"default":"⠈⠱⠨⠅"}},"key":"2245"},{"category":"Sm","mappings":{"default":{"default":"⠈⠱⠌⠨⠅"}},"key":"2246"},{"category":"Sm","mappings":{"default":{"default":"⠌⠈⠱⠨⠅"}},"key":"2247"},{"category":"Sm","mappings":{"default":{"default":"⠈⠱⠈⠱"}},"key":"2248"},{"category":"Sm","mappings":{"default":{"default":"⠌⠈⠱⠈⠱"}},"key":"2249"},{"category":"Sm","mappings":{"default":{"default":"⠈⠱⠈⠱⠱"}},"key":"224A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"224B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"224C"},{"category":"Sm","mappings":{"default":{"default":"⠈⠣⠠⠣"}},"key":"224D"},{"category":"Sm","mappings":{"default":{"default":"⠈⠣⠠⠣"}},"key":"224E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"224F"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠡⠻"}},"key":"2250"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠩⠡⠣⠡⠻"}},"key":"2251"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2252"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2253"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2254"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2255"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2256"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠨⠡⠻"}},"key":"2257"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠫⠁⠻"}},"key":"2258"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠸⠣⠻"}},"key":"2259"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠸⠩⠻"}},"key":"225A"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠫⠸⠎⠻"}},"key":"225B"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠫⠞⠻"}},"key":"225C"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠙⠑⠋⠻"}},"key":"225D"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠍⠻"}},"key":"225E"},{"category":"Sm","mappings":{"default":{"default":"⠐⠨⠅⠣⠸⠦⠻"}},"key":"225F"},{"category":"Sm","mappings":{"default":{"default":"⠌⠨⠅"}},"key":"2260"},{"category":"Sm","mappings":{"default":{"default":"⠸⠇"}},"key":"2261"},{"category":"Sm","mappings":{"default":{"default":"⠌⠸⠇"}},"key":"2262"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2263"},{"category":"Sm","mappings":{"default":{"default":"⠐⠅⠱"}},"key":"2264"},{"category":"Sm","mappings":{"default":{"default":"⠨⠂⠱"}},"key":"2265"},{"category":"Sm","mappings":{"default":{"default":"⠐⠅⠨⠅"}},"key":"2266"},{"category":"Sm","mappings":{"default":{"default":"⠨⠂⠨⠅"}},"key":"2267"},{"category":"Sm","mappings":{"default":{"default":"⠐⠅⠌⠨⠅"}},"key":"2268"},{"category":"Sm","mappings":{"default":{"default":"⠨⠂⠌⠨⠅"}},"key":"2269"},{"category":"Sm","mappings":{"default":{"default":"⠐⠅⠈⠐⠅⠻"}},"key":"226A"},{"category":"Sm","mappings":{"default":{"default":"⠨⠂⠈⠨⠂⠻"}},"key":"226B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"226C"},{"category":"Sm","mappings":{"default":{"default":"⠌⠈⠣⠠⠣"}},"key":"226D"},{"category":"Sm","mappings":{"default":{"default":"⠌⠐⠅"}},"key":"226E"},{"category":"Sm","mappings":{"default":{"default":"⠌⠨⠂"}},"key":"226F"},{"category":"Sm","mappings":{"default":{"default":"⠌⠐⠅⠱"}},"key":"2270"},{"category":"Sm","mappings":{"default":{"default":"⠌⠨⠂⠱"}},"key":"2271"},{"category":"Sm","mappings":{"default":{"default":"⠐⠅⠈⠱"}},"key":"2272"},{"category":"Sm","mappings":{"default":{"default":"⠨⠂⠈⠱"}},"key":"2273"},{"category":"Sm","mappings":{"default":{"default":"⠌⠐⠅⠈⠱"}},"key":"2274"},{"category":"Sm","mappings":{"default":{"default":"⠌⠨⠂⠈⠱"}},"key":"2275"},{"category":"Sm","mappings":{"default":{"default":"⠐⠅⠨⠂"}},"key":"2276"},{"category":"Sm","mappings":{"default":{"default":"⠨⠂⠐⠅"}},"key":"2277"},{"category":"Sm","mappings":{"default":{"default":"⠌⠐⠅⠨⠂"}},"key":"2278"},{"category":"Sm","mappings":{"default":{"default":"⠌⠨⠂⠐⠅"}},"key":"2279"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅"}},"key":"227A"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐"}},"key":"227B"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠱"}},"key":"227C"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠱"}},"key":"227D"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠈⠱"}},"key":"227E"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠈⠱"}},"key":"227F"},{"category":"Sm","mappings":{"default":{"default":"⠌⠨⠐⠅"}},"key":"2280"},{"category":"Sm","mappings":{"default":{"default":"⠌⠨⠐⠅"}},"key":"2281"},{"category":"Sm","mappings":{"default":{"default":"⠸⠐⠅"}},"key":"2282"},{"category":"Sm","mappings":{"default":{"default":"⠸⠨⠂"}},"key":"2283"},{"category":"Sm","mappings":{"default":{"default":"⠌⠸⠐⠅"}},"key":"2284"},{"category":"Sm","mappings":{"default":{"default":"⠌⠸⠨⠂"}},"key":"2285"},{"category":"Sm","mappings":{"default":{"default":"⠸⠐⠅⠱"}},"key":"2286"},{"category":"Sm","mappings":{"default":{"default":"⠸⠨⠂⠱"}},"key":"2287"},{"category":"Sm","mappings":{"default":{"default":"⠌⠸⠐⠅⠱"}},"key":"2288"},{"category":"Sm","mappings":{"default":{"default":"⠌⠸⠨⠂⠱"}},"key":"2289"},{"category":"Sm","mappings":{"default":{"default":"⠸⠐⠅⠌⠨⠅"}},"key":"228A"},{"category":"Sm","mappings":{"default":{"default":"⠸⠨⠂⠌⠨⠅"}},"key":"228B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"228C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"228D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"228E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"228F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2290"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2291"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2292"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2293"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2294"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠬⠻"}},"key":"2295"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠤⠻"}},"key":"2296"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠈⠡⠻"}},"key":"2297"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠸⠌⠻"}},"key":"2298"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠡⠻"}},"key":"2299"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠘⠨⠡⠻"}},"key":"229A"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠈⠼⠻"}},"key":"229B"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠨⠅⠻"}},"key":"229C"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠤⠻"}},"key":"229D"},{"category":"Sm","mappings":{"default":{"default":"⠫⠲⠸⠫⠬⠻"}},"key":"229E"},{"category":"Sm","mappings":{"default":{"default":"⠫⠲⠸⠫⠤⠻"}},"key":"229F"},{"category":"Sm","mappings":{"default":{"default":"⠫⠲⠸⠫⠈⠡⠻"}},"key":"22A0"},{"category":"Sm","mappings":{"default":{"default":"⠫⠲⠸⠫⠡⠻"}},"key":"22A1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22A2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22A3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22A4"},{"category":"Sm","mappings":{"default":{"default":"⠫⠏"}},"key":"22A5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22A6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22A7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22A8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22A9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22AA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22AB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22AC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22AD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22AE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22AF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22B9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22BA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22BB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22BC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22BD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22BF"},{"category":"Sm","mappings":{"default":{"default":"⠈⠩"}},"key":"22C0"},{"category":"Sm","mappings":{"default":{"default":"⠈⠬"}},"key":"22C1"},{"category":"Sm","mappings":{"default":{"default":"⠨⠩"}},"key":"22C2"},{"category":"Sm","mappings":{"default":{"default":"⠨⠬"}},"key":"22C3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22C4"},{"category":"Sm","mappings":{"default":{"default":"⠡"}},"key":"22C5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22C6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22C7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22C8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22C9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22CA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22CB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22CC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22CD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22CE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22CF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22D9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22DA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22DB"},{"category":"Sm","mappings":{"default":{"default":"⠱⠐⠅"}},"key":"22DC"},{"category":"Sm","mappings":{"default":{"default":"⠱⠨⠂"}},"key":"22DD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22DE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22DF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22E9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22EA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22EB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22EC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22ED"},{"category":"Sm","mappings":{"default":{"default":"⠣⠄⠄⠄"}},"key":"22EE"},{"category":"Sm","mappings":{"default":{"default":"⠄⠄⠄"}},"key":"22EF"},{"category":"Sm","mappings":{"default":{"default":"⠘⠄⠄⠄"}},"key":"22F0"},{"category":"Sm","mappings":{"default":{"default":"⠰⠄⠄⠄"}},"key":"22F1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22F2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22F3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22F4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22F5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22F6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22F7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22F8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22F9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22FA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22FB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22FC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22FD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22FE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"22FF"},{"category":"So","mappings":{"default":{"default":""}},"key":"2300"},{"category":"So","mappings":{"default":{"default":""}},"key":"2302"},{"category":"So","mappings":{"default":{"default":""}},"key":"2305"},{"category":"So","mappings":{"default":{"default":""}},"key":"2306"},{"category":"So","mappings":{"default":{"default":""}},"key":"2307"},{"category":"So","mappings":{"default":{"default":""}},"key":"2310"},{"category":"So","mappings":{"default":{"default":""}},"key":"2311"},{"category":"So","mappings":{"default":{"default":""}},"key":"2312"},{"category":"So","mappings":{"default":{"default":""}},"key":"2313"},{"category":"So","mappings":{"default":{"default":""}},"key":"2314"},{"category":"So","mappings":{"default":{"default":""}},"key":"2795"},{"category":"So","mappings":{"default":{"default":""}},"key":"2796"},{"category":"So","mappings":{"default":{"default":""}},"key":"2797"},{"category":"So","mappings":{"default":{"default":""}},"key":"27B0"},{"category":"So","mappings":{"default":{"default":""}},"key":"27BF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27C1"},{"category":"Sm","mappings":{"default":{"default":"⠫⠏"}},"key":"27C2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27C3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27C4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27C7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27C8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27C9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27CA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27CB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27CC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27CD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27CE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27CF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27D9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27DA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27DB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27DC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27DD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27DE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27DF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27E0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27E1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27E2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27E3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27E4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"27E5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"292B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"292C"},{"category":"Sm","mappings":{"default":{"default":"⠳⠳⠳"}},"key":"2980"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2981"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2982"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2999"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"299A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29B0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29B1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29B2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29B5"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠳⠻"}},"key":"29B6"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠫⠇⠻"}},"key":"29B7"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠸⠡⠻"}},"key":"29B8"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠫⠏⠻"}},"key":"29B9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29BA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29BB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29BC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29BE"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠔⠔⠻"}},"key":"29BF"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠐⠅⠻"}},"key":"29C0"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠨⠂⠻"}},"key":"29C1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29C2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29C3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29C4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29C5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29C6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29C7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29C8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29C9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29CA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29CB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29CC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29CD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29CE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29CF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29D0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29D1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29D2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29D3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29D4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29D5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29D6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29D7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29DC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29DD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29DE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29DF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29E9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29EB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29EE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29EF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29F9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29FA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29FB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29FE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"29FF"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠡⠻"}},"key":"2A00"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠬⠻"}},"key":"2A01"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠈⠡⠻"}},"key":"2A02"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A03"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A04"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A05"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A06"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A07"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A08"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A09"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A0A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A0B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A0C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A0D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A0E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A0F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A10"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A11"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A12"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A13"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A14"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A15"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A16"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A18"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A19"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A1A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A1B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A1C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A1D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A1E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A1F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A20"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A21"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A22"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A23"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A24"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A25"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A26"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A27"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A28"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A29"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A2A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A2B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A2C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A2D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A2E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A2F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A30"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A31"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A32"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A33"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A34"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A35"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A36"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A37"},{"category":"Sm","mappings":{"default":{"default":"⠫⠉⠸⠫⠈⠌⠻"}},"key":"2A38"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A39"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A3A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A3B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A3C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A3D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A3E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A3F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A40"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A41"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A42"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A43"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A44"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A45"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A46"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A47"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A48"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A49"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A4A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A4B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A4C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A4D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A4E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A4F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A50"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A51"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A52"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A53"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A54"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A55"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A56"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A57"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A58"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A59"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A5A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A5B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A5C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A5D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A5E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A5F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A60"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A61"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A62"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A63"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A64"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A65"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A66"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A67"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A68"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A69"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A6A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A6B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A6C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A6D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A6E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A6F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A70"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A71"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A72"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A73"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A74"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A75"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A76"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A77"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A78"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A79"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A7A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A7B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A7C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A7D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A7E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A7F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A80"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A81"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A82"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A83"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A84"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A85"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A86"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A87"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A88"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A89"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A8A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A8B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A8C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A8D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A8E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A8F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A90"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A91"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A92"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A93"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A94"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A95"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A96"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A97"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A98"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A99"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A9A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A9B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A9C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A9D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A9E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2A9F"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AA9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AAA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AAB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AAC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AAD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AAE"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠱"}},"key":"2AAF"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠱"}},"key":"2AB0"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠌⠱"}},"key":"2AB1"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠌⠱"}},"key":"2AB2"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠨⠅"}},"key":"2AB3"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠨⠅"}},"key":"2AB4"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠌⠨⠅"}},"key":"2AB5"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠌⠨⠅"}},"key":"2AB6"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠈⠱⠈⠱"}},"key":"2AB7"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠈⠱⠈⠱"}},"key":"2AB8"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠌⠈⠱⠈⠱"}},"key":"2AB9"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠌⠈⠱⠈⠱"}},"key":"2ABA"},{"category":"Sm","mappings":{"default":{"default":"⠨⠐⠅⠈⠨⠐⠅⠻"}},"key":"2ABB"},{"category":"Sm","mappings":{"default":{"default":"⠨⠨⠐⠈⠨⠨⠐⠻"}},"key":"2ABC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ABD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ABE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ABF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AC9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ACA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ACB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ACC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ACD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ACE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ACF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AD9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ADA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ADB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ADC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ADD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ADE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2ADF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE3"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AE9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AEA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AEB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AEC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AED"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AEE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AEF"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF0"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF1"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF2"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF3"},{"category":"Sm","mappings":{"default":{"default":"⠳⠳⠳"}},"key":"2AF4"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF5"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF6"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF7"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF8"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AF9"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AFA"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AFB"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AFC"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AFD"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AFE"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"2AFF"},{"category":"Pd","mappings":{"default":{"default":""}},"key":"301C"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE10"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE13"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE14"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE15"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE16"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE19"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE30"},{"category":"Pd","mappings":{"default":{"default":""}},"key":"FE31"},{"category":"Pd","mappings":{"default":{"default":""}},"key":"FE32"},{"category":"Pc","mappings":{"default":{"default":""}},"key":"FE33"},{"category":"Pc","mappings":{"default":{"default":""}},"key":"FE34"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE45"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE46"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE49"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE4A"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE4B"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE4C"},{"category":"Pc","mappings":{"default":{"default":""}},"key":"FE4D"},{"category":"Pc","mappings":{"default":{"default":""}},"key":"FE4E"},{"category":"Pc","mappings":{"default":{"default":""}},"key":"FE4F"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE50"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE52"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE54"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE55"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE56"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE57"},{"category":"Pd","mappings":{"default":{"default":""}},"key":"FE58"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE5F"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE60"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE61"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FE62"},{"category":"Pd","mappings":{"default":{"default":""}},"key":"FE63"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FE64"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FE65"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FE66"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE68"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE6A"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FE6B"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF01"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF02"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF03"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF05"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF06"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF07"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF0A"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FF0B"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF0C"},{"category":"Pd","mappings":{"default":{"default":""}},"key":"FF0D"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF0E"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF0F"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF1A"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF1B"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FF1C"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FF1D"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FF1E"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF1F"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF20"},{"category":"Po","mappings":{"default":{"default":""}},"key":"FF3C"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"FF3E"},{"category":"Pc","mappings":{"default":{"default":"⠱"}},"key":"FF3F"},{"category":"Sk","mappings":{"default":{"default":""}},"key":"FF40"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FF5C"},{"category":"Sm","mappings":{"default":{"default":"⠈⠱"}},"key":"FF5E"},{"category":"Sm","mappings":{"default":{"default":""}},"key":"FFE2"},{"category":"Sk","mappings":{"default":{"default":"⠱"}},"key":"FFE3"},{"category":"So","mappings":{"default":{"default":""}},"key":"FFE4"},{"category":"So","mappings":{"default":{"default":""}},"key":"FFE8"},{"category":"So","mappings":{"default":{"default":""}},"key":"FFED"},{"category":"So","mappings":{"default":{"default":""}},"key":"FFEE"}],"nemeth/symbols/math_whitespace.min":[{"locale":"nemeth"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"0020"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"00A0"},{"category":"Cf","mappings":{"default":{"default":"⠤"}},"key":"00AD"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2000"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2001"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2002"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2003"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2004"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2005"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2006"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2007"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2008"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"2009"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"200A"},{"category":"Cf","mappings":{"default":{"default":"⠀"}},"key":"200B"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"200C"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"200D"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"200E"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"200F"},{"category":"Zl","mappings":{"default":{"default":""}},"key":"2028"},{"category":"Zp","mappings":{"default":{"default":""}},"key":"2029"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"202A"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"202B"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"202C"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"202D"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"202E"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"202F"},{"category":"Zs","mappings":{"default":{"default":"⠀"}},"key":"205F"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"2060"},{"category":"Cf","mappings":{"default":{"default":"⠀"}},"key":"2061"},{"category":"Cf","mappings":{"default":{"default":"⠈⠡"}},"key":"2062"},{"category":"Cf","mappings":{"default":{"default":"⠠"}},"key":"2063"},{"category":"Cf","mappings":{"default":{"default":"⠬"}},"key":"2064"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"206A"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"206B"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"206E"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"206F"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"FEFF"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"FFF9"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"FFFA"},{"category":"Cf","mappings":{"default":{"default":""}},"key":"FFFB"}],"nemeth/symbols/other_stars.min":[{"locale":"nemeth"},{"category":"So","mappings":{"default":{"default":""}},"key":"23E8"},{"category":"So","mappings":{"default":{"default":""}},"key":"2605"},{"category":"So","mappings":{"default":{"default":"⠫⠎"}},"key":"2606"},{"category":"So","mappings":{"default":{"default":""}},"key":"26AA"},{"category":"So","mappings":{"default":{"default":""}},"key":"26AB"},{"category":"So","mappings":{"default":{"default":""}},"key":"2705"},{"category":"So","mappings":{"default":{"default":""}},"key":"2713"},{"category":"So","mappings":{"default":{"default":""}},"key":"2714"},{"category":"So","mappings":{"default":{"default":"⠈⠡"}},"key":"2715"},{"category":"So","mappings":{"default":{"default":""}},"key":"2716"},{"category":"So","mappings":{"default":{"default":""}},"key":"2717"},{"category":"So","mappings":{"default":{"default":""}},"key":"2718"},{"category":"So","mappings":{"default":{"default":""}},"key":"271B"},{"category":"So","mappings":{"default":{"default":""}},"key":"271C"},{"category":"So","mappings":{"default":{"default":""}},"key":"2720"},{"category":"So","mappings":{"default":{"default":""}},"key":"2721"},{"category":"So","mappings":{"default":{"default":""}},"key":"2722"},{"category":"So","mappings":{"default":{"default":""}},"key":"2723"},{"category":"So","mappings":{"default":{"default":""}},"key":"2724"},{"category":"So","mappings":{"default":{"default":""}},"key":"2725"},{"category":"So","mappings":{"default":{"default":""}},"key":"2726"},{"category":"So","mappings":{"default":{"default":""}},"key":"2727"},{"category":"So","mappings":{"default":{"default":""}},"key":"2728"},{"category":"So","mappings":{"default":{"default":""}},"key":"2729"},{"category":"So","mappings":{"default":{"default":""}},"key":"272A"},{"category":"So","mappings":{"default":{"default":""}},"key":"272B"},{"category":"So","mappings":{"default":{"default":""}},"key":"272C"},{"category":"So","mappings":{"default":{"default":""}},"key":"272D"},{"category":"So","mappings":{"default":{"default":""}},"key":"272E"},{"category":"So","mappings":{"default":{"default":""}},"key":"272F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2730"},{"category":"So","mappings":{"default":{"default":""}},"key":"2731"},{"category":"So","mappings":{"default":{"default":""}},"key":"2732"},{"category":"So","mappings":{"default":{"default":""}},"key":"2733"},{"category":"So","mappings":{"default":{"default":""}},"key":"2734"},{"category":"So","mappings":{"default":{"default":""}},"key":"2735"},{"category":"So","mappings":{"default":{"default":""}},"key":"2736"},{"category":"So","mappings":{"default":{"default":""}},"key":"2739"},{"category":"So","mappings":{"default":{"default":""}},"key":"273A"},{"category":"So","mappings":{"default":{"default":""}},"key":"273B"},{"category":"So","mappings":{"default":{"default":""}},"key":"273C"},{"category":"So","mappings":{"default":{"default":""}},"key":"273D"},{"category":"So","mappings":{"default":{"default":""}},"key":"273E"},{"category":"So","mappings":{"default":{"default":""}},"key":"273F"},{"category":"So","mappings":{"default":{"default":""}},"key":"2740"},{"category":"So","mappings":{"default":{"default":""}},"key":"2741"},{"category":"So","mappings":{"default":{"default":""}},"key":"2742"},{"category":"So","mappings":{"default":{"default":""}},"key":"2743"},{"category":"So","mappings":{"default":{"default":""}},"key":"2744"},{"category":"So","mappings":{"default":{"default":""}},"key":"2745"},{"category":"So","mappings":{"default":{"default":""}},"key":"2746"},{"category":"So","mappings":{"default":{"default":""}},"key":"2747"},{"category":"So","mappings":{"default":{"default":""}},"key":"2748"},{"category":"So","mappings":{"default":{"default":""}},"key":"2749"},{"category":"So","mappings":{"default":{"default":""}},"key":"274A"},{"category":"So","mappings":{"default":{"default":""}},"key":"274B"},{"category":"So","mappings":{"default":{"default":""}},"key":"274C"},{"category":"So","mappings":{"default":{"default":""}},"key":"274D"}],"nemeth/units/energy.min":[{"locale":"nemeth"}],"nemeth/units/length.min":[{"locale":"nemeth"}],"nemeth/units/memory.min":[{"locale":"nemeth"}],"nemeth/units/other.min":[{"locale":"nemeth"}],"nemeth/units/speed.min":[{"locale":"nemeth"}],"nemeth/units/temperature.min":[{"locale":"nemeth"}],"nemeth/units/time.min":[{"locale":"nemeth"}],"nemeth/units/volume.min":[{"locale":"nemeth"}],"nemeth/units/weight.min":[{"locale":"nemeth"}],"nemeth/rules/nemeth.min":{"locale":"nemeth","modality":"braille","domain":"default","rules":[["Precondition","stree","default","self::stree","CQFresetNesting"],["Precondition","unknown","default","self::unknown"],["Precondition","protected","default","self::*","@role=\\"protected\\""],["Precondition","omit-empty","default","self::empty"],["Precondition","blank-empty","default","self::empty","count(../*)=1","name(../..)=\\"cell\\" or name(../..)=\\"line\\""],["Precondition","font","default","self::*","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font!=\\"normal\\"","@font!=\\"fullwidth\\"","@font!=\\"monospace\\""],["Precondition","font-identifier-short","default","self::identifier","string-length(text())=1","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font=\\"normal\\" or @font=\\"fullwidth\\" or @font=\\"monospace\\"","\\"\\"=translate(text(), \\"abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ\\", \\"\\")","@role!=\\"unit\\""],["Precondition","font-identifier-english","default","self::identifier","string-length(text())=1","@font","not(contains(@grammar, \\"ignoreFont\\"))","\\"\\"=translate(text(), \\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\", \\"\\")","@role!=\\"unit\\""],["Precondition","multi-caps-english","default","self::identifier","string-length(text())>1","@font=\\"normal\\" or @font=\\"fullwidth\\" or @font=\\"monospace\\"","not(contains(@grammar, \\"ignoreFont\\"))","\\"\\"=translate(text(), \\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\", \\"\\")","@role!=\\"unit\\""],["Precondition","font-identifier","default","self::identifier","string-length(text())=1","@font","@font=\\"normal\\" or @font=\\"fullwidth\\" or @font=\\"monospace\\"","not(contains(@grammar, \\"ignoreFont\\"))","@role!=\\"unit\\""],["Precondition","omit-font","default","self::identifier[@font=\\"italic\\"]","string-length(text())=1","@role!=\\"greekletter\\"","not(contains(@grammar, \\"ignoreFont\\"))","\\"\\"!=translate(text(), \\"αβγδεζηθικλμνξοπρςστυφχψωΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ\\", \\"\\")"],["Precondition","number-indicator","default","self::number","not(@font) or @font=\\"normal\\" or @font=\\"fullwidth\\" or @font=\\"monospace\\"","contains(@annotation, \\"nemeth:number\\")","not(ancestor::sqrt)","not(ancestor::root)","not(ancestor::fraction)","@role!=\\"othernumber\\""],["Precondition","number","default","self::number"],["Precondition","number-font-indicator","default","self::number[contains(@grammar, \\"ignoreFont\\")]","\\"\\" = translate(text(), \\"0123456789.,\\", \\"\\")"],["Precondition","mixed-number","default","self::number","@role=\\"mixed\\""],["Precondition","number-with-chars","default","self::number","\\"\\" != translate(text(), \\"0123456789.,\\", \\"\\")","text() != translate(text(), \\"0123456789.,\\", \\"\\")"],["Precondition","number-baseline","default","self::number","not(contains(@grammar, \\"ignoreFont\\"))","preceding-sibling::identifier","preceding-sibling::*[1][@role=\\"latinletter\\" or @role=\\"greekletter\\" or @role=\\"otherletter\\"]","parent::*/parent::infixop[@role=\\"implicit\\"]"],["Precondition","number-baseline-font","default","self::number","@font","not(contains(@grammar, \\"ignoreFont\\"))","@font!=\\"normal\\"","@font!=\\"fullwidth\\"","@font!=\\"monospace\\"","preceding-sibling::identifier","preceding-sibling::*[@role=\\"latinletter\\" or @role=\\"greekletter\\" or @role=\\"otherletter\\"]","parent::*/parent::infixop[@role=\\"implicit\\"]"],["Precondition","identifier","default","self::identifier","@role=\\"protected\\""],["Precondition","english-letter","default","self::identifier","@role=\\"latinletter\\""],["Precondition","prefix","default","self::prefixop"],["Precondition","prefix-geometry","default","self::prefixop[@role=\\"geometry\\"]"],["Precondition","postfix","default","self::postfixop"],["Precondition","binary-operation","default","self::infixop"],["Precondition","element","default","self::infixop[contains(@role, \\"element\\")]"],["Precondition","implicit","default","self::infixop","@role=\\"implicit\\""],["Alias","implicit","self::infixop","@role=\\"leftsuper\\" or @role=\\"leftsub\\" or @role=\\"rightsuper\\" or @role=\\"rightsub\\""],["Precondition","function-named","default","self::appl"],["Precondition","function-prefix","default","self::prefixop","content/*[1][@role=\\"infix function\\"]"],["Precondition","function-infix","default","self::infixop","@role=\\"infix function\\""],["Precondition","function-simple","default","self::appl","children/*[1][@role=\\"simple function\\"]"],["Precondition","fences-open-close","default","self::fenced"],["Precondition","fences-neutral","default","self::fenced","@role=\\"neutral\\""],["Precondition","fences-parallel","default","self::fenced[@role=\\"metric\\"]","content/*[1][text()]=\\"∥\\""],["Precondition","text","default","self::text"],["Precondition","factorial-space","default","self::punctuation[text()=\\"!\\"]","name(preceding-sibling::*[1])!=\\"text\\""],["Precondition","factorial","default","self::punctuation[text()=\\"!\\"]","name(preceding-sibling::*[1])!=\\"text\\"","not(following::*) or name(following::*)=\\"punctuation\\""],["Precondition","single-prime","default","self::punctuated","@role=\\"prime\\"","count(children/*)=1"],["Precondition","double-prime","default","self::punctuated","@role=\\"prime\\"","count(children/*)=2"],["Precondition","triple-prime","default","self::punctuated","@role=\\"prime\\"","count(children/*)=3"],["Precondition","quadruple-prime","default","self::punctuated","@role=\\"prime\\"","count(children/*)=4"],["Precondition","fraction","default","self::fraction"],["Precondition","bevelled-fraction","default","self::fraction","contains(@annotation, \\"general:bevelled\\")"],["Precondition","sqrt","default","self::sqrt"],["Precondition","root","default","self::root"],["Precondition","arrow-underscore","default","self::underscore","name(children/*[1])=\\"relation\\"","children/*[1][@role=\\"arrow\\"]","children/*[1][text()]=\\"→\\""],["Precondition","arrow-overscore","default","self::overscore","name(children/*[1])=\\"relation\\"","children/*[1][@role=\\"arrow\\"]","children/*[1][text()]=\\"→\\""],["Precondition","limboth","default","self::limboth","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Precondition","limlower","default","self::limlower","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Precondition","limupper","default","self::limupper","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Alias","limlower","self::underscore","@role=\\"limit function\\"","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Alias","limlower","self::underscore","children/*[2][@role!=\\"underaccent\\"]","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Alias","limupper","self::overscore","children/*[2][@role!=\\"overaccent\\"]","name(../..)=\\"underscore\\" or name(../..)=\\"overscore\\"","following-sibling::*[@role!=\\"underaccent\\" and @role!=\\"overaccent\\"]"],["Precondition","limboth-end","default","self::limboth"],["Precondition","limlower-end","default","self::limlower"],["Precondition","limupper-end","default","self::limupper"],["Alias","limlower-end","self::underscore","@role=\\"limit function\\""],["Alias","limlower-end","self::underscore"],["Alias","limupper-end","self::overscore"],["Precondition","integral-index","default","self::integral"],["Precondition","integral","default","self::limboth","@role=\\"integral\\""],["Precondition","bigop","default","self::bigop"],["Precondition","relseq","default","self::relseq"],["Precondition","multrel","default","self::multirel"],["Precondition","subscript","default","self::subscript"],["Precondition","subscript-simple","default","self::subscript[@role!=\\"unknown\\"]","name(./children/*[1])=\\"identifier\\" or name(./children/*[1])=\\"function\\"","name(./children/*[2])=\\"number\\"","./children/*[2][@role!=\\"mixed\\"]","./children/*[2][@role!=\\"othernumber\\"]"],["Precondition","subscript-baseline","default","self::subscript","@role!=\\"subsup\\"","following::*","@role!=\\"prefix function\\"","name(following::*[1]/../..)!=\\"relseq\\"","name(following::*[1]/../..)!=\\"multirel\\"","name(following::*[1])!=\\"punctuation\\"","not(name(following-sibling::subscript/children/*[1])=\\"empty\\" or (name(following-sibling::infixop[@role=\\"implicit\\"]/children/*[1])=\\"subscript\\" and name(following-sibling::*/children/*[1]/children/*[1])=\\"empty\\"))","not(following-sibling::*[@role=\\"rightsuper\\" or @role=\\"rightsub\\" or @role=\\"leftsub\\" or @role=\\"leftsub\\"])"],["Alias","subscript-baseline","self::subscript","following::*","not(following-sibling::*)","name(following::*[1])!=\\"punctuation\\"","ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction","not(ancestor::punctuated[@role=\\"leftsuper\\" or @role=\\"rightsub\\" or @role=\\"rightsuper\\" or @role=\\"rightsub\\"])"],["Alias","subscript-baseline","self::subscript","ancestor::fenced","name(following::*[1])!=\\"punctuation\\""],["Alias","subscript-baseline","self::subscript","following::*","not(following-sibling::*)","name(following::*[1])!=\\"punctuation\\"","@embellished"],["Precondition","subscript-empty-sup","default","self::subscript","name(children/*[2])=\\"infixop\\"","name(children/*[2][@role=\\"implicit\\"]/children/*[1])=\\"superscript\\"","name(children/*[2]/children/*[1]/children/*[1])=\\"empty\\""],["Alias","subscript-empty-sup","self::subscript","name(children/*[2])=\\"superscript\\"","name(children/*[2]/children/*[1])=\\"empty\\""],["Precondition","superscript","default","self::superscript"],["Precondition","superscript-baseline","default","self::superscript","following::*","@role!=\\"prefix function\\"","name(following::*[1]/../..)!=\\"relseq\\"","name(following::*[1]/../..)!=\\"multirel\\"","name(following::*[1])!=\\"punctuation\\"","not(name(following-sibling::superscript/children/*[1])=\\"empty\\" or (name(following-sibling::infixop[@role=\\"implicit\\"]/children/*[1])=\\"superscript\\" and name(following-sibling::*/children/*[1]/children/*[1])=\\"empty\\")) and not(following-sibling::*[@role=\\"rightsuper\\" or @role=\\"rightsub\\" or @role=\\"leftsub\\" or @role=\\"leftsub\\"])"],["Alias","superscript-baseline","self::superscript","not(following-sibling::*)","name(following::*[1])!=\\"punctuation\\"","ancestor::punctuated","ancestor::*/following-sibling::* and not(ancestor::punctuated[@role=\\"leftsuper\\" or @role=\\"rightsub\\" or @role=\\"rightsuper\\" or @role=\\"rightsub\\"])"],["Alias","superscript-baseline","self::superscript","not(following-sibling::*)","name(following::*[1])!=\\"punctuation\\"","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"],["Alias","superscript-baseline","self::superscript","not(following-sibling::*)","name(following::*[1])!=\\"punctuation\\"","name(following::*[1]/../..)!=\\"relseq\\"","name(following::*[1]/../..)!=\\"multirel\\"","not(@embellished)","CGFbaselineConstraint"],["Alias","superscript-baseline","self::superscript","not(following-sibling::*)","name(following::*[1])!=\\"punctuation\\"","@embellished","not(children/*[2][@role=\\"prime\\"])"],["Precondition","superscript-empty-sub","default","self::superscript","name(children/*[2])=\\"infixop\\"","name(children/*[2][@role=\\"implicit\\"]/children/*[1])=\\"subscript\\"","name(children/*[2]/children/*[1]/children/*[1])=\\"empty\\""],["Alias","superscript-empty-sub","self::superscript","name(children/*[2])=\\"subscript\\"","name(children/*[2]/children/*[1])=\\"empty\\""],["Precondition","prime","default","self::superscript","children/*[2]","children/*[2][@role=\\"prime\\"]"],["Precondition","prime-subscript","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","not(following-sibling::*)"],["Precondition","prime-subscript-baseline","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","following-sibling::*"],["Alias","prime-subscript-baseline","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","not(following-sibling::*)","@embellished"],["Precondition","prime-subscript-simple","default","self::superscript","children/*[2][@role=\\"prime\\"]","name(children/*[1])=\\"subscript\\"","name(children/*[1]/children/*[1])=\\"identifier\\"","name(children/*[1]/children/*[2])=\\"number\\"","children/*[1]/children/*[2][@role!=\\"mixed\\"]","children/*[1]/children/*[2][@role!=\\"othernumber\\"]"],["Precondition","overscore","default","self::overscore","children/*[2][@role=\\"overaccent\\"]"],["Precondition","overscore-modified","default","self::overscore","children/*[2][@role=\\"overaccent\\"]","contains(@grammar, \\"modified\\")"],["Precondition","double-overscore","default","self::overscore","children/*[2][@role=\\"overaccent\\"]","name(children/*[1])=\\"overscore\\"","children/*[1]/children/*[2][@role=\\"overaccent\\"]"],["Precondition","underscore","default","self::underscore","children/*[2][@role=\\"underaccent\\"]"],["Precondition","underscore-modified","default","self::underscore","children/*[2][@role=\\"underaccent\\"]","contains(@grammar, \\"modified\\")"],["Precondition","double-underscore","default","self::underscore","children/*[2][@role=\\"underaccent\\"]","name(children/*[1])=\\"underscore\\"","children/*[1]/children/*[2][@role=\\"underaccent\\"]"],["Precondition","modifier-bar","default","self::operator[contains(@grammar, \\"modifier\\")]","contains(@annotation, \\"accent:bar\\")"],["Precondition","matrix","default","self::matrix"],["Alias","matrix","self::vector"],["Precondition","matrix-row","default","self::row"],["Precondition","vector-line","default","self::line","@role=\\"vector\\""],["Alias","vector-line","self::line","@role=\\"binomial\\""],["Precondition","empty-row","default","self::row","count(children/*)=0"],["Precondition","matrix-cell","default","self::cell"],["Precondition","empty-cell","default","self::cell","count(children/*)=0"],["Precondition","layout","default","self::table"],["Precondition","cayley","default","self::table[@role=\\"cayley\\"]"],["Precondition","cases","default","self::cases"],["Alias","layout","self::multiline"],["Precondition","line","default","self::line"],["Precondition","empty-line","default","self::line","count(children/*)=0","not(content)"],["Precondition","row-with-label","default","self::row","content"],["Alias","row-with-label","self::line","content"],["Precondition","cycle","default","self::matrix[@role=\\"cycle\\"]"],["Precondition","enclose","default","self::enclose"],["Precondition","overbar","default","self::enclose","@role=\\"top\\""],["Precondition","bar-above","default","self::overscore","contains(@role,\\"letter\\") or contains(@role,\\"integer\\")","string-length(children/*[1][text()])=1","children/*[2][contains(@annotation, \\"accent:bar\\")]"],["Precondition","bar-below","default","self::underscore","contains(@role,\\"letter\\") or contains(@role,\\"integer\\")","string-length(children/*[1][text()])=1","children/*[2][contains(@annotation, \\"accent:bar\\")]"],["Precondition","underbar","default","self::enclose","@role=\\"bottom\\""],["Precondition","leftbar","default","self::enclose","@role=\\"left\\""],["Precondition","rightbar","default","self::enclose","@role=\\"right\\""],["Precondition","crossout","default","self::enclose","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Precondition","cancel","default","self::overscore","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Alias","cancel","self::underscore","@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\""],["Precondition","cancel-reverse","default","self::overscore","name(children/*[2])=\\"enclose\\"","children/*[2][@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\"]"],["Alias","cancel-reverse","self::underscore","name(children/*[2])=\\"enclose\\"","children/*[2][@role=\\"updiagonalstrike\\" or @role=\\"downdiagonalstrike\\" or @role=\\"horizontalstrike\\"]"],["Precondition","end-punct","default","self::punctuated","@role=\\"endpunct\\""],["Precondition","start-punct","default","self::punctuated","@role=\\"startpunct\\""],["Precondition","punctuation","default","self::punctuation","@role=\\"fullstop\\"","contains(@annotation, \\"nemeth:number\\")"],["Precondition","punctuated","default","self::punctuated"],["Precondition","punctuation-comma","default","self::punctuation","parent::*/parent::punctuated","following-sibling::*","@role!=\\"fullstop\\"","@role!=\\"vbar\\"","@role!=\\"colon\\"","@role!=\\"ellipsis\\""],["Precondition","punctuation-colon-mapping","default","self::punctuation[@role=\\"colon\\"]","following-sibling::relseq[@role=\\"arrow\\"]"],["Precondition","punctuation-colon-ratio","default","self::punctuation[@role=\\"colon\\"]","preceding-sibling::*","following-sibling::*","name(preceding-sibling::*)=name(following-sibling::*)","preceding-sibling::*[@role=following-sibling::*/@role]"],["Precondition","punctuation-ellipses-both","default","self::punctuation[@role=\\"ellipsis\\"]","parent::*/parent::punctuated","following-sibling::*","name(preceding-sibling::*[1])!=\\"punctuation\\"","name(following-sibling::*[1])!=\\"punctuation\\""],["Precondition","punctuation-ellipses-left","default","self::punctuation[@role=\\"ellipsis\\"]","name(preceding-sibling::*[1])!=\\"punctuation\\""],["Precondition","punctuation-ellipses-right","default","self::punctuation[@role=\\"ellipsis\\"]","following-sibling::*","name(following-sibling::*[1])!=\\"punctuation\\""],["Precondition","reference-sign","default","self::superscript","name(children/*[1])=\\"text\\" or (name(children/*[1])=\\"punctuated\\" and children/*[1][@role=\\"text\\"])","name(children/*[2])=\\"operator\\" or name(children/*[2])=\\"punctuation\\""],["Precondition","reference-number","default","self::superscript","name(children/*[1])=\\"text\\" or (name(children/*[1])=\\"punctuated\\" and children/*[1][@role=\\"text\\"])","name(children/*[2])=\\"number\\"","children/*[2][@role=\\"integer\\"]"],["Generator","CGFtensorRules"]],"annotators":["number"]},"nemeth/rules/nemeth_actions.min":{"locale":"nemeth","modality":"braille","domain":"default","kind":"actions","rules":[["Action","stree","[n] ./*[1]"],["Action","unknown","[n] text()"],["Action","protected","[n] text()"],["Action","omit-empty","[p] (pause:100)"],["Action","blank-empty","[t] \\"⠀\\""],["Action","font","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)"],["Action","font-identifier-short","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)"],["Action","font-identifier-english","[t] @font (grammar:localFont); [t] \\"⠰\\"; [n] . (grammar:ignoreFont=@font)"],["Action","multi-caps-english","[t] \\"⠠⠠\\"; [n] . (grammar:ignoreFont=\\"⠠\\");"],["Action","font-identifier","[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)"],["Action","omit-font","[n] . (grammar:ignoreFont=@font)"],["Action","number-indicator","[t] \\"⠼\\" (layout:numberIndicator); [n] text() (pause:10)"],["Action","number","[n] text() (layout:number)"],["Action","number-font-indicator","[t] \\"⠼\\"; [n] text() (pause:10)"],["Action","mixed-number","[n] children/*[1]; [t] \\"⠸⠹\\"; [n] children/*[2]/children/*[1]; [t] \\"⠌\\"; [n] children/*[2]/children/*[2]; [t] \\"⠸⠼\\""],["Action","number-with-chars","[t] \\"⠼\\"; [m] CQFspaceoutNumber"],["Action","number-baseline","[t] \\"⠐\\"; [n] text()"],["Action","number-baseline-font","[t] \\"⠐\\"; [t] @font; [n] . (grammar:ignoreFont=@font)"],["Action","identifier","[n] text()"],["Action","english-letter","[n] text() (layout:english)"],["Action","prefix","[n] text(); [n] children/*[1]"],["Action","prefix-geometry","[n] content/*[1]; [t] \\"⠀\\"; [n] children/*[1]"],["Action","postfix","[n] children/*[1]; [n] text()"],["Action","binary-operation","[m] children/* (sepFunc:CTFcontentIterator);"],["Action","element","[m] children/* (sepFunc:CTFrelationIterator);"],["Action","implicit","[m] children/* (sepFunc:CTFimplicitIterator);"],["Action","function-named","[n] children/*[1]; [t] \\"⠀\\"; [n] children/*[2]"],["Action","function-prefix","[n] content/*[1]; [t] \\"⠀\\"; [n] children/*[1]"],["Action","function-infix","[n] children/*[1]; [n] content/*[1]; [t] \\"⠀\\"; [n] children/*[2]"],["Action","function-simple","[n] children/*[1]; [n] children/*[2];"],["Action","fences-open-close","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]"],["Action","fences-neutral","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]"],["Action","fences-parallel","[t] \\"⠳⠳\\"; [n] children/*[1]; [t] \\"⠳⠳\\""],["Action","text","[n] text()"],["Action","factorial-space","[t] \\"⠯⠀\\""],["Action","factorial","[t] \\"⠯\\""],["Action","single-prime","[t] \\"⠄\\""],["Action","double-prime","[t] \\"⠄⠄\\""],["Action","triple-prime","[t] \\"⠄⠄⠄\\""],["Action","quadruple-prime","[t] \\"⠄⠄⠄⠄\\""],["Action","fraction","[p] (layout:beginfraction); [t] CSFopenFraction; [n] children/*[1] (layout:numerator); [t] CSFoverFraction; [n] children/*[2] (layout:denominator); [t] CSFcloseFraction; [p] (layout:endfraction)"],["Action","bevelled-fraction","[t] CSFopenFraction; [n] children/*[1]; [t] CSFoverBevFraction; [n] children/*[2]; [t] CSFcloseFraction"],["Action","sqrt","[t] CSFopenRadical; [n] children/*[1]; [t] CSFcloseRadical"],["Action","root","[t] CSFindexRadical; [n] children/*[1];[t] \\"⠜\\"; [n] children/*[2]; [t] CSFcloseRadical"],["Action","arrow-underscore","[t] \\"⠐\\"; [t] \\"⠫⠒⠒⠕\\"; [t] CSFunderscript; [n] children/*[2]; [t] \\"⠻\\""],["Action","arrow-overscore","[t] \\"⠐\\"; [t] \\"⠫⠒⠒⠕\\"; [t] CSFoverscript; [n] children/*[2]; [t] \\"⠻\\""],["Action","limboth","[t] \\"⠐\\"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]"],["Action","limlower","[t] \\"⠐\\"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];"],["Action","limupper","[t] \\"⠐\\"; [n] children/*[1]; [t] CSFoverscript; [n] children/*[2];"],["Action","limboth-end","[t] \\"⠐\\"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]; [t] \\"⠻\\""],["Action","limlower-end","[t] \\"⠐\\"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] \\"⠻\\""],["Action","limupper-end","[t] \\"⠐\\"; [n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] \\"⠻\\""],["Action","integral-index","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];"],["Action","integral","[n] children/*[1]; [t] \\"⠰\\"; [n] children/*[2];[t] \\"⠘\\"; [n] children/*[3]; [t] \\"⠐\\""],["Action","bigop","[n] children/*[1]; [n] children/*[2];"],["Action","relseq","[m] children/* (sepFunc:CTFrelationIterator)"],["Action","multrel","[m] children/* (sepFunc:CTFrelationIterator)"],["Action","subscript","[n] children/*[1]; [t] CSFsubscript; [n] children/*[2]"],["Action","subscript-simple","[n] children/*[1]; [n] children/*[2]"],["Action","subscript-baseline","[n] children/*[1]; [t] CSFsubscript; [n] children/*[2]; [t] CSFbaseline"],["Action","subscript-empty-sup","[n] children/*[1]; [n] children/*[2]"],["Action","superscript","[n] children/*[1]; [t] CSFsuperscript; [n] children/*[2]"],["Action","superscript-baseline","[n] children/*[1]; [t] CSFsuperscript; [n] children/*[2];[t] CSFbaseline"],["Action","superscript-empty-sub","[n] children/*[1]; [n] children/*[2]"],["Action","prime","[n] children/*[1]; [n] children/*[2]"],["Action","prime-subscript","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscript; [n] children/*[1]/children/*[2]"],["Action","prime-subscript-baseline","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscript; [n] children/*[1]/children/*[2]; [t] CSFbaseline"],["Action","prime-subscript-simple","[n] children/*[1]/children/*[1]; [n] children/*[2]; [n] children/*[1]/children/*[2]"],["Action","overscore","[t] \\"⠐\\"; [n] children/*[1]; [t] \\"⠣\\"; [n] children/*[2] (grammar:modifier); [t] \\"⠻\\""],["Action","overscore-modified","[n] children/*[1]; [t] \\"⠣\\"; [n] children/*[2] (grammar:modifier)"],["Action","double-overscore","[t] \\"⠐\\"; [n] children/*[1] (grammar:modified); [t] \\"⠣\\"; [n] children/*[2] (grammar:modifier); [t] \\"⠻\\""],["Action","underscore","[t] \\"⠐\\"; [n] children/*[1]; [t] \\"⠩\\"; [n] children/*[2] (grammar:modifier); [t] \\"⠻\\""],["Action","underscore-modified","[n] children/*[1]; [t] \\"⠩\\"; [n] children/*[2] (grammar:modifier)"],["Action","double-underscore","[t] \\"⠐\\"; [n] children/*[1] (grammar:modified); [t] \\"⠩\\"; [n] children/*[2] (grammar:modifier); [t] \\"⠻\\""],["Action","modifier-bar","[t] \\"⠱\\""],["Action","matrix","[m] children/* (separator:\\"⠀\\", join:\\"\\", layout:matrix)"],["Action","matrix-row","[p] (layout:beginrow); [n] ../../content/*[1] (grammar:enlargeFence, layout:fence); [m] children/* (separator:\\"⠀\\"); [n] ../../content/*[2] (grammar:enlargeFence, layout:fence); [p] (layout:endrow);"],["Action","vector-line","[p] (layout:beginrow); [n] ../../content/*[1] (grammar:enlargeFence, layout:fence); [n] children/*[1] (separator:\\"⠀\\", layout:cell); [n] ../../content/*[2] (grammar:enlargeFence, layout:fence); [p] (layout:endrow);"],["Action","empty-row","[t] \\"⠀\\" (pause:300)"],["Action","matrix-cell","[n] children/*[1] (layout:cell)"],["Action","empty-cell","[t] \\"⠀\\" (pause: 300)"],["Action","cayley","[m] children/* (separator:\\"⠀\\", join:\\"\\", layout:cayley)"],["Action","layout","[m] children/* (separator:\\"⠀\\", join:\\"\\", layout:table)"],["Action","cases","[p] (layout:begincases); [m] children/* (separator:\\"⠀\\"); [t] \\"⠐\\"; [p] (layout:endcases)"],["Action","line","[p] (layout:beginrow); [p] (layout:fence); [m] children/* (layout:cell); [p] (layout:fence); [p] (layout:endrow)"],["Action","empty-line","[t] \\"⠀\\""],["Action","row-with-label","[m] children/* (separator:\\"⠀\\"); [t] \\"⠀⠀⠀\\"; [m] content/*"],["Action","cycle","[n] content/*[1]; [m] children/*[1]/children/* (separator:\\"⠀\\", join:\\"\\"); [n] content/*[2];"],["Action","enclose","[t] \\"⠫\\"; [t] @role (grammar:localEnclose); [t] \\"⠸⠫\\"; [n] children/*[1]; [t] \\"⠻\\""],["Action","overbar","[t] \\"⠐\\"; [n] children/*[1]; [t] \\"⠣⠱⠻\\""],["Action","bar-above","[n] children/*[1]; [t] \\"⠱\\""],["Action","bar-below","[n] children/*[1]; [t] \\"⠩⠱\\""],["Action","underbar","[t] \\"⠐\\"; [n] children/*[1]; [t] \\"⠩⠱⠻\\""],["Action","leftbar","[t] \\"⠳\\"; [n] children/*[1]"],["Action","rightbar","[n] children/*[1]; [t] \\"⠳\\""],["Action","crossout","[t] \\"⠪\\"; [n] children/*[1]; [t] \\"⠻\\""],["Action","cancel","[t] \\"⠪\\"; [n] children/*[1]/children/*[1]; [t] \\"⠪\\"; [n] children/*[2]; [t] \\"⠻\\""],["Action","cancel-reverse","[t] \\"⠪\\"; [n] children/*[2]/children/*[1]; [t] \\"⠪\\"; [n] children/*[1]; [t] \\"⠻\\""],["Action","end-punct","[m] children/*"],["Action","start-punct","[n] content/*[1]; [m] children/*[position()>1]"],["Action","punctuation","[n] text(); [t] \\"⠐\\""],["Action","punctuated","[m] children/*"],["Action","punctuation-comma","[n] text(); [t] \\"⠀\\""],["Action","punctuation-colon-mapping","[n] text(); [t] \\"⠀\\""],["Action","punctuation-colon-ratio","[t] \\"⠀⠐⠂⠀\\""],["Rule","punctuation-ellipsis-cell","default","[t] \\"⠄⠄⠄\\"","self::punctuation[@role=\\"ellipsis\\"]","count(../*)=1","name(../..)=\\"cell\\" or name(../..)=\\"line\\""],["Action","punctuation-ellipses-both","[t] \\"⠀\\"; [n] text(); [t] \\"⠀\\";"],["Action","punctuation-ellipses-left","[t] \\"⠀\\"; [n] text();"],["Action","punctuation-ellipses-right","[n] text(); [t] \\"⠀\\";"],["Action","reference-sign","[n] children/*[1]; [n] children/*[2]"],["Action","reference-number","[n] children/*[1]; [t] \\"⠈⠻\\"; [n] children/*[2]; [t] \\"⠐\\""]]}}');
;// CONCATENATED MODULE: ../startup/startup.js
function startup_toConsumableArray(arr) { return startup_arrayWithoutHoles(arr) || startup_iterableToArray(arr) || startup_unsupportedIterableToArray(arr) || startup_nonIterableSpread(); }

function startup_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function startup_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return startup_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return startup_arrayLikeToArray(o, minLen); }

function startup_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function startup_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return startup_arrayLikeToArray(arr); }

function startup_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



loader.Loader.preLoad('loader');
loader.Loader.load.apply(loader.Loader, startup_toConsumableArray(loader.CONFIG.load)).then(function () {
  return loader.CONFIG.ready();
})["catch"](function (error) {
  return loader.CONFIG.failed(error);
});
;// CONCATENATED MODULE: ./tex-chtml-full-speech.js













mathmaps["default"].set('base', base_namespaceObject);
mathmaps["default"].set('en', en_namespaceObject);
mathmaps["default"].set('nemeth', nemeth_namespaceObject);

}();
/******/ })()
;